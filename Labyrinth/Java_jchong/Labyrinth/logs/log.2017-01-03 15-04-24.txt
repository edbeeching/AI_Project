2017-01-03 15:04:24 GameBoard.<init>()	Hello World!
2017-01-03 15:04:24 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-03 15:04:24 QueryProlog.initialise()	setup(h0/h2). suceeded
2017-01-03 15:04:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:24 GameBoard.setupBoardFromString()	Board created
2017-01-03 15:04:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 15:04:24 GameBoard.initialise()	[crown, helmet, gold, chest, sword]
2017-01-03 15:04:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 15:04:24 GameBoard.initialise()	[ring, keys, book, gem, fairy]
2017-01-03 15:04:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:24 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-03 15:04:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:24 GameBoard.setupTreasurePanel()	null
2017-01-03 15:04:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 15:04:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 15:04:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 15:04:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 15:04:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 15:04:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 15:04:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 15:04:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 15:04:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 15:04:24 GameBoard.setupTreasurePanel()	adding book
2017-01-03 15:04:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 15:04:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 15:04:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 15:04:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 15:04:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 15:04:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 15:04:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 15:04:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 15:04:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 15:04:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 15:04:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 15:04:24 GameBoard.setupTreasurePanel()	adding book
2017-01-03 15:04:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 15:04:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 15:04:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:27 QueryProlog.requestShiftUp()	try_to_shift_column_up( 2 ) suceeded
2017-01-03 15:04:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:31 GameBoard$ClickAction.checkPieces()	3.0 3.0 
2017-01-03 15:04:31 QueryProlog.getCurrentPlayer()	get_current_player(Player). suceeded
2017-01-03 15:04:31 QueryProlog.canMove()	player(a,_,I/J). suceeded
2017-01-03 15:04:31 GameBoard$ClickAction.checkPieces()	Can't move
2017-01-03 15:04:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 15:04:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:32 GameBoard$ClickAction.checkPieces()	2.0 5.0 
2017-01-03 15:04:32 QueryProlog.getCurrentPlayer()	get_current_player(Player). suceeded
2017-01-03 15:04:32 QueryProlog.canMove()	player(a,_,I/J). suceeded
2017-01-03 15:04:32 GameBoard$ClickAction.checkPieces()	Can move
2017-01-03 15:04:32 QueryProlog.tryAndMove()	move_player(a,2/5). suceeded
2017-01-03 15:04:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 15:04:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:32 AI_Player.update()	update
2017-01-03 15:04:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:32 AI_Player.update()	Search took0ms
2017-01-03 15:04:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:32 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:32 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:32 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:32 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:32 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:32 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:32 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:32 AI_Player.update()	update
2017-01-03 15:04:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:32 AI_Player.update()	Search took0ms
2017-01-03 15:04:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:32 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:32 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:32 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:32 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:32 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:32 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:32 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:32 AI_Player.update()	update
2017-01-03 15:04:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:32 AI_Player.update()	Search took0ms
2017-01-03 15:04:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:32 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:32 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:32 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:32 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:32 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:32 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:32 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:32 AI_Player.update()	update
2017-01-03 15:04:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:32 AI_Player.update()	Search took0ms
2017-01-03 15:04:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:32 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:32 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:32 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:32 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:32 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:32 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:32 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:32 AI_Player.update()	update
2017-01-03 15:04:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:32 AI_Player.update()	Search took0ms
2017-01-03 15:04:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:32 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:32 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:32 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:32 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:32 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:32 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:32 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:32 AI_Player.update()	update
2017-01-03 15:04:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:32 AI_Player.update()	Search took0ms
2017-01-03 15:04:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:32 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:32 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:32 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:32 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:32 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:32 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:32 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:33 AI_Player.update()	update
2017-01-03 15:04:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:33 AI_Player.update()	Search took0ms
2017-01-03 15:04:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:33 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:33 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:33 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:33 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:33 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:33 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:33 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:33 AI_Player.update()	update
2017-01-03 15:04:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:33 AI_Player.update()	Search took0ms
2017-01-03 15:04:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:33 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:33 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:33 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:33 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:33 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:33 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:33 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:33 AI_Player.update()	update
2017-01-03 15:04:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:33 AI_Player.update()	Search took0ms
2017-01-03 15:04:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:33 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:33 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:33 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:33 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:33 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:33 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:33 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:33 AI_Player.update()	update
2017-01-03 15:04:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:33 AI_Player.update()	Search took1ms
2017-01-03 15:04:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:33 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:33 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:33 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:33 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:33 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:33 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:33 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:33 AI_Player.update()	update
2017-01-03 15:04:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:33 AI_Player.update()	Search took0ms
2017-01-03 15:04:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:33 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:33 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:33 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:33 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:33 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:33 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:33 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:33 AI_Player.update()	update
2017-01-03 15:04:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:33 AI_Player.update()	Search took0ms
2017-01-03 15:04:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:33 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:33 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:33 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:33 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:33 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:33 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:33 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:33 AI_Player.update()	update
2017-01-03 15:04:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:33 AI_Player.update()	Search took0ms
2017-01-03 15:04:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:33 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:33 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:33 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:33 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:33 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:33 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:33 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:33 AI_Player.update()	update
2017-01-03 15:04:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:33 AI_Player.update()	Search took0ms
2017-01-03 15:04:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:33 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:33 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:33 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:33 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:33 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:33 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:33 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:33 AI_Player.update()	update
2017-01-03 15:04:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:33 AI_Player.update()	Search took0ms
2017-01-03 15:04:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:33 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:33 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:33 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:33 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:33 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:33 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:33 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:34 AI_Player.update()	update
2017-01-03 15:04:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:34 AI_Player.update()	Search took0ms
2017-01-03 15:04:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:34 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:34 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:34 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:34 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:34 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:34 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:34 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:34 AI_Player.update()	update
2017-01-03 15:04:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:34 AI_Player.update()	Search took0ms
2017-01-03 15:04:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:34 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:34 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:34 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:34 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:34 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:34 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:34 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:34 AI_Player.update()	update
2017-01-03 15:04:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:34 AI_Player.update()	Search took0ms
2017-01-03 15:04:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:34 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:34 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:34 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:34 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:34 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:34 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:34 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:34 AI_Player.update()	update
2017-01-03 15:04:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:34 AI_Player.update()	Search took0ms
2017-01-03 15:04:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:34 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:34 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:34 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:34 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:34 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:34 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:34 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:34 AI_Player.update()	update
2017-01-03 15:04:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:34 AI_Player.update()	Search took0ms
2017-01-03 15:04:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:34 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:34 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:34 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:34 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:34 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:34 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:34 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:34 AI_Player.update()	update
2017-01-03 15:04:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:34 AI_Player.update()	Search took0ms
2017-01-03 15:04:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:34 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:34 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:34 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:34 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:34 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:34 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:34 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:34 AI_Player.update()	update
2017-01-03 15:04:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:34 AI_Player.update()	Search took0ms
2017-01-03 15:04:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:34 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:34 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:34 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:34 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:34 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:34 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:34 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:34 AI_Player.update()	update
2017-01-03 15:04:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:34 AI_Player.update()	Search took0ms
2017-01-03 15:04:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:34 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:34 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:34 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:34 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:34 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:34 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:34 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:34 AI_Player.update()	update
2017-01-03 15:04:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:34 AI_Player.update()	Search took0ms
2017-01-03 15:04:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:34 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:34 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:34 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:34 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:34 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:34 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:34 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:34 AI_Player.update()	update
2017-01-03 15:04:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:34 AI_Player.update()	Search took0ms
2017-01-03 15:04:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:34 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:34 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:34 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:34 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:34 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:34 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:34 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:35 AI_Player.update()	update
2017-01-03 15:04:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:35 AI_Player.update()	Search took0ms
2017-01-03 15:04:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:35 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:35 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:35 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:35 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:35 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:35 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:35 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:35 AI_Player.update()	update
2017-01-03 15:04:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:35 AI_Player.update()	Search took0ms
2017-01-03 15:04:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:35 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:35 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:35 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:35 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:35 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:35 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:35 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:35 AI_Player.update()	update
2017-01-03 15:04:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:35 AI_Player.update()	Search took0ms
2017-01-03 15:04:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:35 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:35 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:35 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:35 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:35 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:35 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:35 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:35 AI_Player.update()	update
2017-01-03 15:04:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:35 AI_Player.update()	Search took0ms
2017-01-03 15:04:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:35 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:35 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:35 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:35 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:35 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:35 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:35 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:35 AI_Player.update()	update
2017-01-03 15:04:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:35 AI_Player.update()	Search took0ms
2017-01-03 15:04:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:35 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:35 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:35 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:35 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:35 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:35 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:35 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:35 AI_Player.update()	update
2017-01-03 15:04:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:35 AI_Player.update()	Search took0ms
2017-01-03 15:04:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:35 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:35 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:35 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:35 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:35 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:35 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:35 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:35 AI_Player.update()	update
2017-01-03 15:04:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:35 AI_Player.update()	Search took0ms
2017-01-03 15:04:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:35 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:35 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:35 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:35 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:35 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:35 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:35 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:35 AI_Player.update()	update
2017-01-03 15:04:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:35 AI_Player.update()	Search took0ms
2017-01-03 15:04:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:35 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:35 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:35 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:35 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:35 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:35 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:35 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:35 AI_Player.update()	update
2017-01-03 15:04:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:35 AI_Player.update()	Search took0ms
2017-01-03 15:04:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:35 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:35 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:35 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:35 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:35 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:35 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:35 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:36 AI_Player.update()	update
2017-01-03 15:04:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:36 AI_Player.update()	Search took0ms
2017-01-03 15:04:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:36 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:36 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:36 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:36 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:36 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:36 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:36 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:36 AI_Player.update()	update
2017-01-03 15:04:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:36 AI_Player.update()	Search took0ms
2017-01-03 15:04:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:36 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:36 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:36 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:36 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:36 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:36 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:36 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:36 AI_Player.update()	update
2017-01-03 15:04:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:36 AI_Player.update()	Search took0ms
2017-01-03 15:04:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:36 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:36 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:36 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:36 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:36 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:36 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:36 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:36 AI_Player.update()	update
2017-01-03 15:04:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:36 AI_Player.update()	Search took0ms
2017-01-03 15:04:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:36 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:36 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:36 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:36 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:36 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:36 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:36 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:36 AI_Player.update()	update
2017-01-03 15:04:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:36 AI_Player.update()	Search took0ms
2017-01-03 15:04:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:36 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:36 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:36 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:36 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:36 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:36 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:36 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:36 AI_Player.update()	update
2017-01-03 15:04:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:36 AI_Player.update()	Search took0ms
2017-01-03 15:04:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:36 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:36 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:36 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:36 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:36 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:36 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:36 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:36 AI_Player.update()	update
2017-01-03 15:04:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:36 AI_Player.update()	Search took0ms
2017-01-03 15:04:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:36 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:36 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:36 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:36 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:36 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:36 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:36 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:36 AI_Player.update()	update
2017-01-03 15:04:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:36 AI_Player.update()	Search took0ms
2017-01-03 15:04:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:36 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:36 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:36 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:36 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:36 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:36 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:36 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:36 AI_Player.update()	update
2017-01-03 15:04:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:36 AI_Player.update()	Search took0ms
2017-01-03 15:04:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:36 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:36 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:36 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:36 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:36 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:36 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:36 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:36 AI_Player.update()	update
2017-01-03 15:04:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:36 AI_Player.update()	Search took0ms
2017-01-03 15:04:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:36 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:36 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:36 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:36 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:36 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:36 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:36 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:37 AI_Player.update()	update
2017-01-03 15:04:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:37 AI_Player.update()	Search took0ms
2017-01-03 15:04:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:37 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:37 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:37 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:37 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:37 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:37 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:37 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:37 AI_Player.update()	update
2017-01-03 15:04:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:37 AI_Player.update()	Search took0ms
2017-01-03 15:04:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:37 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:37 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:37 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:37 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:37 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:37 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:37 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:37 AI_Player.update()	update
2017-01-03 15:04:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:37 AI_Player.update()	Search took0ms
2017-01-03 15:04:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:37 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:37 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:37 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:37 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:37 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:37 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:37 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:37 AI_Player.update()	update
2017-01-03 15:04:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:37 AI_Player.update()	Search took0ms
2017-01-03 15:04:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:37 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:37 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:37 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:37 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:37 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:37 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:37 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:37 AI_Player.update()	update
2017-01-03 15:04:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:37 AI_Player.update()	Search took1ms
2017-01-03 15:04:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:37 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:37 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:37 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:37 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:37 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:37 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:37 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:37 AI_Player.update()	update
2017-01-03 15:04:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:37 AI_Player.update()	Search took0ms
2017-01-03 15:04:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:37 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:37 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:37 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:37 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:37 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:37 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:37 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:37 AI_Player.update()	update
2017-01-03 15:04:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:37 AI_Player.update()	Search took0ms
2017-01-03 15:04:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:37 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:37 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:37 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:37 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:37 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:37 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:37 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:37 AI_Player.update()	update
2017-01-03 15:04:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:37 AI_Player.update()	Search took0ms
2017-01-03 15:04:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:37 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:37 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:37 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:37 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:37 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:37 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:37 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:37 AI_Player.update()	update
2017-01-03 15:04:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:37 AI_Player.update()	Search took0ms
2017-01-03 15:04:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:37 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:37 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:37 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:37 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:37 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:37 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:37 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:38 AI_Player.update()	update
2017-01-03 15:04:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:38 AI_Player.update()	Search took0ms
2017-01-03 15:04:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:38 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:38 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:38 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:38 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:38 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:38 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:38 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:38 AI_Player.update()	update
2017-01-03 15:04:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:38 AI_Player.update()	Search took0ms
2017-01-03 15:04:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:38 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:38 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:38 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:38 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:38 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:38 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:38 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:38 AI_Player.update()	update
2017-01-03 15:04:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:38 AI_Player.update()	Search took0ms
2017-01-03 15:04:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:38 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:38 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:38 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:38 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:38 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:38 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:38 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:38 AI_Player.update()	update
2017-01-03 15:04:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:38 AI_Player.update()	Search took0ms
2017-01-03 15:04:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:38 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:38 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:38 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:38 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:38 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:38 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:38 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:38 AI_Player.update()	update
2017-01-03 15:04:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:38 AI_Player.update()	Search took0ms
2017-01-03 15:04:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:38 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:38 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:38 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:38 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:38 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:38 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:38 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:38 AI_Player.update()	update
2017-01-03 15:04:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:38 AI_Player.update()	Search took0ms
2017-01-03 15:04:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:38 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:38 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:38 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:38 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:38 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:38 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:38 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:38 AI_Player.update()	update
2017-01-03 15:04:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:38 AI_Player.update()	Search took0ms
2017-01-03 15:04:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:38 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:38 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:38 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:38 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:38 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:38 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:38 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:38 AI_Player.update()	update
2017-01-03 15:04:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:38 AI_Player.update()	Search took0ms
2017-01-03 15:04:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:38 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:38 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:38 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:38 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:38 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:38 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:38 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:38 AI_Player.update()	update
2017-01-03 15:04:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:38 AI_Player.update()	Search took0ms
2017-01-03 15:04:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:38 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:38 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:38 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:38 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:38 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:38 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:38 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:39 AI_Player.update()	update
2017-01-03 15:04:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:39 AI_Player.update()	Search took0ms
2017-01-03 15:04:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:39 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:39 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:39 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:39 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:39 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:39 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:39 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:39 AI_Player.update()	update
2017-01-03 15:04:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:39 AI_Player.update()	Search took0ms
2017-01-03 15:04:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:39 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:39 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:39 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:39 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:39 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:39 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:39 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:39 AI_Player.update()	update
2017-01-03 15:04:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:39 AI_Player.update()	Search took0ms
2017-01-03 15:04:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:39 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:39 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:39 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:39 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:39 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:39 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:39 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:39 AI_Player.update()	update
2017-01-03 15:04:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:39 AI_Player.update()	Search took0ms
2017-01-03 15:04:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:39 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:39 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:39 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:39 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:39 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:39 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:39 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:39 AI_Player.update()	update
2017-01-03 15:04:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:39 AI_Player.update()	Search took0ms
2017-01-03 15:04:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:39 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:39 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:39 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:39 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:39 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:39 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:39 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:39 AI_Player.update()	update
2017-01-03 15:04:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:39 AI_Player.update()	Search took0ms
2017-01-03 15:04:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:39 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:39 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:39 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:39 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:39 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:39 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:39 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:39 AI_Player.update()	update
2017-01-03 15:04:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:39 AI_Player.update()	Search took0ms
2017-01-03 15:04:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:39 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:39 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:39 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:39 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:39 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:39 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:39 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:39 AI_Player.update()	update
2017-01-03 15:04:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:39 AI_Player.update()	Search took0ms
2017-01-03 15:04:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:39 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:39 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:39 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:39 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:39 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:39 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:39 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:39 AI_Player.update()	update
2017-01-03 15:04:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:39 AI_Player.update()	Search took0ms
2017-01-03 15:04:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:39 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:39 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:39 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:39 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:39 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:39 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:39 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:39 AI_Player.update()	update
2017-01-03 15:04:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:39 AI_Player.update()	Search took0ms
2017-01-03 15:04:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:39 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:39 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:39 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:39 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:39 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:39 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:39 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:40 AI_Player.update()	update
2017-01-03 15:04:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:40 AI_Player.update()	Search took0ms
2017-01-03 15:04:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:40 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:40 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:40 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:40 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:40 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:40 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:40 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:40 AI_Player.update()	update
2017-01-03 15:04:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:40 AI_Player.update()	Search took0ms
2017-01-03 15:04:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:40 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:40 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:40 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:40 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:40 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:40 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:40 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:40 AI_Player.update()	update
2017-01-03 15:04:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:40 AI_Player.update()	Search took0ms
2017-01-03 15:04:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:40 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:40 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:40 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:40 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:40 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:40 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:40 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:40 AI_Player.update()	update
2017-01-03 15:04:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:40 AI_Player.update()	Search took0ms
2017-01-03 15:04:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:40 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:40 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:40 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:40 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:40 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:40 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:40 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:40 AI_Player.update()	update
2017-01-03 15:04:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:40 AI_Player.update()	Search took0ms
2017-01-03 15:04:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:40 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:40 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:40 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:40 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:40 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:40 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:40 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:40 AI_Player.update()	update
2017-01-03 15:04:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:40 AI_Player.update()	Search took0ms
2017-01-03 15:04:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:40 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:40 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:40 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:40 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:40 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:40 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:40 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:40 AI_Player.update()	update
2017-01-03 15:04:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:40 AI_Player.update()	Search took0ms
2017-01-03 15:04:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:40 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:40 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:40 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:40 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:40 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:40 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:40 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:40 AI_Player.update()	update
2017-01-03 15:04:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:40 AI_Player.update()	Search took0ms
2017-01-03 15:04:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:40 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:40 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:40 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:40 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:40 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:40 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:40 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:40 AI_Player.update()	update
2017-01-03 15:04:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:40 AI_Player.update()	Search took0ms
2017-01-03 15:04:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:40 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:40 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:40 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:40 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:40 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:40 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:40 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:41 AI_Player.update()	update
2017-01-03 15:04:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:41 AI_Player.update()	Search took1ms
2017-01-03 15:04:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:41 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:41 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:41 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:41 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:41 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:41 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:41 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:41 AI_Player.update()	update
2017-01-03 15:04:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:41 AI_Player.update()	Search took0ms
2017-01-03 15:04:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:41 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:41 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:41 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:41 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:41 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:41 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:41 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:41 AI_Player.update()	update
2017-01-03 15:04:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:41 AI_Player.update()	Search took0ms
2017-01-03 15:04:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:41 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:41 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:41 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:41 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:41 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:41 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:41 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:41 AI_Player.update()	update
2017-01-03 15:04:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:41 AI_Player.update()	Search took0ms
2017-01-03 15:04:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:41 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:41 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:41 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:41 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:41 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:41 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:41 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:41 AI_Player.update()	update
2017-01-03 15:04:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:41 AI_Player.update()	Search took0ms
2017-01-03 15:04:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:41 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:41 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:41 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:41 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:41 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:41 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:41 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:41 AI_Player.update()	update
2017-01-03 15:04:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:41 AI_Player.update()	Search took0ms
2017-01-03 15:04:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:41 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:41 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:41 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:41 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:41 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:41 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:41 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:41 AI_Player.update()	update
2017-01-03 15:04:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:41 AI_Player.update()	Search took0ms
2017-01-03 15:04:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:41 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:41 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:41 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:41 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:41 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:41 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:41 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:41 AI_Player.update()	update
2017-01-03 15:04:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:41 AI_Player.update()	Search took0ms
2017-01-03 15:04:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:41 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:41 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:41 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:41 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:41 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:41 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:41 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:41 AI_Player.update()	update
2017-01-03 15:04:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:41 AI_Player.update()	Search took0ms
2017-01-03 15:04:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:41 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:41 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:41 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:41 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:41 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:41 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:41 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:41 AI_Player.update()	update
2017-01-03 15:04:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:41 AI_Player.update()	Search took0ms
2017-01-03 15:04:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:41 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:41 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:41 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:41 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:41 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:41 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:41 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:42 AI_Player.update()	update
2017-01-03 15:04:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:42 AI_Player.update()	Search took0ms
2017-01-03 15:04:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:42 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:42 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:42 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:42 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:42 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:42 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:42 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:42 AI_Player.update()	update
2017-01-03 15:04:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:42 AI_Player.update()	Search took0ms
2017-01-03 15:04:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:42 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:42 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:42 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:42 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:42 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:42 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:42 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:42 AI_Player.update()	update
2017-01-03 15:04:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:42 AI_Player.update()	Search took0ms
2017-01-03 15:04:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:42 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:42 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:42 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:42 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:42 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:42 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:42 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:42 AI_Player.update()	update
2017-01-03 15:04:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:42 AI_Player.update()	Search took0ms
2017-01-03 15:04:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:42 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:42 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:42 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:42 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:42 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:42 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:42 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:42 AI_Player.update()	update
2017-01-03 15:04:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:42 AI_Player.update()	Search took0ms
2017-01-03 15:04:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:42 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:42 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:42 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:42 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:42 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:42 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:42 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:42 AI_Player.update()	update
2017-01-03 15:04:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:42 AI_Player.update()	Search took0ms
2017-01-03 15:04:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:42 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:42 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:42 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:42 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:42 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:42 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:42 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:42 AI_Player.update()	update
2017-01-03 15:04:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:42 AI_Player.update()	Search took0ms
2017-01-03 15:04:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:42 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:42 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:42 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:42 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:42 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:42 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:42 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:42 AI_Player.update()	update
2017-01-03 15:04:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:42 AI_Player.update()	Search took0ms
2017-01-03 15:04:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:42 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:42 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:42 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:42 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:42 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:42 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:42 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:43 AI_Player.update()	update
2017-01-03 15:04:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:43 AI_Player.update()	Search took0ms
2017-01-03 15:04:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:43 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:43 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:43 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:43 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:43 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:43 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:43 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:43 AI_Player.update()	update
2017-01-03 15:04:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:43 AI_Player.update()	Search took0ms
2017-01-03 15:04:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:43 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:43 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:43 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:43 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:43 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:43 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:43 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:43 AI_Player.update()	update
2017-01-03 15:04:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:43 AI_Player.update()	Search took0ms
2017-01-03 15:04:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:43 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:43 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:43 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:43 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:43 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:43 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:43 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:43 AI_Player.update()	update
2017-01-03 15:04:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:43 AI_Player.update()	Search took0ms
2017-01-03 15:04:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:43 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:43 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:43 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:43 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:43 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:43 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:43 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:43 AI_Player.update()	update
2017-01-03 15:04:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:43 AI_Player.update()	Search took0ms
2017-01-03 15:04:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:43 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:43 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:43 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:43 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:43 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:43 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:43 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:43 AI_Player.update()	update
2017-01-03 15:04:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:43 AI_Player.update()	Search took0ms
2017-01-03 15:04:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:43 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:43 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:43 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:43 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:43 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:43 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:43 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:43 AI_Player.update()	update
2017-01-03 15:04:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:43 AI_Player.update()	Search took0ms
2017-01-03 15:04:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:43 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:43 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:43 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:43 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:43 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:43 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:43 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:43 AI_Player.update()	update
2017-01-03 15:04:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:43 AI_Player.update()	Search took0ms
2017-01-03 15:04:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:43 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:43 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:43 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:43 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:43 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:43 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:43 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:43 AI_Player.update()	update
2017-01-03 15:04:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:43 AI_Player.update()	Search took0ms
2017-01-03 15:04:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:43 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:43 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:43 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:43 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:43 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:43 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:43 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:43 AI_Player.update()	update
2017-01-03 15:04:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:43 AI_Player.update()	Search took0ms
2017-01-03 15:04:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:43 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:43 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:43 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:43 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:43 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:43 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:43 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:44 AI_Player.update()	update
2017-01-03 15:04:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:44 AI_Player.update()	Search took0ms
2017-01-03 15:04:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:44 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:44 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:44 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:44 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:44 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:44 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:44 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:44 AI_Player.update()	update
2017-01-03 15:04:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:44 AI_Player.update()	Search took0ms
2017-01-03 15:04:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:44 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:44 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:44 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:44 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:44 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:44 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:44 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:44 AI_Player.update()	update
2017-01-03 15:04:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:44 AI_Player.update()	Search took0ms
2017-01-03 15:04:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:44 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:44 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:44 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:44 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:44 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:44 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:44 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:44 AI_Player.update()	update
2017-01-03 15:04:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:44 AI_Player.update()	Search took0ms
2017-01-03 15:04:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:44 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:44 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:44 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:44 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:44 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:44 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:44 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:44 AI_Player.update()	update
2017-01-03 15:04:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:44 AI_Player.update()	Search took0ms
2017-01-03 15:04:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:44 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:44 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:44 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:44 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:44 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:44 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:44 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:44 AI_Player.update()	update
2017-01-03 15:04:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:44 AI_Player.update()	Search took0ms
2017-01-03 15:04:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:44 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:44 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:44 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:44 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:44 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:44 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:44 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:44 AI_Player.update()	update
2017-01-03 15:04:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:44 AI_Player.update()	Search took1ms
2017-01-03 15:04:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:44 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:44 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:44 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:44 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:44 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:44 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:44 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:44 AI_Player.update()	update
2017-01-03 15:04:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:44 AI_Player.update()	Search took0ms
2017-01-03 15:04:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:44 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:44 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:44 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:44 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:44 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:44 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:44 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:44 AI_Player.update()	update
2017-01-03 15:04:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:44 AI_Player.update()	Search took0ms
2017-01-03 15:04:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:44 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:44 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:44 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:44 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:44 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:44 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:44 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:45 AI_Player.update()	update
2017-01-03 15:04:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:45 AI_Player.update()	Search took0ms
2017-01-03 15:04:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:45 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:45 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:45 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:45 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:45 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:45 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:45 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:45 AI_Player.update()	update
2017-01-03 15:04:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:45 AI_Player.update()	Search took0ms
2017-01-03 15:04:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:45 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:45 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:45 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:45 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:45 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:45 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:45 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:45 AI_Player.update()	update
2017-01-03 15:04:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:45 AI_Player.update()	Search took0ms
2017-01-03 15:04:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:45 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:45 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:45 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:45 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:45 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:45 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:45 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:45 AI_Player.update()	update
2017-01-03 15:04:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:45 AI_Player.update()	Search took0ms
2017-01-03 15:04:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:45 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:45 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:45 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:45 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:45 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:45 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:45 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:45 AI_Player.update()	update
2017-01-03 15:04:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:45 AI_Player.update()	Search took0ms
2017-01-03 15:04:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:45 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:45 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:45 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:45 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:45 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:45 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:45 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:45 AI_Player.update()	update
2017-01-03 15:04:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:45 AI_Player.update()	Search took0ms
2017-01-03 15:04:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:45 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:45 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:45 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:45 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:45 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:45 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:45 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:45 AI_Player.update()	update
2017-01-03 15:04:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:45 AI_Player.update()	Search took0ms
2017-01-03 15:04:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:45 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:45 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:45 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:45 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:45 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:45 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:45 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:45 AI_Player.update()	update
2017-01-03 15:04:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:45 AI_Player.update()	Search took0ms
2017-01-03 15:04:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:45 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:45 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:45 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:45 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:45 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:45 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:45 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:45 AI_Player.update()	update
2017-01-03 15:04:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:45 AI_Player.update()	Search took0ms
2017-01-03 15:04:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:45 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:45 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:45 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:45 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:45 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:45 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:45 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:45 AI_Player.update()	update
2017-01-03 15:04:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:45 AI_Player.update()	Search took0ms
2017-01-03 15:04:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:45 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:45 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:45 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:45 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:45 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:45 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:45 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:46 AI_Player.update()	update
2017-01-03 15:04:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:46 AI_Player.update()	Search took0ms
2017-01-03 15:04:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:46 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:46 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:46 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:46 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:46 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:46 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:46 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:46 AI_Player.update()	update
2017-01-03 15:04:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:46 AI_Player.update()	Search took0ms
2017-01-03 15:04:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:46 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:46 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:46 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:46 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:46 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:46 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:46 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:46 AI_Player.update()	update
2017-01-03 15:04:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:46 AI_Player.update()	Search took0ms
2017-01-03 15:04:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:46 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:46 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:46 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:46 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:46 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:46 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:46 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:46 AI_Player.update()	update
2017-01-03 15:04:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:46 AI_Player.update()	Search took0ms
2017-01-03 15:04:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:46 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:46 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:46 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:46 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:46 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:46 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:46 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:46 AI_Player.update()	update
2017-01-03 15:04:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:46 AI_Player.update()	Search took0ms
2017-01-03 15:04:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:46 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:46 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:46 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:46 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:46 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:46 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:46 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:46 AI_Player.update()	update
2017-01-03 15:04:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:46 AI_Player.update()	Search took0ms
2017-01-03 15:04:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:46 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:46 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:46 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:46 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:46 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:46 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:46 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:46 AI_Player.update()	update
2017-01-03 15:04:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:46 AI_Player.update()	Search took1ms
2017-01-03 15:04:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:46 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:46 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:46 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:46 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:46 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:46 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:46 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:46 AI_Player.update()	update
2017-01-03 15:04:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:46 AI_Player.update()	Search took0ms
2017-01-03 15:04:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:46 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:46 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:46 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:46 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:46 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:46 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:46 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:46 AI_Player.update()	update
2017-01-03 15:04:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:46 AI_Player.update()	Search took0ms
2017-01-03 15:04:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:46 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:46 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:46 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:46 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:46 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:46 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:46 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:47 AI_Player.update()	update
2017-01-03 15:04:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:47 AI_Player.update()	Search took0ms
2017-01-03 15:04:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:47 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:47 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:47 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:47 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:47 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:47 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:47 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 15:04:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 15:04:47 AI_Player.update()	update
2017-01-03 15:04:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 15:04:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 15:04:47 AI_Player.update()	Search took0ms
2017-01-03 15:04:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 15:04:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:47 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 15:04:47 AI_Player.update()		11,	1010,	101,	11,	1011,	111,	101
2017-01-03 15:04:47 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 15:04:47 AI_Player.update()		1011,	101,	1011,	1010,	1001,	1010,	110
2017-01-03 15:04:47 AI_Player.update()		1110,	111,	1101,	1110,	1011,	110,	1011
2017-01-03 15:04:47 AI_Player.update()		1100,	1001,	1001,	1010,	111,	1101,	11
2017-01-03 15:04:47 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1110,	1001
2017-01-03 15:04:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 15:04:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 15:04:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 15:04:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 15:04:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 15:04:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 15:04:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 15:04:47 GameBoard.setupTreasurePanel()	1 1
