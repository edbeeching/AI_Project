2017-01-03 16:11:30 GameBoard.<init>()	Hello World!
2017-01-03 16:11:30 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-03 16:11:30 QueryProlog.initialise()	setup(h2/h0). suceeded
2017-01-03 16:11:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:11:30 GameBoard.setupBoardFromString()	Board created
2017-01-03 16:11:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:11:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:11:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 16:11:30 GameBoard.initialise()	[sword, gold, map, crown, candle]
2017-01-03 16:11:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 16:11:30 GameBoard.initialise()	[chest, keys, helmet, gem, ring]
2017-01-03 16:11:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:30 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-03 16:11:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	null
2017-01-03 16:11:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	adding map
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 16:11:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 16:11:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:11:30 AI_Player.update()	update
2017-01-03 16:11:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:11:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 16:11:30 AI_Player.update()	Search took6ms
2017-01-03 16:11:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:11:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:11:30 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-03 16:11:30 AI_Player.update()		1110,	1010,	1010,	1101,	111,	101,	101
2017-01-03 16:11:30 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-03 16:11:30 AI_Player.update()		1100,	1100,	101,	1010,	1010,	110,	1101
2017-01-03 16:11:30 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:11:30 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:11:30 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:11:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:11:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:11:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:11:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:11:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:11:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	adding map
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 16:11:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 16:11:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:11:30 AI_Player.update()	update
2017-01-03 16:11:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:11:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 16:11:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 16:11:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:11:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:11:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 16:11:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:11:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:41 QueryProlog.requestShiftRight()	try_to_shift_row_right( 2 ) suceeded
2017-01-03 16:11:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:11:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:11:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:11:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:11:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:43 GameBoard$ClickAction.checkPieces()	1.0 7.0 
2017-01-03 16:11:43 QueryProlog.getCurrentPlayer()	get_current_player(Player). suceeded
2017-01-03 16:11:43 QueryProlog.canMove()	player(b,_,I/J). suceeded
2017-01-03 16:11:43 GameBoard$ClickAction.checkPieces()	Can move
2017-01-03 16:11:43 QueryProlog.tryAndMove()	move_player(b,1/7). suceeded
2017-01-03 16:11:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:11:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:11:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:11:43 AI_Player.update()	update
2017-01-03 16:11:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:11:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 16:11:43 AI_Player.update()	Search took1ms
2017-01-03 16:11:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:11:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:11:43 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 16:11:43 AI_Player.update()		101,	110,	1010,	1010,	1101,	111,	101
2017-01-03 16:11:43 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:11:43 AI_Player.update()		1100,	1100,	101,	1010,	1010,	110,	1101
2017-01-03 16:11:43 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:11:43 AI_Player.update()		101,	11,	1001,	1001,	111,	110,	1010
2017-01-03 16:11:43 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:11:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:11:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:11:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:11:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:11:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:11:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:11:44 AI_Player.update()	update
2017-01-03 16:11:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:11:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 16:11:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 16:11:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:11:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:11:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 16:11:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:11:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:49 GameBoard$ClickAction.checkPieces()	1.0 7.0 
2017-01-03 16:11:49 QueryProlog.getCurrentPlayer()	get_current_player(Player). suceeded
2017-01-03 16:11:49 QueryProlog.canMove()	player(b,_,I/J). suceeded
2017-01-03 16:11:49 GameBoard$ClickAction.checkPieces()	Can't move
2017-01-03 16:11:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:49 GameBoard$ClickAction.checkPieces()	2.0 7.0 
2017-01-03 16:11:49 QueryProlog.getCurrentPlayer()	get_current_player(Player). suceeded
2017-01-03 16:11:49 QueryProlog.canMove()	player(b,_,I/J). suceeded
2017-01-03 16:11:49 GameBoard$ClickAction.checkPieces()	Can't move
2017-01-03 16:11:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:51 QueryProlog.requestShiftRight()	try_to_shift_row_right( 2 ) suceeded
2017-01-03 16:11:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:11:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:11:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:11:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:11:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:52 GameBoard$ClickAction.checkPieces()	1.0 7.0 
2017-01-03 16:11:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:52 QueryProlog.getCurrentPlayer()	get_current_player(Player). suceeded
2017-01-03 16:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:52 QueryProlog.canMove()	player(b,_,I/J). suceeded
2017-01-03 16:11:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:52 GameBoard$ClickAction.checkPieces()	Can move
2017-01-03 16:11:52 QueryProlog.tryAndMove()	move_player(b,1/7). suceeded
2017-01-03 16:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:11:52 AI_Player.update()	update
2017-01-03 16:11:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:11:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 16:11:52 AI_Player.update()	Search took1ms
2017-01-03 16:11:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:11:52 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:11:52 AI_Player.update()		101,	1100,	110,	1010,	1010,	1101,	111
2017-01-03 16:11:52 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:11:52 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:11:52 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:11:52 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:11:52 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:11:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:11:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:11:52 AI_Player.update()	update
2017-01-03 16:11:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:11:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 16:11:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 16:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:11:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 16:11:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:11:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:11:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:11:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:11:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:01 GameBoard$ClickAction.checkPieces()	1.0 7.0 
2017-01-03 16:12:01 QueryProlog.getCurrentPlayer()	get_current_player(Player). suceeded
2017-01-03 16:12:01 QueryProlog.canMove()	player(b,_,I/J). suceeded
2017-01-03 16:12:01 GameBoard$ClickAction.checkPieces()	Can't move
2017-01-03 16:12:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:02 GameBoard$ClickAction.checkPieces()	2.0 7.0 
2017-01-03 16:12:02 QueryProlog.getCurrentPlayer()	get_current_player(Player). suceeded
2017-01-03 16:12:02 QueryProlog.canMove()	player(b,_,I/J). suceeded
2017-01-03 16:12:02 GameBoard$ClickAction.checkPieces()	Can't move
2017-01-03 16:12:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:03 QueryProlog.requestShiftRight()	try_to_shift_row_right( 2 ) suceeded
2017-01-03 16:12:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:03 GameBoard$ClickAction.checkPieces()	2.0 7.0 
2017-01-03 16:12:03 QueryProlog.getCurrentPlayer()	get_current_player(Player). suceeded
2017-01-03 16:12:03 QueryProlog.canMove()	player(b,_,I/J). suceeded
2017-01-03 16:12:03 GameBoard$ClickAction.checkPieces()	Can move
2017-01-03 16:12:03 QueryProlog.tryAndMove()	move_player(b,2/7). suceeded
2017-01-03 16:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:03 AI_Player.update()	update
2017-01-03 16:12:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:03 AI_Player.update()	Search took18ms
2017-01-03 16:12:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:03 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:03 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:03 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:03 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:03 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:03 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:03 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:03 AI_Player.update()	update
2017-01-03 16:12:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:03 AI_Player.update()	Search took17ms
2017-01-03 16:12:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:03 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:03 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:03 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:03 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:03 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:03 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:03 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:04 AI_Player.update()	update
2017-01-03 16:12:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:04 AI_Player.update()	Search took17ms
2017-01-03 16:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:04 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:04 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:04 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:04 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:04 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:04 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:04 AI_Player.update()	update
2017-01-03 16:12:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:04 AI_Player.update()	Search took18ms
2017-01-03 16:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:04 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:04 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:04 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:04 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:04 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:04 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:04 AI_Player.update()	update
2017-01-03 16:12:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:04 AI_Player.update()	Search took18ms
2017-01-03 16:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:04 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:04 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:04 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:04 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:04 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:04 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:04 AI_Player.update()	update
2017-01-03 16:12:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:04 AI_Player.update()	Search took18ms
2017-01-03 16:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:04 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:04 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:04 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:04 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:04 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:04 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:04 AI_Player.update()	update
2017-01-03 16:12:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:04 AI_Player.update()	Search took17ms
2017-01-03 16:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:04 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:04 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:04 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:04 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:04 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:04 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:04 AI_Player.update()	update
2017-01-03 16:12:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:04 AI_Player.update()	Search took16ms
2017-01-03 16:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:04 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:04 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:04 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:04 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:04 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:04 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:04 AI_Player.update()	update
2017-01-03 16:12:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:04 AI_Player.update()	Search took17ms
2017-01-03 16:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:04 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:04 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:04 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:04 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:04 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:04 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:04 AI_Player.update()	update
2017-01-03 16:12:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:05 AI_Player.update()	Search took21ms
2017-01-03 16:12:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:05 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:05 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:05 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:05 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:05 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:05 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:05 AI_Player.update()	update
2017-01-03 16:12:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:05 AI_Player.update()	Search took17ms
2017-01-03 16:12:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:05 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:05 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:05 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:05 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:05 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:05 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:05 AI_Player.update()	update
2017-01-03 16:12:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:05 AI_Player.update()	Search took19ms
2017-01-03 16:12:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:05 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:05 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:05 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:05 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:05 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:05 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:05 AI_Player.update()	update
2017-01-03 16:12:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:05 AI_Player.update()	Search took18ms
2017-01-03 16:12:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:05 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:05 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:05 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:05 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:05 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:05 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:05 AI_Player.update()	update
2017-01-03 16:12:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:05 AI_Player.update()	Search took17ms
2017-01-03 16:12:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:05 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:05 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:05 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:05 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:05 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:05 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:05 AI_Player.update()	update
2017-01-03 16:12:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:05 AI_Player.update()	Search took17ms
2017-01-03 16:12:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:05 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:05 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:05 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:05 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:05 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:05 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:05 AI_Player.update()	update
2017-01-03 16:12:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:05 AI_Player.update()	Search took18ms
2017-01-03 16:12:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:05 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:05 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:05 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:05 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:05 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:05 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:05 AI_Player.update()	update
2017-01-03 16:12:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:05 AI_Player.update()	Search took17ms
2017-01-03 16:12:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:05 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:05 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:05 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:05 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:05 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:05 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:05 AI_Player.update()	update
2017-01-03 16:12:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:06 AI_Player.update()	Search took17ms
2017-01-03 16:12:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:06 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:06 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:06 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:06 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:06 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:06 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:06 AI_Player.update()	update
2017-01-03 16:12:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:06 AI_Player.update()	Search took18ms
2017-01-03 16:12:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:06 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:06 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:06 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:06 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:06 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:06 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:06 AI_Player.update()	update
2017-01-03 16:12:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:06 AI_Player.update()	Search took18ms
2017-01-03 16:12:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:06 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:06 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:06 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:06 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:06 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:06 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:06 AI_Player.update()	update
2017-01-03 16:12:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:06 AI_Player.update()	Search took17ms
2017-01-03 16:12:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:06 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:06 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:06 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:06 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:06 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:06 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:06 AI_Player.update()	update
2017-01-03 16:12:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:06 AI_Player.update()	Search took17ms
2017-01-03 16:12:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:06 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:06 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:06 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:06 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:06 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:06 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:06 AI_Player.update()	update
2017-01-03 16:12:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:06 AI_Player.update()	Search took17ms
2017-01-03 16:12:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:06 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:06 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:06 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:06 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:06 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:06 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:06 AI_Player.update()	update
2017-01-03 16:12:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:06 AI_Player.update()	Search took18ms
2017-01-03 16:12:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:06 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:06 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:06 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:06 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:06 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:06 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:06 AI_Player.update()	update
2017-01-03 16:12:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:06 AI_Player.update()	Search took17ms
2017-01-03 16:12:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:06 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:06 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:06 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:06 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:06 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:06 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:06 AI_Player.update()	update
2017-01-03 16:12:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:07 AI_Player.update()	Search took18ms
2017-01-03 16:12:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:07 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:07 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:07 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:07 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:07 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:07 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:07 AI_Player.update()	update
2017-01-03 16:12:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:07 AI_Player.update()	Search took17ms
2017-01-03 16:12:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:07 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:07 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:07 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:07 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:07 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:07 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:07 AI_Player.update()	update
2017-01-03 16:12:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:07 AI_Player.update()	Search took17ms
2017-01-03 16:12:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:07 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:07 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:07 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:07 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:07 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:07 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:07 AI_Player.update()	update
2017-01-03 16:12:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:07 AI_Player.update()	Search took18ms
2017-01-03 16:12:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:07 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:07 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:07 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:07 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:07 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:07 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:07 AI_Player.update()	update
2017-01-03 16:12:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:07 AI_Player.update()	Search took17ms
2017-01-03 16:12:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:07 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:07 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:07 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:07 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:07 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:07 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:07 AI_Player.update()	update
2017-01-03 16:12:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:07 AI_Player.update()	Search took17ms
2017-01-03 16:12:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:07 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:07 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:07 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:07 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:07 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:07 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:07 AI_Player.update()	update
2017-01-03 16:12:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:07 AI_Player.update()	Search took18ms
2017-01-03 16:12:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:07 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:07 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:07 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:07 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:07 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:07 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:07 AI_Player.update()	update
2017-01-03 16:12:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:07 AI_Player.update()	Search took17ms
2017-01-03 16:12:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:07 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:07 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:07 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:07 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:07 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:07 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:07 AI_Player.update()	update
2017-01-03 16:12:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:07 AI_Player.update()	Search took17ms
2017-01-03 16:12:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:07 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:07 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:07 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:07 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:07 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:07 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:08 AI_Player.update()	update
2017-01-03 16:12:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:08 AI_Player.update()	Search took18ms
2017-01-03 16:12:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:08 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:08 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:08 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:08 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:08 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:08 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:08 AI_Player.update()	update
2017-01-03 16:12:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:08 AI_Player.update()	Search took17ms
2017-01-03 16:12:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:08 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:08 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:08 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:08 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:08 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:08 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:08 AI_Player.update()	update
2017-01-03 16:12:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:08 AI_Player.update()	Search took17ms
2017-01-03 16:12:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:08 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:08 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:08 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:08 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:08 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:08 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:08 AI_Player.update()	update
2017-01-03 16:12:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:08 AI_Player.update()	Search took18ms
2017-01-03 16:12:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:08 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:08 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:08 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:08 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:08 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:08 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:08 AI_Player.update()	update
2017-01-03 16:12:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:08 AI_Player.update()	Search took18ms
2017-01-03 16:12:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:08 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:08 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:08 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:08 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:08 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:08 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:08 AI_Player.update()	update
2017-01-03 16:12:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:08 AI_Player.update()	Search took17ms
2017-01-03 16:12:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:08 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:08 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:08 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:08 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:08 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:08 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:08 AI_Player.update()	update
2017-01-03 16:12:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:08 AI_Player.update()	Search took18ms
2017-01-03 16:12:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:08 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:08 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:08 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:08 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:08 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:08 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:08 AI_Player.update()	update
2017-01-03 16:12:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:08 AI_Player.update()	Search took17ms
2017-01-03 16:12:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:08 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:08 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:08 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:08 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:08 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:08 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:09 AI_Player.update()	update
2017-01-03 16:12:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:09 AI_Player.update()	Search took17ms
2017-01-03 16:12:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:09 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:09 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:09 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:09 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:09 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:09 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:09 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:09 AI_Player.update()	update
2017-01-03 16:12:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:09 AI_Player.update()	Search took18ms
2017-01-03 16:12:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:09 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:09 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:09 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:09 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:09 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:09 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:09 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:09 AI_Player.update()	update
2017-01-03 16:12:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:09 AI_Player.update()	Search took18ms
2017-01-03 16:12:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:09 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:09 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:09 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:09 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:09 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:09 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:09 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:09 AI_Player.update()	update
2017-01-03 16:12:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:09 AI_Player.update()	Search took18ms
2017-01-03 16:12:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:09 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:09 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:09 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:09 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:09 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:09 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:09 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:09 AI_Player.update()	update
2017-01-03 16:12:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:09 AI_Player.update()	Search took17ms
2017-01-03 16:12:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:09 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:09 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:09 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:09 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:09 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:09 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:09 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:09 AI_Player.update()	update
2017-01-03 16:12:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:09 AI_Player.update()	Search took17ms
2017-01-03 16:12:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:09 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:09 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:09 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:09 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:09 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:09 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:09 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:09 AI_Player.update()	update
2017-01-03 16:12:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:09 AI_Player.update()	Search took18ms
2017-01-03 16:12:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:09 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:09 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:09 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:09 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:09 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:09 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:09 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:09 AI_Player.update()	update
2017-01-03 16:12:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:09 AI_Player.update()	Search took17ms
2017-01-03 16:12:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:09 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:09 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:09 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:09 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:09 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:09 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:09 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:10 AI_Player.update()	update
2017-01-03 16:12:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:10 AI_Player.update()	Search took20ms
2017-01-03 16:12:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:10 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:10 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:10 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:10 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:10 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:10 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:10 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:10 AI_Player.update()	update
2017-01-03 16:12:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:10 AI_Player.update()	Search took20ms
2017-01-03 16:12:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:10 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:10 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:10 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:10 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:10 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:10 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:10 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:10 AI_Player.update()	update
2017-01-03 16:12:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:10 AI_Player.update()	Search took30ms
2017-01-03 16:12:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:10 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:10 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:10 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:10 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:10 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:10 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:10 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:10 AI_Player.update()	update
2017-01-03 16:12:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:10 AI_Player.update()	Search took23ms
2017-01-03 16:12:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:10 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:10 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:10 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:10 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:10 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:10 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:10 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:10 AI_Player.update()	update
2017-01-03 16:12:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:10 AI_Player.update()	Search took20ms
2017-01-03 16:12:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:10 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:10 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:10 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:10 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:10 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:10 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:10 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:10 AI_Player.update()	update
2017-01-03 16:12:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:10 AI_Player.update()	Search took22ms
2017-01-03 16:12:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:10 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:10 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:10 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:10 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:10 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:10 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:10 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:10 AI_Player.update()	update
2017-01-03 16:12:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:10 AI_Player.update()	Search took18ms
2017-01-03 16:12:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:10 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:10 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:10 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:10 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:10 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:10 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:10 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:10 AI_Player.update()	update
2017-01-03 16:12:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:10 AI_Player.update()	Search took17ms
2017-01-03 16:12:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:10 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:10 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:10 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:10 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:10 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:10 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:10 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:11 AI_Player.update()	update
2017-01-03 16:12:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:11 AI_Player.update()	Search took18ms
2017-01-03 16:12:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:11 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:11 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:11 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:11 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:11 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:11 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:11 AI_Player.update()	update
2017-01-03 16:12:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:11 AI_Player.update()	Search took17ms
2017-01-03 16:12:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:11 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:11 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:11 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:11 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:11 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:11 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:11 AI_Player.update()	update
2017-01-03 16:12:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:11 AI_Player.update()	Search took18ms
2017-01-03 16:12:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:11 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:11 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:11 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:11 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:11 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:11 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:11 AI_Player.update()	update
2017-01-03 16:12:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:11 AI_Player.update()	Search took17ms
2017-01-03 16:12:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:11 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:11 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:11 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:11 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:11 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:11 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:11 AI_Player.update()	update
2017-01-03 16:12:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:11 AI_Player.update()	Search took17ms
2017-01-03 16:12:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:11 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:11 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:11 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:11 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:11 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:11 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:11 AI_Player.update()	update
2017-01-03 16:12:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:11 AI_Player.update()	Search took17ms
2017-01-03 16:12:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:11 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:11 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:11 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:11 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:11 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:11 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:11 AI_Player.update()	update
2017-01-03 16:12:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:11 AI_Player.update()	Search took17ms
2017-01-03 16:12:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:11 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:11 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:11 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:11 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:11 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:11 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:11 AI_Player.update()	update
2017-01-03 16:12:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:11 AI_Player.update()	Search took17ms
2017-01-03 16:12:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:11 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:11 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:11 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:11 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:11 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:11 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:12 AI_Player.update()	update
2017-01-03 16:12:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:12 AI_Player.update()	Search took17ms
2017-01-03 16:12:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:12 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:12 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:12 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:12 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:12 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:12 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:12 AI_Player.update()	update
2017-01-03 16:12:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:12 AI_Player.update()	Search took18ms
2017-01-03 16:12:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:12 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:12 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:12 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:12 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:12 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:12 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:12 AI_Player.update()	update
2017-01-03 16:12:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:12 AI_Player.update()	Search took17ms
2017-01-03 16:12:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:12 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:12 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:12 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:12 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:12 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:12 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:12 AI_Player.update()	update
2017-01-03 16:12:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:12 AI_Player.update()	Search took21ms
2017-01-03 16:12:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:12 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:12 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:12 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:12 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:12 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:12 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:12 AI_Player.update()	update
2017-01-03 16:12:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:12 AI_Player.update()	Search took17ms
2017-01-03 16:12:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:12 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:12 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:12 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:12 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:12 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:12 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:12 AI_Player.update()	update
2017-01-03 16:12:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:12 AI_Player.update()	Search took17ms
2017-01-03 16:12:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:12 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:12 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:12 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:12 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:12 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:12 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:12 AI_Player.update()	update
2017-01-03 16:12:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:12 AI_Player.update()	Search took17ms
2017-01-03 16:12:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:12 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:12 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:12 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:12 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:12 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:12 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:12 AI_Player.update()	update
2017-01-03 16:12:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:12 AI_Player.update()	Search took18ms
2017-01-03 16:12:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:12 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:12 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:12 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:12 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:12 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:12 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:13 AI_Player.update()	update
2017-01-03 16:12:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:13 AI_Player.update()	Search took17ms
2017-01-03 16:12:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:13 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:13 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:13 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:13 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:13 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:13 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:13 AI_Player.update()	update
2017-01-03 16:12:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:13 AI_Player.update()	Search took17ms
2017-01-03 16:12:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:13 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:13 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:13 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:13 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:13 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:13 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:13 AI_Player.update()	update
2017-01-03 16:12:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:13 AI_Player.update()	Search took17ms
2017-01-03 16:12:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:13 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:13 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:13 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:13 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:13 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:13 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:13 AI_Player.update()	update
2017-01-03 16:12:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:13 AI_Player.update()	Search took17ms
2017-01-03 16:12:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:13 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:13 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:13 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:13 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:13 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:13 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:13 AI_Player.update()	update
2017-01-03 16:12:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:13 AI_Player.update()	Search took17ms
2017-01-03 16:12:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:13 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:13 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:13 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:13 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:13 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:13 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:13 AI_Player.update()	update
2017-01-03 16:12:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:13 AI_Player.update()	Search took17ms
2017-01-03 16:12:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:13 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:13 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:13 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:13 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:13 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:13 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:13 AI_Player.update()	update
2017-01-03 16:12:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:13 AI_Player.update()	Search took19ms
2017-01-03 16:12:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:13 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:13 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:13 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:13 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:13 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:13 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:13 AI_Player.update()	update
2017-01-03 16:12:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:13 AI_Player.update()	Search took17ms
2017-01-03 16:12:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:13 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:13 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:13 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:13 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:13 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:13 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:14 AI_Player.update()	update
2017-01-03 16:12:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:14 AI_Player.update()	Search took18ms
2017-01-03 16:12:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:14 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:14 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:14 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:14 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:14 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:14 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:14 AI_Player.update()	update
2017-01-03 16:12:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:14 AI_Player.update()	Search took17ms
2017-01-03 16:12:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:14 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:14 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:14 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:14 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:14 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:14 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:14 AI_Player.update()	update
2017-01-03 16:12:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:14 AI_Player.update()	Search took18ms
2017-01-03 16:12:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:14 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:14 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:14 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:14 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:14 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:14 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:14 AI_Player.update()	update
2017-01-03 16:12:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:14 AI_Player.update()	Search took17ms
2017-01-03 16:12:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:14 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:14 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:14 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:14 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:14 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:14 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:14 AI_Player.update()	update
2017-01-03 16:12:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:14 AI_Player.update()	Search took17ms
2017-01-03 16:12:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:14 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:14 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:14 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:14 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:14 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:14 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:14 AI_Player.update()	update
2017-01-03 16:12:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:14 AI_Player.update()	Search took18ms
2017-01-03 16:12:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:14 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:14 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:14 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:14 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:14 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:14 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:14 AI_Player.update()	update
2017-01-03 16:12:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:14 AI_Player.update()	Search took17ms
2017-01-03 16:12:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:14 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:14 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:14 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:14 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:14 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:14 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:14 AI_Player.update()	update
2017-01-03 16:12:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:14 AI_Player.update()	Search took17ms
2017-01-03 16:12:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:14 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:14 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:14 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:14 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:14 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:14 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:15 AI_Player.update()	update
2017-01-03 16:12:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:15 AI_Player.update()	Search took17ms
2017-01-03 16:12:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:15 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:15 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:15 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:15 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:15 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:15 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:15 AI_Player.update()	update
2017-01-03 16:12:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:15 AI_Player.update()	Search took17ms
2017-01-03 16:12:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:15 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:15 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:15 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:15 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:15 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:15 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:15 AI_Player.update()	update
2017-01-03 16:12:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:15 AI_Player.update()	Search took17ms
2017-01-03 16:12:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:15 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:15 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:15 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:15 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:15 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:15 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:15 AI_Player.update()	update
2017-01-03 16:12:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:15 AI_Player.update()	Search took17ms
2017-01-03 16:12:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:15 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:15 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:15 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:15 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:15 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:15 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:15 AI_Player.update()	update
2017-01-03 16:12:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:15 AI_Player.update()	Search took17ms
2017-01-03 16:12:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:15 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:15 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:15 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:15 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:15 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:15 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:15 AI_Player.update()	update
2017-01-03 16:12:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:15 AI_Player.update()	Search took17ms
2017-01-03 16:12:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:15 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:15 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:15 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:15 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:15 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:15 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:15 AI_Player.update()	update
2017-01-03 16:12:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:15 AI_Player.update()	Search took17ms
2017-01-03 16:12:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:15 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:15 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:15 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:15 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:15 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:15 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:15 AI_Player.update()	update
2017-01-03 16:12:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:15 AI_Player.update()	Search took17ms
2017-01-03 16:12:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:15 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:15 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:15 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:15 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:15 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:15 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:16 AI_Player.update()	update
2017-01-03 16:12:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:16 AI_Player.update()	Search took27ms
2017-01-03 16:12:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:16 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:16 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:16 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:16 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:16 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:16 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:16 AI_Player.update()	update
2017-01-03 16:12:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:16 AI_Player.update()	Search took17ms
2017-01-03 16:12:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:16 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:16 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:16 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:16 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:16 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:16 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:16 AI_Player.update()	update
2017-01-03 16:12:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:16 AI_Player.update()	Search took17ms
2017-01-03 16:12:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:16 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:16 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:16 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:16 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:16 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:16 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:16 AI_Player.update()	update
2017-01-03 16:12:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:16 AI_Player.update()	Search took17ms
2017-01-03 16:12:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:16 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:16 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:16 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:16 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:16 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:16 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:16 AI_Player.update()	update
2017-01-03 16:12:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:16 AI_Player.update()	Search took17ms
2017-01-03 16:12:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:16 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:16 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:16 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:16 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:16 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:16 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:16 AI_Player.update()	update
2017-01-03 16:12:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:16 AI_Player.update()	Search took18ms
2017-01-03 16:12:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:16 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:16 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:16 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:16 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:16 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:16 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:16 AI_Player.update()	update
2017-01-03 16:12:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:16 AI_Player.update()	Search took17ms
2017-01-03 16:12:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:16 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:16 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:16 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:16 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:16 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:16 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:16 AI_Player.update()	update
2017-01-03 16:12:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:16 AI_Player.update()	Search took17ms
2017-01-03 16:12:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:16 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:16 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:16 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:16 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:16 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:16 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:17 AI_Player.update()	update
2017-01-03 16:12:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:17 AI_Player.update()	Search took19ms
2017-01-03 16:12:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:17 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:17 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:17 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:17 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:17 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:17 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:17 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:17 AI_Player.update()	update
2017-01-03 16:12:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:17 AI_Player.update()	Search took17ms
2017-01-03 16:12:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:17 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:17 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:17 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:17 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:17 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:17 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:17 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:17 AI_Player.update()	update
2017-01-03 16:12:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:17 AI_Player.update()	Search took17ms
2017-01-03 16:12:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:17 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:17 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:17 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:17 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:17 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:17 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:17 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:17 AI_Player.update()	update
2017-01-03 16:12:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:17 AI_Player.update()	Search took17ms
2017-01-03 16:12:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:17 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:17 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:17 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:17 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:17 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:17 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:17 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:17 AI_Player.update()	update
2017-01-03 16:12:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:17 AI_Player.update()	Search took17ms
2017-01-03 16:12:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:17 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:17 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:17 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:17 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:17 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:17 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:17 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:17 AI_Player.update()	update
2017-01-03 16:12:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:17 AI_Player.update()	Search took17ms
2017-01-03 16:12:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:17 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:17 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:17 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:17 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:17 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:17 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:17 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:17 AI_Player.update()	update
2017-01-03 16:12:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:17 AI_Player.update()	Search took18ms
2017-01-03 16:12:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:17 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:17 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:17 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:17 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:17 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:17 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:17 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:17 AI_Player.update()	update
2017-01-03 16:12:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:17 AI_Player.update()	Search took17ms
2017-01-03 16:12:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:17 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:17 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:17 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:17 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:17 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:17 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:17 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:18 AI_Player.update()	update
2017-01-03 16:12:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:18 AI_Player.update()	Search took17ms
2017-01-03 16:12:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:18 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:18 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:18 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:18 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:18 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:18 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:18 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:18 AI_Player.update()	update
2017-01-03 16:12:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:18 AI_Player.update()	Search took17ms
2017-01-03 16:12:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:18 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:18 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:18 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:18 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:18 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:18 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:18 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:18 AI_Player.update()	update
2017-01-03 16:12:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:18 AI_Player.update()	Search took18ms
2017-01-03 16:12:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:18 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:18 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:18 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:18 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:18 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:18 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:18 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:18 AI_Player.update()	update
2017-01-03 16:12:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:18 AI_Player.update()	Search took17ms
2017-01-03 16:12:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:18 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:18 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:18 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:18 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:18 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:18 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:18 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:18 AI_Player.update()	update
2017-01-03 16:12:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:18 AI_Player.update()	Search took17ms
2017-01-03 16:12:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:18 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:18 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:18 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:18 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:18 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:18 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:18 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:18 AI_Player.update()	update
2017-01-03 16:12:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:18 AI_Player.update()	Search took17ms
2017-01-03 16:12:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:18 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:18 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:18 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:18 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:18 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:18 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:18 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:18 AI_Player.update()	update
2017-01-03 16:12:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:18 AI_Player.update()	Search took18ms
2017-01-03 16:12:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:18 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:18 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:18 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:18 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:18 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:18 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:18 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:18 AI_Player.update()	update
2017-01-03 16:12:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:18 AI_Player.update()	Search took17ms
2017-01-03 16:12:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:18 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:18 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:18 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:18 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:18 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:18 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:18 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:18 AI_Player.update()	update
2017-01-03 16:12:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:19 AI_Player.update()	Search took18ms
2017-01-03 16:12:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:19 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:19 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:19 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:19 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:19 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:19 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:19 AI_Player.update()	update
2017-01-03 16:12:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:19 AI_Player.update()	Search took17ms
2017-01-03 16:12:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:19 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:19 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:19 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:19 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:19 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:19 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:19 AI_Player.update()	update
2017-01-03 16:12:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:19 AI_Player.update()	Search took17ms
2017-01-03 16:12:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:19 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:19 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:19 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:19 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:19 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:19 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:19 AI_Player.update()	update
2017-01-03 16:12:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:19 AI_Player.update()	Search took18ms
2017-01-03 16:12:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:19 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:19 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:19 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:19 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:19 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:19 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:19 AI_Player.update()	update
2017-01-03 16:12:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:19 AI_Player.update()	Search took20ms
2017-01-03 16:12:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:19 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:19 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:19 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:19 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:19 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:19 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:19 AI_Player.update()	update
2017-01-03 16:12:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:19 AI_Player.update()	Search took18ms
2017-01-03 16:12:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:19 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:19 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:19 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:19 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:19 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:19 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:19 AI_Player.update()	update
2017-01-03 16:12:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:19 AI_Player.update()	Search took17ms
2017-01-03 16:12:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:19 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:19 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:19 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:19 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:19 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:19 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:19 AI_Player.update()	update
2017-01-03 16:12:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:19 AI_Player.update()	Search took17ms
2017-01-03 16:12:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:19 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:19 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:19 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:19 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:19 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:19 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:19 AI_Player.update()	update
2017-01-03 16:12:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:20 AI_Player.update()	Search took17ms
2017-01-03 16:12:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:20 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:20 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:20 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:20 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:20 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:20 AI_Player.update()	update
2017-01-03 16:12:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:20 AI_Player.update()	Search took18ms
2017-01-03 16:12:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:20 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:20 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:20 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:20 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:20 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:20 AI_Player.update()	update
2017-01-03 16:12:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:20 AI_Player.update()	Search took19ms
2017-01-03 16:12:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:20 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:20 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:20 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:20 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:20 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:20 AI_Player.update()	update
2017-01-03 16:12:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:20 AI_Player.update()	Search took18ms
2017-01-03 16:12:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:20 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:20 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:20 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:20 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:20 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:20 AI_Player.update()	update
2017-01-03 16:12:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:20 AI_Player.update()	Search took17ms
2017-01-03 16:12:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:20 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:20 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:20 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:20 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:20 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:20 AI_Player.update()	update
2017-01-03 16:12:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:20 AI_Player.update()	Search took17ms
2017-01-03 16:12:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:20 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:20 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:20 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:20 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:20 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:20 AI_Player.update()	update
2017-01-03 16:12:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:20 AI_Player.update()	Search took17ms
2017-01-03 16:12:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:20 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:20 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:20 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:20 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:20 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:20 AI_Player.update()	update
2017-01-03 16:12:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:20 AI_Player.update()	Search took17ms
2017-01-03 16:12:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:20 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:20 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:20 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:20 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:20 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:20 AI_Player.update()	update
2017-01-03 16:12:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:20 AI_Player.update()	Search took17ms
2017-01-03 16:12:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:20 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:20 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:20 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:20 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:20 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:21 AI_Player.update()	update
2017-01-03 16:12:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:21 AI_Player.update()	Search took18ms
2017-01-03 16:12:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:21 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:21 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:21 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:21 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:21 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:21 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:21 AI_Player.update()	update
2017-01-03 16:12:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:21 AI_Player.update()	Search took17ms
2017-01-03 16:12:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:21 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:21 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:21 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:21 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:21 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:21 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:21 AI_Player.update()	update
2017-01-03 16:12:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:21 AI_Player.update()	Search took17ms
2017-01-03 16:12:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:21 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:21 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:21 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:21 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:21 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:21 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:21 AI_Player.update()	update
2017-01-03 16:12:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:21 AI_Player.update()	Search took18ms
2017-01-03 16:12:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:21 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:21 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:21 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:21 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:21 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:21 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:21 AI_Player.update()	update
2017-01-03 16:12:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:21 AI_Player.update()	Search took17ms
2017-01-03 16:12:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:21 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:21 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:21 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:21 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:21 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:21 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:21 AI_Player.update()	update
2017-01-03 16:12:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:21 AI_Player.update()	Search took17ms
2017-01-03 16:12:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:21 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:21 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:21 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:21 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:21 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:21 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:21 AI_Player.update()	update
2017-01-03 16:12:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:21 AI_Player.update()	Search took17ms
2017-01-03 16:12:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:21 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:21 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:21 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:21 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:21 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:21 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:21 AI_Player.update()	update
2017-01-03 16:12:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:21 AI_Player.update()	Search took18ms
2017-01-03 16:12:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:21 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:21 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:21 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:21 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:21 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:21 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:22 AI_Player.update()	update
2017-01-03 16:12:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:22 AI_Player.update()	Search took17ms
2017-01-03 16:12:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:22 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:22 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:22 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:22 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:22 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:22 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:22 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:22 AI_Player.update()	update
2017-01-03 16:12:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:22 AI_Player.update()	Search took17ms
2017-01-03 16:12:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:22 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:22 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:22 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:22 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:22 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:22 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:22 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:22 AI_Player.update()	update
2017-01-03 16:12:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:22 AI_Player.update()	Search took17ms
2017-01-03 16:12:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:22 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:22 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:22 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:22 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:22 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:22 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:22 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:22 AI_Player.update()	update
2017-01-03 16:12:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:22 AI_Player.update()	Search took18ms
2017-01-03 16:12:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:22 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:22 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:22 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:22 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:22 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:22 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:22 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:22 AI_Player.update()	update
2017-01-03 16:12:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:22 AI_Player.update()	Search took17ms
2017-01-03 16:12:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:22 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:22 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:22 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:22 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:22 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:22 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:22 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:22 AI_Player.update()	update
2017-01-03 16:12:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:22 AI_Player.update()	Search took17ms
2017-01-03 16:12:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:22 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:22 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:22 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:22 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:22 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:22 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:22 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:22 AI_Player.update()	update
2017-01-03 16:12:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:22 AI_Player.update()	Search took17ms
2017-01-03 16:12:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:22 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:22 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:22 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:22 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:22 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:22 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:22 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:22 AI_Player.update()	update
2017-01-03 16:12:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:22 AI_Player.update()	Search took18ms
2017-01-03 16:12:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:22 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:22 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:22 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:22 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:22 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:22 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:22 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:23 AI_Player.update()	update
2017-01-03 16:12:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:23 AI_Player.update()	Search took19ms
2017-01-03 16:12:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:23 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:23 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:23 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:23 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:23 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:23 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:23 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:23 AI_Player.update()	update
2017-01-03 16:12:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:23 AI_Player.update()	Search took17ms
2017-01-03 16:12:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:23 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:23 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:23 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:23 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:23 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:23 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:23 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:23 AI_Player.update()	update
2017-01-03 16:12:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:23 AI_Player.update()	Search took18ms
2017-01-03 16:12:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:23 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:23 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:23 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:23 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:23 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:23 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:23 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:23 AI_Player.update()	update
2017-01-03 16:12:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:23 AI_Player.update()	Search took17ms
2017-01-03 16:12:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:23 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:23 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:23 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:23 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:23 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:23 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:23 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:23 AI_Player.update()	update
2017-01-03 16:12:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:23 AI_Player.update()	Search took17ms
2017-01-03 16:12:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:23 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:23 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:23 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:23 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:23 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:23 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:23 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:23 AI_Player.update()	update
2017-01-03 16:12:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:23 AI_Player.update()	Search took17ms
2017-01-03 16:12:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:23 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:23 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:23 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:23 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:23 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:23 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:23 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:23 AI_Player.update()	update
2017-01-03 16:12:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:23 AI_Player.update()	Search took17ms
2017-01-03 16:12:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:23 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:23 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:23 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:23 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:23 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:23 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:23 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:23 AI_Player.update()	update
2017-01-03 16:12:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:23 AI_Player.update()	Search took17ms
2017-01-03 16:12:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:23 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:23 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:23 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:23 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:23 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:23 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:23 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:24 AI_Player.update()	update
2017-01-03 16:12:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:24 AI_Player.update()	Search took17ms
2017-01-03 16:12:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:24 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:24 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:24 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:24 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:24 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:24 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:24 AI_Player.update()	update
2017-01-03 16:12:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:24 AI_Player.update()	Search took18ms
2017-01-03 16:12:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:24 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:24 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:24 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:24 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:24 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:24 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:24 AI_Player.update()	update
2017-01-03 16:12:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:24 AI_Player.update()	Search took18ms
2017-01-03 16:12:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:24 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:24 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:24 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:24 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:24 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:24 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:24 AI_Player.update()	update
2017-01-03 16:12:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:24 AI_Player.update()	Search took17ms
2017-01-03 16:12:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:24 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:24 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:24 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:24 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:24 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:24 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:24 AI_Player.update()	update
2017-01-03 16:12:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:24 AI_Player.update()	Search took19ms
2017-01-03 16:12:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:24 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:24 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:24 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:24 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:24 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:24 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:24 AI_Player.update()	update
2017-01-03 16:12:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:24 AI_Player.update()	Search took17ms
2017-01-03 16:12:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:24 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:24 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:24 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:24 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:24 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:24 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:24 AI_Player.update()	update
2017-01-03 16:12:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:24 AI_Player.update()	Search took18ms
2017-01-03 16:12:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:24 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:24 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:24 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:24 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:24 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:24 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:24 AI_Player.update()	update
2017-01-03 16:12:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:24 AI_Player.update()	Search took18ms
2017-01-03 16:12:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:24 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:24 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:24 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:24 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:24 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:24 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:24 AI_Player.update()	update
2017-01-03 16:12:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:24 AI_Player.update()	Search took18ms
2017-01-03 16:12:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:24 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:24 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:24 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:24 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:24 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:24 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:25 AI_Player.update()	update
2017-01-03 16:12:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:25 AI_Player.update()	Search took18ms
2017-01-03 16:12:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:25 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:25 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:25 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:25 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:25 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:25 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:25 AI_Player.update()	update
2017-01-03 16:12:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:25 AI_Player.update()	Search took17ms
2017-01-03 16:12:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:25 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:25 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:25 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:25 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:25 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:25 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:25 AI_Player.update()	update
2017-01-03 16:12:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:25 AI_Player.update()	Search took18ms
2017-01-03 16:12:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:25 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:25 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:25 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:25 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:25 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:25 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:25 AI_Player.update()	update
2017-01-03 16:12:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:25 AI_Player.update()	Search took17ms
2017-01-03 16:12:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:25 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:25 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:25 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:25 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:25 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:25 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:25 AI_Player.update()	update
2017-01-03 16:12:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:25 AI_Player.update()	Search took17ms
2017-01-03 16:12:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:25 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:25 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:25 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:25 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:25 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:25 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:25 AI_Player.update()	update
2017-01-03 16:12:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:25 AI_Player.update()	Search took17ms
2017-01-03 16:12:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:25 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:25 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:25 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:25 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:25 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:25 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:25 AI_Player.update()	update
2017-01-03 16:12:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:25 AI_Player.update()	Search took17ms
2017-01-03 16:12:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:25 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:25 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:25 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:25 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:25 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:25 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:25 AI_Player.update()	update
2017-01-03 16:12:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:25 AI_Player.update()	Search took17ms
2017-01-03 16:12:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:25 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:25 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:25 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:25 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:25 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:25 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:26 AI_Player.update()	update
2017-01-03 16:12:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:26 AI_Player.update()	Search took19ms
2017-01-03 16:12:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:26 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:26 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:26 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:26 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:26 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:26 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:26 AI_Player.update()	update
2017-01-03 16:12:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:26 AI_Player.update()	Search took17ms
2017-01-03 16:12:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:26 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:26 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:26 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:26 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:26 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:26 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:26 AI_Player.update()	update
2017-01-03 16:12:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:26 AI_Player.update()	Search took17ms
2017-01-03 16:12:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:26 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:26 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:26 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:26 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:26 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:26 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:26 AI_Player.update()	update
2017-01-03 16:12:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:26 AI_Player.update()	Search took19ms
2017-01-03 16:12:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:26 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:26 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:26 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:26 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:26 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:26 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:26 AI_Player.update()	update
2017-01-03 16:12:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:26 AI_Player.update()	Search took18ms
2017-01-03 16:12:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:26 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:26 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:26 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:26 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:26 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:26 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:26 AI_Player.update()	update
2017-01-03 16:12:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:26 AI_Player.update()	Search took18ms
2017-01-03 16:12:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:26 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:26 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:26 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:26 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:26 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:26 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:26 AI_Player.update()	update
2017-01-03 16:12:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:26 AI_Player.update()	Search took17ms
2017-01-03 16:12:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:26 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:26 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:26 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:26 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:26 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:26 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:26 AI_Player.update()	update
2017-01-03 16:12:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:26 AI_Player.update()	Search took17ms
2017-01-03 16:12:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:26 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:26 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:26 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:26 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:26 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:26 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:27 AI_Player.update()	update
2017-01-03 16:12:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:27 AI_Player.update()	Search took17ms
2017-01-03 16:12:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:27 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:27 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:27 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:27 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:27 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:27 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:27 AI_Player.update()	update
2017-01-03 16:12:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:27 AI_Player.update()	Search took17ms
2017-01-03 16:12:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:27 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:27 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:27 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:27 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:27 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:27 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:27 AI_Player.update()	update
2017-01-03 16:12:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:27 AI_Player.update()	Search took17ms
2017-01-03 16:12:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:27 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:27 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:27 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:27 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:27 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:27 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:27 AI_Player.update()	update
2017-01-03 16:12:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:27 AI_Player.update()	Search took17ms
2017-01-03 16:12:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:27 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:27 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:27 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:27 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:27 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:27 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:27 AI_Player.update()	update
2017-01-03 16:12:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:27 AI_Player.update()	Search took20ms
2017-01-03 16:12:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:27 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:27 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:27 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:27 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:27 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:27 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:27 AI_Player.update()	update
2017-01-03 16:12:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:27 AI_Player.update()	Search took17ms
2017-01-03 16:12:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:27 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:27 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:27 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:27 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:27 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:27 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:27 AI_Player.update()	update
2017-01-03 16:12:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:27 AI_Player.update()	Search took18ms
2017-01-03 16:12:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:27 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:27 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:27 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:27 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:27 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:27 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:27 AI_Player.update()	update
2017-01-03 16:12:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:27 AI_Player.update()	Search took17ms
2017-01-03 16:12:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:27 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:27 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:27 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:27 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:27 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:27 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:27 AI_Player.update()	update
2017-01-03 16:12:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:27 AI_Player.update()	Search took17ms
2017-01-03 16:12:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:27 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:27 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:27 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:27 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:27 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:27 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:28 AI_Player.update()	update
2017-01-03 16:12:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:28 AI_Player.update()	Search took19ms
2017-01-03 16:12:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:28 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:28 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:28 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:28 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:28 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:28 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:28 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:28 AI_Player.update()	update
2017-01-03 16:12:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:28 AI_Player.update()	Search took20ms
2017-01-03 16:12:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:28 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:28 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:28 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:28 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:28 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:28 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:28 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:28 AI_Player.update()	update
2017-01-03 16:12:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:28 AI_Player.update()	Search took20ms
2017-01-03 16:12:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:28 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:28 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:28 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:28 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:28 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:28 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:28 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:28 AI_Player.update()	update
2017-01-03 16:12:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:28 AI_Player.update()	Search took17ms
2017-01-03 16:12:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:28 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:28 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:28 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:28 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:28 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:28 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:28 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:28 AI_Player.update()	update
2017-01-03 16:12:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:28 AI_Player.update()	Search took17ms
2017-01-03 16:12:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:28 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:28 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:28 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:28 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:28 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:28 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:28 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:28 AI_Player.update()	update
2017-01-03 16:12:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:28 AI_Player.update()	Search took17ms
2017-01-03 16:12:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:28 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:28 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:28 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:28 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:28 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:28 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:28 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:28 AI_Player.update()	update
2017-01-03 16:12:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:28 AI_Player.update()	Search took18ms
2017-01-03 16:12:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:28 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:28 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:28 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:28 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:28 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:28 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:28 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:28 AI_Player.update()	update
2017-01-03 16:12:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:28 AI_Player.update()	Search took17ms
2017-01-03 16:12:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:28 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:28 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:28 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:28 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:28 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:28 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:28 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:29 AI_Player.update()	update
2017-01-03 16:12:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:29 AI_Player.update()	Search took18ms
2017-01-03 16:12:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:29 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:29 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:29 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:29 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:29 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:29 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:29 AI_Player.update()	update
2017-01-03 16:12:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:29 AI_Player.update()	Search took17ms
2017-01-03 16:12:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:29 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:29 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:29 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:29 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:29 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:29 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:29 AI_Player.update()	update
2017-01-03 16:12:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:29 AI_Player.update()	Search took19ms
2017-01-03 16:12:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:29 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:29 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:29 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:29 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:29 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:29 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:29 AI_Player.update()	update
2017-01-03 16:12:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:29 AI_Player.update()	Search took17ms
2017-01-03 16:12:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:29 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:29 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:29 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:29 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:29 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:29 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:29 AI_Player.update()	update
2017-01-03 16:12:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:29 AI_Player.update()	Search took18ms
2017-01-03 16:12:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:29 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:29 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:29 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:29 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:29 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:29 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:29 AI_Player.update()	update
2017-01-03 16:12:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:29 AI_Player.update()	Search took17ms
2017-01-03 16:12:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:29 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:29 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:29 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:29 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:29 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:29 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:29 AI_Player.update()	update
2017-01-03 16:12:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:29 AI_Player.update()	Search took17ms
2017-01-03 16:12:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:29 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:29 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:29 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:29 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:29 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:29 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:29 AI_Player.update()	update
2017-01-03 16:12:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:29 AI_Player.update()	Search took18ms
2017-01-03 16:12:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:29 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:29 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:29 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:29 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:29 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:29 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:30 AI_Player.update()	update
2017-01-03 16:12:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:30 AI_Player.update()	Search took18ms
2017-01-03 16:12:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:30 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:30 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:30 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:30 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:30 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:30 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:30 AI_Player.update()	update
2017-01-03 16:12:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:30 AI_Player.update()	Search took17ms
2017-01-03 16:12:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:30 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:30 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:30 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:30 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:30 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:30 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:30 AI_Player.update()	update
2017-01-03 16:12:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:30 AI_Player.update()	Search took17ms
2017-01-03 16:12:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:30 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:30 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:30 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:30 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:30 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:30 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:30 AI_Player.update()	update
2017-01-03 16:12:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:30 AI_Player.update()	Search took17ms
2017-01-03 16:12:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:30 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:30 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:30 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:30 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:30 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:30 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:30 AI_Player.update()	update
2017-01-03 16:12:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:30 AI_Player.update()	Search took17ms
2017-01-03 16:12:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:30 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:30 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:30 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:30 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:30 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:30 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:30 AI_Player.update()	update
2017-01-03 16:12:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:30 AI_Player.update()	Search took17ms
2017-01-03 16:12:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:30 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:30 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:30 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:30 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:30 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:30 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:30 AI_Player.update()	update
2017-01-03 16:12:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:30 AI_Player.update()	Search took17ms
2017-01-03 16:12:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:30 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:30 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:30 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:30 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:30 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:30 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:30 AI_Player.update()	update
2017-01-03 16:12:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:30 AI_Player.update()	Search took17ms
2017-01-03 16:12:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:30 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:30 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:30 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:30 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:30 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:30 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:31 AI_Player.update()	update
2017-01-03 16:12:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:31 AI_Player.update()	Search took17ms
2017-01-03 16:12:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:31 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:31 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:31 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:31 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:31 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:31 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:31 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:31 AI_Player.update()	update
2017-01-03 16:12:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:31 AI_Player.update()	Search took17ms
2017-01-03 16:12:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:31 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:31 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:31 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:31 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:31 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:31 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:31 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:31 AI_Player.update()	update
2017-01-03 16:12:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:31 AI_Player.update()	Search took17ms
2017-01-03 16:12:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:31 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:31 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:31 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:31 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:31 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:31 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:31 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:31 AI_Player.update()	update
2017-01-03 16:12:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:31 AI_Player.update()	Search took17ms
2017-01-03 16:12:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:31 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:31 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:31 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:31 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:31 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:31 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:31 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:31 AI_Player.update()	update
2017-01-03 16:12:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:31 AI_Player.update()	Search took17ms
2017-01-03 16:12:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:31 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:31 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:31 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:31 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:31 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:31 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:31 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:31 AI_Player.update()	update
2017-01-03 16:12:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:31 AI_Player.update()	Search took17ms
2017-01-03 16:12:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:31 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:31 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:31 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:31 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:31 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:31 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:31 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:31 AI_Player.update()	update
2017-01-03 16:12:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:31 AI_Player.update()	Search took17ms
2017-01-03 16:12:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:31 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:31 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:31 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:31 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:31 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:31 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:31 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:31 AI_Player.update()	update
2017-01-03 16:12:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:31 AI_Player.update()	Search took17ms
2017-01-03 16:12:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:31 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:31 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:31 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:31 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:31 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:31 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:31 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:32 AI_Player.update()	update
2017-01-03 16:12:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:32 AI_Player.update()	Search took18ms
2017-01-03 16:12:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:32 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:32 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:32 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:32 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:32 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:32 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:32 AI_Player.update()	update
2017-01-03 16:12:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:32 AI_Player.update()	Search took17ms
2017-01-03 16:12:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:32 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:32 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:32 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:32 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:32 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:32 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:32 AI_Player.update()	update
2017-01-03 16:12:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:32 AI_Player.update()	Search took17ms
2017-01-03 16:12:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:32 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:32 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:32 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:32 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:32 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:32 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:32 AI_Player.update()	update
2017-01-03 16:12:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:32 AI_Player.update()	Search took17ms
2017-01-03 16:12:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:32 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:32 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:32 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:32 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:32 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:32 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:32 AI_Player.update()	update
2017-01-03 16:12:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:32 AI_Player.update()	Search took18ms
2017-01-03 16:12:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:32 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:32 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:32 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:32 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:32 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:32 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:32 AI_Player.update()	update
2017-01-03 16:12:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:32 AI_Player.update()	Search took17ms
2017-01-03 16:12:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:32 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:32 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:32 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:32 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:32 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:32 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:32 AI_Player.update()	update
2017-01-03 16:12:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:32 AI_Player.update()	Search took17ms
2017-01-03 16:12:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:32 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:32 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:32 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:32 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:32 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:32 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:32 AI_Player.update()	update
2017-01-03 16:12:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:32 AI_Player.update()	Search took17ms
2017-01-03 16:12:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:32 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:32 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:32 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:32 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:32 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:32 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:32 AI_Player.update()	update
2017-01-03 16:12:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:33 AI_Player.update()	Search took17ms
2017-01-03 16:12:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:33 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:33 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:33 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:33 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:33 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:33 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:33 AI_Player.update()	update
2017-01-03 16:12:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:33 AI_Player.update()	Search took17ms
2017-01-03 16:12:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:33 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:33 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:33 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:33 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:33 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:33 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:33 AI_Player.update()	update
2017-01-03 16:12:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:33 AI_Player.update()	Search took17ms
2017-01-03 16:12:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:33 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:33 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:33 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:33 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:33 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:33 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:33 AI_Player.update()	update
2017-01-03 16:12:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:33 AI_Player.update()	Search took17ms
2017-01-03 16:12:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:33 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:33 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:33 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:33 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:33 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:33 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:33 AI_Player.update()	update
2017-01-03 16:12:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:33 AI_Player.update()	Search took17ms
2017-01-03 16:12:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:33 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:33 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:33 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:33 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:33 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:33 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:33 AI_Player.update()	update
2017-01-03 16:12:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:33 AI_Player.update()	Search took17ms
2017-01-03 16:12:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:33 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:33 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:33 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:33 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:33 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:33 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:33 AI_Player.update()	update
2017-01-03 16:12:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:33 AI_Player.update()	Search took18ms
2017-01-03 16:12:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:33 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:33 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:33 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:33 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:33 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:33 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:33 AI_Player.update()	update
2017-01-03 16:12:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:33 AI_Player.update()	Search took17ms
2017-01-03 16:12:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:33 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:33 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:33 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:33 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:33 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:33 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:34 AI_Player.update()	update
2017-01-03 16:12:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:34 AI_Player.update()	Search took17ms
2017-01-03 16:12:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:34 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:34 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:34 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:34 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:34 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:34 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:34 AI_Player.update()	update
2017-01-03 16:12:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:34 AI_Player.update()	Search took17ms
2017-01-03 16:12:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:34 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:34 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:34 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:34 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:34 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:34 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:34 AI_Player.update()	update
2017-01-03 16:12:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:34 AI_Player.update()	Search took18ms
2017-01-03 16:12:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:34 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:34 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:34 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:34 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:34 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:34 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:34 AI_Player.update()	update
2017-01-03 16:12:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:34 AI_Player.update()	Search took17ms
2017-01-03 16:12:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:34 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:34 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:34 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:34 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:34 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:34 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:34 AI_Player.update()	update
2017-01-03 16:12:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:34 AI_Player.update()	Search took18ms
2017-01-03 16:12:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:34 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:34 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:34 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:34 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:34 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:34 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:34 AI_Player.update()	update
2017-01-03 16:12:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:34 AI_Player.update()	Search took17ms
2017-01-03 16:12:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:34 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:34 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:34 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:34 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:34 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:34 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:34 AI_Player.update()	update
2017-01-03 16:12:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:34 AI_Player.update()	Search took17ms
2017-01-03 16:12:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:34 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:34 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:34 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:34 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:34 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:34 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:34 AI_Player.update()	update
2017-01-03 16:12:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:34 AI_Player.update()	Search took17ms
2017-01-03 16:12:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:34 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:34 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:34 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:34 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:34 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:34 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:35 AI_Player.update()	update
2017-01-03 16:12:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:35 AI_Player.update()	Search took17ms
2017-01-03 16:12:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:35 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:35 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:35 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:35 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:35 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:35 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:35 AI_Player.update()	update
2017-01-03 16:12:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:35 AI_Player.update()	Search took17ms
2017-01-03 16:12:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:35 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:35 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:35 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:35 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:35 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:35 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:35 AI_Player.update()	update
2017-01-03 16:12:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:35 AI_Player.update()	Search took18ms
2017-01-03 16:12:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:35 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:35 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:35 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:35 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:35 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:35 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:35 AI_Player.update()	update
2017-01-03 16:12:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:35 AI_Player.update()	Search took17ms
2017-01-03 16:12:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:35 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:35 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:35 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:35 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:35 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:35 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:35 AI_Player.update()	update
2017-01-03 16:12:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:35 AI_Player.update()	Search took17ms
2017-01-03 16:12:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:35 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:35 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:35 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:35 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:35 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:35 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:35 AI_Player.update()	update
2017-01-03 16:12:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:35 AI_Player.update()	Search took17ms
2017-01-03 16:12:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:35 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:35 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:35 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:35 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:35 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:35 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:35 AI_Player.update()	update
2017-01-03 16:12:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:35 AI_Player.update()	Search took18ms
2017-01-03 16:12:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:35 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:35 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:35 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:35 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:35 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:35 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:35 AI_Player.update()	update
2017-01-03 16:12:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:35 AI_Player.update()	Search took18ms
2017-01-03 16:12:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:35 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:35 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:35 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:35 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:35 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:35 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:36 AI_Player.update()	update
2017-01-03 16:12:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:36 AI_Player.update()	Search took18ms
2017-01-03 16:12:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:36 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:36 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:36 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:36 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:36 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:36 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:36 AI_Player.update()	update
2017-01-03 16:12:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:36 AI_Player.update()	Search took17ms
2017-01-03 16:12:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:36 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:36 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:36 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:36 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:36 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:36 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:36 AI_Player.update()	update
2017-01-03 16:12:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:36 AI_Player.update()	Search took17ms
2017-01-03 16:12:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:36 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:36 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:36 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:36 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:36 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:36 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:36 AI_Player.update()	update
2017-01-03 16:12:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:36 AI_Player.update()	Search took17ms
2017-01-03 16:12:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:36 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:36 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:36 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:36 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:36 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:36 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:36 AI_Player.update()	update
2017-01-03 16:12:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:36 AI_Player.update()	Search took18ms
2017-01-03 16:12:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:36 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:36 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:36 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:36 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:36 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:36 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:36 AI_Player.update()	update
2017-01-03 16:12:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:36 AI_Player.update()	Search took17ms
2017-01-03 16:12:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:36 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:36 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:36 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:36 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:36 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:36 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:36 AI_Player.update()	update
2017-01-03 16:12:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:36 AI_Player.update()	Search took17ms
2017-01-03 16:12:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:36 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:36 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:36 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:36 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:36 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:36 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:36 AI_Player.update()	update
2017-01-03 16:12:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:36 AI_Player.update()	Search took17ms
2017-01-03 16:12:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:36 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:36 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:36 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:36 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:36 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:36 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:37 AI_Player.update()	update
2017-01-03 16:12:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:37 AI_Player.update()	Search took17ms
2017-01-03 16:12:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:37 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:37 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:37 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:37 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:37 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:37 AI_Player.update()	update
2017-01-03 16:12:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:37 AI_Player.update()	Search took18ms
2017-01-03 16:12:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:37 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:37 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:37 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:37 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:37 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:37 AI_Player.update()	update
2017-01-03 16:12:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:37 AI_Player.update()	Search took17ms
2017-01-03 16:12:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:37 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:37 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:37 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:37 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:37 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:37 AI_Player.update()	update
2017-01-03 16:12:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:37 AI_Player.update()	Search took18ms
2017-01-03 16:12:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:37 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:37 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:37 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:37 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:37 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:37 AI_Player.update()	update
2017-01-03 16:12:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:37 AI_Player.update()	Search took17ms
2017-01-03 16:12:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:37 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:37 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:37 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:37 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:37 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:37 AI_Player.update()	update
2017-01-03 16:12:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:37 AI_Player.update()	Search took17ms
2017-01-03 16:12:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:37 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:37 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:37 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:37 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:37 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:37 AI_Player.update()	update
2017-01-03 16:12:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:37 AI_Player.update()	Search took17ms
2017-01-03 16:12:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:37 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:37 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:37 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:37 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:37 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:37 AI_Player.update()	update
2017-01-03 16:12:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:37 AI_Player.update()	Search took17ms
2017-01-03 16:12:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:37 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:37 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:37 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:37 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:37 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:37 AI_Player.update()	update
2017-01-03 16:12:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:37 AI_Player.update()	Search took18ms
2017-01-03 16:12:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:37 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:37 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:37 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:37 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:37 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:38 AI_Player.update()	update
2017-01-03 16:12:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:38 AI_Player.update()	Search took18ms
2017-01-03 16:12:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:38 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:38 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:38 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:38 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:38 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:38 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:38 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:38 AI_Player.update()	update
2017-01-03 16:12:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:38 AI_Player.update()	Search took17ms
2017-01-03 16:12:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:38 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:38 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:38 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:38 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:38 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:38 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:38 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:38 AI_Player.update()	update
2017-01-03 16:12:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:38 AI_Player.update()	Search took17ms
2017-01-03 16:12:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:38 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:38 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:38 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:38 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:38 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:38 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:38 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:38 AI_Player.update()	update
2017-01-03 16:12:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:38 AI_Player.update()	Search took18ms
2017-01-03 16:12:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:38 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:38 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:38 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:38 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:38 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:38 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:38 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:38 AI_Player.update()	update
2017-01-03 16:12:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:38 AI_Player.update()	Search took18ms
2017-01-03 16:12:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:38 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:38 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:38 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:38 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:38 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:38 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:38 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:38 AI_Player.update()	update
2017-01-03 16:12:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:38 AI_Player.update()	Search took17ms
2017-01-03 16:12:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:38 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:38 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:38 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:38 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:38 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:38 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:38 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:38 AI_Player.update()	update
2017-01-03 16:12:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:38 AI_Player.update()	Search took17ms
2017-01-03 16:12:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:38 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:38 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:38 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:38 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:38 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:38 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:38 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:38 AI_Player.update()	update
2017-01-03 16:12:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:38 AI_Player.update()	Search took17ms
2017-01-03 16:12:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:38 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:38 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:38 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:38 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:38 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:38 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:38 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:39 AI_Player.update()	update
2017-01-03 16:12:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:39 AI_Player.update()	Search took17ms
2017-01-03 16:12:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:39 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:39 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:39 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:39 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:39 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:39 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:39 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:39 AI_Player.update()	update
2017-01-03 16:12:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:39 AI_Player.update()	Search took16ms
2017-01-03 16:12:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:39 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:39 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:39 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:39 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:39 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:39 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:39 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:39 AI_Player.update()	update
2017-01-03 16:12:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:39 AI_Player.update()	Search took17ms
2017-01-03 16:12:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:39 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:39 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:39 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:39 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:39 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:39 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:39 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:39 AI_Player.update()	update
2017-01-03 16:12:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:39 AI_Player.update()	Search took17ms
2017-01-03 16:12:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:39 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:39 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:39 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:39 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:39 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:39 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:39 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:39 AI_Player.update()	update
2017-01-03 16:12:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:39 AI_Player.update()	Search took17ms
2017-01-03 16:12:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:39 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:39 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:39 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:39 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:39 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:39 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:39 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:39 AI_Player.update()	update
2017-01-03 16:12:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:39 AI_Player.update()	Search took17ms
2017-01-03 16:12:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:39 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:39 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:39 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:39 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:39 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:39 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:39 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:39 AI_Player.update()	update
2017-01-03 16:12:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:39 AI_Player.update()	Search took17ms
2017-01-03 16:12:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:39 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:39 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:39 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:39 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:39 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:39 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:39 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:39 AI_Player.update()	update
2017-01-03 16:12:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:39 AI_Player.update()	Search took17ms
2017-01-03 16:12:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:39 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:39 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:39 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:39 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:39 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:39 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:39 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:40 AI_Player.update()	update
2017-01-03 16:12:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:40 AI_Player.update()	Search took18ms
2017-01-03 16:12:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:40 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:40 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:40 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:40 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:40 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:40 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:40 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:40 AI_Player.update()	update
2017-01-03 16:12:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:40 AI_Player.update()	Search took18ms
2017-01-03 16:12:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:40 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:40 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:40 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:40 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:40 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:40 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:40 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:40 AI_Player.update()	update
2017-01-03 16:12:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:40 AI_Player.update()	Search took17ms
2017-01-03 16:12:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:40 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:40 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:40 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:40 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:40 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:40 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:40 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:40 AI_Player.update()	update
2017-01-03 16:12:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:40 AI_Player.update()	Search took17ms
2017-01-03 16:12:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:40 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:40 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:40 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:40 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:40 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:40 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:40 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:40 AI_Player.update()	update
2017-01-03 16:12:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:40 AI_Player.update()	Search took18ms
2017-01-03 16:12:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:40 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:40 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:40 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:40 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:40 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:40 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:40 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:40 AI_Player.update()	update
2017-01-03 16:12:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:40 AI_Player.update()	Search took17ms
2017-01-03 16:12:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:40 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:40 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:40 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:40 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:40 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:40 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:40 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:40 AI_Player.update()	update
2017-01-03 16:12:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:40 AI_Player.update()	Search took18ms
2017-01-03 16:12:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:40 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:40 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:40 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:40 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:40 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:40 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:40 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:40 AI_Player.update()	update
2017-01-03 16:12:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:40 AI_Player.update()	Search took17ms
2017-01-03 16:12:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:40 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:40 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:40 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:40 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:40 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:40 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:40 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:40 AI_Player.update()	update
2017-01-03 16:12:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:41 AI_Player.update()	Search took18ms
2017-01-03 16:12:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:41 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:41 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:41 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:41 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:41 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:41 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:41 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:41 AI_Player.update()	update
2017-01-03 16:12:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:41 AI_Player.update()	Search took17ms
2017-01-03 16:12:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:41 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:41 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:41 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:41 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:41 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:41 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:41 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:41 AI_Player.update()	update
2017-01-03 16:12:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:41 AI_Player.update()	Search took17ms
2017-01-03 16:12:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:41 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:41 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:41 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:41 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:41 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:41 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:41 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:41 AI_Player.update()	update
2017-01-03 16:12:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:41 AI_Player.update()	Search took17ms
2017-01-03 16:12:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:41 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:41 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:41 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:41 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:41 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:41 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:41 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:41 AI_Player.update()	update
2017-01-03 16:12:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:41 AI_Player.update()	Search took17ms
2017-01-03 16:12:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:41 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:41 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:41 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:41 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:41 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:41 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:41 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:41 AI_Player.update()	update
2017-01-03 16:12:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:41 AI_Player.update()	Search took17ms
2017-01-03 16:12:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:41 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:41 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:41 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:41 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:41 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:41 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:41 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:41 AI_Player.update()	update
2017-01-03 16:12:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:41 AI_Player.update()	Search took17ms
2017-01-03 16:12:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:41 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:41 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:41 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:41 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:41 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:41 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:41 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:41 AI_Player.update()	update
2017-01-03 16:12:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:41 AI_Player.update()	Search took17ms
2017-01-03 16:12:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:41 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:41 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:41 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:41 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:41 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:41 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:41 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:41 AI_Player.update()	update
2017-01-03 16:12:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:41 AI_Player.update()	Search took17ms
2017-01-03 16:12:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:41 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:41 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:41 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:41 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:41 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:41 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:41 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:42 AI_Player.update()	update
2017-01-03 16:12:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:42 AI_Player.update()	Search took17ms
2017-01-03 16:12:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:42 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:42 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:42 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:42 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:42 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:42 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:42 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:42 AI_Player.update()	update
2017-01-03 16:12:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:42 AI_Player.update()	Search took17ms
2017-01-03 16:12:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:42 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:42 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:42 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:42 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:42 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:42 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:42 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:42 AI_Player.update()	update
2017-01-03 16:12:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:42 AI_Player.update()	Search took18ms
2017-01-03 16:12:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:42 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:42 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:42 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:42 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:42 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:42 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:42 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:42 AI_Player.update()	update
2017-01-03 16:12:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:42 AI_Player.update()	Search took17ms
2017-01-03 16:12:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:42 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:42 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:42 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:42 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:42 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:42 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:42 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:42 AI_Player.update()	update
2017-01-03 16:12:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:42 AI_Player.update()	Search took17ms
2017-01-03 16:12:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:42 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:42 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:42 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:42 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:42 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:42 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:42 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:42 AI_Player.update()	update
2017-01-03 16:12:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:42 AI_Player.update()	Search took18ms
2017-01-03 16:12:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:42 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:42 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:42 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:42 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:42 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:42 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:42 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:42 AI_Player.update()	update
2017-01-03 16:12:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:42 AI_Player.update()	Search took16ms
2017-01-03 16:12:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:42 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:42 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:42 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:42 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:42 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:42 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:42 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:42 AI_Player.update()	update
2017-01-03 16:12:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:42 AI_Player.update()	Search took17ms
2017-01-03 16:12:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:42 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:42 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:42 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:42 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:42 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:42 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:42 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:43 AI_Player.update()	update
2017-01-03 16:12:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:43 AI_Player.update()	Search took17ms
2017-01-03 16:12:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:43 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:43 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:43 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:43 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:43 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:43 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:43 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:43 AI_Player.update()	update
2017-01-03 16:12:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:43 AI_Player.update()	Search took17ms
2017-01-03 16:12:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:43 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:43 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:43 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:43 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:43 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:43 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:43 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:43 AI_Player.update()	update
2017-01-03 16:12:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:43 AI_Player.update()	Search took18ms
2017-01-03 16:12:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:43 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:43 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:43 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:43 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:43 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:43 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:43 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:43 AI_Player.update()	update
2017-01-03 16:12:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:43 AI_Player.update()	Search took18ms
2017-01-03 16:12:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:43 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:43 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:43 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:43 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:43 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:43 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:43 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:43 AI_Player.update()	update
2017-01-03 16:12:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:43 AI_Player.update()	Search took17ms
2017-01-03 16:12:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:43 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:43 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:43 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:43 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:43 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:43 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:43 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:43 AI_Player.update()	update
2017-01-03 16:12:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:43 AI_Player.update()	Search took17ms
2017-01-03 16:12:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:43 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:43 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:43 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:43 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:43 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:43 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:43 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:43 AI_Player.update()	update
2017-01-03 16:12:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:43 AI_Player.update()	Search took17ms
2017-01-03 16:12:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:43 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:43 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:43 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:43 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:43 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:43 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:43 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:43 AI_Player.update()	update
2017-01-03 16:12:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:43 AI_Player.update()	Search took18ms
2017-01-03 16:12:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:43 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:43 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:43 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:43 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:43 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:43 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:43 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:44 AI_Player.update()	update
2017-01-03 16:12:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:44 AI_Player.update()	Search took18ms
2017-01-03 16:12:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:44 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:44 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:44 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:44 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:44 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:44 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:44 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:44 AI_Player.update()	update
2017-01-03 16:12:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:44 AI_Player.update()	Search took17ms
2017-01-03 16:12:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:44 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:44 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:44 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:44 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:44 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:44 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:44 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:44 AI_Player.update()	update
2017-01-03 16:12:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:44 AI_Player.update()	Search took17ms
2017-01-03 16:12:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:44 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:44 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:44 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:44 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:44 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:44 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:44 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:44 AI_Player.update()	update
2017-01-03 16:12:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:44 AI_Player.update()	Search took17ms
2017-01-03 16:12:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:44 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:44 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:44 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:44 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:44 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:44 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:44 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:44 AI_Player.update()	update
2017-01-03 16:12:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:44 AI_Player.update()	Search took18ms
2017-01-03 16:12:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:44 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:44 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:44 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:44 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:44 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:44 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:44 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:44 AI_Player.update()	update
2017-01-03 16:12:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:44 AI_Player.update()	Search took18ms
2017-01-03 16:12:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:44 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:44 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:44 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:44 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:44 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:44 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:44 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:44 AI_Player.update()	update
2017-01-03 16:12:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:44 AI_Player.update()	Search took17ms
2017-01-03 16:12:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:44 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:44 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:44 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:44 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:44 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:44 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:44 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:44 AI_Player.update()	update
2017-01-03 16:12:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:44 AI_Player.update()	Search took17ms
2017-01-03 16:12:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:44 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:44 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:44 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:44 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:44 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:44 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:44 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:44 AI_Player.update()	update
2017-01-03 16:12:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:44 AI_Player.update()	Search took17ms
2017-01-03 16:12:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:44 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:44 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:44 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:44 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:44 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:44 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:44 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:45 AI_Player.update()	update
2017-01-03 16:12:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:45 AI_Player.update()	Search took18ms
2017-01-03 16:12:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:45 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:45 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:45 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:45 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:45 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:45 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:45 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:45 AI_Player.update()	update
2017-01-03 16:12:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:45 AI_Player.update()	Search took16ms
2017-01-03 16:12:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:45 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:45 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:45 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:45 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:45 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:45 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:45 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:45 AI_Player.update()	update
2017-01-03 16:12:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:45 AI_Player.update()	Search took17ms
2017-01-03 16:12:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:45 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:45 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:45 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:45 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:45 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:45 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:45 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:45 AI_Player.update()	update
2017-01-03 16:12:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:45 AI_Player.update()	Search took17ms
2017-01-03 16:12:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:45 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:45 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:45 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:45 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:45 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:45 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:45 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:45 AI_Player.update()	update
2017-01-03 16:12:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:45 AI_Player.update()	Search took17ms
2017-01-03 16:12:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:45 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:45 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:45 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:45 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:45 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:45 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:45 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:45 AI_Player.update()	update
2017-01-03 16:12:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:45 AI_Player.update()	Search took17ms
2017-01-03 16:12:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:45 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:45 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:45 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:45 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:45 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:45 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:45 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:45 AI_Player.update()	update
2017-01-03 16:12:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:45 AI_Player.update()	Search took17ms
2017-01-03 16:12:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:45 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:45 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:45 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:45 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:45 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:45 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:45 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:45 AI_Player.update()	update
2017-01-03 16:12:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:45 AI_Player.update()	Search took17ms
2017-01-03 16:12:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:45 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:45 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:45 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:45 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:45 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:45 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:45 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:46 AI_Player.update()	update
2017-01-03 16:12:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:46 AI_Player.update()	Search took19ms
2017-01-03 16:12:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:46 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:46 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:46 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:46 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:46 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:46 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:46 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:46 AI_Player.update()	update
2017-01-03 16:12:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:46 AI_Player.update()	Search took17ms
2017-01-03 16:12:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:46 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:46 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:46 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:46 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:46 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:46 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:46 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:46 AI_Player.update()	update
2017-01-03 16:12:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:46 AI_Player.update()	Search took17ms
2017-01-03 16:12:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:46 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:46 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:46 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:46 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:46 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:46 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:46 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:46 AI_Player.update()	update
2017-01-03 16:12:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:46 AI_Player.update()	Search took17ms
2017-01-03 16:12:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:46 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:46 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:46 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:46 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:46 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:46 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:46 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:46 AI_Player.update()	update
2017-01-03 16:12:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:46 AI_Player.update()	Search took17ms
2017-01-03 16:12:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:46 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:46 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:46 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:46 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:46 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:46 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:46 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:46 AI_Player.update()	update
2017-01-03 16:12:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:46 AI_Player.update()	Search took18ms
2017-01-03 16:12:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:46 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:46 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:46 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:46 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:46 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:46 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:46 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:46 AI_Player.update()	update
2017-01-03 16:12:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:46 AI_Player.update()	Search took17ms
2017-01-03 16:12:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:46 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:46 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:46 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:46 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:46 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:46 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:46 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:46 AI_Player.update()	update
2017-01-03 16:12:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:46 AI_Player.update()	Search took17ms
2017-01-03 16:12:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:46 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:46 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:46 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:46 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:46 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:46 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:46 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:47 AI_Player.update()	update
2017-01-03 16:12:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:47 AI_Player.update()	Search took17ms
2017-01-03 16:12:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:47 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:47 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:47 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:47 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:47 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:47 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:47 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:47 AI_Player.update()	update
2017-01-03 16:12:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:47 AI_Player.update()	Search took16ms
2017-01-03 16:12:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:47 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:47 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:47 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:47 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:47 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:47 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:47 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:47 AI_Player.update()	update
2017-01-03 16:12:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:47 AI_Player.update()	Search took17ms
2017-01-03 16:12:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:47 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:47 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:47 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:47 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:47 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:47 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:47 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:47 AI_Player.update()	update
2017-01-03 16:12:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:47 AI_Player.update()	Search took17ms
2017-01-03 16:12:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:47 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:47 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:47 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:47 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:47 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:47 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:47 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:47 AI_Player.update()	update
2017-01-03 16:12:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:47 AI_Player.update()	Search took17ms
2017-01-03 16:12:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:47 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:47 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:47 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:47 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:47 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:47 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:47 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:47 AI_Player.update()	update
2017-01-03 16:12:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:47 AI_Player.update()	Search took17ms
2017-01-03 16:12:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:47 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:47 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:47 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:47 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:47 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:47 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:47 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:47 AI_Player.update()	update
2017-01-03 16:12:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:47 AI_Player.update()	Search took18ms
2017-01-03 16:12:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:47 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:47 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:47 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:47 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:47 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:47 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:47 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:47 AI_Player.update()	update
2017-01-03 16:12:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:47 AI_Player.update()	Search took17ms
2017-01-03 16:12:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:47 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:47 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:47 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:47 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:47 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:47 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:47 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:48 AI_Player.update()	update
2017-01-03 16:12:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:48 AI_Player.update()	Search took18ms
2017-01-03 16:12:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:48 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:48 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:48 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:48 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:48 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:48 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:48 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:48 AI_Player.update()	update
2017-01-03 16:12:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:48 AI_Player.update()	Search took17ms
2017-01-03 16:12:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:48 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:48 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:48 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:48 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:48 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:48 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:48 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:48 AI_Player.update()	update
2017-01-03 16:12:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:48 AI_Player.update()	Search took17ms
2017-01-03 16:12:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:48 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:48 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:48 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:48 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:48 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:48 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:48 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:48 AI_Player.update()	update
2017-01-03 16:12:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:48 AI_Player.update()	Search took17ms
2017-01-03 16:12:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:48 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:48 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:48 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:48 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:48 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:48 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:48 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:48 AI_Player.update()	update
2017-01-03 16:12:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:48 AI_Player.update()	Search took17ms
2017-01-03 16:12:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:48 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:48 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:48 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:48 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:48 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:48 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:48 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:48 AI_Player.update()	update
2017-01-03 16:12:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:48 AI_Player.update()	Search took17ms
2017-01-03 16:12:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:48 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:48 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:48 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:48 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:48 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:48 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:48 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:48 AI_Player.update()	update
2017-01-03 16:12:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:48 AI_Player.update()	Search took17ms
2017-01-03 16:12:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:48 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:48 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:48 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:48 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:48 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:48 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:48 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:48 AI_Player.update()	update
2017-01-03 16:12:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:48 AI_Player.update()	Search took17ms
2017-01-03 16:12:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:48 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:48 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:48 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:48 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:48 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:48 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:48 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:49 AI_Player.update()	update
2017-01-03 16:12:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:49 AI_Player.update()	Search took17ms
2017-01-03 16:12:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:49 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:49 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:49 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:49 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:49 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:49 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:49 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:49 AI_Player.update()	update
2017-01-03 16:12:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:49 AI_Player.update()	Search took17ms
2017-01-03 16:12:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:49 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:49 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:49 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:49 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:49 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:49 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:49 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:49 AI_Player.update()	update
2017-01-03 16:12:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:49 AI_Player.update()	Search took17ms
2017-01-03 16:12:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:49 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:49 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:49 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:49 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:49 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:49 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:49 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:49 AI_Player.update()	update
2017-01-03 16:12:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:49 AI_Player.update()	Search took18ms
2017-01-03 16:12:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:49 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:49 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:49 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:49 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:49 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:49 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:49 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:49 AI_Player.update()	update
2017-01-03 16:12:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:49 AI_Player.update()	Search took18ms
2017-01-03 16:12:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:49 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:49 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:49 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:49 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:49 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:49 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:49 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:49 AI_Player.update()	update
2017-01-03 16:12:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:49 AI_Player.update()	Search took17ms
2017-01-03 16:12:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:49 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:49 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:49 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:49 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:49 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:49 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:49 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:49 AI_Player.update()	update
2017-01-03 16:12:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:49 AI_Player.update()	Search took17ms
2017-01-03 16:12:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:49 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:49 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:49 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:49 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:49 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:49 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:49 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:49 AI_Player.update()	update
2017-01-03 16:12:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:49 AI_Player.update()	Search took18ms
2017-01-03 16:12:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:49 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:49 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:49 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:49 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:49 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:49 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:49 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:49 AI_Player.update()	update
2017-01-03 16:12:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:50 AI_Player.update()	Search took17ms
2017-01-03 16:12:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:50 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:50 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:50 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:50 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:50 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:50 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:50 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:50 AI_Player.update()	update
2017-01-03 16:12:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:50 AI_Player.update()	Search took18ms
2017-01-03 16:12:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:50 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:50 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:50 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:50 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:50 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:50 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:50 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:50 AI_Player.update()	update
2017-01-03 16:12:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:50 AI_Player.update()	Search took18ms
2017-01-03 16:12:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:50 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:50 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:50 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:50 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:50 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:50 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:50 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:50 AI_Player.update()	update
2017-01-03 16:12:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:50 AI_Player.update()	Search took18ms
2017-01-03 16:12:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:50 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:50 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:50 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:50 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:50 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:50 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:50 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:50 AI_Player.update()	update
2017-01-03 16:12:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:50 AI_Player.update()	Search took17ms
2017-01-03 16:12:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:50 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:50 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:50 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:50 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:50 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:50 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:50 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:50 AI_Player.update()	update
2017-01-03 16:12:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:50 AI_Player.update()	Search took17ms
2017-01-03 16:12:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:50 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:50 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:50 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:50 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:50 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:50 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:50 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:50 AI_Player.update()	update
2017-01-03 16:12:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:50 AI_Player.update()	Search took19ms
2017-01-03 16:12:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:50 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:50 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:50 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:50 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:50 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:50 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:50 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:50 AI_Player.update()	update
2017-01-03 16:12:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:50 AI_Player.update()	Search took17ms
2017-01-03 16:12:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:50 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:50 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:50 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:50 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:50 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:50 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:50 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:50 AI_Player.update()	update
2017-01-03 16:12:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:50 AI_Player.update()	Search took17ms
2017-01-03 16:12:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:50 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:50 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:50 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:50 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:50 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:50 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:50 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:51 AI_Player.update()	update
2017-01-03 16:12:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:51 AI_Player.update()	Search took17ms
2017-01-03 16:12:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:51 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:51 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:51 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:51 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:51 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:51 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:51 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:51 AI_Player.update()	update
2017-01-03 16:12:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:51 AI_Player.update()	Search took17ms
2017-01-03 16:12:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:51 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:51 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:51 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:51 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:51 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:51 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:51 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:51 AI_Player.update()	update
2017-01-03 16:12:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:51 AI_Player.update()	Search took17ms
2017-01-03 16:12:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:51 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:51 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:51 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:51 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:51 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:51 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:51 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:51 AI_Player.update()	update
2017-01-03 16:12:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:51 AI_Player.update()	Search took18ms
2017-01-03 16:12:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:51 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:51 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:51 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:51 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:51 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:51 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:51 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:51 AI_Player.update()	update
2017-01-03 16:12:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:51 AI_Player.update()	Search took17ms
2017-01-03 16:12:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:51 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:51 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:51 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:51 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:51 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:51 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:51 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:51 AI_Player.update()	update
2017-01-03 16:12:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:51 AI_Player.update()	Search took17ms
2017-01-03 16:12:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:51 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:51 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:51 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:51 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:51 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:51 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:51 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:51 AI_Player.update()	update
2017-01-03 16:12:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:51 AI_Player.update()	Search took16ms
2017-01-03 16:12:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:51 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:51 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:51 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:51 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:51 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:51 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:51 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:51 AI_Player.update()	update
2017-01-03 16:12:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:51 AI_Player.update()	Search took18ms
2017-01-03 16:12:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:51 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:51 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:51 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:51 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:51 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:51 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:51 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:52 AI_Player.update()	update
2017-01-03 16:12:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:52 AI_Player.update()	Search took17ms
2017-01-03 16:12:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:52 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:52 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:52 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:52 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:52 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:52 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:52 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:52 AI_Player.update()	update
2017-01-03 16:12:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:52 AI_Player.update()	Search took17ms
2017-01-03 16:12:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:52 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:52 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:52 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:52 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:52 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:52 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:52 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:52 AI_Player.update()	update
2017-01-03 16:12:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:52 AI_Player.update()	Search took18ms
2017-01-03 16:12:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:52 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:52 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:52 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:52 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:52 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:52 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:52 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:52 AI_Player.update()	update
2017-01-03 16:12:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:52 AI_Player.update()	Search took17ms
2017-01-03 16:12:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:52 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:52 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:52 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:52 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:52 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:52 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:52 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:52 AI_Player.update()	update
2017-01-03 16:12:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:52 AI_Player.update()	Search took17ms
2017-01-03 16:12:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:52 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:52 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:52 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:52 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:52 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:52 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:52 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:52 AI_Player.update()	update
2017-01-03 16:12:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:52 AI_Player.update()	Search took17ms
2017-01-03 16:12:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:52 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:52 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:52 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:52 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:52 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:52 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:52 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:52 AI_Player.update()	update
2017-01-03 16:12:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:52 AI_Player.update()	Search took18ms
2017-01-03 16:12:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:52 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:52 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:52 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:52 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:52 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:52 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:52 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:52 AI_Player.update()	update
2017-01-03 16:12:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:52 AI_Player.update()	Search took17ms
2017-01-03 16:12:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:52 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:52 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:52 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:52 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:52 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:52 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:52 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:53 AI_Player.update()	update
2017-01-03 16:12:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:53 AI_Player.update()	Search took18ms
2017-01-03 16:12:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:53 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:53 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:53 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:53 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:53 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:53 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:53 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:53 AI_Player.update()	update
2017-01-03 16:12:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:53 AI_Player.update()	Search took17ms
2017-01-03 16:12:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:53 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:53 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:53 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:53 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:53 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:53 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:53 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:53 AI_Player.update()	update
2017-01-03 16:12:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:53 AI_Player.update()	Search took18ms
2017-01-03 16:12:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:53 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:53 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:53 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:53 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:53 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:53 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:53 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:53 AI_Player.update()	update
2017-01-03 16:12:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:53 AI_Player.update()	Search took18ms
2017-01-03 16:12:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:53 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:53 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:53 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:53 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:53 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:53 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:53 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:53 AI_Player.update()	update
2017-01-03 16:12:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:53 AI_Player.update()	Search took18ms
2017-01-03 16:12:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:53 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:53 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:53 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:53 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:53 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:53 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:53 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:53 AI_Player.update()	update
2017-01-03 16:12:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:53 AI_Player.update()	Search took17ms
2017-01-03 16:12:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:53 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:53 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:53 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:53 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:53 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:53 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:53 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:53 AI_Player.update()	update
2017-01-03 16:12:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:53 AI_Player.update()	Search took18ms
2017-01-03 16:12:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:53 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:53 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:53 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:53 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:53 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:53 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:53 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:53 AI_Player.update()	update
2017-01-03 16:12:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:53 AI_Player.update()	Search took17ms
2017-01-03 16:12:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:53 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:53 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:53 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:53 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:53 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:53 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:53 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:54 AI_Player.update()	update
2017-01-03 16:12:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:54 AI_Player.update()	Search took18ms
2017-01-03 16:12:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:54 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:54 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:54 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:54 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:54 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:54 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:54 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:54 AI_Player.update()	update
2017-01-03 16:12:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:54 AI_Player.update()	Search took17ms
2017-01-03 16:12:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:54 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:54 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:54 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:54 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:54 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:54 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:54 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:54 AI_Player.update()	update
2017-01-03 16:12:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:54 AI_Player.update()	Search took17ms
2017-01-03 16:12:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:54 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:54 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:54 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:54 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:54 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:54 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:54 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:54 AI_Player.update()	update
2017-01-03 16:12:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:54 AI_Player.update()	Search took17ms
2017-01-03 16:12:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:54 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:54 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:54 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:54 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:54 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:54 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:54 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:54 AI_Player.update()	update
2017-01-03 16:12:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:54 AI_Player.update()	Search took18ms
2017-01-03 16:12:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:54 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:54 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:54 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:54 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:54 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:54 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:54 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:54 AI_Player.update()	update
2017-01-03 16:12:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:54 AI_Player.update()	Search took17ms
2017-01-03 16:12:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:54 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:54 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:54 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:54 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:54 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:54 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:54 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:54 AI_Player.update()	update
2017-01-03 16:12:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:54 AI_Player.update()	Search took17ms
2017-01-03 16:12:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:54 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:54 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:54 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:54 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:54 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:54 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:54 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:54 AI_Player.update()	update
2017-01-03 16:12:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:54 AI_Player.update()	Search took17ms
2017-01-03 16:12:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:54 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:54 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:54 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:54 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:54 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:54 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:54 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:54 AI_Player.update()	update
2017-01-03 16:12:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:54 AI_Player.update()	Search took17ms
2017-01-03 16:12:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:54 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:54 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:54 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:54 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:54 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:54 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:54 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:55 AI_Player.update()	update
2017-01-03 16:12:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:55 AI_Player.update()	Search took17ms
2017-01-03 16:12:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:55 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:55 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:55 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:55 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:55 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:55 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:55 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:55 AI_Player.update()	update
2017-01-03 16:12:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:55 AI_Player.update()	Search took17ms
2017-01-03 16:12:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:55 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:55 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:55 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:55 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:55 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:55 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:55 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:55 AI_Player.update()	update
2017-01-03 16:12:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:55 AI_Player.update()	Search took18ms
2017-01-03 16:12:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:55 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:55 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:55 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:55 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:55 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:55 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:55 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:55 AI_Player.update()	update
2017-01-03 16:12:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:55 AI_Player.update()	Search took17ms
2017-01-03 16:12:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:55 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:55 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:55 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:55 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:55 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:55 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:55 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:55 AI_Player.update()	update
2017-01-03 16:12:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:55 AI_Player.update()	Search took18ms
2017-01-03 16:12:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:55 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:55 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:55 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:55 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:55 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:55 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:55 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:55 AI_Player.update()	update
2017-01-03 16:12:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:55 AI_Player.update()	Search took17ms
2017-01-03 16:12:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:55 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:55 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:55 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:55 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:55 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:55 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:55 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:55 AI_Player.update()	update
2017-01-03 16:12:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:55 AI_Player.update()	Search took17ms
2017-01-03 16:12:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:55 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:55 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:55 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:55 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:55 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:55 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:55 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:55 AI_Player.update()	update
2017-01-03 16:12:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:55 AI_Player.update()	Search took18ms
2017-01-03 16:12:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:55 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:55 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:55 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:55 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:55 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:55 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:55 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:56 AI_Player.update()	update
2017-01-03 16:12:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:56 AI_Player.update()	Search took18ms
2017-01-03 16:12:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:56 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:56 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:56 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:56 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:56 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:56 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:56 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:56 AI_Player.update()	update
2017-01-03 16:12:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:56 AI_Player.update()	Search took18ms
2017-01-03 16:12:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:56 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:56 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:56 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:56 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:56 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:56 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:56 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:56 AI_Player.update()	update
2017-01-03 16:12:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:56 AI_Player.update()	Search took18ms
2017-01-03 16:12:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:56 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:56 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:56 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:56 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:56 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:56 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:56 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:56 AI_Player.update()	update
2017-01-03 16:12:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:56 AI_Player.update()	Search took17ms
2017-01-03 16:12:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:56 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:56 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:56 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:56 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:56 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:56 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:56 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:56 AI_Player.update()	update
2017-01-03 16:12:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:56 AI_Player.update()	Search took18ms
2017-01-03 16:12:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:56 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:56 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:56 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:56 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:56 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:56 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:56 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:56 AI_Player.update()	update
2017-01-03 16:12:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:56 AI_Player.update()	Search took17ms
2017-01-03 16:12:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:56 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:56 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:56 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:56 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:56 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:56 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:56 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:56 AI_Player.update()	update
2017-01-03 16:12:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:56 AI_Player.update()	Search took17ms
2017-01-03 16:12:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:56 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:56 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:56 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:56 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:56 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:56 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:56 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:56 AI_Player.update()	update
2017-01-03 16:12:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:56 AI_Player.update()	Search took17ms
2017-01-03 16:12:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:56 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:56 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:56 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:56 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:56 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:56 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:56 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:57 AI_Player.update()	update
2017-01-03 16:12:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:57 AI_Player.update()	Search took17ms
2017-01-03 16:12:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:57 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:57 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:57 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:57 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:57 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:57 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:57 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:57 AI_Player.update()	update
2017-01-03 16:12:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:57 AI_Player.update()	Search took17ms
2017-01-03 16:12:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:57 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:57 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:57 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:57 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:57 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:57 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:57 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:57 AI_Player.update()	update
2017-01-03 16:12:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:57 AI_Player.update()	Search took17ms
2017-01-03 16:12:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:57 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:57 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:57 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:57 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:57 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:57 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:57 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:57 AI_Player.update()	update
2017-01-03 16:12:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:57 AI_Player.update()	Search took18ms
2017-01-03 16:12:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:57 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:57 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:57 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:57 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:57 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:57 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:57 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:57 AI_Player.update()	update
2017-01-03 16:12:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:57 AI_Player.update()	Search took17ms
2017-01-03 16:12:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:57 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:57 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:57 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:57 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:57 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:57 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:57 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:57 AI_Player.update()	update
2017-01-03 16:12:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:57 AI_Player.update()	Search took17ms
2017-01-03 16:12:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:57 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:57 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:57 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:57 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:57 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:57 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:57 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:57 AI_Player.update()	update
2017-01-03 16:12:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:57 AI_Player.update()	Search took17ms
2017-01-03 16:12:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:57 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:57 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:57 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:57 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:57 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:57 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:57 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:57 AI_Player.update()	update
2017-01-03 16:12:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:57 AI_Player.update()	Search took17ms
2017-01-03 16:12:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:57 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:57 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:57 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:57 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:57 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:57 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:57 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:58 AI_Player.update()	update
2017-01-03 16:12:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:58 AI_Player.update()	Search took18ms
2017-01-03 16:12:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:58 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:58 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:58 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:58 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:58 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:58 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:58 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:58 AI_Player.update()	update
2017-01-03 16:12:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:58 AI_Player.update()	Search took17ms
2017-01-03 16:12:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:58 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:58 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:58 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:58 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:58 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:58 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:58 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:58 AI_Player.update()	update
2017-01-03 16:12:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:58 AI_Player.update()	Search took17ms
2017-01-03 16:12:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:58 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:58 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:58 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:58 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:58 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:58 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:58 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:58 AI_Player.update()	update
2017-01-03 16:12:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:58 AI_Player.update()	Search took17ms
2017-01-03 16:12:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:58 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:58 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:58 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:58 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:58 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:58 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:58 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:58 AI_Player.update()	update
2017-01-03 16:12:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:58 AI_Player.update()	Search took17ms
2017-01-03 16:12:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:58 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:58 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:58 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:58 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:58 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:58 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:58 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:58 AI_Player.update()	update
2017-01-03 16:12:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:58 AI_Player.update()	Search took17ms
2017-01-03 16:12:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:58 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:58 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:58 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:58 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:58 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:58 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:58 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:58 AI_Player.update()	update
2017-01-03 16:12:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:58 AI_Player.update()	Search took17ms
2017-01-03 16:12:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:58 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:58 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:58 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:58 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:58 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:58 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:58 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:58 AI_Player.update()	update
2017-01-03 16:12:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:58 AI_Player.update()	Search took18ms
2017-01-03 16:12:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:58 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:58 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:58 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:58 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:58 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:58 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:58 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:59 AI_Player.update()	update
2017-01-03 16:12:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:59 AI_Player.update()	Search took17ms
2017-01-03 16:12:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:59 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:59 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:59 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:59 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:59 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:59 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:59 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:59 AI_Player.update()	update
2017-01-03 16:12:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:59 AI_Player.update()	Search took17ms
2017-01-03 16:12:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:59 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:59 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:59 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:59 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:59 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:59 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:59 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:59 AI_Player.update()	update
2017-01-03 16:12:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:59 AI_Player.update()	Search took59ms
2017-01-03 16:12:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:59 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:59 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:59 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:59 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:59 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:59 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:59 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:59 AI_Player.update()	update
2017-01-03 16:12:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:59 AI_Player.update()	Search took17ms
2017-01-03 16:12:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:59 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:59 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:59 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:59 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:59 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:59 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:59 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:59 AI_Player.update()	update
2017-01-03 16:12:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:59 AI_Player.update()	Search took17ms
2017-01-03 16:12:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:59 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:59 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:59 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:59 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:59 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:59 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:59 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:59 AI_Player.update()	update
2017-01-03 16:12:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:59 AI_Player.update()	Search took17ms
2017-01-03 16:12:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:59 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:59 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:59 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:59 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:59 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:59 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:59 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:59 AI_Player.update()	update
2017-01-03 16:12:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:59 AI_Player.update()	Search took18ms
2017-01-03 16:12:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:59 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:59 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:59 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:59 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:59 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:59 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:59 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:12:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:12:59 AI_Player.update()	update
2017-01-03 16:12:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:12:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:12:59 AI_Player.update()	Search took17ms
2017-01-03 16:12:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:12:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:59 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:12:59 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:12:59 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:12:59 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:12:59 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:12:59 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:12:59 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:12:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:12:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:12:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:12:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:12:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:12:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:12:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:12:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:00 AI_Player.update()	update
2017-01-03 16:13:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:00 AI_Player.update()	Search took18ms
2017-01-03 16:13:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:00 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:00 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:00 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:00 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:00 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:00 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:00 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:00 AI_Player.update()	update
2017-01-03 16:13:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:00 AI_Player.update()	Search took17ms
2017-01-03 16:13:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:00 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:00 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:00 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:00 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:00 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:00 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:00 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:00 AI_Player.update()	update
2017-01-03 16:13:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:00 AI_Player.update()	Search took17ms
2017-01-03 16:13:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:00 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:00 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:00 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:00 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:00 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:00 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:00 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:00 AI_Player.update()	update
2017-01-03 16:13:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:00 AI_Player.update()	Search took17ms
2017-01-03 16:13:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:00 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:00 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:00 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:00 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:00 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:00 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:00 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:00 AI_Player.update()	update
2017-01-03 16:13:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:00 AI_Player.update()	Search took18ms
2017-01-03 16:13:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:00 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:00 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:00 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:00 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:00 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:00 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:00 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:00 AI_Player.update()	update
2017-01-03 16:13:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:00 AI_Player.update()	Search took17ms
2017-01-03 16:13:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:00 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:00 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:00 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:00 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:00 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:00 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:00 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:00 AI_Player.update()	update
2017-01-03 16:13:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:00 AI_Player.update()	Search took17ms
2017-01-03 16:13:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:00 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:00 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:00 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:00 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:00 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:00 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:00 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:00 AI_Player.update()	update
2017-01-03 16:13:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:00 AI_Player.update()	Search took17ms
2017-01-03 16:13:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:00 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:00 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:00 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:00 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:00 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:00 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:00 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:00 AI_Player.update()	update
2017-01-03 16:13:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:00 AI_Player.update()	Search took17ms
2017-01-03 16:13:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:00 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:00 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:00 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:00 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:00 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:00 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:00 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:01 AI_Player.update()	update
2017-01-03 16:13:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:01 AI_Player.update()	Search took16ms
2017-01-03 16:13:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:01 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:01 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:01 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:01 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:01 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:01 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:01 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:01 AI_Player.update()	update
2017-01-03 16:13:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:01 AI_Player.update()	Search took17ms
2017-01-03 16:13:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:01 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:01 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:01 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:01 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:01 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:01 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:01 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:01 AI_Player.update()	update
2017-01-03 16:13:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:01 AI_Player.update()	Search took17ms
2017-01-03 16:13:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:01 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:01 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:01 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:01 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:01 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:01 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:01 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:01 AI_Player.update()	update
2017-01-03 16:13:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:01 AI_Player.update()	Search took17ms
2017-01-03 16:13:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:01 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:01 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:01 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:01 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:01 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:01 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:01 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:01 AI_Player.update()	update
2017-01-03 16:13:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:01 AI_Player.update()	Search took17ms
2017-01-03 16:13:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:01 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:01 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:01 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:01 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:01 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:01 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:01 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:01 AI_Player.update()	update
2017-01-03 16:13:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:01 AI_Player.update()	Search took17ms
2017-01-03 16:13:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:01 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:01 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:01 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:01 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:01 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:01 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:01 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:01 AI_Player.update()	update
2017-01-03 16:13:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:01 AI_Player.update()	Search took18ms
2017-01-03 16:13:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:01 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:01 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:01 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:01 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:01 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:01 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:01 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:01 AI_Player.update()	update
2017-01-03 16:13:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:01 AI_Player.update()	Search took17ms
2017-01-03 16:13:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:01 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:01 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:01 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:01 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:01 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:01 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:01 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:02 AI_Player.update()	update
2017-01-03 16:13:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:02 AI_Player.update()	Search took24ms
2017-01-03 16:13:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:02 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:02 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:02 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:02 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:02 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:02 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:02 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:02 AI_Player.update()	update
2017-01-03 16:13:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:02 AI_Player.update()	Search took17ms
2017-01-03 16:13:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:02 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:02 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:02 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:02 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:02 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:02 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:02 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:02 AI_Player.update()	update
2017-01-03 16:13:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:02 AI_Player.update()	Search took17ms
2017-01-03 16:13:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:02 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:02 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:02 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:02 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:02 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:02 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:02 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:02 AI_Player.update()	update
2017-01-03 16:13:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:02 AI_Player.update()	Search took17ms
2017-01-03 16:13:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:02 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:02 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:02 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:02 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:02 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:02 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:02 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:02 AI_Player.update()	update
2017-01-03 16:13:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:02 AI_Player.update()	Search took17ms
2017-01-03 16:13:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:02 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:02 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:02 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:02 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:02 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:02 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:02 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:02 AI_Player.update()	update
2017-01-03 16:13:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:02 AI_Player.update()	Search took18ms
2017-01-03 16:13:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:02 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:02 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:02 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:02 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:02 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:02 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:02 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:02 AI_Player.update()	update
2017-01-03 16:13:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:02 AI_Player.update()	Search took17ms
2017-01-03 16:13:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:02 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:02 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:02 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:02 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:02 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:02 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:02 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:02 AI_Player.update()	update
2017-01-03 16:13:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:02 AI_Player.update()	Search took18ms
2017-01-03 16:13:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:02 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:02 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:02 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:02 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:02 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:02 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:02 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:03 AI_Player.update()	update
2017-01-03 16:13:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:03 AI_Player.update()	Search took17ms
2017-01-03 16:13:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:03 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:03 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:03 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:03 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:03 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:03 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:03 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:03 AI_Player.update()	update
2017-01-03 16:13:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:03 AI_Player.update()	Search took17ms
2017-01-03 16:13:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:03 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:03 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:03 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:03 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:03 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:03 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:03 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:03 AI_Player.update()	update
2017-01-03 16:13:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:03 AI_Player.update()	Search took17ms
2017-01-03 16:13:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:03 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:03 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:03 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:03 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:03 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:03 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:03 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:03 AI_Player.update()	update
2017-01-03 16:13:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:03 AI_Player.update()	Search took17ms
2017-01-03 16:13:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:03 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:03 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:03 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:03 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:03 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:03 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:03 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:03 AI_Player.update()	update
2017-01-03 16:13:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:03 AI_Player.update()	Search took17ms
2017-01-03 16:13:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:03 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:03 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:03 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:03 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:03 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:03 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:03 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:03 AI_Player.update()	update
2017-01-03 16:13:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:03 AI_Player.update()	Search took17ms
2017-01-03 16:13:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:03 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:03 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:03 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:03 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:03 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:03 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:03 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:03 AI_Player.update()	update
2017-01-03 16:13:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:03 AI_Player.update()	Search took19ms
2017-01-03 16:13:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:03 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:03 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:03 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:03 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:03 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:03 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:03 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:03 AI_Player.update()	update
2017-01-03 16:13:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:03 AI_Player.update()	Search took17ms
2017-01-03 16:13:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:03 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:03 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:03 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:03 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:03 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:03 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:03 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:03 AI_Player.update()	update
2017-01-03 16:13:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:03 AI_Player.update()	Search took17ms
2017-01-03 16:13:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:03 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:03 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:03 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:03 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:03 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:03 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:03 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:04 AI_Player.update()	update
2017-01-03 16:13:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:04 AI_Player.update()	Search took17ms
2017-01-03 16:13:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:04 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:04 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:04 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:04 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:04 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:04 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:04 AI_Player.update()	update
2017-01-03 16:13:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:04 AI_Player.update()	Search took17ms
2017-01-03 16:13:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:04 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:04 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:04 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:04 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:04 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:04 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:04 AI_Player.update()	update
2017-01-03 16:13:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:04 AI_Player.update()	Search took17ms
2017-01-03 16:13:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:04 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:04 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:04 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:04 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:04 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:04 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:04 AI_Player.update()	update
2017-01-03 16:13:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:04 AI_Player.update()	Search took17ms
2017-01-03 16:13:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:04 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:04 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:04 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:04 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:04 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:04 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:04 AI_Player.update()	update
2017-01-03 16:13:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:04 AI_Player.update()	Search took17ms
2017-01-03 16:13:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:04 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:04 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:04 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:04 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:04 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:04 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:04 AI_Player.update()	update
2017-01-03 16:13:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:04 AI_Player.update()	Search took73ms
2017-01-03 16:13:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:04 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:04 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:04 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:04 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:04 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:04 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:04 AI_Player.update()	update
2017-01-03 16:13:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:04 AI_Player.update()	Search took17ms
2017-01-03 16:13:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:04 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:04 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:04 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:04 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:04 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:04 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:04 AI_Player.update()	update
2017-01-03 16:13:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:05 AI_Player.update()	Search took17ms
2017-01-03 16:13:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:05 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:05 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:05 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:05 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:05 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:05 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:05 AI_Player.update()	update
2017-01-03 16:13:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:05 AI_Player.update()	Search took17ms
2017-01-03 16:13:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:05 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:05 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:05 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:05 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:05 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:05 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:05 AI_Player.update()	update
2017-01-03 16:13:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:05 AI_Player.update()	Search took17ms
2017-01-03 16:13:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:05 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:05 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:05 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:05 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:05 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:05 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:05 AI_Player.update()	update
2017-01-03 16:13:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:05 AI_Player.update()	Search took17ms
2017-01-03 16:13:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:05 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:05 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:05 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:05 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:05 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:05 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:05 AI_Player.update()	update
2017-01-03 16:13:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:05 AI_Player.update()	Search took17ms
2017-01-03 16:13:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:05 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:05 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:05 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:05 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:05 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:05 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:05 AI_Player.update()	update
2017-01-03 16:13:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:05 AI_Player.update()	Search took18ms
2017-01-03 16:13:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:05 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:05 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:05 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:05 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:05 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:05 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:05 AI_Player.update()	update
2017-01-03 16:13:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:05 AI_Player.update()	Search took17ms
2017-01-03 16:13:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:05 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:05 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:05 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:05 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:05 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:05 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:05 AI_Player.update()	update
2017-01-03 16:13:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:05 AI_Player.update()	Search took18ms
2017-01-03 16:13:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:05 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:05 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:05 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:05 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:05 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:05 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:05 AI_Player.update()	update
2017-01-03 16:13:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:05 AI_Player.update()	Search took18ms
2017-01-03 16:13:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:05 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:05 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:05 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:05 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:05 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:05 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:06 AI_Player.update()	update
2017-01-03 16:13:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:06 AI_Player.update()	Search took18ms
2017-01-03 16:13:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:06 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:06 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:06 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:06 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:06 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:06 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:06 AI_Player.update()	update
2017-01-03 16:13:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:06 AI_Player.update()	Search took18ms
2017-01-03 16:13:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:06 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:06 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:06 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:06 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:06 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:06 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:06 AI_Player.update()	update
2017-01-03 16:13:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:06 AI_Player.update()	Search took17ms
2017-01-03 16:13:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:06 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:06 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:06 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:06 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:06 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:06 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:06 AI_Player.update()	update
2017-01-03 16:13:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:06 AI_Player.update()	Search took17ms
2017-01-03 16:13:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:06 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:06 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:06 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:06 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:06 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:06 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:06 AI_Player.update()	update
2017-01-03 16:13:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:06 AI_Player.update()	Search took17ms
2017-01-03 16:13:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:06 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:06 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:06 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:06 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:06 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:06 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:06 AI_Player.update()	update
2017-01-03 16:13:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:06 AI_Player.update()	Search took17ms
2017-01-03 16:13:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:06 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:06 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:06 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:06 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:06 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:06 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:06 AI_Player.update()	update
2017-01-03 16:13:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:06 AI_Player.update()	Search took17ms
2017-01-03 16:13:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:06 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:06 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:06 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:06 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:06 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:06 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:06 AI_Player.update()	update
2017-01-03 16:13:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:06 AI_Player.update()	Search took19ms
2017-01-03 16:13:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:06 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:06 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:06 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:06 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:06 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:06 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:07 AI_Player.update()	update
2017-01-03 16:13:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:07 AI_Player.update()	Search took18ms
2017-01-03 16:13:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:07 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:07 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:07 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:07 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:07 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:07 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:07 AI_Player.update()	update
2017-01-03 16:13:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:07 AI_Player.update()	Search took18ms
2017-01-03 16:13:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:07 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:07 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:07 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:07 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:07 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:07 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:07 AI_Player.update()	update
2017-01-03 16:13:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:07 AI_Player.update()	Search took17ms
2017-01-03 16:13:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:07 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:07 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:07 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:07 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:07 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:07 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:07 AI_Player.update()	update
2017-01-03 16:13:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:07 AI_Player.update()	Search took17ms
2017-01-03 16:13:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:07 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:07 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:07 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:07 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:07 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:07 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:07 AI_Player.update()	update
2017-01-03 16:13:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:07 AI_Player.update()	Search took17ms
2017-01-03 16:13:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:07 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:07 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:07 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:07 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:07 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:07 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:07 AI_Player.update()	update
2017-01-03 16:13:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:07 AI_Player.update()	Search took18ms
2017-01-03 16:13:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:07 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:07 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:07 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:07 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:07 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:07 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:07 AI_Player.update()	update
2017-01-03 16:13:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:07 AI_Player.update()	Search took17ms
2017-01-03 16:13:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:07 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:07 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:07 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:07 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:07 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:07 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:07 AI_Player.update()	update
2017-01-03 16:13:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:07 AI_Player.update()	Search took17ms
2017-01-03 16:13:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:07 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:07 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:07 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:07 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:07 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:07 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:08 AI_Player.update()	update
2017-01-03 16:13:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:08 AI_Player.update()	Search took17ms
2017-01-03 16:13:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:08 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:08 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:08 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:08 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:08 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:08 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:08 AI_Player.update()	update
2017-01-03 16:13:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:08 AI_Player.update()	Search took17ms
2017-01-03 16:13:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:08 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:08 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:08 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:08 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:08 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:08 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:08 AI_Player.update()	update
2017-01-03 16:13:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:08 AI_Player.update()	Search took18ms
2017-01-03 16:13:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:08 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:08 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:08 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:08 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:08 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:08 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:08 AI_Player.update()	update
2017-01-03 16:13:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:08 AI_Player.update()	Search took18ms
2017-01-03 16:13:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:08 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:08 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:08 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:08 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:08 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:08 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:08 AI_Player.update()	update
2017-01-03 16:13:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:08 AI_Player.update()	Search took17ms
2017-01-03 16:13:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:08 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:08 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:08 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:08 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:08 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:08 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:08 AI_Player.update()	update
2017-01-03 16:13:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:08 AI_Player.update()	Search took17ms
2017-01-03 16:13:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:08 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:08 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:08 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:08 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:08 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:08 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:08 AI_Player.update()	update
2017-01-03 16:13:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:08 AI_Player.update()	Search took17ms
2017-01-03 16:13:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:08 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:08 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:08 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:08 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:08 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:08 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:08 AI_Player.update()	update
2017-01-03 16:13:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:08 AI_Player.update()	Search took18ms
2017-01-03 16:13:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:08 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:08 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:08 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:08 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:08 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:08 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:08 AI_Player.update()	update
2017-01-03 16:13:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:09 AI_Player.update()	Search took17ms
2017-01-03 16:13:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:09 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:09 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:09 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:09 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:09 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:09 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:09 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:09 AI_Player.update()	update
2017-01-03 16:13:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:09 AI_Player.update()	Search took18ms
2017-01-03 16:13:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:09 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:09 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:09 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:09 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:09 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:09 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:09 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:09 AI_Player.update()	update
2017-01-03 16:13:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:09 AI_Player.update()	Search took18ms
2017-01-03 16:13:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:09 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:09 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:09 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:09 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:09 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:09 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:09 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:09 AI_Player.update()	update
2017-01-03 16:13:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:09 AI_Player.update()	Search took17ms
2017-01-03 16:13:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:09 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:09 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:09 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:09 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:09 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:09 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:09 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:09 AI_Player.update()	update
2017-01-03 16:13:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:09 AI_Player.update()	Search took17ms
2017-01-03 16:13:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:09 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:09 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:09 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:09 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:09 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:09 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:09 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:09 AI_Player.update()	update
2017-01-03 16:13:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:09 AI_Player.update()	Search took17ms
2017-01-03 16:13:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:09 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:09 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:09 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:09 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:09 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:09 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:09 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:09 AI_Player.update()	update
2017-01-03 16:13:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:09 AI_Player.update()	Search took17ms
2017-01-03 16:13:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:09 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:09 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:09 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:09 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:09 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:09 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:09 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:09 AI_Player.update()	update
2017-01-03 16:13:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:09 AI_Player.update()	Search took17ms
2017-01-03 16:13:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:09 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:09 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:09 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:09 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:09 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:09 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:09 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:09 AI_Player.update()	update
2017-01-03 16:13:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:09 AI_Player.update()	Search took17ms
2017-01-03 16:13:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:09 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:09 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:09 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:09 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:09 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:09 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:09 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:10 AI_Player.update()	update
2017-01-03 16:13:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:10 AI_Player.update()	Search took17ms
2017-01-03 16:13:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:10 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:10 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:10 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:10 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:10 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:10 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:10 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:10 AI_Player.update()	update
2017-01-03 16:13:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:10 AI_Player.update()	Search took18ms
2017-01-03 16:13:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:10 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:10 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:10 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:10 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:10 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:10 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:10 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:10 AI_Player.update()	update
2017-01-03 16:13:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:10 AI_Player.update()	Search took17ms
2017-01-03 16:13:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:10 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:10 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:10 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:10 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:10 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:10 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:10 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:10 AI_Player.update()	update
2017-01-03 16:13:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:10 AI_Player.update()	Search took18ms
2017-01-03 16:13:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:10 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:10 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:10 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:10 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:10 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:10 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:10 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:10 AI_Player.update()	update
2017-01-03 16:13:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:10 AI_Player.update()	Search took17ms
2017-01-03 16:13:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:10 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:10 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:10 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:10 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:10 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:10 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:10 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:10 AI_Player.update()	update
2017-01-03 16:13:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:10 AI_Player.update()	Search took17ms
2017-01-03 16:13:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:10 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:10 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:10 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:10 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:10 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:10 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:10 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:10 AI_Player.update()	update
2017-01-03 16:13:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:10 AI_Player.update()	Search took18ms
2017-01-03 16:13:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:10 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:10 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:10 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:10 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:10 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:10 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:10 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:10 AI_Player.update()	update
2017-01-03 16:13:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:10 AI_Player.update()	Search took18ms
2017-01-03 16:13:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:10 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:10 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:10 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:10 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:10 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:10 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:10 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:11 AI_Player.update()	update
2017-01-03 16:13:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:11 AI_Player.update()	Search took17ms
2017-01-03 16:13:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:11 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:11 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:11 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:11 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:11 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:11 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:11 AI_Player.update()	update
2017-01-03 16:13:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:11 AI_Player.update()	Search took17ms
2017-01-03 16:13:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:11 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:11 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:11 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:11 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:11 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:11 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:11 AI_Player.update()	update
2017-01-03 16:13:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:11 AI_Player.update()	Search took18ms
2017-01-03 16:13:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:11 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:11 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:11 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:11 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:11 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:11 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:11 AI_Player.update()	update
2017-01-03 16:13:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:11 AI_Player.update()	Search took17ms
2017-01-03 16:13:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:11 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:11 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:11 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:11 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:11 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:11 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:11 AI_Player.update()	update
2017-01-03 16:13:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:11 AI_Player.update()	Search took18ms
2017-01-03 16:13:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:11 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:11 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:11 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:11 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:11 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:11 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:11 AI_Player.update()	update
2017-01-03 16:13:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:11 AI_Player.update()	Search took17ms
2017-01-03 16:13:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:11 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:11 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:11 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:11 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:11 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:11 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:11 AI_Player.update()	update
2017-01-03 16:13:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:11 AI_Player.update()	Search took17ms
2017-01-03 16:13:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:11 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:11 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:11 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:11 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:11 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:11 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:11 AI_Player.update()	update
2017-01-03 16:13:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:11 AI_Player.update()	Search took18ms
2017-01-03 16:13:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:11 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:11 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:11 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:11 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:11 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:11 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:11 AI_Player.update()	update
2017-01-03 16:13:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:12 AI_Player.update()	Search took17ms
2017-01-03 16:13:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:12 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:12 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:12 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:12 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:12 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:12 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:12 AI_Player.update()	update
2017-01-03 16:13:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:12 AI_Player.update()	Search took18ms
2017-01-03 16:13:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:12 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:12 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:12 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:12 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:12 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:12 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:12 AI_Player.update()	update
2017-01-03 16:13:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:12 AI_Player.update()	Search took17ms
2017-01-03 16:13:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:12 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:12 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:12 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:12 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:12 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:12 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:12 AI_Player.update()	update
2017-01-03 16:13:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:12 AI_Player.update()	Search took17ms
2017-01-03 16:13:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:12 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:12 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:12 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:12 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:12 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:12 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:12 AI_Player.update()	update
2017-01-03 16:13:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:12 AI_Player.update()	Search took18ms
2017-01-03 16:13:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:12 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:12 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:12 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:12 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:12 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:12 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:12 AI_Player.update()	update
2017-01-03 16:13:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:12 AI_Player.update()	Search took17ms
2017-01-03 16:13:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:12 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:12 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:12 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:12 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:12 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:12 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:12 AI_Player.update()	update
2017-01-03 16:13:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:12 AI_Player.update()	Search took17ms
2017-01-03 16:13:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:12 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:12 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:12 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:12 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:12 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:12 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:12 AI_Player.update()	update
2017-01-03 16:13:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:12 AI_Player.update()	Search took17ms
2017-01-03 16:13:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:12 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:12 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:12 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:12 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:12 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:12 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:12 AI_Player.update()	update
2017-01-03 16:13:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:12 AI_Player.update()	Search took17ms
2017-01-03 16:13:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:12 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:12 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:12 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:12 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:12 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:12 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:13 AI_Player.update()	update
2017-01-03 16:13:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:13 AI_Player.update()	Search took17ms
2017-01-03 16:13:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:13 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:13 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:13 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:13 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:13 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:13 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:13 AI_Player.update()	update
2017-01-03 16:13:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:13 AI_Player.update()	Search took18ms
2017-01-03 16:13:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:13 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:13 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:13 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:13 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:13 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:13 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:13 AI_Player.update()	update
2017-01-03 16:13:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:13 AI_Player.update()	Search took17ms
2017-01-03 16:13:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:13 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:13 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:13 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:13 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:13 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:13 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:13 AI_Player.update()	update
2017-01-03 16:13:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:13 AI_Player.update()	Search took17ms
2017-01-03 16:13:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:13 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:13 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:13 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:13 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:13 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:13 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:13 AI_Player.update()	update
2017-01-03 16:13:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:13 AI_Player.update()	Search took17ms
2017-01-03 16:13:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:13 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:13 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:13 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:13 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:13 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:13 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:13 AI_Player.update()	update
2017-01-03 16:13:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:13 AI_Player.update()	Search took17ms
2017-01-03 16:13:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:13 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:13 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:13 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:13 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:13 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:13 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:13 AI_Player.update()	update
2017-01-03 16:13:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:13 AI_Player.update()	Search took17ms
2017-01-03 16:13:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:13 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:13 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:13 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:13 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:13 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:13 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:13 AI_Player.update()	update
2017-01-03 16:13:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:13 AI_Player.update()	Search took18ms
2017-01-03 16:13:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:13 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:13 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:13 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:13 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:13 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:13 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:14 AI_Player.update()	update
2017-01-03 16:13:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:14 AI_Player.update()	Search took17ms
2017-01-03 16:13:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:14 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:14 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:14 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:14 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:14 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:14 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:14 AI_Player.update()	update
2017-01-03 16:13:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:14 AI_Player.update()	Search took18ms
2017-01-03 16:13:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:14 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:14 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:14 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:14 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:14 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:14 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:14 AI_Player.update()	update
2017-01-03 16:13:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:14 AI_Player.update()	Search took17ms
2017-01-03 16:13:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:14 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:14 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:14 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:14 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:14 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:14 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:14 AI_Player.update()	update
2017-01-03 16:13:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:14 AI_Player.update()	Search took18ms
2017-01-03 16:13:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:14 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:14 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:14 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:14 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:14 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:14 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:14 AI_Player.update()	update
2017-01-03 16:13:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:14 AI_Player.update()	Search took16ms
2017-01-03 16:13:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:14 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:14 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:14 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:14 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:14 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:14 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:14 AI_Player.update()	update
2017-01-03 16:13:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:14 AI_Player.update()	Search took17ms
2017-01-03 16:13:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:14 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:14 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:14 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:14 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:14 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:14 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:14 AI_Player.update()	update
2017-01-03 16:13:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:14 AI_Player.update()	Search took17ms
2017-01-03 16:13:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:14 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:14 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:14 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:14 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:14 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:14 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:14 AI_Player.update()	update
2017-01-03 16:13:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:14 AI_Player.update()	Search took17ms
2017-01-03 16:13:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:14 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:14 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:14 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:14 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:14 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:14 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:15 AI_Player.update()	update
2017-01-03 16:13:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:15 AI_Player.update()	Search took17ms
2017-01-03 16:13:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:15 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:15 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:15 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:15 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:15 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:15 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:15 AI_Player.update()	update
2017-01-03 16:13:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:15 AI_Player.update()	Search took17ms
2017-01-03 16:13:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:15 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:15 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:15 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:15 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:15 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:15 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:15 AI_Player.update()	update
2017-01-03 16:13:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:15 AI_Player.update()	Search took17ms
2017-01-03 16:13:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:15 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:15 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:15 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:15 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:15 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:15 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:15 AI_Player.update()	update
2017-01-03 16:13:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:15 AI_Player.update()	Search took17ms
2017-01-03 16:13:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:15 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:15 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:15 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:15 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:15 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:15 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:15 AI_Player.update()	update
2017-01-03 16:13:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:15 AI_Player.update()	Search took18ms
2017-01-03 16:13:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:15 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:15 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:15 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:15 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:15 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:15 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:15 AI_Player.update()	update
2017-01-03 16:13:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:15 AI_Player.update()	Search took18ms
2017-01-03 16:13:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:15 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:15 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:15 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:15 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:15 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:15 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:15 AI_Player.update()	update
2017-01-03 16:13:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:15 AI_Player.update()	Search took17ms
2017-01-03 16:13:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:15 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:15 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:15 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:15 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:15 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:15 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:15 AI_Player.update()	update
2017-01-03 16:13:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:15 AI_Player.update()	Search took18ms
2017-01-03 16:13:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:15 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:15 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:15 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:15 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:15 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:15 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:16 AI_Player.update()	update
2017-01-03 16:13:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:16 AI_Player.update()	Search took17ms
2017-01-03 16:13:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:16 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:16 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:16 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:16 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:16 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:16 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:16 AI_Player.update()	update
2017-01-03 16:13:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:16 AI_Player.update()	Search took17ms
2017-01-03 16:13:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:16 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:16 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:16 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:16 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:16 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:16 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:16 AI_Player.update()	update
2017-01-03 16:13:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:16 AI_Player.update()	Search took17ms
2017-01-03 16:13:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:16 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:16 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:16 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:16 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:16 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:16 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:16 AI_Player.update()	update
2017-01-03 16:13:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:16 AI_Player.update()	Search took17ms
2017-01-03 16:13:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:16 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:16 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:16 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:16 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:16 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:16 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:16 AI_Player.update()	update
2017-01-03 16:13:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:16 AI_Player.update()	Search took17ms
2017-01-03 16:13:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:16 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:16 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:16 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:16 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:16 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:16 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:16 AI_Player.update()	update
2017-01-03 16:13:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:16 AI_Player.update()	Search took17ms
2017-01-03 16:13:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:16 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:16 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:16 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:16 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:16 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:16 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:16 AI_Player.update()	update
2017-01-03 16:13:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:16 AI_Player.update()	Search took18ms
2017-01-03 16:13:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:16 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:16 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:16 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:16 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:16 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:16 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:16 AI_Player.update()	update
2017-01-03 16:13:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:16 AI_Player.update()	Search took17ms
2017-01-03 16:13:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:16 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:16 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:16 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:16 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:16 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:16 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:17 AI_Player.update()	update
2017-01-03 16:13:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:17 AI_Player.update()	Search took17ms
2017-01-03 16:13:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:17 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:17 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:17 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:17 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:17 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:17 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:17 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:17 AI_Player.update()	update
2017-01-03 16:13:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:17 AI_Player.update()	Search took17ms
2017-01-03 16:13:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:17 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:17 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:17 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:17 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:17 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:17 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:17 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:17 AI_Player.update()	update
2017-01-03 16:13:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:17 AI_Player.update()	Search took18ms
2017-01-03 16:13:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:17 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:17 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:17 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:17 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:17 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:17 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:17 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:17 AI_Player.update()	update
2017-01-03 16:13:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:17 AI_Player.update()	Search took17ms
2017-01-03 16:13:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:17 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:17 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:17 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:17 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:17 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:17 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:17 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:17 AI_Player.update()	update
2017-01-03 16:13:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:17 AI_Player.update()	Search took17ms
2017-01-03 16:13:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:17 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:17 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:17 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:17 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:17 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:17 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:17 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:17 AI_Player.update()	update
2017-01-03 16:13:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:17 AI_Player.update()	Search took17ms
2017-01-03 16:13:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:17 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:17 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:17 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:17 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:17 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:17 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:17 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:17 AI_Player.update()	update
2017-01-03 16:13:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:17 AI_Player.update()	Search took17ms
2017-01-03 16:13:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:17 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:17 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:17 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:17 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:17 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:17 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:17 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:17 AI_Player.update()	update
2017-01-03 16:13:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:17 AI_Player.update()	Search took18ms
2017-01-03 16:13:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:17 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:17 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:17 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:17 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:17 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:17 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:17 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:17 AI_Player.update()	update
2017-01-03 16:13:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:17 AI_Player.update()	Search took18ms
2017-01-03 16:13:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:17 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:17 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:17 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:17 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:17 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:17 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:17 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:18 AI_Player.update()	update
2017-01-03 16:13:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:18 AI_Player.update()	Search took17ms
2017-01-03 16:13:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:18 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:18 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:18 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:18 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:18 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:18 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:18 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:18 AI_Player.update()	update
2017-01-03 16:13:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:18 AI_Player.update()	Search took17ms
2017-01-03 16:13:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:18 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:18 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:18 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:18 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:18 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:18 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:18 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:18 AI_Player.update()	update
2017-01-03 16:13:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:18 AI_Player.update()	Search took18ms
2017-01-03 16:13:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:18 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:18 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:18 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:18 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:18 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:18 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:18 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:18 AI_Player.update()	update
2017-01-03 16:13:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:18 AI_Player.update()	Search took17ms
2017-01-03 16:13:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:18 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:18 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:18 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:18 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:18 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:18 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:18 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:18 AI_Player.update()	update
2017-01-03 16:13:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:18 AI_Player.update()	Search took17ms
2017-01-03 16:13:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:18 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:18 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:18 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:18 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:18 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:18 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:18 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:18 AI_Player.update()	update
2017-01-03 16:13:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:18 AI_Player.update()	Search took17ms
2017-01-03 16:13:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:18 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:18 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:18 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:18 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:18 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:18 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:18 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:18 AI_Player.update()	update
2017-01-03 16:13:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:18 AI_Player.update()	Search took17ms
2017-01-03 16:13:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:18 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:18 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:18 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:18 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:18 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:18 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:18 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:18 AI_Player.update()	update
2017-01-03 16:13:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:18 AI_Player.update()	Search took17ms
2017-01-03 16:13:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:18 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:18 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:18 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:18 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:18 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:18 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:18 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:19 AI_Player.update()	update
2017-01-03 16:13:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:19 AI_Player.update()	Search took17ms
2017-01-03 16:13:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:19 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:19 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:19 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:19 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:19 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:19 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:19 AI_Player.update()	update
2017-01-03 16:13:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:19 AI_Player.update()	Search took17ms
2017-01-03 16:13:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:19 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:19 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:19 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:19 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:19 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:19 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:19 AI_Player.update()	update
2017-01-03 16:13:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:19 AI_Player.update()	Search took17ms
2017-01-03 16:13:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:19 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:19 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:19 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:19 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:19 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:19 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:19 AI_Player.update()	update
2017-01-03 16:13:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:19 AI_Player.update()	Search took17ms
2017-01-03 16:13:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:19 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:19 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:19 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:19 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:19 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:19 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:19 AI_Player.update()	update
2017-01-03 16:13:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:19 AI_Player.update()	Search took17ms
2017-01-03 16:13:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:19 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:19 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:19 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:19 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:19 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:19 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:19 AI_Player.update()	update
2017-01-03 16:13:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:19 AI_Player.update()	Search took18ms
2017-01-03 16:13:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:19 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:19 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:19 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:19 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:19 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:19 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:19 AI_Player.update()	update
2017-01-03 16:13:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:19 AI_Player.update()	Search took18ms
2017-01-03 16:13:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:19 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:19 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:19 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:19 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:19 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:19 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:19 AI_Player.update()	update
2017-01-03 16:13:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:19 AI_Player.update()	Search took17ms
2017-01-03 16:13:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:19 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:19 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:19 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:19 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:19 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:19 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:19 AI_Player.update()	update
2017-01-03 16:13:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:20 AI_Player.update()	Search took17ms
2017-01-03 16:13:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:20 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:20 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:20 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:20 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:20 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:20 AI_Player.update()	update
2017-01-03 16:13:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:20 AI_Player.update()	Search took17ms
2017-01-03 16:13:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:20 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:20 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:20 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:20 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:20 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:20 AI_Player.update()	update
2017-01-03 16:13:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:20 AI_Player.update()	Search took17ms
2017-01-03 16:13:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:20 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:20 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:20 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:20 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:20 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:20 AI_Player.update()	update
2017-01-03 16:13:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:20 AI_Player.update()	Search took17ms
2017-01-03 16:13:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:20 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:20 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:20 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:20 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:20 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:20 AI_Player.update()	update
2017-01-03 16:13:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:20 AI_Player.update()	Search took17ms
2017-01-03 16:13:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:20 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:20 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:20 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:20 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:20 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:20 AI_Player.update()	update
2017-01-03 16:13:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:20 AI_Player.update()	Search took18ms
2017-01-03 16:13:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:20 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:20 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:20 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:20 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:20 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:20 AI_Player.update()	update
2017-01-03 16:13:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:20 AI_Player.update()	Search took17ms
2017-01-03 16:13:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:20 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:20 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:20 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:20 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:20 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:20 AI_Player.update()	update
2017-01-03 16:13:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:20 AI_Player.update()	Search took18ms
2017-01-03 16:13:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:20 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:20 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:20 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:20 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:20 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:20 AI_Player.update()	update
2017-01-03 16:13:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:20 AI_Player.update()	Search took18ms
2017-01-03 16:13:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:20 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:20 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:20 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:20 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:20 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:21 AI_Player.update()	update
2017-01-03 16:13:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:21 AI_Player.update()	Search took17ms
2017-01-03 16:13:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:21 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:21 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:21 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:21 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:21 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:21 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:21 AI_Player.update()	update
2017-01-03 16:13:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:21 AI_Player.update()	Search took17ms
2017-01-03 16:13:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:21 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:21 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:21 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:21 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:21 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:21 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:21 AI_Player.update()	update
2017-01-03 16:13:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:21 AI_Player.update()	Search took18ms
2017-01-03 16:13:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:21 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:21 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:21 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:21 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:21 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:21 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:21 AI_Player.update()	update
2017-01-03 16:13:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:21 AI_Player.update()	Search took17ms
2017-01-03 16:13:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:21 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:21 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:21 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:21 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:21 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:21 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:21 AI_Player.update()	update
2017-01-03 16:13:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:21 AI_Player.update()	Search took17ms
2017-01-03 16:13:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:21 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:21 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:21 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:21 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:21 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:21 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:21 AI_Player.update()	update
2017-01-03 16:13:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:21 AI_Player.update()	Search took18ms
2017-01-03 16:13:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:21 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:21 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:21 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:21 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:21 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:21 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:21 AI_Player.update()	update
2017-01-03 16:13:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:21 AI_Player.update()	Search took17ms
2017-01-03 16:13:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:21 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:21 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:21 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:21 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:21 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:21 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:21 AI_Player.update()	update
2017-01-03 16:13:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:21 AI_Player.update()	Search took17ms
2017-01-03 16:13:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:21 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:21 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:21 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:21 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:21 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:21 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:22 AI_Player.update()	update
2017-01-03 16:13:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:22 AI_Player.update()	Search took17ms
2017-01-03 16:13:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:22 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:22 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:22 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:22 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:22 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:22 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:22 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:22 AI_Player.update()	update
2017-01-03 16:13:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:22 AI_Player.update()	Search took17ms
2017-01-03 16:13:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:22 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:22 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:22 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:22 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:22 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:22 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:22 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:22 AI_Player.update()	update
2017-01-03 16:13:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:22 AI_Player.update()	Search took17ms
2017-01-03 16:13:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:22 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:22 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:22 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:22 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:22 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:22 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:22 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:22 AI_Player.update()	update
2017-01-03 16:13:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:22 AI_Player.update()	Search took17ms
2017-01-03 16:13:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:22 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:22 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:22 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:22 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:22 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:22 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:22 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:22 AI_Player.update()	update
2017-01-03 16:13:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:22 AI_Player.update()	Search took17ms
2017-01-03 16:13:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:22 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:22 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:22 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:22 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:22 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:22 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:22 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:22 AI_Player.update()	update
2017-01-03 16:13:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:22 AI_Player.update()	Search took17ms
2017-01-03 16:13:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:22 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:22 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:22 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:22 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:22 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:22 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:22 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:22 AI_Player.update()	update
2017-01-03 16:13:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:22 AI_Player.update()	Search took17ms
2017-01-03 16:13:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:22 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:22 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:22 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:22 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:22 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:22 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:22 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:22 AI_Player.update()	update
2017-01-03 16:13:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:23 AI_Player.update()	Search took17ms
2017-01-03 16:13:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:23 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:23 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:23 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:23 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:23 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:23 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:23 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:23 AI_Player.update()	update
2017-01-03 16:13:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:23 AI_Player.update()	Search took18ms
2017-01-03 16:13:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:23 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:23 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:23 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:23 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:23 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:23 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:23 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:23 AI_Player.update()	update
2017-01-03 16:13:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:23 AI_Player.update()	Search took17ms
2017-01-03 16:13:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:23 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:23 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:23 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:23 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:23 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:23 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:23 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:23 AI_Player.update()	update
2017-01-03 16:13:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:23 AI_Player.update()	Search took20ms
2017-01-03 16:13:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:23 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:23 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:23 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:23 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:23 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:23 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:23 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:23 AI_Player.update()	update
2017-01-03 16:13:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:23 AI_Player.update()	Search took18ms
2017-01-03 16:13:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:23 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:23 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:23 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:23 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:23 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:23 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:23 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:23 AI_Player.update()	update
2017-01-03 16:13:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:23 AI_Player.update()	Search took18ms
2017-01-03 16:13:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:23 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:23 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:23 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:23 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:23 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:23 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:23 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:23 AI_Player.update()	update
2017-01-03 16:13:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:23 AI_Player.update()	Search took17ms
2017-01-03 16:13:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:23 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:23 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:23 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:23 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:23 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:23 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:23 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:23 AI_Player.update()	update
2017-01-03 16:13:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:23 AI_Player.update()	Search took18ms
2017-01-03 16:13:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:23 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:23 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:23 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:23 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:23 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:23 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:23 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:24 AI_Player.update()	update
2017-01-03 16:13:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:24 AI_Player.update()	Search took25ms
2017-01-03 16:13:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:24 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:24 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:24 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:24 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:24 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:24 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:24 AI_Player.update()	update
2017-01-03 16:13:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:24 AI_Player.update()	Search took16ms
2017-01-03 16:13:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:24 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:24 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:24 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:24 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:24 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:24 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:24 AI_Player.update()	update
2017-01-03 16:13:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:24 AI_Player.update()	Search took23ms
2017-01-03 16:13:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:24 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:24 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:24 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:24 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:24 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:24 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:24 AI_Player.update()	update
2017-01-03 16:13:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:24 AI_Player.update()	Search took20ms
2017-01-03 16:13:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:24 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:24 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:24 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:24 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:24 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:24 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:24 AI_Player.update()	update
2017-01-03 16:13:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:24 AI_Player.update()	Search took20ms
2017-01-03 16:13:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:24 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:24 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:24 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:24 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:24 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:24 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:24 AI_Player.update()	update
2017-01-03 16:13:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:24 AI_Player.update()	Search took21ms
2017-01-03 16:13:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:24 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:24 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:24 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:24 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:24 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:24 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:24 AI_Player.update()	update
2017-01-03 16:13:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:24 AI_Player.update()	Search took19ms
2017-01-03 16:13:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:24 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:24 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:24 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:24 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:24 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:24 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:24 AI_Player.update()	update
2017-01-03 16:13:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:24 AI_Player.update()	Search took21ms
2017-01-03 16:13:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:24 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:24 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:24 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:24 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:24 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:24 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:25 AI_Player.update()	update
2017-01-03 16:13:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:25 AI_Player.update()	Search took18ms
2017-01-03 16:13:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:25 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:25 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:25 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:25 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:25 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:25 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:25 AI_Player.update()	update
2017-01-03 16:13:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:25 AI_Player.update()	Search took17ms
2017-01-03 16:13:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:25 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:25 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:25 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:25 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:25 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:25 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:25 AI_Player.update()	update
2017-01-03 16:13:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:25 AI_Player.update()	Search took18ms
2017-01-03 16:13:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:25 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:25 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:25 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:25 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:25 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:25 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:25 AI_Player.update()	update
2017-01-03 16:13:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:25 AI_Player.update()	Search took17ms
2017-01-03 16:13:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:25 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:25 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:25 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:25 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:25 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:25 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:25 AI_Player.update()	update
2017-01-03 16:13:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:25 AI_Player.update()	Search took17ms
2017-01-03 16:13:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:25 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:25 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:25 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:25 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:25 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:25 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:25 AI_Player.update()	update
2017-01-03 16:13:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:25 AI_Player.update()	Search took17ms
2017-01-03 16:13:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:25 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:25 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:25 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:25 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:25 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:25 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:25 AI_Player.update()	update
2017-01-03 16:13:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:25 AI_Player.update()	Search took18ms
2017-01-03 16:13:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:25 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:25 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:25 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:25 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:25 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:25 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:25 AI_Player.update()	update
2017-01-03 16:13:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:25 AI_Player.update()	Search took17ms
2017-01-03 16:13:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:25 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:25 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:25 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:25 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:25 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:25 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:25 AI_Player.update()	update
2017-01-03 16:13:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:26 AI_Player.update()	Search took17ms
2017-01-03 16:13:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:26 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:26 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:26 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:26 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:26 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:26 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:26 AI_Player.update()	update
2017-01-03 16:13:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:26 AI_Player.update()	Search took17ms
2017-01-03 16:13:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:26 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:26 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:26 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:26 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:26 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:26 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:26 AI_Player.update()	update
2017-01-03 16:13:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:26 AI_Player.update()	Search took18ms
2017-01-03 16:13:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:26 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:26 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:26 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:26 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:26 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:26 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:26 AI_Player.update()	update
2017-01-03 16:13:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:26 AI_Player.update()	Search took17ms
2017-01-03 16:13:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:26 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:26 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:26 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:26 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:26 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:26 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:26 AI_Player.update()	update
2017-01-03 16:13:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:26 AI_Player.update()	Search took17ms
2017-01-03 16:13:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:26 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:26 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:26 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:26 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:26 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:26 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:26 AI_Player.update()	update
2017-01-03 16:13:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:26 AI_Player.update()	Search took17ms
2017-01-03 16:13:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:26 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:26 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:26 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:26 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:26 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:26 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:26 AI_Player.update()	update
2017-01-03 16:13:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:26 AI_Player.update()	Search took18ms
2017-01-03 16:13:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:26 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:26 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:26 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:26 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:26 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:26 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:26 AI_Player.update()	update
2017-01-03 16:13:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:26 AI_Player.update()	Search took17ms
2017-01-03 16:13:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:26 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:26 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:26 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:26 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:26 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:26 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:26 AI_Player.update()	update
2017-01-03 16:13:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:26 AI_Player.update()	Search took17ms
2017-01-03 16:13:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:26 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:26 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:26 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:26 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:26 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:26 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:27 AI_Player.update()	update
2017-01-03 16:13:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:27 AI_Player.update()	Search took17ms
2017-01-03 16:13:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:27 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:27 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:27 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:27 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:27 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:27 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:27 AI_Player.update()	update
2017-01-03 16:13:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:27 AI_Player.update()	Search took17ms
2017-01-03 16:13:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:27 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:27 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:27 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:27 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:27 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:27 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:27 AI_Player.update()	update
2017-01-03 16:13:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:27 AI_Player.update()	Search took18ms
2017-01-03 16:13:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:27 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:27 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:27 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:27 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:27 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:27 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:27 AI_Player.update()	update
2017-01-03 16:13:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:27 AI_Player.update()	Search took18ms
2017-01-03 16:13:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:27 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:27 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:27 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:27 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:27 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:27 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:27 AI_Player.update()	update
2017-01-03 16:13:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:27 AI_Player.update()	Search took17ms
2017-01-03 16:13:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:27 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:27 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:27 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:27 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:27 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:27 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:27 AI_Player.update()	update
2017-01-03 16:13:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:27 AI_Player.update()	Search took18ms
2017-01-03 16:13:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:27 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:27 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:27 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:27 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:27 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:27 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:27 AI_Player.update()	update
2017-01-03 16:13:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:27 AI_Player.update()	Search took18ms
2017-01-03 16:13:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:27 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:27 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:27 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:27 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:27 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:27 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:27 AI_Player.update()	update
2017-01-03 16:13:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:27 AI_Player.update()	Search took18ms
2017-01-03 16:13:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:27 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:27 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:27 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:27 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:27 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:27 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:28 AI_Player.update()	update
2017-01-03 16:13:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:28 AI_Player.update()	Search took17ms
2017-01-03 16:13:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:28 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:28 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:28 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:28 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:28 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:28 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:28 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:28 AI_Player.update()	update
2017-01-03 16:13:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:28 AI_Player.update()	Search took17ms
2017-01-03 16:13:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:28 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:28 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:28 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:28 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:28 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:28 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:28 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:28 AI_Player.update()	update
2017-01-03 16:13:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:28 AI_Player.update()	Search took17ms
2017-01-03 16:13:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:28 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:28 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:28 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:28 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:28 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:28 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:28 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:28 AI_Player.update()	update
2017-01-03 16:13:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:28 AI_Player.update()	Search took18ms
2017-01-03 16:13:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:28 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:28 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:28 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:28 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:28 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:28 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:28 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:28 AI_Player.update()	update
2017-01-03 16:13:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:28 AI_Player.update()	Search took17ms
2017-01-03 16:13:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:28 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:28 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:28 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:28 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:28 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:28 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:28 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:28 AI_Player.update()	update
2017-01-03 16:13:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:28 AI_Player.update()	Search took17ms
2017-01-03 16:13:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:28 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:28 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:28 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:28 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:28 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:28 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:28 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:28 AI_Player.update()	update
2017-01-03 16:13:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:28 AI_Player.update()	Search took18ms
2017-01-03 16:13:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:28 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:28 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:28 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:28 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:28 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:28 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:28 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:28 AI_Player.update()	update
2017-01-03 16:13:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:28 AI_Player.update()	Search took17ms
2017-01-03 16:13:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:28 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:28 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:28 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:28 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:28 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:28 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:28 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:29 AI_Player.update()	update
2017-01-03 16:13:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:29 AI_Player.update()	Search took18ms
2017-01-03 16:13:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:29 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:29 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:29 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:29 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:29 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:29 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:29 AI_Player.update()	update
2017-01-03 16:13:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:29 AI_Player.update()	Search took17ms
2017-01-03 16:13:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:29 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:29 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:29 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:29 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:29 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:29 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:29 AI_Player.update()	update
2017-01-03 16:13:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:29 AI_Player.update()	Search took17ms
2017-01-03 16:13:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:29 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:29 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:29 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:29 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:29 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:29 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:29 AI_Player.update()	update
2017-01-03 16:13:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:29 AI_Player.update()	Search took17ms
2017-01-03 16:13:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:29 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:29 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:29 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:29 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:29 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:29 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:29 AI_Player.update()	update
2017-01-03 16:13:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:29 AI_Player.update()	Search took18ms
2017-01-03 16:13:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:29 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:29 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:29 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:29 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:29 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:29 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:29 AI_Player.update()	update
2017-01-03 16:13:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:29 AI_Player.update()	Search took17ms
2017-01-03 16:13:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:29 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:29 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:29 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:29 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:29 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:29 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:29 AI_Player.update()	update
2017-01-03 16:13:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:29 AI_Player.update()	Search took17ms
2017-01-03 16:13:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:29 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:29 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:29 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:29 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:29 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:29 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:29 AI_Player.update()	update
2017-01-03 16:13:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:29 AI_Player.update()	Search took17ms
2017-01-03 16:13:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:29 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:29 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:29 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:29 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:29 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:29 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:29 AI_Player.update()	update
2017-01-03 16:13:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:29 AI_Player.update()	Search took16ms
2017-01-03 16:13:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:29 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:29 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:29 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:29 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:29 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:29 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:30 AI_Player.update()	update
2017-01-03 16:13:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:30 AI_Player.update()	Search took17ms
2017-01-03 16:13:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:30 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:30 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:30 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:30 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:30 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:30 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:30 AI_Player.update()	update
2017-01-03 16:13:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:30 AI_Player.update()	Search took17ms
2017-01-03 16:13:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:30 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:30 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:30 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:30 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:30 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:30 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:30 AI_Player.update()	update
2017-01-03 16:13:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:30 AI_Player.update()	Search took17ms
2017-01-03 16:13:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:30 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:30 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:30 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:30 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:30 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:30 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:30 AI_Player.update()	update
2017-01-03 16:13:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:30 AI_Player.update()	Search took17ms
2017-01-03 16:13:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:30 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:30 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:30 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:30 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:30 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:30 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:30 AI_Player.update()	update
2017-01-03 16:13:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:30 AI_Player.update()	Search took17ms
2017-01-03 16:13:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:30 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:30 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:30 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:30 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:30 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:30 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:30 AI_Player.update()	update
2017-01-03 16:13:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:30 AI_Player.update()	Search took17ms
2017-01-03 16:13:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:30 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:30 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:30 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:30 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:30 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:30 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:30 AI_Player.update()	update
2017-01-03 16:13:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:30 AI_Player.update()	Search took17ms
2017-01-03 16:13:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:30 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:30 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:30 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:30 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:30 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:30 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:30 AI_Player.update()	update
2017-01-03 16:13:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:30 AI_Player.update()	Search took17ms
2017-01-03 16:13:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:30 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:30 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:30 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:30 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:30 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:30 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:31 AI_Player.update()	update
2017-01-03 16:13:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:31 AI_Player.update()	Search took17ms
2017-01-03 16:13:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:31 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:31 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:31 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:31 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:31 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:31 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:31 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:31 AI_Player.update()	update
2017-01-03 16:13:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:31 AI_Player.update()	Search took17ms
2017-01-03 16:13:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:31 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:31 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:31 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:31 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:31 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:31 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:31 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:31 AI_Player.update()	update
2017-01-03 16:13:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:31 AI_Player.update()	Search took18ms
2017-01-03 16:13:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:31 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:31 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:31 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:31 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:31 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:31 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:31 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:31 AI_Player.update()	update
2017-01-03 16:13:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:31 AI_Player.update()	Search took17ms
2017-01-03 16:13:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:31 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:31 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:31 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:31 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:31 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:31 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:31 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:31 AI_Player.update()	update
2017-01-03 16:13:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:31 AI_Player.update()	Search took17ms
2017-01-03 16:13:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:31 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:31 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:31 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:31 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:31 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:31 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:31 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:31 AI_Player.update()	update
2017-01-03 16:13:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:31 AI_Player.update()	Search took17ms
2017-01-03 16:13:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:31 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:31 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:31 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:31 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:31 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:31 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:31 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:31 AI_Player.update()	update
2017-01-03 16:13:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:31 AI_Player.update()	Search took17ms
2017-01-03 16:13:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:31 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:31 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:31 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:31 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:31 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:31 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:31 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:31 AI_Player.update()	update
2017-01-03 16:13:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:31 AI_Player.update()	Search took18ms
2017-01-03 16:13:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:31 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:31 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:31 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:31 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:31 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:31 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:31 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:32 AI_Player.update()	update
2017-01-03 16:13:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:32 AI_Player.update()	Search took18ms
2017-01-03 16:13:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:32 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:32 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:32 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:32 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:32 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:32 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:32 AI_Player.update()	update
2017-01-03 16:13:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:32 AI_Player.update()	Search took17ms
2017-01-03 16:13:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:32 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:32 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:32 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:32 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:32 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:32 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:32 AI_Player.update()	update
2017-01-03 16:13:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:32 AI_Player.update()	Search took18ms
2017-01-03 16:13:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:32 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:32 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:32 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:32 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:32 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:32 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:32 AI_Player.update()	update
2017-01-03 16:13:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:32 AI_Player.update()	Search took17ms
2017-01-03 16:13:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:32 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:32 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:32 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:32 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:32 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:32 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:32 AI_Player.update()	update
2017-01-03 16:13:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:32 AI_Player.update()	Search took17ms
2017-01-03 16:13:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:32 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:32 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:32 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:32 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:32 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:32 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:32 AI_Player.update()	update
2017-01-03 16:13:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:32 AI_Player.update()	Search took17ms
2017-01-03 16:13:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:32 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:32 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:32 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:32 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:32 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:32 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:32 AI_Player.update()	update
2017-01-03 16:13:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:32 AI_Player.update()	Search took17ms
2017-01-03 16:13:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:32 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:32 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:32 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:32 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:32 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:32 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:32 AI_Player.update()	update
2017-01-03 16:13:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:32 AI_Player.update()	Search took18ms
2017-01-03 16:13:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:32 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:32 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:32 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:32 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:32 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:32 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:32 AI_Player.update()	update
2017-01-03 16:13:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:32 AI_Player.update()	Search took18ms
2017-01-03 16:13:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:32 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:32 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:32 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:32 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:32 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:32 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:33 AI_Player.update()	update
2017-01-03 16:13:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:33 AI_Player.update()	Search took17ms
2017-01-03 16:13:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:33 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:33 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:33 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:33 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:33 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:33 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:33 AI_Player.update()	update
2017-01-03 16:13:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:33 AI_Player.update()	Search took17ms
2017-01-03 16:13:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:33 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:33 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:33 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:33 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:33 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:33 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:33 AI_Player.update()	update
2017-01-03 16:13:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:33 AI_Player.update()	Search took17ms
2017-01-03 16:13:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:33 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:33 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:33 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:33 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:33 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:33 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:33 AI_Player.update()	update
2017-01-03 16:13:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:33 AI_Player.update()	Search took17ms
2017-01-03 16:13:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:33 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:33 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:33 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:33 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:33 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:33 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:33 AI_Player.update()	update
2017-01-03 16:13:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:33 AI_Player.update()	Search took17ms
2017-01-03 16:13:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:33 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:33 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:33 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:33 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:33 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:33 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:33 AI_Player.update()	update
2017-01-03 16:13:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:33 AI_Player.update()	Search took17ms
2017-01-03 16:13:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:33 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:33 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:33 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:33 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:33 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:33 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:33 AI_Player.update()	update
2017-01-03 16:13:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:33 AI_Player.update()	Search took17ms
2017-01-03 16:13:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:33 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:33 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:33 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:33 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:33 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:33 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:33 AI_Player.update()	update
2017-01-03 16:13:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:33 AI_Player.update()	Search took18ms
2017-01-03 16:13:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:33 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:33 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:33 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:33 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:33 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:33 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:34 AI_Player.update()	update
2017-01-03 16:13:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:34 AI_Player.update()	Search took17ms
2017-01-03 16:13:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:34 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:34 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:34 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:34 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:34 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:34 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:34 AI_Player.update()	update
2017-01-03 16:13:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:34 AI_Player.update()	Search took17ms
2017-01-03 16:13:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:34 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:34 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:34 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:34 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:34 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:34 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:34 AI_Player.update()	update
2017-01-03 16:13:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:34 AI_Player.update()	Search took17ms
2017-01-03 16:13:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:34 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:34 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:34 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:34 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:34 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:34 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:34 AI_Player.update()	update
2017-01-03 16:13:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:34 AI_Player.update()	Search took18ms
2017-01-03 16:13:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:34 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:34 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:34 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:34 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:34 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:34 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:34 AI_Player.update()	update
2017-01-03 16:13:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:34 AI_Player.update()	Search took17ms
2017-01-03 16:13:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:34 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:34 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:34 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:34 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:34 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:34 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:34 AI_Player.update()	update
2017-01-03 16:13:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:34 AI_Player.update()	Search took17ms
2017-01-03 16:13:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:34 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:34 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:34 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:34 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:34 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:34 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:34 AI_Player.update()	update
2017-01-03 16:13:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:34 AI_Player.update()	Search took17ms
2017-01-03 16:13:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:34 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:34 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:34 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:34 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:34 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:34 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:34 AI_Player.update()	update
2017-01-03 16:13:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:34 AI_Player.update()	Search took18ms
2017-01-03 16:13:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:34 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:34 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:34 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:34 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:34 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:34 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:35 AI_Player.update()	update
2017-01-03 16:13:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:35 AI_Player.update()	Search took17ms
2017-01-03 16:13:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:35 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:35 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:35 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:35 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:35 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:35 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:35 AI_Player.update()	update
2017-01-03 16:13:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:35 AI_Player.update()	Search took17ms
2017-01-03 16:13:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:35 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:35 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:35 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:35 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:35 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:35 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:35 AI_Player.update()	update
2017-01-03 16:13:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:35 AI_Player.update()	Search took17ms
2017-01-03 16:13:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:35 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:35 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:35 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:35 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:35 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:35 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:35 AI_Player.update()	update
2017-01-03 16:13:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:35 AI_Player.update()	Search took17ms
2017-01-03 16:13:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:35 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:35 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:35 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:35 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:35 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:35 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:35 AI_Player.update()	update
2017-01-03 16:13:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:35 AI_Player.update()	Search took18ms
2017-01-03 16:13:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:35 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:35 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:35 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:35 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:35 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:35 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:35 AI_Player.update()	update
2017-01-03 16:13:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:35 AI_Player.update()	Search took17ms
2017-01-03 16:13:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:35 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:35 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:35 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:35 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:35 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:35 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:35 AI_Player.update()	update
2017-01-03 16:13:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:35 AI_Player.update()	Search took17ms
2017-01-03 16:13:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:35 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:35 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:35 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:35 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:35 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:35 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:35 AI_Player.update()	update
2017-01-03 16:13:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:35 AI_Player.update()	Search took19ms
2017-01-03 16:13:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:35 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:35 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:35 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:35 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:35 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:35 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:35 AI_Player.update()	update
2017-01-03 16:13:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:35 AI_Player.update()	Search took17ms
2017-01-03 16:13:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:35 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:35 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:35 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:35 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:35 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:35 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:36 AI_Player.update()	update
2017-01-03 16:13:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:36 AI_Player.update()	Search took18ms
2017-01-03 16:13:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:36 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:36 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:36 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:36 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:36 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:36 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:36 AI_Player.update()	update
2017-01-03 16:13:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:36 AI_Player.update()	Search took17ms
2017-01-03 16:13:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:36 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:36 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:36 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:36 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:36 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:36 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:36 AI_Player.update()	update
2017-01-03 16:13:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:36 AI_Player.update()	Search took18ms
2017-01-03 16:13:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:36 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:36 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:36 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:36 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:36 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:36 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:36 AI_Player.update()	update
2017-01-03 16:13:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:36 AI_Player.update()	Search took16ms
2017-01-03 16:13:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:36 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:36 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:36 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:36 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:36 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:36 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:36 AI_Player.update()	update
2017-01-03 16:13:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:36 AI_Player.update()	Search took17ms
2017-01-03 16:13:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:36 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:36 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:36 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:36 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:36 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:36 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:36 AI_Player.update()	update
2017-01-03 16:13:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:36 AI_Player.update()	Search took17ms
2017-01-03 16:13:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:36 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:36 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:36 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:36 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:36 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:36 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:36 AI_Player.update()	update
2017-01-03 16:13:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:36 AI_Player.update()	Search took18ms
2017-01-03 16:13:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:36 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:36 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:36 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:36 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:36 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:36 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:36 AI_Player.update()	update
2017-01-03 16:13:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:36 AI_Player.update()	Search took17ms
2017-01-03 16:13:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:36 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:36 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:36 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:36 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:36 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:36 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:37 AI_Player.update()	update
2017-01-03 16:13:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:37 AI_Player.update()	Search took17ms
2017-01-03 16:13:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:37 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:37 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:37 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:37 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:37 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:37 AI_Player.update()	update
2017-01-03 16:13:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:37 AI_Player.update()	Search took18ms
2017-01-03 16:13:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:37 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:37 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:37 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:37 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:37 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:37 AI_Player.update()	update
2017-01-03 16:13:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:37 AI_Player.update()	Search took19ms
2017-01-03 16:13:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:37 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:37 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:37 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:37 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:37 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:37 AI_Player.update()	update
2017-01-03 16:13:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:37 AI_Player.update()	Search took16ms
2017-01-03 16:13:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:37 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:37 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:37 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:37 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:37 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:37 AI_Player.update()	update
2017-01-03 16:13:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:37 AI_Player.update()	Search took18ms
2017-01-03 16:13:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:37 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:37 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:37 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:37 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:37 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:37 AI_Player.update()	update
2017-01-03 16:13:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:37 AI_Player.update()	Search took17ms
2017-01-03 16:13:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:37 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:37 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:37 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:37 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:37 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:37 AI_Player.update()	update
2017-01-03 16:13:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:37 AI_Player.update()	Search took17ms
2017-01-03 16:13:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:37 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:37 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:37 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:37 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:37 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:37 AI_Player.update()	update
2017-01-03 16:13:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:37 AI_Player.update()	Search took18ms
2017-01-03 16:13:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:37 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:37 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:37 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:37 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:37 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:38 AI_Player.update()	update
2017-01-03 16:13:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:38 AI_Player.update()	Search took17ms
2017-01-03 16:13:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:38 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:38 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:38 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:38 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:38 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:38 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:38 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:38 AI_Player.update()	update
2017-01-03 16:13:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 16:13:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). failed
2017-01-03 16:13:38 AI_Player.update()	Search took17ms
2017-01-03 16:13:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:38 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 16:13:38 AI_Player.update()		111,	101,	1100,	110,	1010,	1010,	1101
2017-01-03 16:13:38 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 16:13:38 AI_Player.update()		1100,	1010,	101,	1010,	1010,	110,	1101
2017-01-03 16:13:38 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 16:13:38 AI_Player.update()		101,	1010,	1001,	1001,	111,	110,	1010
2017-01-03 16:13:38 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-03 16:13:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 16:13:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:38 QueryProlog.requestShiftRight()	try_to_shift_row_right( 2 ) suceeded
2017-01-03 16:13:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:38 AI_Player.update()	update
2017-01-03 16:13:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 16:13:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). failed
2017-01-03 16:13:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 16:13:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:39 GameBoard$ClickAction.checkPieces()	2.0 2.0 
2017-01-03 16:13:39 QueryProlog.getCurrentPlayer()	get_current_player(Player). suceeded
2017-01-03 16:13:39 QueryProlog.canMove()	player(a,_,I/J). suceeded
2017-01-03 16:13:39 GameBoard$ClickAction.checkPieces()	Can move
2017-01-03 16:13:39 QueryProlog.tryAndMove()	move_player(a,2/2). suceeded
2017-01-03 16:13:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:39 AI_Player.update()	update
2017-01-03 16:13:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:39 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:40 AI_Player.update()	update
2017-01-03 16:13:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:40 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:40 AI_Player.update()	update
2017-01-03 16:13:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:40 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:40 AI_Player.update()	update
2017-01-03 16:13:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:40 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:40 AI_Player.update()	update
2017-01-03 16:13:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:40 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:40 AI_Player.update()	update
2017-01-03 16:13:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:40 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:40 AI_Player.update()	update
2017-01-03 16:13:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:40 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:40 AI_Player.update()	update
2017-01-03 16:13:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:40 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:40 AI_Player.update()	update
2017-01-03 16:13:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:40 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:40 AI_Player.update()	update
2017-01-03 16:13:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:40 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:40 AI_Player.update()	update
2017-01-03 16:13:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:40 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:41 AI_Player.update()	update
2017-01-03 16:13:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:41 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:41 AI_Player.update()	update
2017-01-03 16:13:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:41 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:41 AI_Player.update()	update
2017-01-03 16:13:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:41 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:41 AI_Player.update()	update
2017-01-03 16:13:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:41 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:41 AI_Player.update()	update
2017-01-03 16:13:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:41 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:41 AI_Player.update()	update
2017-01-03 16:13:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:41 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:41 AI_Player.update()	update
2017-01-03 16:13:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:41 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:41 AI_Player.update()	update
2017-01-03 16:13:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:41 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:41 AI_Player.update()	update
2017-01-03 16:13:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:41 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:41 AI_Player.update()	update
2017-01-03 16:13:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:41 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:42 AI_Player.update()	update
2017-01-03 16:13:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:42 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:42 AI_Player.update()	update
2017-01-03 16:13:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:42 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:42 AI_Player.update()	update
2017-01-03 16:13:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:42 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:42 AI_Player.update()	update
2017-01-03 16:13:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:42 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:42 AI_Player.update()	update
2017-01-03 16:13:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:42 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:42 AI_Player.update()	update
2017-01-03 16:13:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:42 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:42 AI_Player.update()	update
2017-01-03 16:13:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:42 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:42 AI_Player.update()	update
2017-01-03 16:13:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:42 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:42 AI_Player.update()	update
2017-01-03 16:13:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:42 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:43 AI_Player.update()	update
2017-01-03 16:13:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:43 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:43 AI_Player.update()	update
2017-01-03 16:13:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:43 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:43 AI_Player.update()	update
2017-01-03 16:13:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:43 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:43 AI_Player.update()	update
2017-01-03 16:13:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:43 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:43 AI_Player.update()	update
2017-01-03 16:13:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:43 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:43 AI_Player.update()	update
2017-01-03 16:13:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:43 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:43 AI_Player.update()	update
2017-01-03 16:13:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:43 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:43 AI_Player.update()	update
2017-01-03 16:13:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:43 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:43 AI_Player.update()	update
2017-01-03 16:13:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:43 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:43 AI_Player.update()	update
2017-01-03 16:13:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:43 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:44 AI_Player.update()	update
2017-01-03 16:13:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:44 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:44 AI_Player.update()	update
2017-01-03 16:13:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:44 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:44 AI_Player.update()	update
2017-01-03 16:13:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:44 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:44 AI_Player.update()	update
2017-01-03 16:13:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:44 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:44 AI_Player.update()	update
2017-01-03 16:13:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:44 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:44 AI_Player.update()	update
2017-01-03 16:13:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:44 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:44 AI_Player.update()	update
2017-01-03 16:13:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:44 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:44 AI_Player.update()	update
2017-01-03 16:13:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:44 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:44 AI_Player.update()	update
2017-01-03 16:13:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:44 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:44 AI_Player.update()	update
2017-01-03 16:13:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:44 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:45 AI_Player.update()	update
2017-01-03 16:13:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:45 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:45 AI_Player.update()	update
2017-01-03 16:13:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:45 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:45 AI_Player.update()	update
2017-01-03 16:13:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:45 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:45 AI_Player.update()	update
2017-01-03 16:13:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:45 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:45 AI_Player.update()	update
2017-01-03 16:13:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:45 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:45 AI_Player.update()	update
2017-01-03 16:13:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:45 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:45 AI_Player.update()	update
2017-01-03 16:13:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:45 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:45 AI_Player.update()	update
2017-01-03 16:13:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:45 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:45 AI_Player.update()	update
2017-01-03 16:13:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:45 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:45 AI_Player.update()	update
2017-01-03 16:13:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:45 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:46 AI_Player.update()	update
2017-01-03 16:13:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:46 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:46 AI_Player.update()	update
2017-01-03 16:13:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:46 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:46 AI_Player.update()	update
2017-01-03 16:13:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:46 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:46 AI_Player.update()	update
2017-01-03 16:13:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:46 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:46 AI_Player.update()	update
2017-01-03 16:13:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:46 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:46 AI_Player.update()	update
2017-01-03 16:13:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:46 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:46 AI_Player.update()	update
2017-01-03 16:13:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:46 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:46 AI_Player.update()	update
2017-01-03 16:13:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:46 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:46 AI_Player.update()	update
2017-01-03 16:13:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:46 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:47 AI_Player.update()	update
2017-01-03 16:13:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:47 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:47 AI_Player.update()	update
2017-01-03 16:13:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:47 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:47 AI_Player.update()	update
2017-01-03 16:13:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:47 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:47 AI_Player.update()	update
2017-01-03 16:13:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:47 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:47 AI_Player.update()	update
2017-01-03 16:13:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:47 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:47 AI_Player.update()	update
2017-01-03 16:13:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:47 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:47 QueryProlog.requestShiftRight()	try_to_shift_row_right( 2 ) suceeded
2017-01-03 16:13:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 16:13:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 16:13:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:47 AI_Player.update()	update
2017-01-03 16:13:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:47 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:47 AI_Player.update()	update
2017-01-03 16:13:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:47 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:47 AI_Player.update()	update
2017-01-03 16:13:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:47 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:47 AI_Player.update()	update
2017-01-03 16:13:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:47 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:48 AI_Player.update()	update
2017-01-03 16:13:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:48 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:48 AI_Player.update()	update
2017-01-03 16:13:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:48 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:48 AI_Player.update()	update
2017-01-03 16:13:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:48 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:48 AI_Player.update()	update
2017-01-03 16:13:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:48 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:48 AI_Player.update()	update
2017-01-03 16:13:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:48 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:48 AI_Player.update()	update
2017-01-03 16:13:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:48 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:48 AI_Player.update()	update
2017-01-03 16:13:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:48 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:48 AI_Player.update()	update
2017-01-03 16:13:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:48 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:48 AI_Player.update()	update
2017-01-03 16:13:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:48 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 16:13:48 AI_Player.update()	update
2017-01-03 16:13:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 16:13:48 QueryProlog.isGameState()	game_state( a, 2 ) failed
2017-01-03 16:13:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 16:13:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:48 GameBoard$ClickAction.checkPieces()	2.0 4.0 
2017-01-03 16:13:48 QueryProlog.getCurrentPlayer()	get_current_player(Player). suceeded
2017-01-03 16:13:48 QueryProlog.canMove()	player(b,_,I/J). suceeded
2017-01-03 16:13:48 GameBoard$ClickAction.checkPieces()	Can move
2017-01-03 16:13:48 QueryProlog.tryAndMove()	move_player(b,2/4). suceeded
2017-01-03 16:13:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 16:13:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 16:13:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 16:13:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:54 GameBoard$ClickAction.checkPieces()	3.0 3.0 
2017-01-03 16:13:54 QueryProlog.getCurrentPlayer()	get_current_player(Player). suceeded
2017-01-03 16:13:54 QueryProlog.canMove()	player(a,_,I/J). suceeded
2017-01-03 16:13:54 GameBoard$ClickAction.checkPieces()	Can't move
2017-01-03 16:13:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:55 GameBoard$ClickAction.checkPieces()	3.0 3.0 
2017-01-03 16:13:55 QueryProlog.getCurrentPlayer()	get_current_player(Player). suceeded
2017-01-03 16:13:55 QueryProlog.canMove()	player(a,_,I/J). suceeded
2017-01-03 16:13:55 GameBoard$ClickAction.checkPieces()	Can't move
2017-01-03 16:13:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:55 GameBoard$ClickAction.checkPieces()	3.0 4.0 
2017-01-03 16:13:55 QueryProlog.getCurrentPlayer()	get_current_player(Player). suceeded
2017-01-03 16:13:55 QueryProlog.canMove()	player(a,_,I/J). suceeded
2017-01-03 16:13:55 GameBoard$ClickAction.checkPieces()	Can't move
2017-01-03 16:13:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:13:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:13:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:13:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:13:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:14:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:14:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:14:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:14:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:14:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:14:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:14:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:14:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:14:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:14:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:14:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:14:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:14:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:14:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:14:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:14:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:14:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:14:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:14:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:14:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:14:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:14:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:14:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:14:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:14:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:14:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:14:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:14:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:14:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:14:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:14:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:14:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:14:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:14:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:14:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:14:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:14:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:14:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:14:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:14:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:14:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:14:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:14:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:14:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:14:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:14:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:14:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:14:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:14:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:14:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:14:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:14:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 16:14:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 16:14:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 16:14:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 16:14:01 GameBoard.setupTreasurePanel()	1 1
