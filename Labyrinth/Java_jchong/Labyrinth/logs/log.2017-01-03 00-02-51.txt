2017-01-03 00:02:51 GameBoard.<init>()	Hello World!
2017-01-03 00:02:51 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-03 00:02:51 QueryProlog.initialise()	setup(h3/h3). suceeded
2017-01-03 00:02:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:02:52 GameBoard.setupBoardFromString()	Board created
2017-01-03 00:02:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:02:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:02:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 00:02:52 GameBoard.initialise()	[fairy, sword, map, helmet, ring]
2017-01-03 00:02:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 00:02:52 GameBoard.initialise()	[keys, gold, chest, gem, book]
2017-01-03 00:02:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:02:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:02:52 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-03 00:02:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:02:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:02:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 00:02:52 GameBoard.setupTreasurePanel()	null
2017-01-03 00:02:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 00:02:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 00:02:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 00:02:52 GameBoard.setupTreasurePanel()	adding map
2017-01-03 00:02:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 00:02:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 00:02:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 00:02:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 00:02:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 00:02:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 00:02:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 00:02:52 GameBoard.setupTreasurePanel()	adding book
2017-01-03 00:02:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:02:52 AI_Player.update()	update
2017-01-03 00:02:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:02:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:02:52 AI_Player.update()	Search took201ms
2017-01-03 00:02:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:02:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:02:52 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-03 00:02:52 AI_Player.update()		1110,	101,	111,	1010,	1100,	1101,	1011
2017-01-03 00:02:52 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-03 00:02:52 AI_Player.update()		1010,	1010,	1100,	101,	11,	1100,	1100
2017-01-03 00:02:52 AI_Player.update()		1110,	111,	1101,	1110,	1011,	101,	1011
2017-01-03 00:02:52 AI_Player.update()		1100,	101,	1100,	1110,	1110,	1010,	101
2017-01-03 00:02:52 AI_Player.update()		1100,	1110,	1101,	1110,	1101,	111,	1001
2017-01-03 00:02:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:02:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:02:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:02:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:02:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:02:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:02:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:02:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 00:02:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 00:02:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 00:02:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 00:02:52 GameBoard.setupTreasurePanel()	adding map
2017-01-03 00:02:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 00:02:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 00:02:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 00:02:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 00:02:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 00:02:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 00:02:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 00:02:52 GameBoard.setupTreasurePanel()	adding book
2017-01-03 00:02:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:02:52 AI_Player.update()	update
2017-01-03 00:02:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:02:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:02:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:02:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:02:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:02:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:02:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:02:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:02:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:02:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 00:02:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:02:52 AI_Player.update()	update
2017-01-03 00:02:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:02:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:02:53 AI_Player.update()	Search took576ms
2017-01-03 00:02:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:02:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:02:53 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 00:02:53 AI_Player.update()		1110,	101,	111,	1010,	1100,	1101,	1011
2017-01-03 00:02:53 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-03 00:02:53 AI_Player.update()		1010,	1010,	1100,	1110,	11,	1100,	1100
2017-01-03 00:02:53 AI_Player.update()		1110,	111,	1101,	1110,	1011,	101,	1011
2017-01-03 00:02:53 AI_Player.update()		1100,	101,	1100,	1110,	1110,	1010,	101
2017-01-03 00:02:53 AI_Player.update()		1100,	1110,	1101,	110,	1101,	111,	1001
2017-01-03 00:02:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:02:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:02:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:02:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:02:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:02:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:02:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:02:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 00:02:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:02:53 AI_Player.update()	update
2017-01-03 00:02:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:02:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:02:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:02:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:02:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:02:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:02:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:02:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:02:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 00:02:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:02:53 AI_Player.update()	update
2017-01-03 00:02:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:02:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:02:54 AI_Player.update()	Search took1040ms
2017-01-03 00:02:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:02:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:02:54 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-03 00:02:54 AI_Player.update()		1110,	101,	111,	1010,	1100,	1101,	1011
2017-01-03 00:02:54 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-03 00:02:54 AI_Player.update()		1010,	1010,	1100,	101,	11,	1100,	1100
2017-01-03 00:02:54 AI_Player.update()		1110,	111,	1101,	1110,	1011,	101,	1011
2017-01-03 00:02:54 AI_Player.update()		1100,	101,	1100,	1110,	1110,	1010,	101
2017-01-03 00:02:54 AI_Player.update()		1100,	1110,	1101,	1110,	1101,	111,	1001
2017-01-03 00:02:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:02:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:02:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:02:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:02:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:02:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:02:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:02:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 00:02:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:02:54 AI_Player.update()	update
2017-01-03 00:02:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:02:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:02:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:02:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:02:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:02:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:02:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:02:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:02:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:02:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 00:02:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:02:54 AI_Player.update()	update
2017-01-03 00:02:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:02:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:02:55 AI_Player.update()	Search took942ms
2017-01-03 00:02:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:02:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:02:55 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-03 00:02:55 AI_Player.update()		1110,	101,	111,	1010,	1100,	1101,	1011
2017-01-03 00:02:55 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-03 00:02:55 AI_Player.update()		1010,	1100,	101,	11,	1100,	1100,	1010
2017-01-03 00:02:55 AI_Player.update()		1110,	111,	1101,	1110,	1011,	101,	1011
2017-01-03 00:02:55 AI_Player.update()		1100,	101,	1100,	1110,	1110,	1010,	101
2017-01-03 00:02:55 AI_Player.update()		1100,	1110,	1101,	1110,	1101,	111,	1001
2017-01-03 00:02:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:02:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:02:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:02:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:02:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:02:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:02:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:02:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 00:02:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:02:55 AI_Player.update()	update
2017-01-03 00:02:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:02:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:02:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:02:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:02:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:02:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:02:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:02:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:02:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 00:02:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 00:02:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 00:02:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 00:02:55 GameBoard.setupTreasurePanel()	adding map
2017-01-03 00:02:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 00:02:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 00:02:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 00:02:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 00:02:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 00:02:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 00:02:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 00:02:55 GameBoard.setupTreasurePanel()	adding book
2017-01-03 00:02:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:02:55 AI_Player.update()	update
2017-01-03 00:02:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:02:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:02:56 AI_Player.update()	Search took651ms
2017-01-03 00:02:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:02:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:02:56 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-03 00:02:56 AI_Player.update()		101,	111,	1010,	1100,	1101,	1011,	1110
2017-01-03 00:02:56 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-03 00:02:56 AI_Player.update()		1010,	1100,	101,	11,	1100,	1100,	1010
2017-01-03 00:02:56 AI_Player.update()		1110,	111,	1101,	1110,	1011,	101,	1011
2017-01-03 00:02:56 AI_Player.update()		1100,	101,	1100,	1110,	1110,	1010,	101
2017-01-03 00:02:56 AI_Player.update()		1100,	1110,	1101,	1110,	1101,	111,	1001
2017-01-03 00:02:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:02:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:02:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:02:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:02:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:02:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:02:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:02:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 00:02:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:02:56 AI_Player.update()	update
2017-01-03 00:02:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:02:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:02:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:02:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:02:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:02:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:02:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:02:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:02:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:02:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 00:02:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:02:56 AI_Player.update()	update
2017-01-03 00:02:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:02:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:02:56 AI_Player.update()	Search took199ms
2017-01-03 00:02:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:02:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:02:56 AI_Player.update()		110,	1001,	111,	1100,	111,	101,	11
2017-01-03 00:02:56 AI_Player.update()		101,	111,	1010,	1010,	1101,	1011,	1110
2017-01-03 00:02:56 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-03 00:02:56 AI_Player.update()		1010,	1100,	101,	1110,	1100,	1100,	1010
2017-01-03 00:02:56 AI_Player.update()		1110,	111,	1101,	1110,	1011,	101,	1011
2017-01-03 00:02:56 AI_Player.update()		1100,	101,	1100,	1110,	1110,	1010,	101
2017-01-03 00:02:56 AI_Player.update()		1100,	1110,	1101,	110,	1101,	111,	1001
2017-01-03 00:02:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:02:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:02:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:02:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:02:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:02:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:02:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:02:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 00:02:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:02:57 AI_Player.update()	update
2017-01-03 00:02:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:02:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:02:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:02:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:02:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:02:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:02:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:02:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:02:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 00:02:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:02:57 AI_Player.update()	update
2017-01-03 00:02:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:02:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:02:57 AI_Player.update()	Search took290ms
2017-01-03 00:02:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:02:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:02:57 AI_Player.update()		110,	111,	111,	1100,	111,	101,	11
2017-01-03 00:02:57 AI_Player.update()		101,	101,	1010,	1010,	1101,	1011,	1110
2017-01-03 00:02:57 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-03 00:02:57 AI_Player.update()		1010,	111,	101,	1110,	1100,	1100,	1010
2017-01-03 00:02:57 AI_Player.update()		1110,	101,	1101,	1110,	1011,	101,	1011
2017-01-03 00:02:57 AI_Player.update()		1100,	1110,	1100,	1110,	1110,	1010,	101
2017-01-03 00:02:57 AI_Player.update()		1100,	1001,	1101,	110,	1101,	111,	1001
2017-01-03 00:02:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:02:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:02:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:02:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:02:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:02:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:02:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:02:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 00:02:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:02:57 AI_Player.update()	update
2017-01-03 00:02:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:02:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:02:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:02:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:02:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:02:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:02:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:02:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:02:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:02:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 00:02:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:02:57 AI_Player.update()	update
2017-01-03 00:02:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:02:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:02:58 AI_Player.update()	Search took769ms
2017-01-03 00:02:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:02:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:02:58 AI_Player.update()		110,	111,	111,	1010,	111,	101,	11
2017-01-03 00:02:58 AI_Player.update()		101,	101,	1010,	11,	1101,	1011,	1110
2017-01-03 00:02:58 AI_Player.update()		1110,	1100,	1110,	1110,	111,	101,	1011
2017-01-03 00:02:58 AI_Player.update()		1010,	111,	101,	1110,	1100,	1100,	1010
2017-01-03 00:02:58 AI_Player.update()		1110,	101,	1101,	1110,	1011,	101,	1011
2017-01-03 00:02:58 AI_Player.update()		1100,	1110,	1100,	110,	1110,	1010,	101
2017-01-03 00:02:58 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	111,	1001
2017-01-03 00:02:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:02:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:02:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:02:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:02:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:02:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:02:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:02:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 00:02:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:02:58 AI_Player.update()	update
2017-01-03 00:02:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:02:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:02:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:02:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:02:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:02:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:02:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:02:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:02:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 00:02:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:02:58 AI_Player.update()	update
2017-01-03 00:02:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:02:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:02:58 AI_Player.update()	Search took161ms
2017-01-03 00:02:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:02:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:02:58 AI_Player.update()		110,	111,	111,	1010,	111,	101,	11
2017-01-03 00:02:58 AI_Player.update()		101,	101,	1010,	11,	1101,	1011,	1110
2017-01-03 00:02:58 AI_Player.update()		1110,	1100,	1110,	1110,	111,	101,	1011
2017-01-03 00:02:58 AI_Player.update()		1010,	111,	101,	1110,	1100,	1100,	1010
2017-01-03 00:02:58 AI_Player.update()		1110,	101,	1101,	1110,	1011,	101,	1011
2017-01-03 00:02:58 AI_Player.update()		101,	1100,	1110,	1100,	110,	1110,	1010
2017-01-03 00:02:58 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	111,	1001
2017-01-03 00:02:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:02:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:02:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:02:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:02:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:02:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:02:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:02:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 00:02:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:02:58 AI_Player.update()	update
2017-01-03 00:02:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:02:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:02:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:02:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:02:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:02:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:02:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:02:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:02:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:02:58 GameBoard.setupTreasurePanel()	2 2
2017-01-03 00:02:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 00:02:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 00:02:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 00:02:58 GameBoard.setupTreasurePanel()	adding map
2017-01-03 00:02:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 00:02:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 00:02:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 00:02:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 00:02:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 00:02:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 00:02:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 00:02:58 GameBoard.setupTreasurePanel()	adding book
2017-01-03 00:02:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:02:59 AI_Player.update()	update
2017-01-03 00:02:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:00 AI_Player.update()	Search took1273ms
2017-01-03 00:03:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:00 AI_Player.update()		110,	111,	111,	1010,	111,	101,	11
2017-01-03 00:03:00 AI_Player.update()		101,	101,	1010,	11,	1101,	1011,	1110
2017-01-03 00:03:00 AI_Player.update()		1110,	1100,	1110,	1110,	111,	101,	1011
2017-01-03 00:03:00 AI_Player.update()		1010,	111,	101,	1110,	1100,	1100,	1010
2017-01-03 00:03:00 AI_Player.update()		1110,	101,	1101,	1110,	1011,	101,	1011
2017-01-03 00:03:00 AI_Player.update()		1100,	1110,	1100,	110,	1110,	1010,	101
2017-01-03 00:03:00 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	111,	1001
2017-01-03 00:03:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:00 GameBoard.setupTreasurePanel()	2 2
2017-01-03 00:03:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:00 AI_Player.update()	update
2017-01-03 00:03:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:00 GameBoard.setupTreasurePanel()	2 2
2017-01-03 00:03:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:00 AI_Player.update()	update
2017-01-03 00:03:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:00 AI_Player.update()	Search took197ms
2017-01-03 00:03:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:00 AI_Player.update()		110,	111,	111,	1010,	111,	101,	11
2017-01-03 00:03:00 AI_Player.update()		1110,	101,	101,	1010,	11,	1101,	1011
2017-01-03 00:03:00 AI_Player.update()		1110,	1100,	1110,	1110,	111,	101,	1011
2017-01-03 00:03:00 AI_Player.update()		1010,	111,	101,	1110,	1100,	1100,	1010
2017-01-03 00:03:00 AI_Player.update()		1110,	101,	1101,	1110,	1011,	101,	1011
2017-01-03 00:03:00 AI_Player.update()		1100,	1110,	1100,	110,	1110,	1010,	101
2017-01-03 00:03:00 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	111,	1001
2017-01-03 00:03:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:00 GameBoard.setupTreasurePanel()	2 2
2017-01-03 00:03:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:00 AI_Player.update()	update
2017-01-03 00:03:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:00 GameBoard.setupTreasurePanel()	3 2
2017-01-03 00:03:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 00:03:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 00:03:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 00:03:00 GameBoard.setupTreasurePanel()	adding map
2017-01-03 00:03:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 00:03:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 00:03:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 00:03:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 00:03:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 00:03:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 00:03:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 00:03:00 GameBoard.setupTreasurePanel()	adding book
2017-01-03 00:03:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:00 AI_Player.update()	update
2017-01-03 00:03:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:01 AI_Player.update()	Search took961ms
2017-01-03 00:03:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:01 AI_Player.update()		110,	111,	111,	1010,	111,	101,	11
2017-01-03 00:03:01 AI_Player.update()		101,	101,	1010,	11,	1101,	1011,	1110
2017-01-03 00:03:01 AI_Player.update()		1110,	1100,	1110,	1110,	111,	101,	1011
2017-01-03 00:03:01 AI_Player.update()		1010,	111,	101,	1110,	1100,	1100,	1010
2017-01-03 00:03:01 AI_Player.update()		1110,	101,	1101,	1110,	1011,	101,	1011
2017-01-03 00:03:01 AI_Player.update()		1100,	1110,	1100,	110,	1110,	1010,	101
2017-01-03 00:03:01 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	111,	1001
2017-01-03 00:03:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:01 GameBoard.setupTreasurePanel()	3 2
2017-01-03 00:03:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:01 AI_Player.update()	update
2017-01-03 00:03:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:01 GameBoard.setupTreasurePanel()	3 2
2017-01-03 00:03:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:02 AI_Player.update()	update
2017-01-03 00:03:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:02 AI_Player.update()	Search took302ms
2017-01-03 00:03:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:02 AI_Player.update()		110,	111,	111,	1010,	111,	101,	11
2017-01-03 00:03:02 AI_Player.update()		1110,	101,	101,	1010,	11,	1101,	1011
2017-01-03 00:03:02 AI_Player.update()		1110,	1100,	1110,	1110,	111,	101,	1011
2017-01-03 00:03:02 AI_Player.update()		1010,	111,	101,	1110,	1100,	1100,	1010
2017-01-03 00:03:02 AI_Player.update()		1110,	101,	1101,	1110,	1011,	101,	1011
2017-01-03 00:03:02 AI_Player.update()		1100,	1110,	1100,	110,	1110,	1010,	101
2017-01-03 00:03:02 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	111,	1001
2017-01-03 00:03:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:02 GameBoard.setupTreasurePanel()	3 2
2017-01-03 00:03:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:02 AI_Player.update()	update
2017-01-03 00:03:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:02 GameBoard.setupTreasurePanel()	3 2
2017-01-03 00:03:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:02 AI_Player.update()	update
2017-01-03 00:03:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:03 AI_Player.update()	Search took1112ms
2017-01-03 00:03:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:03 AI_Player.update()		110,	111,	111,	1010,	111,	1101,	11
2017-01-03 00:03:03 AI_Player.update()		1110,	101,	101,	1010,	11,	101,	1011
2017-01-03 00:03:03 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1100,	1011
2017-01-03 00:03:03 AI_Player.update()		1010,	111,	101,	1110,	1100,	101,	1010
2017-01-03 00:03:03 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1010,	1011
2017-01-03 00:03:03 AI_Player.update()		1100,	1110,	1100,	110,	1110,	111,	101
2017-01-03 00:03:03 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-03 00:03:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:03 GameBoard.setupTreasurePanel()	3 2
2017-01-03 00:03:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:03 AI_Player.update()	update
2017-01-03 00:03:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:03 GameBoard.setupTreasurePanel()	3 2
2017-01-03 00:03:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:03 AI_Player.update()	update
2017-01-03 00:03:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:04 AI_Player.update()	Search took331ms
2017-01-03 00:03:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:04 AI_Player.update()		110,	111,	111,	1010,	111,	1101,	11
2017-01-03 00:03:04 AI_Player.update()		101,	101,	1010,	11,	101,	1011,	1110
2017-01-03 00:03:04 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1100,	1011
2017-01-03 00:03:04 AI_Player.update()		1010,	111,	101,	1110,	1100,	101,	1010
2017-01-03 00:03:04 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1010,	1011
2017-01-03 00:03:04 AI_Player.update()		1100,	1110,	1100,	110,	1110,	111,	101
2017-01-03 00:03:04 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-03 00:03:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:04 GameBoard.setupTreasurePanel()	3 2
2017-01-03 00:03:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:04 AI_Player.update()	update
2017-01-03 00:03:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:04 GameBoard.setupTreasurePanel()	4 2
2017-01-03 00:03:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 00:03:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 00:03:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 00:03:04 GameBoard.setupTreasurePanel()	adding map
2017-01-03 00:03:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 00:03:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 00:03:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 00:03:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 00:03:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 00:03:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 00:03:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 00:03:04 GameBoard.setupTreasurePanel()	adding book
2017-01-03 00:03:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:04 AI_Player.update()	update
2017-01-03 00:03:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:04 AI_Player.update()	Search took446ms
2017-01-03 00:03:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:04 AI_Player.update()		110,	111,	111,	1010,	111,	1101,	11
2017-01-03 00:03:04 AI_Player.update()		101,	1010,	11,	101,	1011,	1110,	101
2017-01-03 00:03:04 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1100,	1011
2017-01-03 00:03:04 AI_Player.update()		1010,	111,	101,	1110,	1100,	101,	1010
2017-01-03 00:03:04 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1010,	1011
2017-01-03 00:03:04 AI_Player.update()		1100,	1110,	1100,	110,	1110,	111,	101
2017-01-03 00:03:04 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-03 00:03:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:04 GameBoard.setupTreasurePanel()	4 2
2017-01-03 00:03:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:05 AI_Player.update()	update
2017-01-03 00:03:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:05 GameBoard.setupTreasurePanel()	4 2
2017-01-03 00:03:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:05 AI_Player.update()	update
2017-01-03 00:03:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:05 AI_Player.update()	Search took147ms
2017-01-03 00:03:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:05 AI_Player.update()		110,	111,	111,	1010,	111,	1101,	11
2017-01-03 00:03:05 AI_Player.update()		101,	1010,	11,	101,	1011,	1110,	101
2017-01-03 00:03:05 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1100,	1011
2017-01-03 00:03:05 AI_Player.update()		1010,	1010,	111,	101,	1110,	1100,	101
2017-01-03 00:03:05 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1010,	1011
2017-01-03 00:03:05 AI_Player.update()		1100,	1110,	1100,	110,	1110,	111,	101
2017-01-03 00:03:05 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-03 00:03:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:05 GameBoard.setupTreasurePanel()	4 2
2017-01-03 00:03:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:05 AI_Player.update()	update
2017-01-03 00:03:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:05 GameBoard.setupTreasurePanel()	4 2
2017-01-03 00:03:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:05 AI_Player.update()	update
2017-01-03 00:03:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:05 AI_Player.update()	Search took75ms
2017-01-03 00:03:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:05 AI_Player.update()		110,	1010,	111,	1010,	111,	1101,	11
2017-01-03 00:03:05 AI_Player.update()		101,	1100,	11,	101,	1011,	1110,	101
2017-01-03 00:03:05 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1100,	1011
2017-01-03 00:03:05 AI_Player.update()		1010,	101,	111,	101,	1110,	1100,	101
2017-01-03 00:03:05 AI_Player.update()		1110,	1110,	1101,	1110,	1011,	1010,	1011
2017-01-03 00:03:05 AI_Player.update()		1100,	1001,	1100,	110,	1110,	111,	101
2017-01-03 00:03:05 AI_Player.update()		1100,	111,	1101,	1100,	1101,	101,	1001
2017-01-03 00:03:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:05 GameBoard.setupTreasurePanel()	4 2
2017-01-03 00:03:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:05 AI_Player.update()	update
2017-01-03 00:03:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:05 GameBoard.setupTreasurePanel()	4 3
2017-01-03 00:03:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 00:03:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 00:03:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 00:03:05 GameBoard.setupTreasurePanel()	adding map
2017-01-03 00:03:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 00:03:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 00:03:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 00:03:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 00:03:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 00:03:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 00:03:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 00:03:05 GameBoard.setupTreasurePanel()	adding book
2017-01-03 00:03:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:05 AI_Player.update()	update
2017-01-03 00:03:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:06 AI_Player.update()	Search took412ms
2017-01-03 00:03:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:06 AI_Player.update()		110,	1010,	111,	1100,	111,	1101,	11
2017-01-03 00:03:06 AI_Player.update()		101,	1100,	11,	1010,	1011,	1110,	101
2017-01-03 00:03:06 AI_Player.update()		1110,	1010,	1110,	101,	111,	1100,	1011
2017-01-03 00:03:06 AI_Player.update()		1010,	101,	111,	1110,	1110,	1100,	101
2017-01-03 00:03:06 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1010,	1011
2017-01-03 00:03:06 AI_Player.update()		1100,	1001,	1100,	1110,	1110,	111,	101
2017-01-03 00:03:06 AI_Player.update()		1100,	111,	1101,	110,	1101,	101,	1001
2017-01-03 00:03:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:06 GameBoard.setupTreasurePanel()	4 3
2017-01-03 00:03:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:06 AI_Player.update()	update
2017-01-03 00:03:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:06 GameBoard.setupTreasurePanel()	4 3
2017-01-03 00:03:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:06 AI_Player.update()	update
2017-01-03 00:03:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:06 AI_Player.update()	Search took88ms
2017-01-03 00:03:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:06 AI_Player.update()		110,	1010,	111,	1100,	111,	1101,	11
2017-01-03 00:03:06 AI_Player.update()		101,	1100,	11,	1010,	1011,	1110,	101
2017-01-03 00:03:06 AI_Player.update()		1110,	1010,	1110,	101,	111,	1100,	1011
2017-01-03 00:03:06 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:06 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1010,	1011
2017-01-03 00:03:06 AI_Player.update()		1100,	1001,	1100,	1110,	1110,	111,	101
2017-01-03 00:03:06 AI_Player.update()		1100,	111,	1101,	110,	1101,	101,	1001
2017-01-03 00:03:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:06 GameBoard.setupTreasurePanel()	4 3
2017-01-03 00:03:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:06 AI_Player.update()	update
2017-01-03 00:03:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:06 GameBoard.setupTreasurePanel()	4 3
2017-01-03 00:03:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:06 AI_Player.update()	update
2017-01-03 00:03:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:07 AI_Player.update()	Search took778ms
2017-01-03 00:03:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:07 AI_Player.update()		110,	1010,	111,	1100,	111,	1101,	11
2017-01-03 00:03:07 AI_Player.update()		101,	1100,	11,	1010,	1011,	1110,	101
2017-01-03 00:03:07 AI_Player.update()		1110,	1010,	1110,	101,	111,	1100,	1011
2017-01-03 00:03:07 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:07 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1010,	1011
2017-01-03 00:03:07 AI_Player.update()		1001,	1100,	1110,	1110,	111,	101,	1100
2017-01-03 00:03:07 AI_Player.update()		1100,	111,	1101,	110,	1101,	101,	1001
2017-01-03 00:03:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:07 GameBoard.setupTreasurePanel()	4 3
2017-01-03 00:03:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:07 AI_Player.update()	update
2017-01-03 00:03:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:07 GameBoard.setupTreasurePanel()	4 3
2017-01-03 00:03:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:07 AI_Player.update()	update
2017-01-03 00:03:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:07 AI_Player.update()	Search took253ms
2017-01-03 00:03:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:07 AI_Player.update()		110,	1010,	111,	1100,	111,	1110,	11
2017-01-03 00:03:07 AI_Player.update()		101,	1100,	11,	1010,	1011,	1100,	101
2017-01-03 00:03:07 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 00:03:07 AI_Player.update()		101,	111,	1110,	1110,	1100,	1010,	1010
2017-01-03 00:03:07 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:07 AI_Player.update()		1001,	1100,	1110,	1110,	111,	101,	1100
2017-01-03 00:03:07 AI_Player.update()		1100,	111,	1101,	110,	1101,	1101,	1001
2017-01-03 00:03:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:07 GameBoard.setupTreasurePanel()	4 3
2017-01-03 00:03:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:08 AI_Player.update()	update
2017-01-03 00:03:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:08 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 00:03:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 00:03:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 00:03:08 GameBoard.setupTreasurePanel()	adding map
2017-01-03 00:03:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 00:03:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 00:03:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 00:03:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 00:03:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 00:03:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 00:03:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 00:03:08 GameBoard.setupTreasurePanel()	adding book
2017-01-03 00:03:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:08 AI_Player.update()	update
2017-01-03 00:03:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:08 AI_Player.update()	Search took853ms
2017-01-03 00:03:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:08 AI_Player.update()		110,	1010,	111,	1100,	111,	1101,	11
2017-01-03 00:03:08 AI_Player.update()		101,	1100,	11,	1010,	1011,	1110,	101
2017-01-03 00:03:08 AI_Player.update()		1110,	1010,	1110,	101,	111,	1100,	1011
2017-01-03 00:03:08 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:08 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1010,	1011
2017-01-03 00:03:08 AI_Player.update()		1001,	1100,	1110,	1110,	111,	101,	1100
2017-01-03 00:03:08 AI_Player.update()		1100,	111,	1101,	110,	1101,	101,	1001
2017-01-03 00:03:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:08 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:09 AI_Player.update()	update
2017-01-03 00:03:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:09 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:09 AI_Player.update()	update
2017-01-03 00:03:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:09 AI_Player.update()	Search took624ms
2017-01-03 00:03:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:09 AI_Player.update()		110,	1010,	111,	1100,	111,	1110,	11
2017-01-03 00:03:09 AI_Player.update()		101,	1100,	11,	1010,	1011,	1100,	101
2017-01-03 00:03:09 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 00:03:09 AI_Player.update()		101,	111,	1110,	1110,	1100,	1010,	1010
2017-01-03 00:03:09 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:09 AI_Player.update()		1001,	1100,	1110,	1110,	111,	101,	1100
2017-01-03 00:03:09 AI_Player.update()		1100,	111,	1101,	110,	1101,	1101,	1001
2017-01-03 00:03:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:09 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:09 AI_Player.update()	update
2017-01-03 00:03:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:09 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:10 AI_Player.update()	update
2017-01-03 00:03:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:10 AI_Player.update()	Search took872ms
2017-01-03 00:03:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:10 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-03 00:03:10 AI_Player.update()		101,	1100,	11,	1010,	1011,	101,	101
2017-01-03 00:03:10 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-03 00:03:10 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:10 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:10 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1101,	1100
2017-01-03 00:03:10 AI_Player.update()		1100,	111,	1101,	110,	1101,	1110,	1001
2017-01-03 00:03:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:10 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:11 AI_Player.update()	update
2017-01-03 00:03:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:11 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:11 AI_Player.update()	update
2017-01-03 00:03:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:11 AI_Player.update()	Search took691ms
2017-01-03 00:03:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:11 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-03 00:03:11 AI_Player.update()		101,	1100,	11,	1010,	1011,	1010,	101
2017-01-03 00:03:11 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 00:03:11 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:11 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-03 00:03:11 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1110,	1100
2017-01-03 00:03:11 AI_Player.update()		1100,	111,	1101,	110,	1101,	1100,	1001
2017-01-03 00:03:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:11 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:11 AI_Player.update()	update
2017-01-03 00:03:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:11 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:12 AI_Player.update()	update
2017-01-03 00:03:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:13 AI_Player.update()	Search took994ms
2017-01-03 00:03:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:13 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-03 00:03:13 AI_Player.update()		101,	1100,	11,	1010,	1011,	101,	101
2017-01-03 00:03:13 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-03 00:03:13 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:13 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:13 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1101,	1100
2017-01-03 00:03:13 AI_Player.update()		1100,	111,	1101,	110,	1101,	1110,	1001
2017-01-03 00:03:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:13 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:13 AI_Player.update()	update
2017-01-03 00:03:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:13 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:13 AI_Player.update()	update
2017-01-03 00:03:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:13 AI_Player.update()	Search took766ms
2017-01-03 00:03:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:13 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-03 00:03:13 AI_Player.update()		101,	1100,	11,	1010,	1011,	1010,	101
2017-01-03 00:03:13 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 00:03:13 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:13 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-03 00:03:13 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1110,	1100
2017-01-03 00:03:13 AI_Player.update()		1100,	111,	1101,	110,	1101,	1100,	1001
2017-01-03 00:03:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:13 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:14 AI_Player.update()	update
2017-01-03 00:03:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:14 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:14 AI_Player.update()	update
2017-01-03 00:03:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:15 AI_Player.update()	Search took1050ms
2017-01-03 00:03:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:15 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-03 00:03:15 AI_Player.update()		101,	1100,	11,	1010,	1011,	101,	101
2017-01-03 00:03:15 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-03 00:03:15 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:15 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:15 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1101,	1100
2017-01-03 00:03:15 AI_Player.update()		1100,	111,	1101,	110,	1101,	1110,	1001
2017-01-03 00:03:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:15 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:15 AI_Player.update()	update
2017-01-03 00:03:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:15 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:15 AI_Player.update()	update
2017-01-03 00:03:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:15 AI_Player.update()	Search took501ms
2017-01-03 00:03:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:15 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-03 00:03:15 AI_Player.update()		101,	1100,	11,	1010,	1011,	1010,	101
2017-01-03 00:03:15 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 00:03:15 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:15 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-03 00:03:15 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1110,	1100
2017-01-03 00:03:15 AI_Player.update()		1100,	111,	1101,	110,	1101,	1100,	1001
2017-01-03 00:03:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:15 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:16 AI_Player.update()	update
2017-01-03 00:03:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:16 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:16 AI_Player.update()	update
2017-01-03 00:03:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:17 AI_Player.update()	Search took1004ms
2017-01-03 00:03:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:17 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-03 00:03:17 AI_Player.update()		101,	1100,	11,	1010,	1011,	101,	101
2017-01-03 00:03:17 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-03 00:03:17 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:17 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:17 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1101,	1100
2017-01-03 00:03:17 AI_Player.update()		1100,	111,	1101,	110,	1101,	1110,	1001
2017-01-03 00:03:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:17 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:17 AI_Player.update()	update
2017-01-03 00:03:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:17 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:17 AI_Player.update()	update
2017-01-03 00:03:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:18 AI_Player.update()	Search took778ms
2017-01-03 00:03:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:18 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-03 00:03:18 AI_Player.update()		101,	1100,	11,	1010,	1011,	1010,	101
2017-01-03 00:03:18 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 00:03:18 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:18 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-03 00:03:18 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1110,	1100
2017-01-03 00:03:18 AI_Player.update()		1100,	111,	1101,	110,	1101,	1100,	1001
2017-01-03 00:03:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:18 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:18 AI_Player.update()	update
2017-01-03 00:03:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:18 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:18 AI_Player.update()	update
2017-01-03 00:03:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:19 AI_Player.update()	Search took1057ms
2017-01-03 00:03:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:19 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-03 00:03:19 AI_Player.update()		101,	1100,	11,	1010,	1011,	101,	101
2017-01-03 00:03:19 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-03 00:03:19 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:19 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:19 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1101,	1100
2017-01-03 00:03:19 AI_Player.update()		1100,	111,	1101,	110,	1101,	1110,	1001
2017-01-03 00:03:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:19 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:19 AI_Player.update()	update
2017-01-03 00:03:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:19 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:19 AI_Player.update()	update
2017-01-03 00:03:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:20 AI_Player.update()	Search took486ms
2017-01-03 00:03:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:20 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-03 00:03:20 AI_Player.update()		101,	1100,	11,	1010,	1011,	1010,	101
2017-01-03 00:03:20 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 00:03:20 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:20 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-03 00:03:20 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1110,	1100
2017-01-03 00:03:20 AI_Player.update()		1100,	111,	1101,	110,	1101,	1100,	1001
2017-01-03 00:03:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:20 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:20 AI_Player.update()	update
2017-01-03 00:03:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:20 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:20 AI_Player.update()	update
2017-01-03 00:03:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:21 AI_Player.update()	Search took1017ms
2017-01-03 00:03:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:21 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-03 00:03:21 AI_Player.update()		101,	1100,	11,	1010,	1011,	101,	101
2017-01-03 00:03:21 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-03 00:03:21 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:21 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:21 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1101,	1100
2017-01-03 00:03:21 AI_Player.update()		1100,	111,	1101,	110,	1101,	1110,	1001
2017-01-03 00:03:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:21 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:21 AI_Player.update()	update
2017-01-03 00:03:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:21 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:21 AI_Player.update()	update
2017-01-03 00:03:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:22 AI_Player.update()	Search took773ms
2017-01-03 00:03:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:22 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-03 00:03:22 AI_Player.update()		101,	1100,	11,	1010,	1011,	1010,	101
2017-01-03 00:03:22 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 00:03:22 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:22 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-03 00:03:22 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1110,	1100
2017-01-03 00:03:22 AI_Player.update()		1100,	111,	1101,	110,	1101,	1100,	1001
2017-01-03 00:03:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:22 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:22 AI_Player.update()	update
2017-01-03 00:03:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:22 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:22 AI_Player.update()	update
2017-01-03 00:03:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:23 AI_Player.update()	Search took1062ms
2017-01-03 00:03:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:23 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-03 00:03:23 AI_Player.update()		101,	1100,	11,	1010,	1011,	101,	101
2017-01-03 00:03:23 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-03 00:03:23 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:23 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:23 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1101,	1100
2017-01-03 00:03:23 AI_Player.update()		1100,	111,	1101,	110,	1101,	1110,	1001
2017-01-03 00:03:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:23 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:23 AI_Player.update()	update
2017-01-03 00:03:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:23 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:23 AI_Player.update()	update
2017-01-03 00:03:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:24 AI_Player.update()	Search took492ms
2017-01-03 00:03:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:24 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-03 00:03:24 AI_Player.update()		101,	1100,	11,	1010,	1011,	1010,	101
2017-01-03 00:03:24 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 00:03:24 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:24 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-03 00:03:24 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1110,	1100
2017-01-03 00:03:24 AI_Player.update()		1100,	111,	1101,	110,	1101,	1100,	1001
2017-01-03 00:03:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:24 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:24 AI_Player.update()	update
2017-01-03 00:03:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:24 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:24 AI_Player.update()	update
2017-01-03 00:03:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:25 AI_Player.update()	Search took987ms
2017-01-03 00:03:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:25 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-03 00:03:25 AI_Player.update()		101,	1100,	11,	1010,	1011,	101,	101
2017-01-03 00:03:25 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-03 00:03:25 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:25 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:25 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1101,	1100
2017-01-03 00:03:25 AI_Player.update()		1100,	111,	1101,	110,	1101,	1110,	1001
2017-01-03 00:03:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:25 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:25 AI_Player.update()	update
2017-01-03 00:03:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:25 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:25 AI_Player.update()	update
2017-01-03 00:03:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:26 AI_Player.update()	Search took781ms
2017-01-03 00:03:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:26 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-03 00:03:26 AI_Player.update()		101,	1100,	11,	1010,	1011,	1010,	101
2017-01-03 00:03:26 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 00:03:26 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:26 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-03 00:03:26 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1110,	1100
2017-01-03 00:03:26 AI_Player.update()		1100,	111,	1101,	110,	1101,	1100,	1001
2017-01-03 00:03:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:26 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:26 AI_Player.update()	update
2017-01-03 00:03:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:26 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:26 AI_Player.update()	update
2017-01-03 00:03:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:27 AI_Player.update()	Search took1060ms
2017-01-03 00:03:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:27 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-03 00:03:27 AI_Player.update()		101,	1100,	11,	1010,	1011,	101,	101
2017-01-03 00:03:27 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-03 00:03:27 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:27 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:27 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1101,	1100
2017-01-03 00:03:27 AI_Player.update()		1100,	111,	1101,	110,	1101,	1110,	1001
2017-01-03 00:03:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:27 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:27 AI_Player.update()	update
2017-01-03 00:03:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:27 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:27 AI_Player.update()	update
2017-01-03 00:03:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:28 AI_Player.update()	Search took493ms
2017-01-03 00:03:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:28 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-03 00:03:28 AI_Player.update()		101,	1100,	11,	1010,	1011,	1010,	101
2017-01-03 00:03:28 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 00:03:28 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:28 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-03 00:03:28 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1110,	1100
2017-01-03 00:03:28 AI_Player.update()		1100,	111,	1101,	110,	1101,	1100,	1001
2017-01-03 00:03:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:28 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:28 AI_Player.update()	update
2017-01-03 00:03:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:28 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:28 AI_Player.update()	update
2017-01-03 00:03:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:29 AI_Player.update()	Search took998ms
2017-01-03 00:03:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:29 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-03 00:03:29 AI_Player.update()		101,	1100,	11,	1010,	1011,	101,	101
2017-01-03 00:03:29 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-03 00:03:29 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:29 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:29 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1101,	1100
2017-01-03 00:03:29 AI_Player.update()		1100,	111,	1101,	110,	1101,	1110,	1001
2017-01-03 00:03:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:29 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:29 AI_Player.update()	update
2017-01-03 00:03:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:29 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:29 AI_Player.update()	update
2017-01-03 00:03:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:30 AI_Player.update()	Search took765ms
2017-01-03 00:03:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:30 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-03 00:03:30 AI_Player.update()		101,	1100,	11,	1010,	1011,	1010,	101
2017-01-03 00:03:30 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 00:03:30 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:30 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-03 00:03:30 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1110,	1100
2017-01-03 00:03:30 AI_Player.update()		1100,	111,	1101,	110,	1101,	1100,	1001
2017-01-03 00:03:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:30 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:30 AI_Player.update()	update
2017-01-03 00:03:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:30 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:30 AI_Player.update()	update
2017-01-03 00:03:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:31 AI_Player.update()	Search took1049ms
2017-01-03 00:03:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:31 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-03 00:03:31 AI_Player.update()		101,	1100,	11,	1010,	1011,	101,	101
2017-01-03 00:03:31 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-03 00:03:31 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:31 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:31 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1101,	1100
2017-01-03 00:03:31 AI_Player.update()		1100,	111,	1101,	110,	1101,	1110,	1001
2017-01-03 00:03:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:31 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:31 AI_Player.update()	update
2017-01-03 00:03:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:31 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:32 AI_Player.update()	update
2017-01-03 00:03:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:32 AI_Player.update()	Search took488ms
2017-01-03 00:03:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:32 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-03 00:03:32 AI_Player.update()		101,	1100,	11,	1010,	1011,	1010,	101
2017-01-03 00:03:32 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 00:03:32 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:32 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-03 00:03:32 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1110,	1100
2017-01-03 00:03:32 AI_Player.update()		1100,	111,	1101,	110,	1101,	1100,	1001
2017-01-03 00:03:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:32 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:32 AI_Player.update()	update
2017-01-03 00:03:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:32 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:32 AI_Player.update()	update
2017-01-03 00:03:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:33 AI_Player.update()	Search took1007ms
2017-01-03 00:03:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:33 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-03 00:03:33 AI_Player.update()		101,	1100,	11,	1010,	1011,	101,	101
2017-01-03 00:03:33 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-03 00:03:33 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:33 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:33 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1101,	1100
2017-01-03 00:03:33 AI_Player.update()		1100,	111,	1101,	110,	1101,	1110,	1001
2017-01-03 00:03:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:33 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:33 AI_Player.update()	update
2017-01-03 00:03:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:33 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:33 AI_Player.update()	update
2017-01-03 00:03:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:34 AI_Player.update()	Search took772ms
2017-01-03 00:03:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:34 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-03 00:03:34 AI_Player.update()		101,	1100,	11,	1010,	1011,	1010,	101
2017-01-03 00:03:34 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 00:03:34 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:34 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-03 00:03:34 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1110,	1100
2017-01-03 00:03:34 AI_Player.update()		1100,	111,	1101,	110,	1101,	1100,	1001
2017-01-03 00:03:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:34 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:34 AI_Player.update()	update
2017-01-03 00:03:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:34 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:34 AI_Player.update()	update
2017-01-03 00:03:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:36 AI_Player.update()	Search took1055ms
2017-01-03 00:03:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:36 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-03 00:03:36 AI_Player.update()		101,	1100,	11,	1010,	1011,	101,	101
2017-01-03 00:03:36 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-03 00:03:36 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:36 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:36 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1101,	1100
2017-01-03 00:03:36 AI_Player.update()		1100,	111,	1101,	110,	1101,	1110,	1001
2017-01-03 00:03:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:36 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:36 AI_Player.update()	update
2017-01-03 00:03:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:36 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:36 AI_Player.update()	update
2017-01-03 00:03:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:36 AI_Player.update()	Search took478ms
2017-01-03 00:03:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:36 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-03 00:03:36 AI_Player.update()		101,	1100,	11,	1010,	1011,	1010,	101
2017-01-03 00:03:36 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 00:03:36 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:36 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-03 00:03:36 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1110,	1100
2017-01-03 00:03:36 AI_Player.update()		1100,	111,	1101,	110,	1101,	1100,	1001
2017-01-03 00:03:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:36 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:36 AI_Player.update()	update
2017-01-03 00:03:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:36 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:36 AI_Player.update()	update
2017-01-03 00:03:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:37 AI_Player.update()	Search took993ms
2017-01-03 00:03:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:37 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-03 00:03:37 AI_Player.update()		101,	1100,	11,	1010,	1011,	101,	101
2017-01-03 00:03:37 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-03 00:03:37 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:37 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:37 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1101,	1100
2017-01-03 00:03:37 AI_Player.update()		1100,	111,	1101,	110,	1101,	1110,	1001
2017-01-03 00:03:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:37 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:37 AI_Player.update()	update
2017-01-03 00:03:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:38 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:38 AI_Player.update()	update
2017-01-03 00:03:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:38 AI_Player.update()	Search took770ms
2017-01-03 00:03:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:38 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-03 00:03:38 AI_Player.update()		101,	1100,	11,	1010,	1011,	1010,	101
2017-01-03 00:03:38 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 00:03:38 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:38 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-03 00:03:38 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1110,	1100
2017-01-03 00:03:38 AI_Player.update()		1100,	111,	1101,	110,	1101,	1100,	1001
2017-01-03 00:03:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:38 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:38 AI_Player.update()	update
2017-01-03 00:03:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:38 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:39 AI_Player.update()	update
2017-01-03 00:03:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:40 AI_Player.update()	Search took1056ms
2017-01-03 00:03:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:40 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-03 00:03:40 AI_Player.update()		101,	1100,	11,	1010,	1011,	101,	101
2017-01-03 00:03:40 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-03 00:03:40 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:40 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:40 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1101,	1100
2017-01-03 00:03:40 AI_Player.update()		1100,	111,	1101,	110,	1101,	1110,	1001
2017-01-03 00:03:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:40 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:40 AI_Player.update()	update
2017-01-03 00:03:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:40 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:40 AI_Player.update()	update
2017-01-03 00:03:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:40 AI_Player.update()	Search took481ms
2017-01-03 00:03:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:40 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-03 00:03:40 AI_Player.update()		101,	1100,	11,	1010,	1011,	1010,	101
2017-01-03 00:03:40 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 00:03:40 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:40 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-03 00:03:40 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1110,	1100
2017-01-03 00:03:40 AI_Player.update()		1100,	111,	1101,	110,	1101,	1100,	1001
2017-01-03 00:03:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:40 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:40 AI_Player.update()	update
2017-01-03 00:03:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:40 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:41 AI_Player.update()	update
2017-01-03 00:03:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:42 AI_Player.update()	Search took999ms
2017-01-03 00:03:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:42 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-03 00:03:42 AI_Player.update()		101,	1100,	11,	1010,	1011,	101,	101
2017-01-03 00:03:42 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-03 00:03:42 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:42 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:42 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1101,	1100
2017-01-03 00:03:42 AI_Player.update()		1100,	111,	1101,	110,	1101,	1110,	1001
2017-01-03 00:03:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:42 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:42 AI_Player.update()	update
2017-01-03 00:03:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:42 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:42 AI_Player.update()	update
2017-01-03 00:03:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:43 AI_Player.update()	Search took796ms
2017-01-03 00:03:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:43 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-03 00:03:43 AI_Player.update()		101,	1100,	11,	1010,	1011,	1010,	101
2017-01-03 00:03:43 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 00:03:43 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:43 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-03 00:03:43 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1110,	1100
2017-01-03 00:03:43 AI_Player.update()		1100,	111,	1101,	110,	1101,	1100,	1001
2017-01-03 00:03:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:43 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:43 AI_Player.update()	update
2017-01-03 00:03:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:43 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:43 AI_Player.update()	update
2017-01-03 00:03:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:44 AI_Player.update()	Search took1051ms
2017-01-03 00:03:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:44 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-03 00:03:44 AI_Player.update()		101,	1100,	11,	1010,	1011,	101,	101
2017-01-03 00:03:44 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-03 00:03:44 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:44 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:44 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1101,	1100
2017-01-03 00:03:44 AI_Player.update()		1100,	111,	1101,	110,	1101,	1110,	1001
2017-01-03 00:03:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:44 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:44 AI_Player.update()	update
2017-01-03 00:03:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:44 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:44 AI_Player.update()	update
2017-01-03 00:03:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:44 AI_Player.update()	Search took493ms
2017-01-03 00:03:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:44 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-03 00:03:44 AI_Player.update()		101,	1100,	11,	1010,	1011,	1010,	101
2017-01-03 00:03:44 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 00:03:44 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:44 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-03 00:03:44 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1110,	1100
2017-01-03 00:03:44 AI_Player.update()		1100,	111,	1101,	110,	1101,	1100,	1001
2017-01-03 00:03:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:44 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:45 AI_Player.update()	update
2017-01-03 00:03:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:45 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:45 AI_Player.update()	update
2017-01-03 00:03:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:46 AI_Player.update()	Search took1020ms
2017-01-03 00:03:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:46 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-03 00:03:46 AI_Player.update()		101,	1100,	11,	1010,	1011,	101,	101
2017-01-03 00:03:46 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-03 00:03:46 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:46 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:46 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1101,	1100
2017-01-03 00:03:46 AI_Player.update()		1100,	111,	1101,	110,	1101,	1110,	1001
2017-01-03 00:03:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:46 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:46 AI_Player.update()	update
2017-01-03 00:03:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:46 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:46 AI_Player.update()	update
2017-01-03 00:03:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:47 AI_Player.update()	Search took798ms
2017-01-03 00:03:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:47 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-03 00:03:47 AI_Player.update()		101,	1100,	11,	1010,	1011,	1010,	101
2017-01-03 00:03:47 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 00:03:47 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:47 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-03 00:03:47 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1110,	1100
2017-01-03 00:03:47 AI_Player.update()		1100,	111,	1101,	110,	1101,	1100,	1001
2017-01-03 00:03:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:47 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:47 AI_Player.update()	update
2017-01-03 00:03:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:47 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:47 AI_Player.update()	update
2017-01-03 00:03:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:48 AI_Player.update()	Search took1068ms
2017-01-03 00:03:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:48 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-03 00:03:48 AI_Player.update()		101,	1100,	11,	1010,	1011,	101,	101
2017-01-03 00:03:48 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-03 00:03:48 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:48 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:48 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1101,	1100
2017-01-03 00:03:48 AI_Player.update()		1100,	111,	1101,	110,	1101,	1110,	1001
2017-01-03 00:03:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:48 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:48 AI_Player.update()	update
2017-01-03 00:03:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:48 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:48 AI_Player.update()	update
2017-01-03 00:03:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:49 AI_Player.update()	Search took499ms
2017-01-03 00:03:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:49 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-03 00:03:49 AI_Player.update()		101,	1100,	11,	1010,	1011,	1010,	101
2017-01-03 00:03:49 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 00:03:49 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:49 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-03 00:03:49 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1110,	1100
2017-01-03 00:03:49 AI_Player.update()		1100,	111,	1101,	110,	1101,	1100,	1001
2017-01-03 00:03:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:49 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:49 AI_Player.update()	update
2017-01-03 00:03:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:49 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:49 AI_Player.update()	update
2017-01-03 00:03:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:50 AI_Player.update()	Search took1008ms
2017-01-03 00:03:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:50 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-03 00:03:50 AI_Player.update()		101,	1100,	11,	1010,	1011,	101,	101
2017-01-03 00:03:50 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-03 00:03:50 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:50 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:50 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1101,	1100
2017-01-03 00:03:50 AI_Player.update()		1100,	111,	1101,	110,	1101,	1110,	1001
2017-01-03 00:03:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:50 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:50 AI_Player.update()	update
2017-01-03 00:03:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:50 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:50 AI_Player.update()	update
2017-01-03 00:03:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:51 AI_Player.update()	Search took775ms
2017-01-03 00:03:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:51 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-03 00:03:51 AI_Player.update()		101,	1100,	11,	1010,	1011,	1010,	101
2017-01-03 00:03:51 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 00:03:51 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:51 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-03 00:03:51 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1110,	1100
2017-01-03 00:03:51 AI_Player.update()		1100,	111,	1101,	110,	1101,	1100,	1001
2017-01-03 00:03:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:51 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:51 AI_Player.update()	update
2017-01-03 00:03:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:51 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:51 AI_Player.update()	update
2017-01-03 00:03:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:52 AI_Player.update()	Search took1057ms
2017-01-03 00:03:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:52 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-03 00:03:52 AI_Player.update()		101,	1100,	11,	1010,	1011,	101,	101
2017-01-03 00:03:52 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-03 00:03:52 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:52 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:52 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1101,	1100
2017-01-03 00:03:52 AI_Player.update()		1100,	111,	1101,	110,	1101,	1110,	1001
2017-01-03 00:03:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:52 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:52 AI_Player.update()	update
2017-01-03 00:03:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:52 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:52 AI_Player.update()	update
2017-01-03 00:03:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:53 AI_Player.update()	Search took478ms
2017-01-03 00:03:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:53 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-03 00:03:53 AI_Player.update()		101,	1100,	11,	1010,	1011,	1010,	101
2017-01-03 00:03:53 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 00:03:53 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:53 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-03 00:03:53 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1110,	1100
2017-01-03 00:03:53 AI_Player.update()		1100,	111,	1101,	110,	1101,	1100,	1001
2017-01-03 00:03:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:53 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:53 AI_Player.update()	update
2017-01-03 00:03:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:53 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:53 AI_Player.update()	update
2017-01-03 00:03:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:54 AI_Player.update()	Search took1035ms
2017-01-03 00:03:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:54 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-03 00:03:54 AI_Player.update()		101,	1100,	11,	1010,	1011,	101,	101
2017-01-03 00:03:54 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-03 00:03:54 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:54 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:54 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1101,	1100
2017-01-03 00:03:54 AI_Player.update()		1100,	111,	1101,	110,	1101,	1110,	1001
2017-01-03 00:03:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:54 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:54 AI_Player.update()	update
2017-01-03 00:03:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:54 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:54 AI_Player.update()	update
2017-01-03 00:03:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:03:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:03:55 AI_Player.update()	Search took759ms
2017-01-03 00:03:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:55 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-03 00:03:55 AI_Player.update()		101,	1100,	11,	1010,	1011,	1010,	101
2017-01-03 00:03:55 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 00:03:55 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:55 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1101,	1011
2017-01-03 00:03:55 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1110,	1100
2017-01-03 00:03:55 AI_Player.update()		1100,	111,	1101,	110,	1101,	1100,	1001
2017-01-03 00:03:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:55 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:55 AI_Player.update()	update
2017-01-03 00:03:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:03:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:03:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:03:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:03:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:55 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:55 AI_Player.update()	update
2017-01-03 00:03:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:03:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:03:56 AI_Player.update()	Search took1072ms
2017-01-03 00:03:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:03:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:56 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-03 00:03:56 AI_Player.update()		101,	1100,	11,	1010,	1011,	101,	101
2017-01-03 00:03:56 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-03 00:03:56 AI_Player.update()		101,	111,	1110,	1110,	1100,	101,	1010
2017-01-03 00:03:56 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 00:03:56 AI_Player.update()		1001,	1100,	1110,	1110,	111,	1101,	1100
2017-01-03 00:03:56 AI_Player.update()		1100,	111,	1101,	110,	1101,	1110,	1001
2017-01-03 00:03:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:03:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:03:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:56 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:56 AI_Player.update()	update
2017-01-03 00:03:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:03:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:03:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:03:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:03:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:03:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:03:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:03:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:03:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:03:56 GameBoard.setupTreasurePanel()	4 4
2017-01-03 00:03:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:03:57 AI_Player.update()	update
2017-01-03 00:03:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
