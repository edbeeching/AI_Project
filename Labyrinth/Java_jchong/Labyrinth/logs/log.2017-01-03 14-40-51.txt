2017-01-03 14:40:51 GameBoard.<init>()	Hello World!
2017-01-03 14:40:51 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-03 14:40:51 QueryProlog.initialise()	setup(h1/h2). suceeded
2017-01-03 14:40:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:51 GameBoard.setupBoardFromString()	Board created
2017-01-03 14:40:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:40:51 GameBoard.initialise()	[keys, chest, helmet, sword, ring]
2017-01-03 14:40:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:40:51 GameBoard.initialise()	[fairy, candle, book, gold, map]
2017-01-03 14:40:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:51 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-03 14:40:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:40:51 GameBoard.setupTreasurePanel()	null
2017-01-03 14:40:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:40:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:40:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:40:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 14:40:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:40:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:40:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:40:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 14:40:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:40:51 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:40:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:40:51 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:40:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:51 AI_Player.update()	update
2017-01-03 14:40:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:51 AI_Player.update()	Search took2ms
2017-01-03 14:40:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:51 AI_Player.update()		110,	11,	111,	1001,	111,	1010,	11
2017-01-03 14:40:51 AI_Player.update()		1100,	1100,	111,	1100,	101,	1001,	110
2017-01-03 14:40:51 AI_Player.update()		1110,	11,	1110,	110,	111,	1010,	1011
2017-01-03 14:40:51 AI_Player.update()		1100,	1010,	101,	1011,	110,	1010,	1010
2017-01-03 14:40:51 AI_Player.update()		1110,	110,	1101,	1011,	1011,	111,	1011
2017-01-03 14:40:51 AI_Player.update()		110,	110,	101,	1001,	101,	1011,	1011
2017-01-03 14:40:51 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	110,	1001
2017-01-03 14:40:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:40:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:40:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:40:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:40:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 14:40:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:40:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:40:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:40:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 14:40:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:40:51 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:40:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:40:51 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:40:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:51 AI_Player.update()	update
2017-01-03 14:40:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:40:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:40:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:40:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:52 AI_Player.update()	update
2017-01-03 14:40:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:52 AI_Player.update()	Search took8ms
2017-01-03 14:40:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:52 AI_Player.update()		110,	11,	111,	1001,	111,	1001,	11
2017-01-03 14:40:52 AI_Player.update()		1100,	1100,	111,	1100,	101,	1010,	110
2017-01-03 14:40:52 AI_Player.update()		1110,	11,	1110,	110,	111,	1010,	1011
2017-01-03 14:40:52 AI_Player.update()		1100,	1010,	101,	1011,	110,	111,	1010
2017-01-03 14:40:52 AI_Player.update()		1110,	110,	1101,	1011,	1011,	1011,	1011
2017-01-03 14:40:52 AI_Player.update()		110,	110,	101,	1001,	101,	110,	1011
2017-01-03 14:40:52 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1010,	1001
2017-01-03 14:40:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:40:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:52 AI_Player.update()	update
2017-01-03 14:40:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:40:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:52 AI_Player.update()	update
2017-01-03 14:40:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:52 AI_Player.update()	Search took3ms
2017-01-03 14:40:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:52 AI_Player.update()		110,	11,	111,	1001,	111,	1001,	11
2017-01-03 14:40:52 AI_Player.update()		1100,	1100,	111,	1100,	101,	1010,	110
2017-01-03 14:40:52 AI_Player.update()		1110,	11,	1110,	110,	111,	1010,	1011
2017-01-03 14:40:52 AI_Player.update()		1010,	101,	1011,	110,	111,	1010,	1100
2017-01-03 14:40:52 AI_Player.update()		1110,	110,	1101,	1011,	1011,	1011,	1011
2017-01-03 14:40:52 AI_Player.update()		110,	110,	101,	1001,	101,	110,	1011
2017-01-03 14:40:52 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1010,	1001
2017-01-03 14:40:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:40:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:52 AI_Player.update()	update
2017-01-03 14:40:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:40:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:40:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:52 AI_Player.update()	update
2017-01-03 14:40:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:52 AI_Player.update()	Search took2ms
2017-01-03 14:40:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:52 AI_Player.update()		110,	11,	111,	1001,	111,	1010,	11
2017-01-03 14:40:52 AI_Player.update()		1100,	1100,	111,	1100,	101,	1010,	110
2017-01-03 14:40:52 AI_Player.update()		1110,	11,	1110,	110,	111,	1010,	1011
2017-01-03 14:40:52 AI_Player.update()		1010,	101,	1011,	110,	111,	1011,	1100
2017-01-03 14:40:52 AI_Player.update()		1110,	110,	1101,	1011,	1011,	110,	1011
2017-01-03 14:40:52 AI_Player.update()		110,	110,	101,	1001,	101,	1010,	1011
2017-01-03 14:40:52 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1001,	1001
2017-01-03 14:40:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:52 AI_Player.update()	update
2017-01-03 14:40:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:52 AI_Player.update()	update
2017-01-03 14:40:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:52 AI_Player.update()	Search took12ms
2017-01-03 14:40:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:52 AI_Player.update()		110,	11,	111,	1001,	111,	1010,	11
2017-01-03 14:40:52 AI_Player.update()		1100,	1100,	111,	1100,	101,	1010,	110
2017-01-03 14:40:52 AI_Player.update()		1110,	11,	1110,	110,	111,	1010,	1011
2017-01-03 14:40:52 AI_Player.update()		101,	1011,	110,	111,	1011,	1100,	1010
2017-01-03 14:40:52 AI_Player.update()		1110,	110,	1101,	1011,	1011,	110,	1011
2017-01-03 14:40:52 AI_Player.update()		110,	110,	101,	1001,	101,	1010,	1011
2017-01-03 14:40:52 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1001,	1001
2017-01-03 14:40:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:52 AI_Player.update()	update
2017-01-03 14:40:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	4 1
2017-01-03 14:40:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:40:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:40:52 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:40:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:53 AI_Player.update()	update
2017-01-03 14:40:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:53 AI_Player.update()	Search took2ms
2017-01-03 14:40:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:53 AI_Player.update()		110,	11,	111,	1001,	111,	1010,	11
2017-01-03 14:40:53 AI_Player.update()		1100,	1100,	111,	1100,	101,	1010,	110
2017-01-03 14:40:53 AI_Player.update()		1110,	11,	1110,	110,	111,	1100,	1011
2017-01-03 14:40:53 AI_Player.update()		101,	1011,	110,	111,	1011,	110,	1010
2017-01-03 14:40:53 AI_Player.update()		1110,	110,	1101,	1011,	1011,	1010,	1011
2017-01-03 14:40:53 AI_Player.update()		110,	110,	101,	1001,	101,	1001,	1011
2017-01-03 14:40:53 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1010,	1001
2017-01-03 14:40:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:53 GameBoard.setupTreasurePanel()	4 1
2017-01-03 14:40:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:53 AI_Player.update()	update
2017-01-03 14:40:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:53 GameBoard.setupTreasurePanel()	4 1
2017-01-03 14:40:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:53 AI_Player.update()	update
2017-01-03 14:40:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:53 AI_Player.update()	Search took5ms
2017-01-03 14:40:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:53 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-03 14:40:53 AI_Player.update()		1100,	1100,	111,	110,	101,	1010,	110
2017-01-03 14:40:53 AI_Player.update()		1110,	11,	1110,	111,	111,	1100,	1011
2017-01-03 14:40:53 AI_Player.update()		101,	1011,	110,	1011,	1011,	110,	1010
2017-01-03 14:40:53 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1010,	1011
2017-01-03 14:40:53 AI_Player.update()		110,	110,	101,	1010,	101,	1001,	1011
2017-01-03 14:40:53 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1010,	1001
2017-01-03 14:40:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:53 GameBoard.setupTreasurePanel()	4 1
2017-01-03 14:40:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:53 AI_Player.update()	update
2017-01-03 14:40:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:53 GameBoard.setupTreasurePanel()	4 1
2017-01-03 14:40:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:53 AI_Player.update()	update
2017-01-03 14:40:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:53 AI_Player.update()	Search took2ms
2017-01-03 14:40:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:53 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-03 14:40:53 AI_Player.update()		1100,	1100,	111,	110,	101,	1100,	110
2017-01-03 14:40:53 AI_Player.update()		1110,	11,	1110,	111,	111,	110,	1011
2017-01-03 14:40:53 AI_Player.update()		101,	1011,	110,	1011,	1011,	1010,	1010
2017-01-03 14:40:53 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1001,	1011
2017-01-03 14:40:53 AI_Player.update()		110,	110,	101,	1010,	101,	1010,	1011
2017-01-03 14:40:53 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1010,	1001
2017-01-03 14:40:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:53 GameBoard.setupTreasurePanel()	4 1
2017-01-03 14:40:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:53 AI_Player.update()	update
2017-01-03 14:40:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:53 GameBoard.setupTreasurePanel()	4 1
2017-01-03 14:40:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:53 AI_Player.update()	update
2017-01-03 14:40:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:53 AI_Player.update()	Search took4ms
2017-01-03 14:40:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:53 AI_Player.update()		110,	11,	111,	110,	111,	1010,	11
2017-01-03 14:40:53 AI_Player.update()		1100,	1100,	111,	111,	101,	1100,	110
2017-01-03 14:40:53 AI_Player.update()		1110,	11,	1110,	1011,	111,	110,	1011
2017-01-03 14:40:53 AI_Player.update()		101,	1011,	110,	1001,	1011,	1010,	1010
2017-01-03 14:40:53 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:40:53 AI_Player.update()		110,	110,	101,	1001,	101,	1010,	1011
2017-01-03 14:40:53 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	1010,	1001
2017-01-03 14:40:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:53 GameBoard.setupTreasurePanel()	4 1
2017-01-03 14:40:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:53 AI_Player.update()	update
2017-01-03 14:40:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:53 GameBoard.setupTreasurePanel()	4 1
2017-01-03 14:40:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:53 AI_Player.update()	update
2017-01-03 14:40:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:53 AI_Player.update()	Search took2ms
2017-01-03 14:40:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:53 AI_Player.update()		110,	11,	111,	110,	111,	1100,	11
2017-01-03 14:40:53 AI_Player.update()		1100,	1100,	111,	111,	101,	110,	110
2017-01-03 14:40:53 AI_Player.update()		1110,	11,	1110,	1011,	111,	1010,	1011
2017-01-03 14:40:53 AI_Player.update()		101,	1011,	110,	1001,	1011,	1001,	1010
2017-01-03 14:40:53 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-03 14:40:53 AI_Player.update()		110,	110,	101,	1001,	101,	1010,	1011
2017-01-03 14:40:53 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	1010,	1001
2017-01-03 14:40:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:53 GameBoard.setupTreasurePanel()	4 1
2017-01-03 14:40:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:54 AI_Player.update()	update
2017-01-03 14:40:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	4 1
2017-01-03 14:40:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:54 AI_Player.update()	update
2017-01-03 14:40:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:54 AI_Player.update()	Search took7ms
2017-01-03 14:40:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:54 AI_Player.update()		110,	11,	111,	111,	111,	1100,	11
2017-01-03 14:40:54 AI_Player.update()		1100,	1100,	111,	1011,	101,	110,	110
2017-01-03 14:40:54 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-03 14:40:54 AI_Player.update()		101,	1011,	110,	1010,	1011,	1001,	1010
2017-01-03 14:40:54 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1010,	1011
2017-01-03 14:40:54 AI_Player.update()		110,	110,	101,	1100,	101,	1010,	1011
2017-01-03 14:40:54 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1010,	1001
2017-01-03 14:40:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	4 1
2017-01-03 14:40:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:54 AI_Player.update()	update
2017-01-03 14:40:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	5 1
2017-01-03 14:40:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:40:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:40:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:54 AI_Player.update()	update
2017-01-03 14:40:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:54 AI_Player.update()	Search took2ms
2017-01-03 14:40:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:54 AI_Player.update()		110,	11,	111,	111,	111,	110,	11
2017-01-03 14:40:54 AI_Player.update()		1100,	1100,	111,	1011,	101,	1010,	110
2017-01-03 14:40:54 AI_Player.update()		1110,	11,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:54 AI_Player.update()		101,	1011,	110,	1010,	1011,	1010,	1010
2017-01-03 14:40:54 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1010,	1011
2017-01-03 14:40:54 AI_Player.update()		110,	110,	101,	1100,	101,	1010,	1011
2017-01-03 14:40:54 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1100,	1001
2017-01-03 14:40:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	5 1
2017-01-03 14:40:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:54 AI_Player.update()	update
2017-01-03 14:40:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	5 1
2017-01-03 14:40:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:54 AI_Player.update()	update
2017-01-03 14:40:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:54 AI_Player.update()	Search took5ms
2017-01-03 14:40:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:54 AI_Player.update()		110,	1100,	111,	111,	111,	110,	11
2017-01-03 14:40:54 AI_Player.update()		1100,	11,	111,	1011,	101,	1010,	110
2017-01-03 14:40:54 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:54 AI_Player.update()		101,	110,	110,	1010,	1011,	1010,	1010
2017-01-03 14:40:54 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1010,	1011
2017-01-03 14:40:54 AI_Player.update()		110,	1110,	101,	1100,	101,	1010,	1011
2017-01-03 14:40:54 AI_Player.update()		1100,	11,	1101,	110,	1101,	1100,	1001
2017-01-03 14:40:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	5 1
2017-01-03 14:40:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:54 AI_Player.update()	update
2017-01-03 14:40:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	6 1
2017-01-03 14:40:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:40:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:40:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:54 AI_Player.update()	update
2017-01-03 14:40:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:54 AI_Player.update()	Search took7ms
2017-01-03 14:40:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:54 AI_Player.update()		110,	1100,	111,	1011,	111,	110,	11
2017-01-03 14:40:54 AI_Player.update()		1100,	11,	111,	1001,	101,	1010,	110
2017-01-03 14:40:54 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:54 AI_Player.update()		101,	110,	110,	1001,	1011,	1010,	1010
2017-01-03 14:40:54 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1010,	1011
2017-01-03 14:40:54 AI_Player.update()		110,	1110,	101,	110,	101,	1010,	1011
2017-01-03 14:40:54 AI_Player.update()		1100,	11,	1101,	111,	1101,	1100,	1001
2017-01-03 14:40:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	6 1
2017-01-03 14:40:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:54 AI_Player.update()	update
2017-01-03 14:40:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:54 GameBoard.setupTreasurePanel()	6 1
2017-01-03 14:40:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:55 AI_Player.update()	update
2017-01-03 14:40:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:55 AI_Player.update()	Search took2ms
2017-01-03 14:40:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:55 AI_Player.update()		110,	1100,	111,	111,	111,	110,	11
2017-01-03 14:40:55 AI_Player.update()		1100,	11,	111,	1011,	101,	1010,	110
2017-01-03 14:40:55 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:55 AI_Player.update()		101,	110,	110,	1010,	1011,	1010,	1010
2017-01-03 14:40:55 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1010,	1011
2017-01-03 14:40:55 AI_Player.update()		110,	1110,	101,	1100,	101,	1010,	1011
2017-01-03 14:40:55 AI_Player.update()		1100,	11,	1101,	110,	1101,	1100,	1001
2017-01-03 14:40:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:55 GameBoard.setupTreasurePanel()	6 1
2017-01-03 14:40:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:55 AI_Player.update()	update
2017-01-03 14:40:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:55 GameBoard.setupTreasurePanel()	6 1
2017-01-03 14:40:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:55 AI_Player.update()	update
2017-01-03 14:40:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:55 AI_Player.update()	Search took11ms
2017-01-03 14:40:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:55 AI_Player.update()		110,	1100,	111,	1011,	111,	110,	11
2017-01-03 14:40:55 AI_Player.update()		1100,	11,	111,	1001,	101,	1010,	110
2017-01-03 14:40:55 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:55 AI_Player.update()		101,	110,	110,	1001,	1011,	1010,	1010
2017-01-03 14:40:55 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1010,	1011
2017-01-03 14:40:55 AI_Player.update()		110,	1110,	101,	110,	101,	1010,	1011
2017-01-03 14:40:55 AI_Player.update()		1100,	11,	1101,	111,	1101,	1100,	1001
2017-01-03 14:40:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:55 GameBoard.setupTreasurePanel()	6 1
2017-01-03 14:40:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:55 AI_Player.update()	update
2017-01-03 14:40:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:55 GameBoard.setupTreasurePanel()	6 1
2017-01-03 14:40:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:55 AI_Player.update()	update
2017-01-03 14:40:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:55 AI_Player.update()	Search took3ms
2017-01-03 14:40:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:55 AI_Player.update()		110,	11,	111,	1011,	111,	110,	11
2017-01-03 14:40:55 AI_Player.update()		1100,	1100,	111,	1001,	101,	1010,	110
2017-01-03 14:40:55 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:55 AI_Player.update()		101,	1011,	110,	1001,	1011,	1010,	1010
2017-01-03 14:40:55 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1010,	1011
2017-01-03 14:40:55 AI_Player.update()		110,	110,	101,	110,	101,	1010,	1011
2017-01-03 14:40:55 AI_Player.update()		1100,	1110,	1101,	111,	1101,	1100,	1001
2017-01-03 14:40:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:55 GameBoard.setupTreasurePanel()	6 1
2017-01-03 14:40:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:55 AI_Player.update()	update
2017-01-03 14:40:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:55 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-03 14:40:55 AI_Player.update()	Player a has won!
2017-01-03 14:40:57 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 14:40:57 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 14:40:57 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 14:40:57 QueryProlog.reset()	setup(h1/h2). suceeded
2017-01-03 14:40:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:40:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:40:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:40:57 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:40:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:40:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:40:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:40:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:40:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:40:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:40:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 14:40:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:40:57 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:40:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:58 AI_Player.update()	update
2017-01-03 14:40:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:58 AI_Player.update()	Search took2ms
2017-01-03 14:40:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:58 AI_Player.update()		110,	101,	111,	11,	111,	1110,	11
2017-01-03 14:40:58 AI_Player.update()		1100,	1100,	1010,	1010,	11,	1001,	1010
2017-01-03 14:40:58 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-03 14:40:58 AI_Player.update()		1100,	1010,	1101,	1101,	1001,	1010,	110
2017-01-03 14:40:58 AI_Player.update()		1110,	1110,	1101,	1011,	1011,	11,	1011
2017-01-03 14:40:58 AI_Player.update()		1100,	1010,	1010,	101,	110,	101,	1001
2017-01-03 14:40:58 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-03 14:40:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:40:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:58 AI_Player.update()	update
2017-01-03 14:40:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:40:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:58 AI_Player.update()	update
2017-01-03 14:40:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:58 AI_Player.update()	Search took2ms
2017-01-03 14:40:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:58 AI_Player.update()		110,	101,	111,	11,	111,	1001,	11
2017-01-03 14:40:58 AI_Player.update()		1100,	1100,	1010,	1010,	11,	1010,	1010
2017-01-03 14:40:58 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-03 14:40:58 AI_Player.update()		1100,	1010,	1101,	1101,	1001,	11,	110
2017-01-03 14:40:58 AI_Player.update()		1110,	1110,	1101,	1011,	1011,	101,	1011
2017-01-03 14:40:58 AI_Player.update()		1100,	1010,	1010,	101,	110,	101,	1001
2017-01-03 14:40:58 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1110,	1001
2017-01-03 14:40:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:40:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:58 AI_Player.update()	update
2017-01-03 14:40:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:40:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:58 AI_Player.update()	update
2017-01-03 14:40:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:58 AI_Player.update()	Search took7ms
2017-01-03 14:40:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:58 AI_Player.update()		110,	1100,	111,	11,	111,	1001,	11
2017-01-03 14:40:58 AI_Player.update()		1100,	1001,	1010,	1010,	11,	1010,	1010
2017-01-03 14:40:58 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-03 14:40:58 AI_Player.update()		1100,	1110,	1101,	1101,	1001,	11,	110
2017-01-03 14:40:58 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	101,	1011
2017-01-03 14:40:58 AI_Player.update()		1100,	1100,	1010,	101,	110,	101,	1001
2017-01-03 14:40:58 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1110,	1001
2017-01-03 14:40:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:40:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:58 AI_Player.update()	update
2017-01-03 14:40:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:40:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:58 AI_Player.update()	update
2017-01-03 14:40:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:58 AI_Player.update()	Search took2ms
2017-01-03 14:40:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:58 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-03 14:40:58 AI_Player.update()		1100,	1001,	1010,	1010,	11,	1010,	1010
2017-01-03 14:40:58 AI_Player.update()		1110,	1010,	1110,	1010,	111,	11,	1011
2017-01-03 14:40:58 AI_Player.update()		1100,	1110,	1101,	1101,	1001,	101,	110
2017-01-03 14:40:58 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	101,	1011
2017-01-03 14:40:58 AI_Player.update()		1100,	1100,	1010,	101,	110,	1110,	1001
2017-01-03 14:40:58 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:40:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:40:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:58 AI_Player.update()	update
2017-01-03 14:40:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:40:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:58 AI_Player.update()	update
2017-01-03 14:40:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:58 AI_Player.update()	Search took6ms
2017-01-03 14:40:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:58 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-03 14:40:58 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:40:58 AI_Player.update()		1110,	1110,	1110,	1010,	111,	11,	1011
2017-01-03 14:40:58 AI_Player.update()		1100,	1010,	1101,	1101,	1001,	101,	110
2017-01-03 14:40:58 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:40:58 AI_Player.update()		1100,	101,	1010,	101,	110,	1110,	1001
2017-01-03 14:40:58 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:40:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:40:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:58 AI_Player.update()	update
2017-01-03 14:40:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:40:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:59 AI_Player.update()	update
2017-01-03 14:40:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:59 AI_Player.update()	Search took5ms
2017-01-03 14:40:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:59 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-03 14:40:59 AI_Player.update()		1100,	1010,	1010,	1010,	11,	11,	1010
2017-01-03 14:40:59 AI_Player.update()		1110,	1110,	1110,	1010,	111,	101,	1011
2017-01-03 14:40:59 AI_Player.update()		1100,	1010,	1101,	1101,	1001,	101,	110
2017-01-03 14:40:59 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	1110,	1011
2017-01-03 14:40:59 AI_Player.update()		1100,	101,	1010,	101,	110,	1001,	1001
2017-01-03 14:40:59 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-03 14:40:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:40:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:59 AI_Player.update()	update
2017-01-03 14:40:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:40:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:59 AI_Player.update()	update
2017-01-03 14:40:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:59 AI_Player.update()	Search took6ms
2017-01-03 14:40:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:59 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-03 14:40:59 AI_Player.update()		1100,	1110,	1010,	1010,	11,	11,	1010
2017-01-03 14:40:59 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-03 14:40:59 AI_Player.update()		1100,	1100,	1101,	1101,	1001,	101,	110
2017-01-03 14:40:59 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1110,	1011
2017-01-03 14:40:59 AI_Player.update()		1100,	1100,	1010,	101,	110,	1001,	1001
2017-01-03 14:40:59 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-03 14:40:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:40:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:59 AI_Player.update()	update
2017-01-03 14:40:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:40:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:59 AI_Player.update()	update
2017-01-03 14:40:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:59 AI_Player.update()	Search took13ms
2017-01-03 14:40:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:59 AI_Player.update()		110,	1010,	111,	11,	111,	11,	11
2017-01-03 14:40:59 AI_Player.update()		1100,	1110,	1010,	1010,	11,	101,	1010
2017-01-03 14:40:59 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-03 14:40:59 AI_Player.update()		1100,	1100,	1101,	1101,	1001,	1110,	110
2017-01-03 14:40:59 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1001,	1011
2017-01-03 14:40:59 AI_Player.update()		1100,	1100,	1010,	101,	110,	1010,	1001
2017-01-03 14:40:59 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-03 14:40:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:40:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:59 AI_Player.update()	update
2017-01-03 14:40:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:40:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:59 AI_Player.update()	update
2017-01-03 14:40:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:59 AI_Player.update()	Search took9ms
2017-01-03 14:40:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:59 AI_Player.update()		110,	1110,	111,	11,	111,	11,	11
2017-01-03 14:40:59 AI_Player.update()		1100,	1010,	1010,	1010,	11,	101,	1010
2017-01-03 14:40:59 AI_Player.update()		1110,	1100,	1110,	1010,	111,	101,	1011
2017-01-03 14:40:59 AI_Player.update()		1100,	101,	1101,	1101,	1001,	1110,	110
2017-01-03 14:40:59 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	1001,	1011
2017-01-03 14:40:59 AI_Player.update()		1100,	1001,	1010,	101,	110,	1010,	1001
2017-01-03 14:40:59 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1010,	1001
2017-01-03 14:40:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:40:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:59 AI_Player.update()	update
2017-01-03 14:40:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:40:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:59 AI_Player.update()	update
2017-01-03 14:40:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:59 AI_Player.update()	Search took12ms
2017-01-03 14:40:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:59 AI_Player.update()		110,	1110,	111,	11,	111,	101,	11
2017-01-03 14:40:59 AI_Player.update()		1100,	1010,	1010,	1010,	11,	101,	1010
2017-01-03 14:40:59 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1110,	1011
2017-01-03 14:40:59 AI_Player.update()		1100,	101,	1101,	1101,	1001,	1001,	110
2017-01-03 14:40:59 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	1010,	1011
2017-01-03 14:40:59 AI_Player.update()		1100,	1001,	1010,	101,	110,	1010,	1001
2017-01-03 14:40:59 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:40:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:41:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:00 AI_Player.update()	update
2017-01-03 14:41:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:41:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:00 AI_Player.update()	update
2017-01-03 14:41:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:00 AI_Player.update()	Search took7ms
2017-01-03 14:41:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:00 AI_Player.update()		110,	1110,	111,	11,	111,	101,	11
2017-01-03 14:41:00 AI_Player.update()		1100,	1010,	1010,	1010,	11,	101,	1010
2017-01-03 14:41:00 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1110,	1011
2017-01-03 14:41:00 AI_Player.update()		110,	1100,	101,	1101,	1101,	1001,	1001
2017-01-03 14:41:00 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	1010,	1011
2017-01-03 14:41:00 AI_Player.update()		1100,	1001,	1010,	101,	110,	1010,	1001
2017-01-03 14:41:00 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:41:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:41:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:00 AI_Player.update()	update
2017-01-03 14:41:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:00 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:41:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:41:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:41:00 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:41:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:41:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:41:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:41:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:41:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:41:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:41:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 14:41:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:41:00 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:41:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:00 AI_Player.update()	update
2017-01-03 14:41:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:00 AI_Player.update()	Search took14ms
2017-01-03 14:41:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:00 AI_Player.update()		110,	1110,	111,	11,	111,	101,	11
2017-01-03 14:41:00 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1110,	1010
2017-01-03 14:41:00 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-03 14:41:00 AI_Player.update()		110,	1100,	101,	1101,	1101,	1010,	1001
2017-01-03 14:41:00 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	1010,	1011
2017-01-03 14:41:00 AI_Player.update()		1100,	1001,	1010,	101,	110,	11,	1001
2017-01-03 14:41:00 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-03 14:41:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:00 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:41:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:00 AI_Player.update()	update
2017-01-03 14:41:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:00 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:41:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:00 AI_Player.update()	update
2017-01-03 14:41:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:00 AI_Player.update()	Search took2ms
2017-01-03 14:41:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:00 AI_Player.update()		110,	1110,	111,	11,	111,	101,	11
2017-01-03 14:41:00 AI_Player.update()		1100,	1010,	1010,	1010,	11,	101,	1010
2017-01-03 14:41:00 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1110,	1011
2017-01-03 14:41:00 AI_Player.update()		110,	1100,	101,	1101,	1101,	1001,	1001
2017-01-03 14:41:00 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	1010,	1011
2017-01-03 14:41:00 AI_Player.update()		1100,	1001,	1010,	101,	110,	1010,	1001
2017-01-03 14:41:00 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:41:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:00 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:41:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:00 AI_Player.update()	update
2017-01-03 14:41:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:00 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:41:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:00 AI_Player.update()	update
2017-01-03 14:41:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:00 AI_Player.update()	Search took15ms
2017-01-03 14:41:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:00 AI_Player.update()		110,	1110,	111,	11,	111,	101,	11
2017-01-03 14:41:00 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1110,	1010
2017-01-03 14:41:00 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-03 14:41:00 AI_Player.update()		110,	1100,	101,	1101,	1101,	1010,	1001
2017-01-03 14:41:00 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	1010,	1011
2017-01-03 14:41:00 AI_Player.update()		1100,	1001,	1010,	101,	110,	11,	1001
2017-01-03 14:41:00 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-03 14:41:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:00 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:41:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:00 AI_Player.update()	update
2017-01-03 14:41:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:00 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:41:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:01 AI_Player.update()	update
2017-01-03 14:41:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:01 AI_Player.update()	Search took6ms
2017-01-03 14:41:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:01 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-03 14:41:01 AI_Player.update()		1100,	1100,	1010,	1010,	11,	1110,	1010
2017-01-03 14:41:01 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-03 14:41:01 AI_Player.update()		110,	1100,	101,	1101,	1101,	1010,	1001
2017-01-03 14:41:01 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	1010,	1011
2017-01-03 14:41:01 AI_Player.update()		1100,	1010,	1010,	101,	110,	11,	1001
2017-01-03 14:41:01 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	101,	1001
2017-01-03 14:41:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:01 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:41:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:01 AI_Player.update()	update
2017-01-03 14:41:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:01 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:41:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:01 AI_Player.update()	update
2017-01-03 14:41:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:01 AI_Player.update()	Search took6ms
2017-01-03 14:41:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:01 AI_Player.update()		110,	1010,	111,	11,	111,	1110,	11
2017-01-03 14:41:01 AI_Player.update()		1100,	1100,	1010,	1010,	11,	1001,	1010
2017-01-03 14:41:01 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-03 14:41:01 AI_Player.update()		110,	1100,	101,	1101,	1101,	1010,	1001
2017-01-03 14:41:01 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	11,	1011
2017-01-03 14:41:01 AI_Player.update()		1100,	1010,	1010,	101,	110,	101,	1001
2017-01-03 14:41:01 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	101,	1001
2017-01-03 14:41:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:01 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:41:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:01 AI_Player.update()	update
2017-01-03 14:41:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:01 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:41:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:01 AI_Player.update()	update
2017-01-03 14:41:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:01 AI_Player.update()	Search took4ms
2017-01-03 14:41:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:01 AI_Player.update()		110,	1100,	111,	11,	111,	1110,	11
2017-01-03 14:41:01 AI_Player.update()		1100,	1100,	1010,	1010,	11,	1001,	1010
2017-01-03 14:41:01 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-03 14:41:01 AI_Player.update()		110,	1001,	101,	1101,	1101,	1010,	1001
2017-01-03 14:41:01 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	11,	1011
2017-01-03 14:41:01 AI_Player.update()		1100,	1110,	1010,	101,	110,	101,	1001
2017-01-03 14:41:01 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-03 14:41:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:01 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:41:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:01 AI_Player.update()	update
2017-01-03 14:41:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:01 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:41:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:01 AI_Player.update()	update
2017-01-03 14:41:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:01 AI_Player.update()	Search took6ms
2017-01-03 14:41:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:01 AI_Player.update()		110,	1100,	111,	11,	111,	1001,	11
2017-01-03 14:41:01 AI_Player.update()		1100,	1100,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:01 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-03 14:41:01 AI_Player.update()		110,	1001,	101,	1101,	1101,	11,	1001
2017-01-03 14:41:01 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:01 AI_Player.update()		1100,	1110,	1010,	101,	110,	101,	1001
2017-01-03 14:41:01 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1110,	1001
2017-01-03 14:41:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:01 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:41:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:01 AI_Player.update()	update
2017-01-03 14:41:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:01 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:41:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:01 AI_Player.update()	update
2017-01-03 14:41:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:01 AI_Player.update()	Search took3ms
2017-01-03 14:41:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:01 AI_Player.update()		110,	1100,	111,	11,	111,	1001,	11
2017-01-03 14:41:01 AI_Player.update()		1100,	1100,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:01 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-03 14:41:01 AI_Player.update()		1001,	110,	1001,	101,	1101,	1101,	11
2017-01-03 14:41:01 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:01 AI_Player.update()		1100,	1110,	1010,	101,	110,	101,	1001
2017-01-03 14:41:01 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1110,	1001
2017-01-03 14:41:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:01 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:41:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:02 AI_Player.update()	update
2017-01-03 14:41:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:41:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:02 AI_Player.update()	update
2017-01-03 14:41:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:02 AI_Player.update()	Search took7ms
2017-01-03 14:41:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:02 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-03 14:41:02 AI_Player.update()		1100,	1100,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:02 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:02 AI_Player.update()		1001,	110,	1001,	101,	1101,	101,	11
2017-01-03 14:41:02 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:02 AI_Player.update()		1100,	1110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:02 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:41:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:02 AI_Player.update()	update
2017-01-03 14:41:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:41:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:02 AI_Player.update()	update
2017-01-03 14:41:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:02 AI_Player.update()	Search took7ms
2017-01-03 14:41:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:02 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-03 14:41:02 AI_Player.update()		1100,	1100,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:02 AI_Player.update()		1110,	110,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:02 AI_Player.update()		1001,	1010,	1001,	101,	1101,	101,	11
2017-01-03 14:41:02 AI_Player.update()		1110,	1110,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:02 AI_Player.update()		1100,	1010,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:02 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:41:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:02 AI_Player.update()	update
2017-01-03 14:41:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:41:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:02 AI_Player.update()	update
2017-01-03 14:41:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:02 AI_Player.update()	Search took117ms
2017-01-03 14:41:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:02 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-03 14:41:02 AI_Player.update()		1100,	110,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:02 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:02 AI_Player.update()		1001,	1110,	1001,	101,	1101,	101,	11
2017-01-03 14:41:02 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:02 AI_Player.update()		1100,	1100,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:02 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:41:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:02 AI_Player.update()	update
2017-01-03 14:41:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:02 GameBoard.setupTreasurePanel()	2 2
2017-01-03 14:41:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:41:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:41:02 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:41:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:41:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:41:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:41:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:41:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:41:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:41:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 14:41:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:41:02 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:41:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:02 AI_Player.update()	update
2017-01-03 14:41:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:02 AI_Player.update()	Search took6ms
2017-01-03 14:41:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:02 AI_Player.update()		110,	110,	111,	11,	111,	1010,	11
2017-01-03 14:41:02 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:02 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:02 AI_Player.update()		1001,	1010,	1001,	101,	1101,	101,	11
2017-01-03 14:41:02 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:02 AI_Player.update()		1100,	1100,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:02 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:02 GameBoard.setupTreasurePanel()	2 2
2017-01-03 14:41:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:03 AI_Player.update()	update
2017-01-03 14:41:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:03 GameBoard.setupTreasurePanel()	2 2
2017-01-03 14:41:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:03 AI_Player.update()	update
2017-01-03 14:41:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:03 AI_Player.update()	Search took131ms
2017-01-03 14:41:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:03 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-03 14:41:03 AI_Player.update()		1100,	1110,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:03 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:03 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:03 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:03 AI_Player.update()		1100,	1100,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:03 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:03 GameBoard.setupTreasurePanel()	2 2
2017-01-03 14:41:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:03 AI_Player.update()	update
2017-01-03 14:41:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:03 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:41:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:41:03 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:41:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:41:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:41:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:41:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:41:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:41:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:41:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 14:41:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:41:03 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:41:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:03 AI_Player.update()	update
2017-01-03 14:41:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:03 AI_Player.update()	Search took4ms
2017-01-03 14:41:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:03 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:03 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:03 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:03 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:03 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:03 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:03 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:03 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:03 AI_Player.update()	update
2017-01-03 14:41:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:03 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:03 AI_Player.update()	update
2017-01-03 14:41:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:03 AI_Player.update()	Search took16ms
2017-01-03 14:41:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:03 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:03 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:03 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:03 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:03 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:03 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:03 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:03 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:03 AI_Player.update()	update
2017-01-03 14:41:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:03 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:03 AI_Player.update()	update
2017-01-03 14:41:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:03 AI_Player.update()	Search took3ms
2017-01-03 14:41:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:03 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:03 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:03 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:03 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:03 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:03 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:03 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:03 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:03 AI_Player.update()	update
2017-01-03 14:41:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:04 AI_Player.update()	update
2017-01-03 14:41:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:04 AI_Player.update()	Search took13ms
2017-01-03 14:41:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:04 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:04 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:04 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:04 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:04 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:04 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:04 AI_Player.update()	update
2017-01-03 14:41:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:04 AI_Player.update()	update
2017-01-03 14:41:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:04 AI_Player.update()	Search took3ms
2017-01-03 14:41:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:04 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:04 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:04 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:04 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:04 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:04 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:04 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:04 AI_Player.update()	update
2017-01-03 14:41:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:04 AI_Player.update()	update
2017-01-03 14:41:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:04 AI_Player.update()	Search took14ms
2017-01-03 14:41:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:04 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:04 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:04 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:04 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:04 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:04 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:04 AI_Player.update()	update
2017-01-03 14:41:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:04 AI_Player.update()	update
2017-01-03 14:41:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:04 AI_Player.update()	Search took2ms
2017-01-03 14:41:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:04 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:04 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:04 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:04 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:04 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:04 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:04 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:04 AI_Player.update()	update
2017-01-03 14:41:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:04 AI_Player.update()	update
2017-01-03 14:41:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:04 AI_Player.update()	Search took15ms
2017-01-03 14:41:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:04 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:04 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:04 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:04 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:04 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:04 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:05 AI_Player.update()	update
2017-01-03 14:41:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:05 AI_Player.update()	update
2017-01-03 14:41:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:05 AI_Player.update()	Search took1ms
2017-01-03 14:41:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:05 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:05 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:05 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:05 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:05 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:05 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:05 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:05 AI_Player.update()	update
2017-01-03 14:41:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:05 AI_Player.update()	update
2017-01-03 14:41:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:05 AI_Player.update()	Search took16ms
2017-01-03 14:41:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:05 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:05 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:05 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:05 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:05 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:05 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:05 AI_Player.update()	update
2017-01-03 14:41:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:05 AI_Player.update()	update
2017-01-03 14:41:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:05 AI_Player.update()	Search took2ms
2017-01-03 14:41:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:05 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:05 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:05 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:05 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:05 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:05 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:05 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:05 AI_Player.update()	update
2017-01-03 14:41:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:05 AI_Player.update()	update
2017-01-03 14:41:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:05 AI_Player.update()	Search took15ms
2017-01-03 14:41:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:05 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:05 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:05 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:05 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:05 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:05 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:05 AI_Player.update()	update
2017-01-03 14:41:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:06 AI_Player.update()	update
2017-01-03 14:41:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:06 AI_Player.update()	Search took2ms
2017-01-03 14:41:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:06 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:06 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:06 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:06 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:06 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:06 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:06 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:06 AI_Player.update()	update
2017-01-03 14:41:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:06 AI_Player.update()	update
2017-01-03 14:41:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:06 AI_Player.update()	Search took16ms
2017-01-03 14:41:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:06 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:06 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:06 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:06 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:06 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:06 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:06 AI_Player.update()	update
2017-01-03 14:41:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:06 AI_Player.update()	update
2017-01-03 14:41:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:06 AI_Player.update()	Search took2ms
2017-01-03 14:41:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:06 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:06 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:06 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:06 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:06 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:06 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:06 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:06 AI_Player.update()	update
2017-01-03 14:41:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:06 AI_Player.update()	update
2017-01-03 14:41:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:06 AI_Player.update()	Search took14ms
2017-01-03 14:41:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:06 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:06 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:06 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:06 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:06 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:06 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:06 AI_Player.update()	update
2017-01-03 14:41:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:06 AI_Player.update()	update
2017-01-03 14:41:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:06 AI_Player.update()	Search took2ms
2017-01-03 14:41:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:06 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:06 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:06 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:06 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:06 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:06 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:06 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:07 AI_Player.update()	update
2017-01-03 14:41:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:07 AI_Player.update()	update
2017-01-03 14:41:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:07 AI_Player.update()	Search took14ms
2017-01-03 14:41:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:07 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:07 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:07 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:07 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:07 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:07 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:07 AI_Player.update()	update
2017-01-03 14:41:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:07 AI_Player.update()	update
2017-01-03 14:41:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:07 AI_Player.update()	Search took2ms
2017-01-03 14:41:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:07 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:07 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:07 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:07 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:07 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:07 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:07 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:07 AI_Player.update()	update
2017-01-03 14:41:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:07 AI_Player.update()	update
2017-01-03 14:41:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:07 AI_Player.update()	Search took15ms
2017-01-03 14:41:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:07 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:07 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:07 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:07 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:07 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:07 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:07 AI_Player.update()	update
2017-01-03 14:41:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:07 AI_Player.update()	update
2017-01-03 14:41:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:07 AI_Player.update()	Search took3ms
2017-01-03 14:41:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:07 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:07 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:07 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:07 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:07 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:07 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:07 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:07 AI_Player.update()	update
2017-01-03 14:41:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:08 AI_Player.update()	update
2017-01-03 14:41:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:08 AI_Player.update()	Search took14ms
2017-01-03 14:41:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:08 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:08 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:08 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:08 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:08 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:08 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:08 AI_Player.update()	update
2017-01-03 14:41:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:08 AI_Player.update()	update
2017-01-03 14:41:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:08 AI_Player.update()	Search took3ms
2017-01-03 14:41:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:08 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:08 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:08 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:08 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:08 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:08 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:08 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:08 AI_Player.update()	update
2017-01-03 14:41:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:08 AI_Player.update()	update
2017-01-03 14:41:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:08 AI_Player.update()	Search took13ms
2017-01-03 14:41:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:08 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:08 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:08 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:08 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:08 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:08 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:08 AI_Player.update()	update
2017-01-03 14:41:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:08 AI_Player.update()	update
2017-01-03 14:41:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:08 AI_Player.update()	Search took1ms
2017-01-03 14:41:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:08 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:08 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:08 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:08 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:08 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:08 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:08 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:08 AI_Player.update()	update
2017-01-03 14:41:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:08 AI_Player.update()	update
2017-01-03 14:41:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:08 AI_Player.update()	Search took17ms
2017-01-03 14:41:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:08 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:08 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:08 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:08 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:08 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:08 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:09 AI_Player.update()	update
2017-01-03 14:41:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:09 AI_Player.update()	update
2017-01-03 14:41:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:09 AI_Player.update()	Search took2ms
2017-01-03 14:41:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:09 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:09 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:09 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:09 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:09 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:09 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:09 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:09 AI_Player.update()	update
2017-01-03 14:41:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:09 AI_Player.update()	update
2017-01-03 14:41:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:09 AI_Player.update()	Search took14ms
2017-01-03 14:41:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:09 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:09 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:09 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:09 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:09 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:09 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:09 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:09 AI_Player.update()	update
2017-01-03 14:41:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:09 AI_Player.update()	update
2017-01-03 14:41:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:09 AI_Player.update()	Search took4ms
2017-01-03 14:41:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:09 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:09 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:09 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:09 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:09 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:09 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:09 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:09 AI_Player.update()	update
2017-01-03 14:41:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:09 AI_Player.update()	update
2017-01-03 14:41:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:09 AI_Player.update()	Search took19ms
2017-01-03 14:41:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:09 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:09 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:09 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:09 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:09 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:09 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:09 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:09 AI_Player.update()	update
2017-01-03 14:41:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:10 AI_Player.update()	update
2017-01-03 14:41:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:10 AI_Player.update()	Search took3ms
2017-01-03 14:41:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:10 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:10 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:10 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:10 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:10 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:10 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:10 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:10 AI_Player.update()	update
2017-01-03 14:41:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:10 AI_Player.update()	update
2017-01-03 14:41:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:10 AI_Player.update()	Search took18ms
2017-01-03 14:41:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:10 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:10 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:10 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:10 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:10 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:10 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:10 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:10 AI_Player.update()	update
2017-01-03 14:41:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:10 AI_Player.update()	update
2017-01-03 14:41:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:10 AI_Player.update()	Search took2ms
2017-01-03 14:41:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:10 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:10 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:10 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:10 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:10 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:10 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:10 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:10 AI_Player.update()	update
2017-01-03 14:41:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:10 AI_Player.update()	update
2017-01-03 14:41:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:10 AI_Player.update()	Search took17ms
2017-01-03 14:41:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:10 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:10 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:10 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:10 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:10 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:10 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:10 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:10 AI_Player.update()	update
2017-01-03 14:41:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:10 AI_Player.update()	update
2017-01-03 14:41:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:10 AI_Player.update()	Search took3ms
2017-01-03 14:41:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:10 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:10 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:10 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:10 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:10 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:10 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:10 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:11 AI_Player.update()	update
2017-01-03 14:41:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:11 AI_Player.update()	update
2017-01-03 14:41:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:11 AI_Player.update()	Search took15ms
2017-01-03 14:41:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:11 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:11 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:11 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:11 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:11 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:11 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:11 AI_Player.update()	update
2017-01-03 14:41:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:11 AI_Player.update()	update
2017-01-03 14:41:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:11 AI_Player.update()	Search took3ms
2017-01-03 14:41:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:11 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:11 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:11 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:11 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:11 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:11 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:11 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:11 AI_Player.update()	update
2017-01-03 14:41:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:11 AI_Player.update()	update
2017-01-03 14:41:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:11 AI_Player.update()	Search took14ms
2017-01-03 14:41:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:11 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:11 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:11 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:11 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:11 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:11 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:11 AI_Player.update()	update
2017-01-03 14:41:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:11 AI_Player.update()	update
2017-01-03 14:41:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:11 AI_Player.update()	Search took1ms
2017-01-03 14:41:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:11 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:11 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:11 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:11 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:11 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:11 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:11 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:11 AI_Player.update()	update
2017-01-03 14:41:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:11 AI_Player.update()	update
2017-01-03 14:41:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:12 AI_Player.update()	Search took15ms
2017-01-03 14:41:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:12 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:12 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:12 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:12 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:12 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:12 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:12 AI_Player.update()	update
2017-01-03 14:41:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:12 AI_Player.update()	update
2017-01-03 14:41:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:12 AI_Player.update()	Search took2ms
2017-01-03 14:41:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:12 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:12 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:12 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:12 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:12 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:12 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:12 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:12 AI_Player.update()	update
2017-01-03 14:41:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:12 AI_Player.update()	update
2017-01-03 14:41:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:12 AI_Player.update()	Search took19ms
2017-01-03 14:41:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:12 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:12 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:12 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:12 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:12 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:12 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:12 AI_Player.update()	update
2017-01-03 14:41:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:12 AI_Player.update()	update
2017-01-03 14:41:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:12 AI_Player.update()	Search took3ms
2017-01-03 14:41:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:12 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:12 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:12 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:12 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:12 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:12 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:12 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:12 AI_Player.update()	update
2017-01-03 14:41:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:12 AI_Player.update()	update
2017-01-03 14:41:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:12 AI_Player.update()	Search took10ms
2017-01-03 14:41:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:12 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:12 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:12 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:12 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:12 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:12 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:12 AI_Player.update()	update
2017-01-03 14:41:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:13 AI_Player.update()	update
2017-01-03 14:41:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:13 AI_Player.update()	Search took4ms
2017-01-03 14:41:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:13 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:13 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:13 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:13 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:13 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:13 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:13 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:13 AI_Player.update()	update
2017-01-03 14:41:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:13 AI_Player.update()	update
2017-01-03 14:41:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:13 AI_Player.update()	Search took18ms
2017-01-03 14:41:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:13 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:13 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:13 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:13 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:13 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:13 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:13 AI_Player.update()	update
2017-01-03 14:41:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:13 AI_Player.update()	update
2017-01-03 14:41:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:13 AI_Player.update()	Search took2ms
2017-01-03 14:41:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:13 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:13 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:13 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:13 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:13 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:13 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:13 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:13 AI_Player.update()	update
2017-01-03 14:41:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:13 AI_Player.update()	update
2017-01-03 14:41:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:13 AI_Player.update()	Search took12ms
2017-01-03 14:41:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:13 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:13 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:13 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:13 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:13 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:13 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:13 AI_Player.update()	update
2017-01-03 14:41:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:13 AI_Player.update()	update
2017-01-03 14:41:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:13 AI_Player.update()	Search took2ms
2017-01-03 14:41:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:13 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:13 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:13 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:13 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:13 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:13 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:13 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:14 AI_Player.update()	update
2017-01-03 14:41:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:14 AI_Player.update()	update
2017-01-03 14:41:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:14 AI_Player.update()	Search took16ms
2017-01-03 14:41:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:14 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:14 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:14 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:14 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:14 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:14 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:14 AI_Player.update()	update
2017-01-03 14:41:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:14 AI_Player.update()	update
2017-01-03 14:41:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:14 AI_Player.update()	Search took1ms
2017-01-03 14:41:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:14 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:14 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:14 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:14 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:14 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:14 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:14 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:14 AI_Player.update()	update
2017-01-03 14:41:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:14 AI_Player.update()	update
2017-01-03 14:41:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:14 AI_Player.update()	Search took12ms
2017-01-03 14:41:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:14 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:14 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:14 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:14 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:14 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:14 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:14 AI_Player.update()	update
2017-01-03 14:41:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:14 AI_Player.update()	update
2017-01-03 14:41:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:14 AI_Player.update()	Search took2ms
2017-01-03 14:41:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:14 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:14 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:14 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:14 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:14 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:14 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:14 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:14 AI_Player.update()	update
2017-01-03 14:41:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:15 AI_Player.update()	update
2017-01-03 14:41:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:15 AI_Player.update()	Search took16ms
2017-01-03 14:41:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:15 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:15 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:15 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:15 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:15 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:15 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:15 AI_Player.update()	update
2017-01-03 14:41:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:15 AI_Player.update()	update
2017-01-03 14:41:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:15 AI_Player.update()	Search took1ms
2017-01-03 14:41:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:15 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:15 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:15 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:15 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:15 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:15 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:15 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:15 AI_Player.update()	update
2017-01-03 14:41:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:15 AI_Player.update()	update
2017-01-03 14:41:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:15 AI_Player.update()	Search took18ms
2017-01-03 14:41:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:15 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:15 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:15 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:15 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:15 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:15 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:15 AI_Player.update()	update
2017-01-03 14:41:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:15 AI_Player.update()	update
2017-01-03 14:41:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:15 AI_Player.update()	Search took1ms
2017-01-03 14:41:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:15 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:15 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:15 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:15 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:15 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:15 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:15 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:15 AI_Player.update()	update
2017-01-03 14:41:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:15 AI_Player.update()	update
2017-01-03 14:41:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:15 AI_Player.update()	Search took14ms
2017-01-03 14:41:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:15 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:15 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:15 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:15 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:15 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:15 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:16 AI_Player.update()	update
2017-01-03 14:41:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:16 AI_Player.update()	update
2017-01-03 14:41:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:16 AI_Player.update()	Search took2ms
2017-01-03 14:41:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:16 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:16 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:16 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:16 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:16 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:16 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:16 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:16 AI_Player.update()	update
2017-01-03 14:41:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:16 AI_Player.update()	update
2017-01-03 14:41:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:16 AI_Player.update()	Search took17ms
2017-01-03 14:41:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:16 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:16 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:16 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:16 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:16 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:16 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:16 AI_Player.update()	update
2017-01-03 14:41:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:16 AI_Player.update()	update
2017-01-03 14:41:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:16 AI_Player.update()	Search took2ms
2017-01-03 14:41:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:16 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:16 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:16 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:16 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:16 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:16 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:16 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:16 AI_Player.update()	update
2017-01-03 14:41:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:16 AI_Player.update()	update
2017-01-03 14:41:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:16 AI_Player.update()	Search took16ms
2017-01-03 14:41:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:16 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:16 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:16 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:16 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:16 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:16 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:16 AI_Player.update()	update
2017-01-03 14:41:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:16 AI_Player.update()	update
2017-01-03 14:41:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:16 AI_Player.update()	Search took2ms
2017-01-03 14:41:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:16 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:16 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:16 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:16 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:16 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:16 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:16 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:17 AI_Player.update()	update
2017-01-03 14:41:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:17 AI_Player.update()	update
2017-01-03 14:41:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:17 AI_Player.update()	Search took14ms
2017-01-03 14:41:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:17 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:17 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:17 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:17 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:17 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:17 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:17 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:17 AI_Player.update()	update
2017-01-03 14:41:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:17 AI_Player.update()	update
2017-01-03 14:41:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:17 AI_Player.update()	Search took2ms
2017-01-03 14:41:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:17 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:17 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:17 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:17 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:17 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:17 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:17 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:17 AI_Player.update()	update
2017-01-03 14:41:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:17 AI_Player.update()	update
2017-01-03 14:41:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:17 AI_Player.update()	Search took15ms
2017-01-03 14:41:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:17 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:17 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:17 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:17 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:17 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:17 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:17 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:17 AI_Player.update()	update
2017-01-03 14:41:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:17 AI_Player.update()	update
2017-01-03 14:41:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:17 AI_Player.update()	Search took2ms
2017-01-03 14:41:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:17 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:17 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:17 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:17 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:17 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:17 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:17 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:18 AI_Player.update()	update
2017-01-03 14:41:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:18 AI_Player.update()	update
2017-01-03 14:41:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:18 AI_Player.update()	Search took16ms
2017-01-03 14:41:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:18 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:18 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:18 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:18 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:18 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:18 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:18 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:18 AI_Player.update()	update
2017-01-03 14:41:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:18 AI_Player.update()	update
2017-01-03 14:41:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:18 AI_Player.update()	Search took2ms
2017-01-03 14:41:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:18 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:18 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:18 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:18 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:18 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:18 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:18 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:18 AI_Player.update()	update
2017-01-03 14:41:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:18 AI_Player.update()	update
2017-01-03 14:41:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:18 AI_Player.update()	Search took12ms
2017-01-03 14:41:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:18 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:18 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:18 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:18 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:18 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:18 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:18 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:18 AI_Player.update()	update
2017-01-03 14:41:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:18 AI_Player.update()	update
2017-01-03 14:41:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:18 AI_Player.update()	Search took1ms
2017-01-03 14:41:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:18 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:18 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:18 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:18 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:18 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:18 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:18 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:18 AI_Player.update()	update
2017-01-03 14:41:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:19 AI_Player.update()	update
2017-01-03 14:41:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:19 AI_Player.update()	Search took10ms
2017-01-03 14:41:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:19 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:19 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:19 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:19 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:19 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:19 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:19 AI_Player.update()	update
2017-01-03 14:41:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:19 AI_Player.update()	update
2017-01-03 14:41:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:19 AI_Player.update()	Search took1ms
2017-01-03 14:41:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:19 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:19 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:19 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:19 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:19 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:19 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:19 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:19 AI_Player.update()	update
2017-01-03 14:41:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:19 AI_Player.update()	update
2017-01-03 14:41:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:19 AI_Player.update()	Search took13ms
2017-01-03 14:41:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:19 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:19 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:19 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:19 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:19 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:19 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:19 AI_Player.update()	update
2017-01-03 14:41:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:19 AI_Player.update()	update
2017-01-03 14:41:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:19 AI_Player.update()	Search took1ms
2017-01-03 14:41:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:19 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:19 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:19 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:19 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:19 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:19 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:19 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:19 AI_Player.update()	update
2017-01-03 14:41:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:19 AI_Player.update()	update
2017-01-03 14:41:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:19 AI_Player.update()	Search took18ms
2017-01-03 14:41:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:19 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:19 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:19 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:19 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:19 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:19 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:20 AI_Player.update()	update
2017-01-03 14:41:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:20 AI_Player.update()	update
2017-01-03 14:41:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:20 AI_Player.update()	Search took4ms
2017-01-03 14:41:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:20 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:20 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:20 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:20 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:20 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:20 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:20 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:20 AI_Player.update()	update
2017-01-03 14:41:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:20 AI_Player.update()	update
2017-01-03 14:41:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:20 AI_Player.update()	Search took14ms
2017-01-03 14:41:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:20 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:20 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:20 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:20 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:20 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:20 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:20 AI_Player.update()	update
2017-01-03 14:41:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:20 AI_Player.update()	update
2017-01-03 14:41:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:20 AI_Player.update()	Search took1ms
2017-01-03 14:41:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:20 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:20 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:20 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:20 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:20 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:20 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:20 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:20 AI_Player.update()	update
2017-01-03 14:41:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:20 AI_Player.update()	update
2017-01-03 14:41:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:20 AI_Player.update()	Search took15ms
2017-01-03 14:41:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:20 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:20 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:20 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:20 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:20 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:20 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:21 AI_Player.update()	update
2017-01-03 14:41:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:21 AI_Player.update()	update
2017-01-03 14:41:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:21 AI_Player.update()	Search took3ms
2017-01-03 14:41:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:21 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:21 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:21 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:21 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:21 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:21 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:21 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:21 AI_Player.update()	update
2017-01-03 14:41:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:21 AI_Player.update()	update
2017-01-03 14:41:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:21 AI_Player.update()	Search took14ms
2017-01-03 14:41:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:21 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:21 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:21 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:21 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:21 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:21 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:21 AI_Player.update()	update
2017-01-03 14:41:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:21 AI_Player.update()	update
2017-01-03 14:41:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:21 AI_Player.update()	Search took2ms
2017-01-03 14:41:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:21 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:21 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:21 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:21 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:21 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:21 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:21 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:21 AI_Player.update()	update
2017-01-03 14:41:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:21 AI_Player.update()	update
2017-01-03 14:41:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:21 AI_Player.update()	Search took12ms
2017-01-03 14:41:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:21 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:21 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:21 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:21 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:21 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:21 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:21 AI_Player.update()	update
2017-01-03 14:41:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:22 AI_Player.update()	update
2017-01-03 14:41:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:22 AI_Player.update()	Search took3ms
2017-01-03 14:41:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:22 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:22 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:22 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:22 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:22 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:22 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:22 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:22 AI_Player.update()	update
2017-01-03 14:41:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:22 AI_Player.update()	update
2017-01-03 14:41:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:22 AI_Player.update()	Search took13ms
2017-01-03 14:41:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:22 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:22 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:22 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:22 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:22 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:22 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:22 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:22 AI_Player.update()	update
2017-01-03 14:41:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:22 AI_Player.update()	update
2017-01-03 14:41:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:22 AI_Player.update()	Search took2ms
2017-01-03 14:41:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:22 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:22 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:22 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:22 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:22 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:22 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:22 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:22 AI_Player.update()	update
2017-01-03 14:41:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:22 AI_Player.update()	update
2017-01-03 14:41:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:22 AI_Player.update()	Search took11ms
2017-01-03 14:41:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:22 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:22 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:22 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:22 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:22 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:22 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:22 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:22 AI_Player.update()	update
2017-01-03 14:41:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:22 AI_Player.update()	update
2017-01-03 14:41:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:22 AI_Player.update()	Search took2ms
2017-01-03 14:41:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:22 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:22 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:22 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:22 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:22 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:22 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:22 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:23 AI_Player.update()	update
2017-01-03 14:41:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:23 AI_Player.update()	update
2017-01-03 14:41:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:23 AI_Player.update()	Search took18ms
2017-01-03 14:41:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:23 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:23 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:23 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:23 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:23 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:23 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:23 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:23 AI_Player.update()	update
2017-01-03 14:41:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:23 AI_Player.update()	update
2017-01-03 14:41:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:23 AI_Player.update()	Search took2ms
2017-01-03 14:41:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:23 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:23 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:23 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:23 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:23 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:23 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:23 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:23 AI_Player.update()	update
2017-01-03 14:41:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:23 AI_Player.update()	update
2017-01-03 14:41:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:23 AI_Player.update()	Search took19ms
2017-01-03 14:41:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:23 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:23 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:23 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:23 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:23 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:23 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:23 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:23 AI_Player.update()	update
2017-01-03 14:41:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:23 AI_Player.update()	update
2017-01-03 14:41:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:23 AI_Player.update()	Search took2ms
2017-01-03 14:41:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:23 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:23 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:23 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:23 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:23 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:23 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:23 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:23 AI_Player.update()	update
2017-01-03 14:41:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:24 AI_Player.update()	update
2017-01-03 14:41:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:24 AI_Player.update()	Search took18ms
2017-01-03 14:41:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:24 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:24 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:24 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:24 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:24 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:24 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:24 AI_Player.update()	update
2017-01-03 14:41:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:24 AI_Player.update()	update
2017-01-03 14:41:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:24 AI_Player.update()	Search took4ms
2017-01-03 14:41:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:24 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:24 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:24 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:24 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:24 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:24 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:24 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:24 AI_Player.update()	update
2017-01-03 14:41:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:24 AI_Player.update()	update
2017-01-03 14:41:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:24 AI_Player.update()	Search took13ms
2017-01-03 14:41:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:24 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:24 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:24 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:24 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:24 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:24 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:24 AI_Player.update()	update
2017-01-03 14:41:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:24 AI_Player.update()	update
2017-01-03 14:41:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:24 AI_Player.update()	Search took4ms
2017-01-03 14:41:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:24 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:24 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:24 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:24 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:24 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:24 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:24 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:24 AI_Player.update()	update
2017-01-03 14:41:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:24 AI_Player.update()	update
2017-01-03 14:41:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:24 AI_Player.update()	Search took16ms
2017-01-03 14:41:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:24 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:24 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:24 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:24 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:24 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:24 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:24 AI_Player.update()	update
2017-01-03 14:41:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:25 AI_Player.update()	update
2017-01-03 14:41:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:25 AI_Player.update()	Search took4ms
2017-01-03 14:41:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:25 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:25 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:25 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:25 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:25 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:25 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:25 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:25 AI_Player.update()	update
2017-01-03 14:41:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:25 AI_Player.update()	update
2017-01-03 14:41:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:25 AI_Player.update()	Search took17ms
2017-01-03 14:41:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:25 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:25 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:25 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:25 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:25 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:25 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:25 AI_Player.update()	update
2017-01-03 14:41:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:25 AI_Player.update()	update
2017-01-03 14:41:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:25 AI_Player.update()	Search took2ms
2017-01-03 14:41:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:25 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:25 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:25 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:25 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:25 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:25 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:25 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:25 AI_Player.update()	update
2017-01-03 14:41:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:25 AI_Player.update()	update
2017-01-03 14:41:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:25 AI_Player.update()	Search took13ms
2017-01-03 14:41:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:25 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:25 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:25 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:25 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:25 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:25 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:25 AI_Player.update()	update
2017-01-03 14:41:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:25 AI_Player.update()	update
2017-01-03 14:41:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:25 AI_Player.update()	Search took5ms
2017-01-03 14:41:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:25 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:25 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:25 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:25 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:25 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:25 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:25 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:26 AI_Player.update()	update
2017-01-03 14:41:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:26 AI_Player.update()	update
2017-01-03 14:41:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:26 AI_Player.update()	Search took15ms
2017-01-03 14:41:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:26 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:26 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:26 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:26 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:26 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:26 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:26 AI_Player.update()	update
2017-01-03 14:41:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:26 AI_Player.update()	update
2017-01-03 14:41:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:26 AI_Player.update()	Search took3ms
2017-01-03 14:41:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:26 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:26 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:26 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:26 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:26 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:26 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:26 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:26 AI_Player.update()	update
2017-01-03 14:41:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:26 AI_Player.update()	update
2017-01-03 14:41:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:26 AI_Player.update()	Search took20ms
2017-01-03 14:41:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:26 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:26 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:26 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:26 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:26 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:26 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:26 AI_Player.update()	update
2017-01-03 14:41:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:26 AI_Player.update()	update
2017-01-03 14:41:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:26 AI_Player.update()	Search took3ms
2017-01-03 14:41:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:26 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:26 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:26 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:26 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:26 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:26 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:26 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:26 AI_Player.update()	update
2017-01-03 14:41:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:27 AI_Player.update()	update
2017-01-03 14:41:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:27 AI_Player.update()	Search took18ms
2017-01-03 14:41:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:27 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:27 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:27 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:27 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:27 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:27 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:27 AI_Player.update()	update
2017-01-03 14:41:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:27 AI_Player.update()	update
2017-01-03 14:41:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:27 AI_Player.update()	Search took4ms
2017-01-03 14:41:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:27 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:27 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:27 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:27 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:27 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:27 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:27 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:27 AI_Player.update()	update
2017-01-03 14:41:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:27 AI_Player.update()	update
2017-01-03 14:41:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:27 AI_Player.update()	Search took17ms
2017-01-03 14:41:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:27 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:27 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:27 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:27 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:27 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:27 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:27 AI_Player.update()	update
2017-01-03 14:41:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:27 AI_Player.update()	update
2017-01-03 14:41:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:27 AI_Player.update()	Search took3ms
2017-01-03 14:41:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:27 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:27 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:27 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:27 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:27 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:27 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:27 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:27 AI_Player.update()	update
2017-01-03 14:41:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:27 AI_Player.update()	update
2017-01-03 14:41:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:27 AI_Player.update()	Search took22ms
2017-01-03 14:41:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:27 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:27 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:27 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:27 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:27 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:27 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:28 AI_Player.update()	update
2017-01-03 14:41:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:28 AI_Player.update()	update
2017-01-03 14:41:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:28 AI_Player.update()	Search took3ms
2017-01-03 14:41:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:28 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:28 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:28 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:28 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:28 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:28 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:28 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:28 AI_Player.update()	update
2017-01-03 14:41:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:28 AI_Player.update()	update
2017-01-03 14:41:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:28 AI_Player.update()	Search took14ms
2017-01-03 14:41:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:28 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:28 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:28 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:28 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:28 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:28 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:28 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:28 AI_Player.update()	update
2017-01-03 14:41:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:28 AI_Player.update()	update
2017-01-03 14:41:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:28 AI_Player.update()	Search took4ms
2017-01-03 14:41:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:28 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:28 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:28 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:28 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:28 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:28 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:28 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:28 AI_Player.update()	update
2017-01-03 14:41:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:28 AI_Player.update()	update
2017-01-03 14:41:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:28 AI_Player.update()	Search took16ms
2017-01-03 14:41:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:28 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:28 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:28 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:28 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:28 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:28 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:28 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:28 AI_Player.update()	update
2017-01-03 14:41:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:29 AI_Player.update()	update
2017-01-03 14:41:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:29 AI_Player.update()	Search took2ms
2017-01-03 14:41:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:29 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:29 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:29 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:29 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:29 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:29 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:29 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:29 AI_Player.update()	update
2017-01-03 14:41:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:29 AI_Player.update()	update
2017-01-03 14:41:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:29 AI_Player.update()	Search took17ms
2017-01-03 14:41:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:29 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:29 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:29 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:29 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:29 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:29 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:29 AI_Player.update()	update
2017-01-03 14:41:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:29 AI_Player.update()	update
2017-01-03 14:41:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:29 AI_Player.update()	Search took3ms
2017-01-03 14:41:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:29 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:29 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:29 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:29 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:29 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:29 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:29 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:29 AI_Player.update()	update
2017-01-03 14:41:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:29 AI_Player.update()	update
2017-01-03 14:41:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:29 AI_Player.update()	Search took18ms
2017-01-03 14:41:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:29 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:29 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:29 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:29 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:29 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:29 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:29 AI_Player.update()	update
2017-01-03 14:41:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:30 AI_Player.update()	update
2017-01-03 14:41:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:30 AI_Player.update()	Search took3ms
2017-01-03 14:41:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:30 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:30 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:30 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:30 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:30 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:30 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:30 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:30 AI_Player.update()	update
2017-01-03 14:41:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:30 AI_Player.update()	update
2017-01-03 14:41:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:30 AI_Player.update()	Search took19ms
2017-01-03 14:41:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:30 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:30 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:30 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:30 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:30 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:30 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:30 AI_Player.update()	update
2017-01-03 14:41:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:30 AI_Player.update()	update
2017-01-03 14:41:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:30 AI_Player.update()	Search took3ms
2017-01-03 14:41:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:30 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:30 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:30 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:30 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:30 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:30 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:30 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:30 AI_Player.update()	update
2017-01-03 14:41:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:30 AI_Player.update()	update
2017-01-03 14:41:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:30 AI_Player.update()	Search took18ms
2017-01-03 14:41:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:30 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:30 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:30 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:30 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:30 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:30 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:30 AI_Player.update()	update
2017-01-03 14:41:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:30 AI_Player.update()	update
2017-01-03 14:41:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:30 AI_Player.update()	Search took3ms
2017-01-03 14:41:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:30 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:30 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:30 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:30 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:30 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:30 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:30 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:31 AI_Player.update()	update
2017-01-03 14:41:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:31 AI_Player.update()	update
2017-01-03 14:41:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:31 AI_Player.update()	Search took20ms
2017-01-03 14:41:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:31 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:31 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:31 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:31 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:31 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:31 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:31 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:31 AI_Player.update()	update
2017-01-03 14:41:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:31 AI_Player.update()	update
2017-01-03 14:41:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:31 AI_Player.update()	Search took3ms
2017-01-03 14:41:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:31 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:31 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:31 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:31 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:31 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:31 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:31 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:31 AI_Player.update()	update
2017-01-03 14:41:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:31 AI_Player.update()	update
2017-01-03 14:41:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:31 AI_Player.update()	Search took20ms
2017-01-03 14:41:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:31 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:31 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:31 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:31 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:31 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:31 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:31 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:31 AI_Player.update()	update
2017-01-03 14:41:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:31 AI_Player.update()	update
2017-01-03 14:41:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:31 AI_Player.update()	Search took1ms
2017-01-03 14:41:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:31 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:31 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:31 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:31 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:31 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:31 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:31 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:31 AI_Player.update()	update
2017-01-03 14:41:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:32 AI_Player.update()	update
2017-01-03 14:41:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:32 AI_Player.update()	Search took10ms
2017-01-03 14:41:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:32 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:32 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:32 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:32 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:32 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:32 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:32 AI_Player.update()	update
2017-01-03 14:41:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:32 AI_Player.update()	update
2017-01-03 14:41:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:32 AI_Player.update()	Search took3ms
2017-01-03 14:41:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:32 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:32 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:32 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:32 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:32 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:32 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:32 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:32 AI_Player.update()	update
2017-01-03 14:41:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:32 AI_Player.update()	update
2017-01-03 14:41:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:32 AI_Player.update()	Search took18ms
2017-01-03 14:41:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:32 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:32 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:32 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:32 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:32 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:32 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:32 AI_Player.update()	update
2017-01-03 14:41:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:32 AI_Player.update()	update
2017-01-03 14:41:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:32 AI_Player.update()	Search took4ms
2017-01-03 14:41:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:32 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:32 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:32 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:32 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:32 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:32 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:32 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:32 AI_Player.update()	update
2017-01-03 14:41:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:32 AI_Player.update()	update
2017-01-03 14:41:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:33 AI_Player.update()	Search took13ms
2017-01-03 14:41:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:33 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:33 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:33 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:33 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:33 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:33 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:33 AI_Player.update()	update
2017-01-03 14:41:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:33 AI_Player.update()	update
2017-01-03 14:41:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:33 AI_Player.update()	Search took2ms
2017-01-03 14:41:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:33 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:33 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:33 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:33 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:33 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:33 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:33 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:33 AI_Player.update()	update
2017-01-03 14:41:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:33 AI_Player.update()	update
2017-01-03 14:41:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:33 AI_Player.update()	Search took12ms
2017-01-03 14:41:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:33 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:33 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:33 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:33 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:33 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:33 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:33 AI_Player.update()	update
2017-01-03 14:41:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:33 AI_Player.update()	update
2017-01-03 14:41:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:33 AI_Player.update()	Search took3ms
2017-01-03 14:41:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:33 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:33 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:33 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:33 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:33 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:33 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:33 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:33 AI_Player.update()	update
2017-01-03 14:41:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:33 AI_Player.update()	update
2017-01-03 14:41:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:33 AI_Player.update()	Search took20ms
2017-01-03 14:41:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:33 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:33 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:33 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:33 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:33 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:33 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:33 AI_Player.update()	update
2017-01-03 14:41:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:34 AI_Player.update()	update
2017-01-03 14:41:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:34 AI_Player.update()	Search took3ms
2017-01-03 14:41:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:34 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:34 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:34 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:34 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:34 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:34 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:34 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:34 AI_Player.update()	update
2017-01-03 14:41:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:34 AI_Player.update()	update
2017-01-03 14:41:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:34 AI_Player.update()	Search took17ms
2017-01-03 14:41:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:34 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:34 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:34 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:34 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:34 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:34 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:34 AI_Player.update()	update
2017-01-03 14:41:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:34 AI_Player.update()	update
2017-01-03 14:41:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:34 AI_Player.update()	Search took3ms
2017-01-03 14:41:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:34 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:34 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:34 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:34 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:34 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:34 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:34 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:34 AI_Player.update()	update
2017-01-03 14:41:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:34 AI_Player.update()	update
2017-01-03 14:41:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:34 AI_Player.update()	Search took14ms
2017-01-03 14:41:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:34 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:34 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:34 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:34 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:34 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:34 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:34 AI_Player.update()	update
2017-01-03 14:41:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:34 AI_Player.update()	update
2017-01-03 14:41:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:34 AI_Player.update()	Search took3ms
2017-01-03 14:41:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:34 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:34 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:34 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:34 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:34 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:34 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:34 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:35 AI_Player.update()	update
2017-01-03 14:41:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:35 AI_Player.update()	update
2017-01-03 14:41:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:35 AI_Player.update()	Search took13ms
2017-01-03 14:41:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:35 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:35 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:35 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:35 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:35 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:35 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:35 AI_Player.update()	update
2017-01-03 14:41:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:35 AI_Player.update()	update
2017-01-03 14:41:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:35 AI_Player.update()	Search took4ms
2017-01-03 14:41:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:35 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:35 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:35 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:35 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:35 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:35 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:35 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:35 AI_Player.update()	update
2017-01-03 14:41:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:35 AI_Player.update()	update
2017-01-03 14:41:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:35 AI_Player.update()	Search took14ms
2017-01-03 14:41:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:35 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:35 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:35 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:35 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:35 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:35 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:35 AI_Player.update()	update
2017-01-03 14:41:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:35 AI_Player.update()	update
2017-01-03 14:41:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:35 AI_Player.update()	Search took1ms
2017-01-03 14:41:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:35 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:35 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:35 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:35 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:35 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:35 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:35 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:35 AI_Player.update()	update
2017-01-03 14:41:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:36 AI_Player.update()	update
2017-01-03 14:41:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:36 AI_Player.update()	Search took10ms
2017-01-03 14:41:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:36 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:36 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:36 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:36 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:36 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:36 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:36 AI_Player.update()	update
2017-01-03 14:41:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:36 AI_Player.update()	update
2017-01-03 14:41:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:36 AI_Player.update()	Search took2ms
2017-01-03 14:41:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:36 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:36 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:36 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:36 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:36 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:36 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:36 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:36 AI_Player.update()	update
2017-01-03 14:41:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:36 AI_Player.update()	update
2017-01-03 14:41:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:36 AI_Player.update()	Search took11ms
2017-01-03 14:41:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:36 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:36 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:36 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:36 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:36 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:36 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:36 AI_Player.update()	update
2017-01-03 14:41:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:36 AI_Player.update()	update
2017-01-03 14:41:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:36 AI_Player.update()	Search took4ms
2017-01-03 14:41:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:36 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:36 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:36 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:36 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:36 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:36 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:36 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:36 AI_Player.update()	update
2017-01-03 14:41:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:36 AI_Player.update()	update
2017-01-03 14:41:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:36 AI_Player.update()	Search took15ms
2017-01-03 14:41:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:36 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:36 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:36 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:36 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:36 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:36 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:36 AI_Player.update()	update
2017-01-03 14:41:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:37 AI_Player.update()	update
2017-01-03 14:41:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:37 AI_Player.update()	Search took1ms
2017-01-03 14:41:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:37 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:37 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:37 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:37 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:37 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:37 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:37 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:37 AI_Player.update()	update
2017-01-03 14:41:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:37 AI_Player.update()	update
2017-01-03 14:41:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:37 AI_Player.update()	Search took13ms
2017-01-03 14:41:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:37 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:37 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:37 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:37 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:37 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:37 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:37 AI_Player.update()	update
2017-01-03 14:41:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:37 AI_Player.update()	update
2017-01-03 14:41:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:37 AI_Player.update()	Search took2ms
2017-01-03 14:41:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:37 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:37 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:37 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:37 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:37 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:37 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:37 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:37 AI_Player.update()	update
2017-01-03 14:41:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:37 AI_Player.update()	update
2017-01-03 14:41:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:37 AI_Player.update()	Search took19ms
2017-01-03 14:41:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:37 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:37 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:37 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:37 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:37 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:37 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:37 AI_Player.update()	update
2017-01-03 14:41:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:38 AI_Player.update()	update
2017-01-03 14:41:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:38 AI_Player.update()	Search took2ms
2017-01-03 14:41:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:38 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:38 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:38 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:38 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:38 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:38 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:38 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:38 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:38 AI_Player.update()	update
2017-01-03 14:41:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:38 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:38 AI_Player.update()	update
2017-01-03 14:41:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:38 AI_Player.update()	Search took18ms
2017-01-03 14:41:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:38 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:38 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:38 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:38 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:38 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:38 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:38 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:38 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:38 AI_Player.update()	update
2017-01-03 14:41:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:38 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:38 AI_Player.update()	update
2017-01-03 14:41:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:38 AI_Player.update()	Search took2ms
2017-01-03 14:41:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:38 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:38 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:38 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:38 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:38 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:38 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:38 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:38 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:38 AI_Player.update()	update
2017-01-03 14:41:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:38 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:38 AI_Player.update()	update
2017-01-03 14:41:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:38 AI_Player.update()	Search took16ms
2017-01-03 14:41:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:38 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:38 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:38 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:38 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:38 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:38 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:38 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:38 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:38 AI_Player.update()	update
2017-01-03 14:41:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:38 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:38 AI_Player.update()	update
2017-01-03 14:41:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:38 AI_Player.update()	Search took3ms
2017-01-03 14:41:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:38 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:38 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:38 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:38 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:38 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:38 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:38 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:38 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:38 AI_Player.update()	update
2017-01-03 14:41:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:38 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:39 AI_Player.update()	update
2017-01-03 14:41:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:39 AI_Player.update()	Search took18ms
2017-01-03 14:41:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:39 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:39 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:39 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:39 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:39 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:39 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:39 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:39 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:39 AI_Player.update()	update
2017-01-03 14:41:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:39 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:39 AI_Player.update()	update
2017-01-03 14:41:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:39 AI_Player.update()	Search took2ms
2017-01-03 14:41:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:39 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:39 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:39 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:39 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:39 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:39 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:39 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:39 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:39 AI_Player.update()	update
2017-01-03 14:41:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:39 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:39 AI_Player.update()	update
2017-01-03 14:41:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:39 AI_Player.update()	Search took13ms
2017-01-03 14:41:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:39 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:39 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:39 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:39 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:39 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:39 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:39 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:39 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:39 AI_Player.update()	update
2017-01-03 14:41:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:39 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:39 AI_Player.update()	update
2017-01-03 14:41:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:39 AI_Player.update()	Search took1ms
2017-01-03 14:41:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:39 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:39 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:39 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:39 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:39 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:39 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:39 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:39 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:39 AI_Player.update()	update
2017-01-03 14:41:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:39 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:39 AI_Player.update()	update
2017-01-03 14:41:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:39 AI_Player.update()	Search took13ms
2017-01-03 14:41:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:39 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:39 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:39 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:39 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:39 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:39 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:39 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:39 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:40 AI_Player.update()	update
2017-01-03 14:41:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:40 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:40 AI_Player.update()	update
2017-01-03 14:41:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:40 AI_Player.update()	Search took3ms
2017-01-03 14:41:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:40 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:40 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:40 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:40 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:40 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:40 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:40 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:40 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:40 AI_Player.update()	update
2017-01-03 14:41:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:40 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:40 AI_Player.update()	update
2017-01-03 14:41:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:40 AI_Player.update()	Search took16ms
2017-01-03 14:41:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:40 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:40 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:40 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:40 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:40 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:40 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:40 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:40 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:40 AI_Player.update()	update
2017-01-03 14:41:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:40 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:40 AI_Player.update()	update
2017-01-03 14:41:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:40 AI_Player.update()	Search took3ms
2017-01-03 14:41:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:40 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:40 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:40 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:40 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:40 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:40 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:40 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:40 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:40 AI_Player.update()	update
2017-01-03 14:41:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:40 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:40 AI_Player.update()	update
2017-01-03 14:41:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:40 AI_Player.update()	Search took13ms
2017-01-03 14:41:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:40 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:40 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:40 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:40 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:40 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:40 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:40 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:40 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:40 AI_Player.update()	update
2017-01-03 14:41:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:40 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:41 AI_Player.update()	update
2017-01-03 14:41:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:41 AI_Player.update()	Search took3ms
2017-01-03 14:41:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:41 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:41 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:41 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:41 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:41 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:41 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:41 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:41 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:41 AI_Player.update()	update
2017-01-03 14:41:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:41 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:41 AI_Player.update()	update
2017-01-03 14:41:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:41 AI_Player.update()	Search took18ms
2017-01-03 14:41:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:41 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:41 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:41 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:41 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:41 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:41 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:41 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:41 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:41 AI_Player.update()	update
2017-01-03 14:41:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:41 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:41 AI_Player.update()	update
2017-01-03 14:41:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:41 AI_Player.update()	Search took4ms
2017-01-03 14:41:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:41 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:41 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:41 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:41 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:41 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:41 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:41 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:41 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:41 AI_Player.update()	update
2017-01-03 14:41:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:41 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:41 AI_Player.update()	update
2017-01-03 14:41:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:41 AI_Player.update()	Search took19ms
2017-01-03 14:41:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:41 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:41 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:41 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:41 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:41 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:41 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:41 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:41 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:41 AI_Player.update()	update
2017-01-03 14:41:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:41 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:41 AI_Player.update()	update
2017-01-03 14:41:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:41 AI_Player.update()	Search took2ms
2017-01-03 14:41:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:41 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:41 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:41 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:41 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:41 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:41 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:41 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:41 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:42 AI_Player.update()	update
2017-01-03 14:41:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:42 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:42 AI_Player.update()	update
2017-01-03 14:41:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:42 AI_Player.update()	Search took14ms
2017-01-03 14:41:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:42 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:42 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:42 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:42 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:42 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:42 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:42 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:42 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:42 AI_Player.update()	update
2017-01-03 14:41:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:42 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:42 AI_Player.update()	update
2017-01-03 14:41:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:42 AI_Player.update()	Search took5ms
2017-01-03 14:41:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:42 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:42 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:42 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:42 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:42 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:42 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:42 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:42 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:42 AI_Player.update()	update
2017-01-03 14:41:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:42 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:42 AI_Player.update()	update
2017-01-03 14:41:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:42 AI_Player.update()	Search took14ms
2017-01-03 14:41:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:42 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:42 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:42 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:42 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:42 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:42 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:42 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:42 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:42 AI_Player.update()	update
2017-01-03 14:41:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:42 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:42 AI_Player.update()	update
2017-01-03 14:41:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:42 AI_Player.update()	Search took3ms
2017-01-03 14:41:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:42 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:42 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:42 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:42 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:42 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:42 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:42 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:42 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:42 AI_Player.update()	update
2017-01-03 14:41:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:42 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:42 AI_Player.update()	update
2017-01-03 14:41:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:42 AI_Player.update()	Search took10ms
2017-01-03 14:41:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:42 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:42 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:42 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:42 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:42 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:42 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:42 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:42 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:43 AI_Player.update()	update
2017-01-03 14:41:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:43 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:43 AI_Player.update()	update
2017-01-03 14:41:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:43 AI_Player.update()	Search took4ms
2017-01-03 14:41:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:43 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:43 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:43 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:43 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:43 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:43 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:43 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:43 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:43 AI_Player.update()	update
2017-01-03 14:41:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:43 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:43 AI_Player.update()	update
2017-01-03 14:41:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:43 AI_Player.update()	Search took16ms
2017-01-03 14:41:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:43 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:43 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:43 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:43 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:43 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:43 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:43 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:43 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:43 AI_Player.update()	update
2017-01-03 14:41:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:43 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:43 AI_Player.update()	update
2017-01-03 14:41:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:43 AI_Player.update()	Search took2ms
2017-01-03 14:41:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:43 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:43 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:43 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:43 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:43 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:43 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:43 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:43 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:43 AI_Player.update()	update
2017-01-03 14:41:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:43 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:43 AI_Player.update()	update
2017-01-03 14:41:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:43 AI_Player.update()	Search took21ms
2017-01-03 14:41:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:43 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:43 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:43 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:43 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:43 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:43 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:43 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:43 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:43 AI_Player.update()	update
2017-01-03 14:41:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:43 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:44 AI_Player.update()	update
2017-01-03 14:41:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:44 AI_Player.update()	Search took2ms
2017-01-03 14:41:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:44 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:44 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:44 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:44 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:44 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:44 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:44 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:44 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:44 AI_Player.update()	update
2017-01-03 14:41:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:44 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:44 AI_Player.update()	update
2017-01-03 14:41:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:44 AI_Player.update()	Search took17ms
2017-01-03 14:41:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:44 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:44 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:44 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:44 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:44 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:44 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:44 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:44 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:44 AI_Player.update()	update
2017-01-03 14:41:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:44 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:44 AI_Player.update()	update
2017-01-03 14:41:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:44 AI_Player.update()	Search took4ms
2017-01-03 14:41:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:44 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:44 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:44 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:44 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:44 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:44 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:44 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:44 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:44 AI_Player.update()	update
2017-01-03 14:41:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:44 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:44 AI_Player.update()	update
2017-01-03 14:41:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:44 AI_Player.update()	Search took14ms
2017-01-03 14:41:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:44 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:44 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:44 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:44 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:44 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:44 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:44 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:44 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:44 AI_Player.update()	update
2017-01-03 14:41:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:44 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:44 AI_Player.update()	update
2017-01-03 14:41:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:44 AI_Player.update()	Search took3ms
2017-01-03 14:41:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:44 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:44 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:44 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:44 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:44 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:44 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:44 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:44 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:45 AI_Player.update()	update
2017-01-03 14:41:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:45 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:45 AI_Player.update()	update
2017-01-03 14:41:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:45 AI_Player.update()	Search took18ms
2017-01-03 14:41:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:45 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:45 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:45 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:45 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:45 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:45 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:45 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:45 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:45 AI_Player.update()	update
2017-01-03 14:41:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:45 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:45 AI_Player.update()	update
2017-01-03 14:41:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:45 AI_Player.update()	Search took3ms
2017-01-03 14:41:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:45 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:45 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:45 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:45 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:45 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:45 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:45 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:45 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:45 AI_Player.update()	update
2017-01-03 14:41:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:45 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:45 AI_Player.update()	update
2017-01-03 14:41:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:45 AI_Player.update()	Search took15ms
2017-01-03 14:41:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:45 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:45 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:45 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:45 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:45 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:45 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:45 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:45 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:45 AI_Player.update()	update
2017-01-03 14:41:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:45 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:45 AI_Player.update()	update
2017-01-03 14:41:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:45 AI_Player.update()	Search took5ms
2017-01-03 14:41:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:45 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:45 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:45 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:45 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:45 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:45 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:45 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:45 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:45 AI_Player.update()	update
2017-01-03 14:41:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:45 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:45 AI_Player.update()	update
2017-01-03 14:41:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:45 AI_Player.update()	Search took12ms
2017-01-03 14:41:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:45 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:45 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:45 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:45 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:45 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:45 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:45 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:45 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:46 AI_Player.update()	update
2017-01-03 14:41:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:46 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:46 AI_Player.update()	update
2017-01-03 14:41:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:46 AI_Player.update()	Search took5ms
2017-01-03 14:41:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:46 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:46 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:46 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:46 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:46 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:46 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:46 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:46 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:46 AI_Player.update()	update
2017-01-03 14:41:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:46 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:46 AI_Player.update()	update
2017-01-03 14:41:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:46 AI_Player.update()	Search took15ms
2017-01-03 14:41:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:46 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:46 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:46 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:46 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:46 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:46 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:46 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:46 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:46 AI_Player.update()	update
2017-01-03 14:41:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:46 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:46 AI_Player.update()	update
2017-01-03 14:41:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:46 AI_Player.update()	Search took2ms
2017-01-03 14:41:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:46 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:46 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:46 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:46 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:46 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:46 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:46 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:46 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:46 AI_Player.update()	update
2017-01-03 14:41:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:46 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:46 AI_Player.update()	update
2017-01-03 14:41:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:46 AI_Player.update()	Search took21ms
2017-01-03 14:41:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:46 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:46 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:46 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:46 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:46 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:46 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:46 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:46 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:46 AI_Player.update()	update
2017-01-03 14:41:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:46 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:47 AI_Player.update()	update
2017-01-03 14:41:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:47 AI_Player.update()	Search took3ms
2017-01-03 14:41:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:47 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:47 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:47 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:47 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:47 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:47 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:47 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:47 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:47 AI_Player.update()	update
2017-01-03 14:41:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:47 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:47 AI_Player.update()	update
2017-01-03 14:41:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:47 AI_Player.update()	Search took68ms
2017-01-03 14:41:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:47 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:47 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:47 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:47 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:47 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:47 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:47 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:47 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:47 AI_Player.update()	update
2017-01-03 14:41:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:47 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:47 AI_Player.update()	update
2017-01-03 14:41:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:47 AI_Player.update()	Search took2ms
2017-01-03 14:41:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:47 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:47 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:47 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:47 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:47 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:47 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:47 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:47 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:47 AI_Player.update()	update
2017-01-03 14:41:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:47 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:47 AI_Player.update()	update
2017-01-03 14:41:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:47 AI_Player.update()	Search took22ms
2017-01-03 14:41:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:47 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:47 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:47 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:47 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:47 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:47 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:47 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:47 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:47 AI_Player.update()	update
2017-01-03 14:41:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:47 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:47 AI_Player.update()	update
2017-01-03 14:41:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:47 AI_Player.update()	Search took3ms
2017-01-03 14:41:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:47 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:47 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:47 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:47 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:47 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:47 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:47 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:47 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:48 AI_Player.update()	update
2017-01-03 14:41:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:48 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:48 AI_Player.update()	update
2017-01-03 14:41:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:48 AI_Player.update()	Search took12ms
2017-01-03 14:41:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:48 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:48 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:48 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:48 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:48 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:48 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:48 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:48 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:48 AI_Player.update()	update
2017-01-03 14:41:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:48 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:48 AI_Player.update()	update
2017-01-03 14:41:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:48 AI_Player.update()	Search took4ms
2017-01-03 14:41:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:48 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:48 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:48 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:48 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:48 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:48 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:48 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:48 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:48 AI_Player.update()	update
2017-01-03 14:41:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:48 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:48 AI_Player.update()	update
2017-01-03 14:41:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:48 AI_Player.update()	Search took16ms
2017-01-03 14:41:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:48 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:48 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:48 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:48 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:48 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:48 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:48 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:48 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:48 AI_Player.update()	update
2017-01-03 14:41:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:48 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:48 AI_Player.update()	update
2017-01-03 14:41:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:48 AI_Player.update()	Search took2ms
2017-01-03 14:41:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:48 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:48 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:48 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:48 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:48 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:48 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:48 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:48 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:48 AI_Player.update()	update
2017-01-03 14:41:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:48 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:49 AI_Player.update()	update
2017-01-03 14:41:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:49 AI_Player.update()	Search took15ms
2017-01-03 14:41:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:49 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:49 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:49 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:49 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:49 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:49 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:49 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:49 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:49 AI_Player.update()	update
2017-01-03 14:41:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:49 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:49 AI_Player.update()	update
2017-01-03 14:41:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:49 AI_Player.update()	Search took1ms
2017-01-03 14:41:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:49 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:49 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:49 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:49 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:49 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:49 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:49 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:49 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:49 AI_Player.update()	update
2017-01-03 14:41:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:49 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:49 AI_Player.update()	update
2017-01-03 14:41:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:49 AI_Player.update()	Search took15ms
2017-01-03 14:41:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:49 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:49 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:49 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:49 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:49 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:49 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:49 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:49 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:49 AI_Player.update()	update
2017-01-03 14:41:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:49 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:49 AI_Player.update()	update
2017-01-03 14:41:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:49 AI_Player.update()	Search took3ms
2017-01-03 14:41:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:49 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:49 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:49 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:49 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:49 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:49 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:49 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:49 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:49 AI_Player.update()	update
2017-01-03 14:41:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:49 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:49 AI_Player.update()	update
2017-01-03 14:41:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:49 AI_Player.update()	Search took20ms
2017-01-03 14:41:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:49 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:49 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:49 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:49 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:49 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:49 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:49 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:49 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:50 AI_Player.update()	update
2017-01-03 14:41:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:50 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:50 AI_Player.update()	update
2017-01-03 14:41:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:50 AI_Player.update()	Search took3ms
2017-01-03 14:41:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:50 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:50 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:50 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:50 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:50 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:50 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:50 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:50 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:50 AI_Player.update()	update
2017-01-03 14:41:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:50 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:50 AI_Player.update()	update
2017-01-03 14:41:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:50 AI_Player.update()	Search took17ms
2017-01-03 14:41:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:50 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:50 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:50 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:50 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:50 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:50 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:50 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:50 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:50 AI_Player.update()	update
2017-01-03 14:41:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:50 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:50 AI_Player.update()	update
2017-01-03 14:41:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:50 AI_Player.update()	Search took1ms
2017-01-03 14:41:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:50 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:50 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:50 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:50 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:50 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:50 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:50 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:50 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:50 AI_Player.update()	update
2017-01-03 14:41:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:50 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:50 AI_Player.update()	update
2017-01-03 14:41:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:50 AI_Player.update()	Search took14ms
2017-01-03 14:41:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:50 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:50 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:50 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:50 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:50 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:50 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:50 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:50 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:50 AI_Player.update()	update
2017-01-03 14:41:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:50 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:51 AI_Player.update()	update
2017-01-03 14:41:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:51 AI_Player.update()	Search took3ms
2017-01-03 14:41:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:51 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:51 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:51 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:51 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:51 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:51 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:51 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:51 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:51 AI_Player.update()	update
2017-01-03 14:41:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:51 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:51 AI_Player.update()	update
2017-01-03 14:41:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:51 AI_Player.update()	Search took12ms
2017-01-03 14:41:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:51 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:51 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:51 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:51 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:51 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:51 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:51 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:51 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:51 AI_Player.update()	update
2017-01-03 14:41:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:51 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:51 AI_Player.update()	update
2017-01-03 14:41:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:51 AI_Player.update()	Search took1ms
2017-01-03 14:41:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:51 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:51 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:51 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:51 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:51 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:51 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:51 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:51 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:51 AI_Player.update()	update
2017-01-03 14:41:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:51 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:51 AI_Player.update()	update
2017-01-03 14:41:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:51 AI_Player.update()	Search took21ms
2017-01-03 14:41:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:51 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:51 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:51 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:51 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:51 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:51 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:51 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:51 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:51 AI_Player.update()	update
2017-01-03 14:41:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:51 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:51 AI_Player.update()	update
2017-01-03 14:41:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:51 AI_Player.update()	Search took3ms
2017-01-03 14:41:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:51 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:51 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:51 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:51 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:51 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:51 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:51 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:51 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:51 AI_Player.update()	update
2017-01-03 14:41:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:51 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:52 AI_Player.update()	update
2017-01-03 14:41:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:52 AI_Player.update()	Search took15ms
2017-01-03 14:41:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:52 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:52 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:52 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:52 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:52 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:52 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:52 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:52 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:52 AI_Player.update()	update
2017-01-03 14:41:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:52 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:52 AI_Player.update()	update
2017-01-03 14:41:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:52 AI_Player.update()	Search took2ms
2017-01-03 14:41:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:52 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:52 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:52 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:52 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:52 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:52 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:52 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:52 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:52 AI_Player.update()	update
2017-01-03 14:41:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:52 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:52 AI_Player.update()	update
2017-01-03 14:41:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:52 AI_Player.update()	Search took16ms
2017-01-03 14:41:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:52 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:52 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:52 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:52 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:52 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:52 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:52 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:52 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:52 AI_Player.update()	update
2017-01-03 14:41:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:52 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:52 AI_Player.update()	update
2017-01-03 14:41:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:52 AI_Player.update()	Search took3ms
2017-01-03 14:41:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:52 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:52 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:52 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:52 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:52 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:52 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:52 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:52 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:52 AI_Player.update()	update
2017-01-03 14:41:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:52 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:52 AI_Player.update()	update
2017-01-03 14:41:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:52 AI_Player.update()	Search took17ms
2017-01-03 14:41:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:52 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:52 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:52 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:52 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:52 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:52 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:52 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:52 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:53 AI_Player.update()	update
2017-01-03 14:41:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:53 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:53 AI_Player.update()	update
2017-01-03 14:41:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:53 AI_Player.update()	Search took4ms
2017-01-03 14:41:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:53 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:53 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:53 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:53 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:53 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:53 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:53 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:53 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:53 AI_Player.update()	update
2017-01-03 14:41:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:53 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:53 AI_Player.update()	update
2017-01-03 14:41:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:53 AI_Player.update()	Search took13ms
2017-01-03 14:41:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:53 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:53 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:53 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:53 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:53 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:53 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:53 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:53 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:53 AI_Player.update()	update
2017-01-03 14:41:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:53 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:53 AI_Player.update()	update
2017-01-03 14:41:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:53 AI_Player.update()	Search took4ms
2017-01-03 14:41:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:53 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:53 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:53 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:53 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:53 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:53 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:53 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:53 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:53 AI_Player.update()	update
2017-01-03 14:41:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:53 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:53 AI_Player.update()	update
2017-01-03 14:41:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:53 AI_Player.update()	Search took18ms
2017-01-03 14:41:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:53 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:53 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:53 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:53 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:53 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:53 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:53 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:53 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:53 AI_Player.update()	update
2017-01-03 14:41:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:53 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:54 AI_Player.update()	update
2017-01-03 14:41:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:54 AI_Player.update()	Search took3ms
2017-01-03 14:41:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:54 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:54 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:54 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:54 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:54 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:54 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:54 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:54 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:54 AI_Player.update()	update
2017-01-03 14:41:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:54 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:54 AI_Player.update()	update
2017-01-03 14:41:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:54 AI_Player.update()	Search took19ms
2017-01-03 14:41:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:54 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:54 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:54 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:54 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:54 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:54 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:54 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:54 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:54 AI_Player.update()	update
2017-01-03 14:41:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:54 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:54 AI_Player.update()	update
2017-01-03 14:41:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:54 AI_Player.update()	Search took2ms
2017-01-03 14:41:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:54 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:54 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:54 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:54 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:54 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:54 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:54 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:54 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:54 AI_Player.update()	update
2017-01-03 14:41:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:54 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:54 AI_Player.update()	update
2017-01-03 14:41:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:54 AI_Player.update()	Search took13ms
2017-01-03 14:41:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:54 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:54 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:54 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:54 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:54 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:54 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:54 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:54 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:54 AI_Player.update()	update
2017-01-03 14:41:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:54 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:54 AI_Player.update()	update
2017-01-03 14:41:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:54 AI_Player.update()	Search took4ms
2017-01-03 14:41:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:54 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:54 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:54 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:54 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:54 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:54 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:54 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:54 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:54 AI_Player.update()	update
2017-01-03 14:41:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:54 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:55 AI_Player.update()	update
2017-01-03 14:41:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:55 AI_Player.update()	Search took21ms
2017-01-03 14:41:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:55 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:55 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:55 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:55 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:55 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:55 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:55 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:55 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:55 AI_Player.update()	update
2017-01-03 14:41:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:55 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:55 AI_Player.update()	update
2017-01-03 14:41:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:55 AI_Player.update()	Search took1ms
2017-01-03 14:41:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:55 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:55 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:55 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:55 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:55 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:55 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:55 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:55 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:55 AI_Player.update()	update
2017-01-03 14:41:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:55 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:55 AI_Player.update()	update
2017-01-03 14:41:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:55 AI_Player.update()	Search took16ms
2017-01-03 14:41:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:55 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:55 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:55 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:55 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:55 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:55 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:55 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:55 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:55 AI_Player.update()	update
2017-01-03 14:41:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:55 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:55 AI_Player.update()	update
2017-01-03 14:41:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:55 AI_Player.update()	Search took1ms
2017-01-03 14:41:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:55 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:55 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:55 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:55 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:55 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:55 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:55 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:55 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:55 AI_Player.update()	update
2017-01-03 14:41:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:55 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:55 AI_Player.update()	update
2017-01-03 14:41:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:55 AI_Player.update()	Search took11ms
2017-01-03 14:41:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:55 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:55 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:55 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:55 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:55 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:55 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:55 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:55 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:56 AI_Player.update()	update
2017-01-03 14:41:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:56 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:56 AI_Player.update()	update
2017-01-03 14:41:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:56 AI_Player.update()	Search took2ms
2017-01-03 14:41:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:56 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:56 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:56 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:56 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:56 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:56 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:56 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:56 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:56 AI_Player.update()	update
2017-01-03 14:41:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:56 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:56 AI_Player.update()	update
2017-01-03 14:41:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:56 AI_Player.update()	Search took10ms
2017-01-03 14:41:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:56 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:56 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:56 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:56 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:56 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:56 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:56 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:56 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:56 AI_Player.update()	update
2017-01-03 14:41:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:56 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:56 AI_Player.update()	update
2017-01-03 14:41:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:56 AI_Player.update()	Search took1ms
2017-01-03 14:41:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:56 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:56 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:56 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:56 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:56 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:56 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:56 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:56 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:56 AI_Player.update()	update
2017-01-03 14:41:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:56 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:56 AI_Player.update()	update
2017-01-03 14:41:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:56 AI_Player.update()	Search took10ms
2017-01-03 14:41:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:56 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:56 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:56 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:56 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:56 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:56 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:56 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:56 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:56 AI_Player.update()	update
2017-01-03 14:41:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:56 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:56 AI_Player.update()	update
2017-01-03 14:41:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:56 AI_Player.update()	Search took1ms
2017-01-03 14:41:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:56 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:56 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:56 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:56 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:56 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:56 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:56 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:56 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:57 AI_Player.update()	update
2017-01-03 14:41:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:57 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:57 AI_Player.update()	update
2017-01-03 14:41:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:57 AI_Player.update()	Search took10ms
2017-01-03 14:41:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:57 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:57 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:57 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:57 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:57 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:57 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:57 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:57 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:57 AI_Player.update()	update
2017-01-03 14:41:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:57 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:57 AI_Player.update()	update
2017-01-03 14:41:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:57 AI_Player.update()	Search took1ms
2017-01-03 14:41:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:57 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:57 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:57 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:57 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:57 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:57 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:57 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:57 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:57 AI_Player.update()	update
2017-01-03 14:41:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:57 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:57 AI_Player.update()	update
2017-01-03 14:41:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:57 AI_Player.update()	Search took10ms
2017-01-03 14:41:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:57 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:57 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:57 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:57 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:57 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:57 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:57 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:57 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:57 AI_Player.update()	update
2017-01-03 14:41:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:57 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:57 AI_Player.update()	update
2017-01-03 14:41:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:57 AI_Player.update()	Search took1ms
2017-01-03 14:41:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:57 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:57 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:57 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:57 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:57 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:57 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:57 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:57 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:57 AI_Player.update()	update
2017-01-03 14:41:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:57 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:58 AI_Player.update()	update
2017-01-03 14:41:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:58 AI_Player.update()	Search took10ms
2017-01-03 14:41:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:58 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:58 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:58 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:58 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:58 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:58 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:58 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:58 AI_Player.update()	update
2017-01-03 14:41:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:58 AI_Player.update()	update
2017-01-03 14:41:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:58 AI_Player.update()	Search took1ms
2017-01-03 14:41:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:58 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:58 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:58 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:58 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:58 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:58 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:58 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:58 AI_Player.update()	update
2017-01-03 14:41:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:58 AI_Player.update()	update
2017-01-03 14:41:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:58 AI_Player.update()	Search took10ms
2017-01-03 14:41:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:58 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:58 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:58 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:58 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:58 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:58 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:58 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:58 AI_Player.update()	update
2017-01-03 14:41:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:58 AI_Player.update()	update
2017-01-03 14:41:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:58 AI_Player.update()	Search took2ms
2017-01-03 14:41:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:58 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:58 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:58 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:58 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:58 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:58 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:58 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:58 AI_Player.update()	update
2017-01-03 14:41:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:58 AI_Player.update()	update
2017-01-03 14:41:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:58 AI_Player.update()	Search took9ms
2017-01-03 14:41:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:58 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:58 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:58 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:58 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:58 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:58 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:58 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:58 AI_Player.update()	update
2017-01-03 14:41:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:59 AI_Player.update()	update
2017-01-03 14:41:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:59 AI_Player.update()	Search took1ms
2017-01-03 14:41:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:59 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:59 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:59 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:59 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:59 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:59 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:59 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:59 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:59 AI_Player.update()	update
2017-01-03 14:41:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:59 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:59 AI_Player.update()	update
2017-01-03 14:41:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:59 AI_Player.update()	Search took10ms
2017-01-03 14:41:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:59 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:59 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:59 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:59 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:59 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:59 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:59 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:59 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:59 AI_Player.update()	update
2017-01-03 14:41:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:59 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:59 AI_Player.update()	update
2017-01-03 14:41:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:59 AI_Player.update()	Search took1ms
2017-01-03 14:41:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:59 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:59 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:59 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:59 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:59 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:59 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:59 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:59 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:59 AI_Player.update()	update
2017-01-03 14:41:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:41:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:41:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:41:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:41:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:59 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:59 AI_Player.update()	update
2017-01-03 14:41:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:41:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:41:59 AI_Player.update()	Search took10ms
2017-01-03 14:41:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:59 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:41:59 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:59 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:41:59 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:41:59 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:41:59 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:41:59 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:41:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:59 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:59 AI_Player.update()	update
2017-01-03 14:41:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:41:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:41:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:41:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:41:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:59 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:41:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:41:59 AI_Player.update()	update
2017-01-03 14:41:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:41:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:41:59 AI_Player.update()	Search took1ms
2017-01-03 14:41:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:41:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:59 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:41:59 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:41:59 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:41:59 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:41:59 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:41:59 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:41:59 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:41:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:41:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:41:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:41:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:41:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:41:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:41:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:41:59 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:00 AI_Player.update()	update
2017-01-03 14:42:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:00 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:00 AI_Player.update()	update
2017-01-03 14:42:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:00 AI_Player.update()	Search took10ms
2017-01-03 14:42:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:00 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:00 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:00 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:00 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:00 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:00 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:00 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:00 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:00 AI_Player.update()	update
2017-01-03 14:42:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:00 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:00 AI_Player.update()	update
2017-01-03 14:42:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:00 AI_Player.update()	Search took1ms
2017-01-03 14:42:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:00 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:00 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:00 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:00 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:00 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:00 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:00 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:00 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:00 AI_Player.update()	update
2017-01-03 14:42:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:00 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:00 AI_Player.update()	update
2017-01-03 14:42:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:00 AI_Player.update()	Search took10ms
2017-01-03 14:42:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:00 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:00 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:00 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:00 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:00 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:00 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:00 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:00 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:00 AI_Player.update()	update
2017-01-03 14:42:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:00 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:00 AI_Player.update()	update
2017-01-03 14:42:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:00 AI_Player.update()	Search took1ms
2017-01-03 14:42:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:00 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:00 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:00 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:00 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:00 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:00 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:00 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:00 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:00 AI_Player.update()	update
2017-01-03 14:42:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:00 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:00 AI_Player.update()	update
2017-01-03 14:42:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:00 AI_Player.update()	Search took10ms
2017-01-03 14:42:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:00 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:00 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:00 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:00 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:00 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:00 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:00 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:00 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:01 AI_Player.update()	update
2017-01-03 14:42:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:01 AI_Player.update()	update
2017-01-03 14:42:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:01 AI_Player.update()	Search took1ms
2017-01-03 14:42:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:01 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:01 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:01 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:01 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:01 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:01 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:01 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:01 AI_Player.update()	update
2017-01-03 14:42:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:01 AI_Player.update()	update
2017-01-03 14:42:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:01 AI_Player.update()	Search took10ms
2017-01-03 14:42:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:01 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:01 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:01 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:01 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:01 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:01 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:01 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:01 AI_Player.update()	update
2017-01-03 14:42:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:01 AI_Player.update()	update
2017-01-03 14:42:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:01 AI_Player.update()	Search took1ms
2017-01-03 14:42:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:01 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:01 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:01 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:01 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:01 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:01 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:01 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:01 AI_Player.update()	update
2017-01-03 14:42:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:01 AI_Player.update()	update
2017-01-03 14:42:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:01 AI_Player.update()	Search took10ms
2017-01-03 14:42:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:01 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:01 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:01 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:01 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:01 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:01 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:01 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:01 AI_Player.update()	update
2017-01-03 14:42:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:02 AI_Player.update()	update
2017-01-03 14:42:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:02 AI_Player.update()	Search took1ms
2017-01-03 14:42:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:02 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:02 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:02 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:02 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:02 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:02 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:02 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:02 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:02 AI_Player.update()	update
2017-01-03 14:42:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:02 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:02 AI_Player.update()	update
2017-01-03 14:42:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:02 AI_Player.update()	Search took10ms
2017-01-03 14:42:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:02 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:02 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:02 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:02 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:02 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:02 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:02 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:02 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:02 AI_Player.update()	update
2017-01-03 14:42:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:02 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:02 AI_Player.update()	update
2017-01-03 14:42:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:02 AI_Player.update()	Search took1ms
2017-01-03 14:42:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:02 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:02 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:02 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:02 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:02 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:02 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:02 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:02 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:02 AI_Player.update()	update
2017-01-03 14:42:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:02 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:02 AI_Player.update()	update
2017-01-03 14:42:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:02 AI_Player.update()	Search took10ms
2017-01-03 14:42:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:02 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:02 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:02 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:02 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:02 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:02 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:02 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:02 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:02 AI_Player.update()	update
2017-01-03 14:42:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:02 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:02 AI_Player.update()	update
2017-01-03 14:42:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:02 AI_Player.update()	Search took2ms
2017-01-03 14:42:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:02 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:02 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:02 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:02 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:02 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:02 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:02 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:02 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:02 AI_Player.update()	update
2017-01-03 14:42:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:02 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:03 AI_Player.update()	update
2017-01-03 14:42:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:03 AI_Player.update()	Search took10ms
2017-01-03 14:42:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:03 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:03 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:03 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:03 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:03 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:03 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:03 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:03 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:03 AI_Player.update()	update
2017-01-03 14:42:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:03 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:03 AI_Player.update()	update
2017-01-03 14:42:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:03 AI_Player.update()	Search took1ms
2017-01-03 14:42:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:03 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:03 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:03 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:03 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:03 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:03 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:03 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:03 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:03 AI_Player.update()	update
2017-01-03 14:42:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:03 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:03 AI_Player.update()	update
2017-01-03 14:42:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:03 AI_Player.update()	Search took10ms
2017-01-03 14:42:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:03 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:03 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:03 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:03 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:03 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:03 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:03 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:03 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:03 AI_Player.update()	update
2017-01-03 14:42:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:03 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:03 AI_Player.update()	update
2017-01-03 14:42:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:03 AI_Player.update()	Search took1ms
2017-01-03 14:42:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:03 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:03 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:03 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:03 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:03 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:03 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:03 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:03 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:03 AI_Player.update()	update
2017-01-03 14:42:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:03 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:03 AI_Player.update()	update
2017-01-03 14:42:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:03 AI_Player.update()	Search took11ms
2017-01-03 14:42:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:03 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:03 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:03 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:03 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:03 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:03 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:03 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:03 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:04 AI_Player.update()	update
2017-01-03 14:42:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:04 AI_Player.update()	update
2017-01-03 14:42:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:04 AI_Player.update()	Search took1ms
2017-01-03 14:42:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:04 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:04 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:04 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:04 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:04 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:04 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:04 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:04 AI_Player.update()	update
2017-01-03 14:42:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:04 AI_Player.update()	update
2017-01-03 14:42:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:04 AI_Player.update()	Search took10ms
2017-01-03 14:42:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:04 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:04 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:04 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:04 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:04 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:04 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:04 AI_Player.update()	update
2017-01-03 14:42:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:04 AI_Player.update()	update
2017-01-03 14:42:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:04 AI_Player.update()	Search took1ms
2017-01-03 14:42:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:04 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:04 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:04 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:04 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:04 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:04 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:04 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:04 AI_Player.update()	update
2017-01-03 14:42:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:04 AI_Player.update()	update
2017-01-03 14:42:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:04 AI_Player.update()	Search took12ms
2017-01-03 14:42:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:04 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:04 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:04 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:04 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:04 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:04 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:04 AI_Player.update()	update
2017-01-03 14:42:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:04 AI_Player.update()	update
2017-01-03 14:42:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:04 AI_Player.update()	Search took1ms
2017-01-03 14:42:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:04 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:04 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:04 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:04 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:04 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:04 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:04 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:05 AI_Player.update()	update
2017-01-03 14:42:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:05 AI_Player.update()	update
2017-01-03 14:42:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:05 AI_Player.update()	Search took12ms
2017-01-03 14:42:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:05 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:05 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:05 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:05 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:05 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:05 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:05 AI_Player.update()	update
2017-01-03 14:42:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:05 AI_Player.update()	update
2017-01-03 14:42:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:05 AI_Player.update()	Search took1ms
2017-01-03 14:42:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:05 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:05 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:05 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:05 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:05 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:05 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:05 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:05 AI_Player.update()	update
2017-01-03 14:42:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:05 AI_Player.update()	update
2017-01-03 14:42:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:05 AI_Player.update()	Search took12ms
2017-01-03 14:42:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:05 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:05 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:05 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:05 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:05 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:05 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:05 AI_Player.update()	update
2017-01-03 14:42:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:05 AI_Player.update()	update
2017-01-03 14:42:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:05 AI_Player.update()	Search took1ms
2017-01-03 14:42:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:05 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:05 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:05 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:05 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:05 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:05 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:05 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:05 AI_Player.update()	update
2017-01-03 14:42:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:05 AI_Player.update()	update
2017-01-03 14:42:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:06 AI_Player.update()	Search took10ms
2017-01-03 14:42:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:06 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:06 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:06 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:06 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:06 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:06 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:06 AI_Player.update()	update
2017-01-03 14:42:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:06 AI_Player.update()	update
2017-01-03 14:42:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:06 AI_Player.update()	Search took1ms
2017-01-03 14:42:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:06 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:06 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:06 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:06 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:06 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:06 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:06 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:06 AI_Player.update()	update
2017-01-03 14:42:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:06 AI_Player.update()	update
2017-01-03 14:42:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:06 AI_Player.update()	Search took10ms
2017-01-03 14:42:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:06 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:06 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:06 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:06 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:06 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:06 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:06 AI_Player.update()	update
2017-01-03 14:42:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:06 AI_Player.update()	update
2017-01-03 14:42:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:06 AI_Player.update()	Search took1ms
2017-01-03 14:42:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:06 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:06 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:06 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:06 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:06 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:06 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:06 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:06 AI_Player.update()	update
2017-01-03 14:42:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:06 AI_Player.update()	update
2017-01-03 14:42:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:06 AI_Player.update()	Search took10ms
2017-01-03 14:42:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:06 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:06 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:06 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:06 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:06 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:06 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:06 AI_Player.update()	update
2017-01-03 14:42:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:07 AI_Player.update()	update
2017-01-03 14:42:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:07 AI_Player.update()	Search took2ms
2017-01-03 14:42:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:07 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:07 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:07 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:07 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:07 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:07 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:07 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:07 AI_Player.update()	update
2017-01-03 14:42:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:07 AI_Player.update()	update
2017-01-03 14:42:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:07 AI_Player.update()	Search took10ms
2017-01-03 14:42:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:07 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:07 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:07 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:07 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:07 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:07 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:07 AI_Player.update()	update
2017-01-03 14:42:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:07 AI_Player.update()	update
2017-01-03 14:42:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:07 AI_Player.update()	Search took1ms
2017-01-03 14:42:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:07 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:07 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:07 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:07 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:07 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:07 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:07 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:07 AI_Player.update()	update
2017-01-03 14:42:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:07 AI_Player.update()	update
2017-01-03 14:42:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:07 AI_Player.update()	Search took10ms
2017-01-03 14:42:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:07 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:07 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:07 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:07 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:07 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:07 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:07 AI_Player.update()	update
2017-01-03 14:42:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:07 AI_Player.update()	update
2017-01-03 14:42:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:07 AI_Player.update()	Search took1ms
2017-01-03 14:42:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:07 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:07 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:07 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:07 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:07 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:07 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:07 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:08 AI_Player.update()	update
2017-01-03 14:42:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:08 AI_Player.update()	update
2017-01-03 14:42:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:08 AI_Player.update()	Search took10ms
2017-01-03 14:42:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:08 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:08 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:08 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:08 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:08 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:08 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:08 AI_Player.update()	update
2017-01-03 14:42:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:08 AI_Player.update()	update
2017-01-03 14:42:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:08 AI_Player.update()	Search took1ms
2017-01-03 14:42:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:08 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:08 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:08 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:08 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:08 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:08 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:08 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:08 AI_Player.update()	update
2017-01-03 14:42:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:08 AI_Player.update()	update
2017-01-03 14:42:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:08 AI_Player.update()	Search took10ms
2017-01-03 14:42:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:08 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:08 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:08 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:08 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:08 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:08 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:08 AI_Player.update()	update
2017-01-03 14:42:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:08 AI_Player.update()	update
2017-01-03 14:42:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:08 AI_Player.update()	Search took1ms
2017-01-03 14:42:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:08 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:08 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:08 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:08 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:08 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:08 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:08 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:08 AI_Player.update()	update
2017-01-03 14:42:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:08 AI_Player.update()	update
2017-01-03 14:42:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:08 AI_Player.update()	Search took11ms
2017-01-03 14:42:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:08 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:08 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:08 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:08 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:08 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:08 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:09 AI_Player.update()	update
2017-01-03 14:42:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:09 AI_Player.update()	update
2017-01-03 14:42:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:09 AI_Player.update()	Search took1ms
2017-01-03 14:42:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:09 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:09 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:09 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:09 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:09 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:09 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:09 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:09 AI_Player.update()	update
2017-01-03 14:42:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:09 AI_Player.update()	update
2017-01-03 14:42:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:09 AI_Player.update()	Search took10ms
2017-01-03 14:42:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:09 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:09 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:09 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:09 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:09 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:09 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:09 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:09 AI_Player.update()	update
2017-01-03 14:42:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:09 AI_Player.update()	update
2017-01-03 14:42:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:09 AI_Player.update()	Search took2ms
2017-01-03 14:42:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:09 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:09 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:09 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:09 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:09 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:09 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:09 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:09 AI_Player.update()	update
2017-01-03 14:42:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:09 AI_Player.update()	update
2017-01-03 14:42:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:09 AI_Player.update()	Search took10ms
2017-01-03 14:42:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:09 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:09 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:09 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:09 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:09 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:09 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:09 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:09 AI_Player.update()	update
2017-01-03 14:42:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:10 AI_Player.update()	update
2017-01-03 14:42:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:10 AI_Player.update()	Search took1ms
2017-01-03 14:42:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:10 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:10 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:10 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:10 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:10 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:10 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:10 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:10 AI_Player.update()	update
2017-01-03 14:42:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:10 AI_Player.update()	update
2017-01-03 14:42:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:10 AI_Player.update()	Search took10ms
2017-01-03 14:42:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:10 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:10 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:10 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:10 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:10 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:10 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:10 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:10 AI_Player.update()	update
2017-01-03 14:42:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:10 AI_Player.update()	update
2017-01-03 14:42:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:10 AI_Player.update()	Search took1ms
2017-01-03 14:42:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:10 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:10 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:10 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:10 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:10 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:10 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:10 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:10 AI_Player.update()	update
2017-01-03 14:42:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:10 AI_Player.update()	update
2017-01-03 14:42:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:10 AI_Player.update()	Search took10ms
2017-01-03 14:42:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:10 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:10 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:10 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:10 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:10 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:10 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:10 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:10 AI_Player.update()	update
2017-01-03 14:42:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:10 AI_Player.update()	update
2017-01-03 14:42:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:10 AI_Player.update()	Search took1ms
2017-01-03 14:42:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:10 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:10 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:10 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:10 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:10 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:10 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:10 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:10 AI_Player.update()	update
2017-01-03 14:42:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:11 AI_Player.update()	update
2017-01-03 14:42:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:11 AI_Player.update()	Search took10ms
2017-01-03 14:42:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:11 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:11 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:11 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:11 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:11 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:11 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:11 AI_Player.update()	update
2017-01-03 14:42:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:11 AI_Player.update()	update
2017-01-03 14:42:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:11 AI_Player.update()	Search took1ms
2017-01-03 14:42:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:11 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:11 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:11 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:11 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:11 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:11 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:11 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:11 AI_Player.update()	update
2017-01-03 14:42:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:11 AI_Player.update()	update
2017-01-03 14:42:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:11 AI_Player.update()	Search took10ms
2017-01-03 14:42:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:11 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:11 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:11 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:11 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:11 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:11 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:11 AI_Player.update()	update
2017-01-03 14:42:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:11 AI_Player.update()	update
2017-01-03 14:42:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:11 AI_Player.update()	Search took1ms
2017-01-03 14:42:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:11 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:11 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:11 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:11 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:11 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:11 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:11 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:11 AI_Player.update()	update
2017-01-03 14:42:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:11 AI_Player.update()	update
2017-01-03 14:42:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:11 AI_Player.update()	Search took10ms
2017-01-03 14:42:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:11 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:11 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:11 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:11 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:11 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:11 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:11 AI_Player.update()	update
2017-01-03 14:42:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:12 AI_Player.update()	update
2017-01-03 14:42:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:12 AI_Player.update()	Search took1ms
2017-01-03 14:42:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:12 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:12 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:12 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:12 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:12 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:12 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:12 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:12 AI_Player.update()	update
2017-01-03 14:42:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:12 AI_Player.update()	update
2017-01-03 14:42:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:12 AI_Player.update()	Search took11ms
2017-01-03 14:42:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:12 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:12 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:12 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:12 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:12 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:12 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:12 AI_Player.update()	update
2017-01-03 14:42:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:12 AI_Player.update()	update
2017-01-03 14:42:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:12 AI_Player.update()	Search took1ms
2017-01-03 14:42:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:12 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:12 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:12 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:12 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:12 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:12 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:12 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:12 AI_Player.update()	update
2017-01-03 14:42:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:12 AI_Player.update()	update
2017-01-03 14:42:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:12 AI_Player.update()	Search took11ms
2017-01-03 14:42:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:12 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:12 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:12 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:12 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:12 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:12 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:12 AI_Player.update()	update
2017-01-03 14:42:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:12 AI_Player.update()	update
2017-01-03 14:42:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:12 AI_Player.update()	Search took1ms
2017-01-03 14:42:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:12 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:12 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:12 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:12 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:12 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:12 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:12 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:13 AI_Player.update()	update
2017-01-03 14:42:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:13 AI_Player.update()	update
2017-01-03 14:42:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:13 AI_Player.update()	Search took12ms
2017-01-03 14:42:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:13 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:13 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:13 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:13 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:13 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:13 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:13 AI_Player.update()	update
2017-01-03 14:42:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:13 AI_Player.update()	update
2017-01-03 14:42:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:13 AI_Player.update()	Search took1ms
2017-01-03 14:42:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:13 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:13 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:13 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:13 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:13 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:13 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:13 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:13 AI_Player.update()	update
2017-01-03 14:42:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:13 AI_Player.update()	update
2017-01-03 14:42:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:13 AI_Player.update()	Search took10ms
2017-01-03 14:42:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:13 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:13 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:13 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:13 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:13 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:13 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:13 AI_Player.update()	update
2017-01-03 14:42:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:13 AI_Player.update()	update
2017-01-03 14:42:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:13 AI_Player.update()	Search took1ms
2017-01-03 14:42:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:13 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:13 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:13 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:13 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:13 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:13 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:13 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:13 AI_Player.update()	update
2017-01-03 14:42:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:13 AI_Player.update()	update
2017-01-03 14:42:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:13 AI_Player.update()	Search took10ms
2017-01-03 14:42:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:13 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:13 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:13 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:13 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:13 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:13 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:14 AI_Player.update()	update
2017-01-03 14:42:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:14 AI_Player.update()	update
2017-01-03 14:42:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:14 AI_Player.update()	Search took1ms
2017-01-03 14:42:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:14 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:14 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:14 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:14 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:14 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:14 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:14 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:14 AI_Player.update()	update
2017-01-03 14:42:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:14 AI_Player.update()	update
2017-01-03 14:42:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:14 AI_Player.update()	Search took10ms
2017-01-03 14:42:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:14 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:14 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:14 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:14 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:14 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:14 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:14 AI_Player.update()	update
2017-01-03 14:42:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:14 AI_Player.update()	update
2017-01-03 14:42:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:14 AI_Player.update()	Search took1ms
2017-01-03 14:42:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:14 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:14 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:14 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:14 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:14 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:14 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:14 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:14 AI_Player.update()	update
2017-01-03 14:42:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:14 AI_Player.update()	update
2017-01-03 14:42:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:14 AI_Player.update()	Search took11ms
2017-01-03 14:42:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:14 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:14 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:14 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:14 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:14 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:14 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:14 AI_Player.update()	update
2017-01-03 14:42:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:15 AI_Player.update()	update
2017-01-03 14:42:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:15 AI_Player.update()	Search took2ms
2017-01-03 14:42:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:15 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:15 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:15 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:15 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:15 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:15 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:15 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:15 AI_Player.update()	update
2017-01-03 14:42:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:15 AI_Player.update()	update
2017-01-03 14:42:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:15 AI_Player.update()	Search took11ms
2017-01-03 14:42:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:15 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:15 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:15 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:15 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:15 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:15 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:15 AI_Player.update()	update
2017-01-03 14:42:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:15 AI_Player.update()	update
2017-01-03 14:42:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:15 AI_Player.update()	Search took1ms
2017-01-03 14:42:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:15 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:15 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:15 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:15 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:15 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:15 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:15 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:15 AI_Player.update()	update
2017-01-03 14:42:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:15 AI_Player.update()	update
2017-01-03 14:42:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:15 AI_Player.update()	Search took10ms
2017-01-03 14:42:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:15 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:15 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:15 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:15 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:15 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:15 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:15 AI_Player.update()	update
2017-01-03 14:42:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:15 AI_Player.update()	update
2017-01-03 14:42:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:15 AI_Player.update()	Search took1ms
2017-01-03 14:42:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:15 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:15 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:15 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:15 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:15 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:15 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:15 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:15 AI_Player.update()	update
2017-01-03 14:42:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:16 AI_Player.update()	update
2017-01-03 14:42:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:16 AI_Player.update()	Search took11ms
2017-01-03 14:42:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:16 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:16 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:16 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:16 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:16 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:16 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:16 AI_Player.update()	update
2017-01-03 14:42:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:16 AI_Player.update()	update
2017-01-03 14:42:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:16 AI_Player.update()	Search took1ms
2017-01-03 14:42:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:16 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:16 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:16 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:16 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:16 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:16 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:16 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:16 AI_Player.update()	update
2017-01-03 14:42:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:16 AI_Player.update()	update
2017-01-03 14:42:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:16 AI_Player.update()	Search took10ms
2017-01-03 14:42:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:16 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:16 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:16 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:16 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:16 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:16 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:16 AI_Player.update()	update
2017-01-03 14:42:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:16 AI_Player.update()	update
2017-01-03 14:42:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:16 AI_Player.update()	Search took1ms
2017-01-03 14:42:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:16 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:16 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:16 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:16 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:16 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:16 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:16 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:16 AI_Player.update()	update
2017-01-03 14:42:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:16 AI_Player.update()	update
2017-01-03 14:42:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:16 AI_Player.update()	Search took10ms
2017-01-03 14:42:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:16 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:16 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:16 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:16 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:16 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:16 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:17 AI_Player.update()	update
2017-01-03 14:42:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:17 AI_Player.update()	update
2017-01-03 14:42:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:17 AI_Player.update()	Search took1ms
2017-01-03 14:42:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:17 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:17 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:17 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:17 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:17 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:17 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:17 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:17 AI_Player.update()	update
2017-01-03 14:42:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:17 AI_Player.update()	update
2017-01-03 14:42:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:17 AI_Player.update()	Search took11ms
2017-01-03 14:42:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:17 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:17 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:17 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:17 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:17 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:17 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:17 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:17 AI_Player.update()	update
2017-01-03 14:42:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:17 AI_Player.update()	update
2017-01-03 14:42:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:17 AI_Player.update()	Search took2ms
2017-01-03 14:42:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:17 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:17 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:17 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:17 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:17 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:17 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:17 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:17 AI_Player.update()	update
2017-01-03 14:42:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:17 AI_Player.update()	update
2017-01-03 14:42:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:17 AI_Player.update()	Search took10ms
2017-01-03 14:42:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:17 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:17 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:17 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:17 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:17 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:17 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:17 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:17 AI_Player.update()	update
2017-01-03 14:42:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:17 AI_Player.update()	update
2017-01-03 14:42:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:17 AI_Player.update()	Search took1ms
2017-01-03 14:42:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:17 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:17 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:17 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:17 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:17 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:17 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:17 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:18 AI_Player.update()	update
2017-01-03 14:42:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:18 AI_Player.update()	update
2017-01-03 14:42:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:18 AI_Player.update()	Search took11ms
2017-01-03 14:42:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:18 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:18 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:18 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:18 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:18 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:18 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:18 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:18 AI_Player.update()	update
2017-01-03 14:42:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:18 AI_Player.update()	update
2017-01-03 14:42:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:18 AI_Player.update()	Search took1ms
2017-01-03 14:42:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:18 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:18 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:18 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:18 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:18 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:18 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:18 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:18 AI_Player.update()	update
2017-01-03 14:42:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:18 AI_Player.update()	update
2017-01-03 14:42:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:18 AI_Player.update()	Search took10ms
2017-01-03 14:42:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:18 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:18 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:18 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:18 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:18 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:18 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:18 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:18 AI_Player.update()	update
2017-01-03 14:42:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:18 AI_Player.update()	update
2017-01-03 14:42:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:18 AI_Player.update()	Search took1ms
2017-01-03 14:42:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:18 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:18 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:18 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:18 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:18 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:18 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:18 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:18 AI_Player.update()	update
2017-01-03 14:42:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:19 AI_Player.update()	update
2017-01-03 14:42:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:19 AI_Player.update()	Search took10ms
2017-01-03 14:42:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:19 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:19 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:19 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:19 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:19 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:19 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:19 AI_Player.update()	update
2017-01-03 14:42:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:19 AI_Player.update()	update
2017-01-03 14:42:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:19 AI_Player.update()	Search took1ms
2017-01-03 14:42:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:19 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:19 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:19 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:19 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:19 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:19 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:19 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:19 AI_Player.update()	update
2017-01-03 14:42:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:19 AI_Player.update()	update
2017-01-03 14:42:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:19 AI_Player.update()	Search took10ms
2017-01-03 14:42:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:19 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:19 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:19 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:19 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:19 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:19 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:19 AI_Player.update()	update
2017-01-03 14:42:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:19 AI_Player.update()	update
2017-01-03 14:42:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:19 AI_Player.update()	Search took1ms
2017-01-03 14:42:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:19 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:19 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:19 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:19 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:19 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:19 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:19 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:19 AI_Player.update()	update
2017-01-03 14:42:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:19 AI_Player.update()	update
2017-01-03 14:42:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:19 AI_Player.update()	Search took10ms
2017-01-03 14:42:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:19 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:19 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:19 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:19 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:19 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:19 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:19 AI_Player.update()	update
2017-01-03 14:42:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:20 AI_Player.update()	update
2017-01-03 14:42:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:20 AI_Player.update()	Search took1ms
2017-01-03 14:42:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:20 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:20 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:20 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:20 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:20 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:20 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:20 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:20 AI_Player.update()	update
2017-01-03 14:42:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:20 AI_Player.update()	update
2017-01-03 14:42:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:20 AI_Player.update()	Search took13ms
2017-01-03 14:42:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:20 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:20 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:20 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:20 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:20 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:20 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:20 AI_Player.update()	update
2017-01-03 14:42:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:20 AI_Player.update()	update
2017-01-03 14:42:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:20 AI_Player.update()	Search took1ms
2017-01-03 14:42:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:20 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:20 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:20 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:20 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:20 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:20 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:20 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:20 AI_Player.update()	update
2017-01-03 14:42:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:20 AI_Player.update()	update
2017-01-03 14:42:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:20 AI_Player.update()	Search took10ms
2017-01-03 14:42:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:20 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:20 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:20 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:20 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:20 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:20 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:20 AI_Player.update()	update
2017-01-03 14:42:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:20 AI_Player.update()	update
2017-01-03 14:42:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:20 AI_Player.update()	Search took1ms
2017-01-03 14:42:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:20 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:20 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:20 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:20 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:20 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:20 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:20 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:20 AI_Player.update()	update
2017-01-03 14:42:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:21 AI_Player.update()	update
2017-01-03 14:42:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:21 AI_Player.update()	Search took10ms
2017-01-03 14:42:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:21 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:21 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:21 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:21 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:21 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:21 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:21 AI_Player.update()	update
2017-01-03 14:42:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:21 AI_Player.update()	update
2017-01-03 14:42:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:21 AI_Player.update()	Search took1ms
2017-01-03 14:42:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:21 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:21 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:21 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:21 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:21 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:21 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:21 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:21 AI_Player.update()	update
2017-01-03 14:42:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:21 AI_Player.update()	update
2017-01-03 14:42:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:21 AI_Player.update()	Search took10ms
2017-01-03 14:42:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:21 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:21 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:21 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:21 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:21 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:21 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:21 AI_Player.update()	update
2017-01-03 14:42:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:21 AI_Player.update()	update
2017-01-03 14:42:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:21 AI_Player.update()	Search took1ms
2017-01-03 14:42:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:21 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:21 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:21 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:21 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:21 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:21 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:21 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:21 AI_Player.update()	update
2017-01-03 14:42:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:21 AI_Player.update()	update
2017-01-03 14:42:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:21 AI_Player.update()	Search took11ms
2017-01-03 14:42:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:21 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:21 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:21 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:21 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:21 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:21 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:22 AI_Player.update()	update
2017-01-03 14:42:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:22 AI_Player.update()	update
2017-01-03 14:42:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:22 AI_Player.update()	Search took1ms
2017-01-03 14:42:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:22 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:22 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:22 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:22 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:22 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:22 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:22 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:22 AI_Player.update()	update
2017-01-03 14:42:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:22 AI_Player.update()	update
2017-01-03 14:42:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:22 AI_Player.update()	Search took11ms
2017-01-03 14:42:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:22 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:22 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:22 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:22 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:22 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:22 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:22 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:22 AI_Player.update()	update
2017-01-03 14:42:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:22 AI_Player.update()	update
2017-01-03 14:42:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:22 AI_Player.update()	Search took1ms
2017-01-03 14:42:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:22 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:22 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:22 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:22 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:22 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:22 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:22 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:22 AI_Player.update()	update
2017-01-03 14:42:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:22 AI_Player.update()	update
2017-01-03 14:42:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:22 AI_Player.update()	Search took10ms
2017-01-03 14:42:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:22 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:22 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:22 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:22 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:22 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:22 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:22 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:22 AI_Player.update()	update
2017-01-03 14:42:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:22 AI_Player.update()	update
2017-01-03 14:42:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:22 AI_Player.update()	Search took1ms
2017-01-03 14:42:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:22 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:22 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:22 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:22 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:22 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:22 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:22 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:23 AI_Player.update()	update
2017-01-03 14:42:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:23 AI_Player.update()	update
2017-01-03 14:42:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:23 AI_Player.update()	Search took10ms
2017-01-03 14:42:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:23 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:23 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:23 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:23 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:23 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:23 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:23 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:23 AI_Player.update()	update
2017-01-03 14:42:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:23 AI_Player.update()	update
2017-01-03 14:42:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:23 AI_Player.update()	Search took1ms
2017-01-03 14:42:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:23 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:23 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:23 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:23 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:23 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:23 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:23 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:23 AI_Player.update()	update
2017-01-03 14:42:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:23 AI_Player.update()	update
2017-01-03 14:42:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:23 AI_Player.update()	Search took10ms
2017-01-03 14:42:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:23 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:23 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:23 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:23 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:23 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:23 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:23 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:23 AI_Player.update()	update
2017-01-03 14:42:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:23 AI_Player.update()	update
2017-01-03 14:42:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:23 AI_Player.update()	Search took1ms
2017-01-03 14:42:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:23 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:23 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:23 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:23 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:23 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:23 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:23 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:23 AI_Player.update()	update
2017-01-03 14:42:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:24 AI_Player.update()	update
2017-01-03 14:42:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:24 AI_Player.update()	Search took10ms
2017-01-03 14:42:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:24 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:24 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:24 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:24 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:24 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:24 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:24 AI_Player.update()	update
2017-01-03 14:42:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:24 AI_Player.update()	update
2017-01-03 14:42:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:24 AI_Player.update()	Search took1ms
2017-01-03 14:42:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:24 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:24 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:24 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:24 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:24 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:24 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:24 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:24 AI_Player.update()	update
2017-01-03 14:42:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:24 AI_Player.update()	update
2017-01-03 14:42:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:24 AI_Player.update()	Search took10ms
2017-01-03 14:42:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:24 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:24 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:24 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:24 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:24 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:24 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:24 AI_Player.update()	update
2017-01-03 14:42:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:24 AI_Player.update()	update
2017-01-03 14:42:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:24 AI_Player.update()	Search took1ms
2017-01-03 14:42:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:24 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:24 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:24 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:24 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:24 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:24 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:24 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:24 AI_Player.update()	update
2017-01-03 14:42:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:24 AI_Player.update()	update
2017-01-03 14:42:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:24 AI_Player.update()	Search took10ms
2017-01-03 14:42:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:24 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:24 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:24 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:24 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:24 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:24 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:24 AI_Player.update()	update
2017-01-03 14:42:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:25 AI_Player.update()	update
2017-01-03 14:42:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:25 AI_Player.update()	Search took1ms
2017-01-03 14:42:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:25 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:25 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:25 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:25 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:25 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:25 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:25 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:25 AI_Player.update()	update
2017-01-03 14:42:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:25 AI_Player.update()	update
2017-01-03 14:42:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:25 AI_Player.update()	Search took10ms
2017-01-03 14:42:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:25 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:25 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:25 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:25 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:25 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:25 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:25 AI_Player.update()	update
2017-01-03 14:42:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:25 AI_Player.update()	update
2017-01-03 14:42:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:25 AI_Player.update()	Search took1ms
2017-01-03 14:42:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:25 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:25 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:25 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:25 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:25 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:25 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:25 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:25 AI_Player.update()	update
2017-01-03 14:42:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:25 AI_Player.update()	update
2017-01-03 14:42:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:25 AI_Player.update()	Search took10ms
2017-01-03 14:42:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:25 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:25 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:25 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:25 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:25 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:25 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:25 AI_Player.update()	update
2017-01-03 14:42:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:25 AI_Player.update()	update
2017-01-03 14:42:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:25 AI_Player.update()	Search took1ms
2017-01-03 14:42:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:25 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:25 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:25 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:25 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:25 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:25 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:25 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:26 AI_Player.update()	update
2017-01-03 14:42:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:26 AI_Player.update()	update
2017-01-03 14:42:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:26 AI_Player.update()	Search took10ms
2017-01-03 14:42:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:26 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:26 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:26 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:26 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:26 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:26 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:26 AI_Player.update()	update
2017-01-03 14:42:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:26 AI_Player.update()	update
2017-01-03 14:42:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:26 AI_Player.update()	Search took1ms
2017-01-03 14:42:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:26 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:26 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:26 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:26 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:26 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:26 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:26 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:26 AI_Player.update()	update
2017-01-03 14:42:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:26 AI_Player.update()	update
2017-01-03 14:42:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:26 AI_Player.update()	Search took10ms
2017-01-03 14:42:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:26 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:26 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:26 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:26 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:26 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:26 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:26 AI_Player.update()	update
2017-01-03 14:42:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:26 AI_Player.update()	update
2017-01-03 14:42:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:26 AI_Player.update()	Search took2ms
2017-01-03 14:42:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:26 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:26 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:26 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:26 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:26 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:26 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:26 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:27 AI_Player.update()	update
2017-01-03 14:42:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:27 AI_Player.update()	update
2017-01-03 14:42:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:27 AI_Player.update()	Search took10ms
2017-01-03 14:42:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:27 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:27 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:27 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:27 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:27 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:27 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:27 AI_Player.update()	update
2017-01-03 14:42:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:27 AI_Player.update()	update
2017-01-03 14:42:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:27 AI_Player.update()	Search took1ms
2017-01-03 14:42:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:27 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:27 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:27 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:27 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:27 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:27 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:27 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:27 AI_Player.update()	update
2017-01-03 14:42:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:27 AI_Player.update()	update
2017-01-03 14:42:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:27 AI_Player.update()	Search took10ms
2017-01-03 14:42:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:27 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:27 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:27 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:27 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:27 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:27 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:27 AI_Player.update()	update
2017-01-03 14:42:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:27 AI_Player.update()	update
2017-01-03 14:42:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:27 AI_Player.update()	Search took1ms
2017-01-03 14:42:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:27 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:27 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:27 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:27 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:27 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:27 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:27 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:27 AI_Player.update()	update
2017-01-03 14:42:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:27 AI_Player.update()	update
2017-01-03 14:42:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:27 AI_Player.update()	Search took13ms
2017-01-03 14:42:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:27 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:27 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:27 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:27 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:27 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:27 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:28 AI_Player.update()	update
2017-01-03 14:42:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:28 AI_Player.update()	update
2017-01-03 14:42:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:28 AI_Player.update()	Search took1ms
2017-01-03 14:42:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:28 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:28 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:28 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:28 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:28 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:28 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:28 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:28 AI_Player.update()	update
2017-01-03 14:42:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:28 AI_Player.update()	update
2017-01-03 14:42:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:28 AI_Player.update()	Search took10ms
2017-01-03 14:42:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:28 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:28 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:28 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:28 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:28 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:28 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:28 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:28 AI_Player.update()	update
2017-01-03 14:42:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:28 AI_Player.update()	update
2017-01-03 14:42:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:28 AI_Player.update()	Search took1ms
2017-01-03 14:42:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:28 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:28 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:28 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:28 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:28 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:28 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:28 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:28 AI_Player.update()	update
2017-01-03 14:42:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:28 AI_Player.update()	update
2017-01-03 14:42:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:28 AI_Player.update()	Search took10ms
2017-01-03 14:42:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:28 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:28 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:28 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:28 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:28 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:28 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:28 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:28 AI_Player.update()	update
2017-01-03 14:42:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:29 AI_Player.update()	update
2017-01-03 14:42:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:29 AI_Player.update()	Search took1ms
2017-01-03 14:42:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:29 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:29 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:29 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:29 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:29 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:29 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:29 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:29 AI_Player.update()	update
2017-01-03 14:42:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:29 AI_Player.update()	update
2017-01-03 14:42:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:29 AI_Player.update()	Search took10ms
2017-01-03 14:42:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:29 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:29 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:29 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:29 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:29 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:29 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:29 AI_Player.update()	update
2017-01-03 14:42:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:29 AI_Player.update()	update
2017-01-03 14:42:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:29 AI_Player.update()	Search took2ms
2017-01-03 14:42:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:29 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:29 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:29 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:29 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:29 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:29 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:29 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:29 AI_Player.update()	update
2017-01-03 14:42:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:29 AI_Player.update()	update
2017-01-03 14:42:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:29 AI_Player.update()	Search took11ms
2017-01-03 14:42:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:29 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:29 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:29 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:29 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:29 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:29 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:29 AI_Player.update()	update
2017-01-03 14:42:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:29 AI_Player.update()	update
2017-01-03 14:42:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:29 AI_Player.update()	Search took1ms
2017-01-03 14:42:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:29 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:29 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:29 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:29 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:29 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:29 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:29 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:29 AI_Player.update()	update
2017-01-03 14:42:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:30 AI_Player.update()	update
2017-01-03 14:42:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:30 AI_Player.update()	Search took10ms
2017-01-03 14:42:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:30 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:30 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:30 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:30 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:30 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:30 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:30 AI_Player.update()	update
2017-01-03 14:42:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:30 AI_Player.update()	update
2017-01-03 14:42:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:30 AI_Player.update()	Search took1ms
2017-01-03 14:42:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:30 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:30 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:30 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:30 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:30 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:30 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:30 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:30 AI_Player.update()	update
2017-01-03 14:42:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:30 AI_Player.update()	update
2017-01-03 14:42:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:30 AI_Player.update()	Search took10ms
2017-01-03 14:42:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:30 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:30 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:30 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:30 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:30 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:30 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:30 AI_Player.update()	update
2017-01-03 14:42:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:30 AI_Player.update()	update
2017-01-03 14:42:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:30 AI_Player.update()	Search took1ms
2017-01-03 14:42:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:30 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:30 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:30 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:30 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:30 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:30 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:30 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:30 AI_Player.update()	update
2017-01-03 14:42:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:30 AI_Player.update()	update
2017-01-03 14:42:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:30 AI_Player.update()	Search took11ms
2017-01-03 14:42:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:30 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:30 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:30 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:30 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:30 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:30 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:31 AI_Player.update()	update
2017-01-03 14:42:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:31 AI_Player.update()	update
2017-01-03 14:42:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:31 AI_Player.update()	Search took1ms
2017-01-03 14:42:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:31 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:31 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:31 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:31 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:31 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:31 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:31 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:31 AI_Player.update()	update
2017-01-03 14:42:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:31 AI_Player.update()	update
2017-01-03 14:42:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:31 AI_Player.update()	Search took11ms
2017-01-03 14:42:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:31 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:31 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:31 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:31 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:31 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:31 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:31 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:31 AI_Player.update()	update
2017-01-03 14:42:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:31 AI_Player.update()	update
2017-01-03 14:42:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:31 AI_Player.update()	Search took1ms
2017-01-03 14:42:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:31 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:31 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:31 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:31 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:31 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:31 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:31 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:31 AI_Player.update()	update
2017-01-03 14:42:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:31 AI_Player.update()	update
2017-01-03 14:42:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:31 AI_Player.update()	Search took10ms
2017-01-03 14:42:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:31 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:31 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:31 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:31 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:31 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:31 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:31 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:31 AI_Player.update()	update
2017-01-03 14:42:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:31 AI_Player.update()	update
2017-01-03 14:42:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:31 AI_Player.update()	Search took1ms
2017-01-03 14:42:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:31 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:31 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:31 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:31 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:31 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:31 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:31 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:32 AI_Player.update()	update
2017-01-03 14:42:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:32 AI_Player.update()	update
2017-01-03 14:42:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:32 AI_Player.update()	Search took10ms
2017-01-03 14:42:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:32 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:32 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:32 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:32 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:32 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:32 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:32 AI_Player.update()	update
2017-01-03 14:42:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:32 AI_Player.update()	update
2017-01-03 14:42:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:32 AI_Player.update()	Search took1ms
2017-01-03 14:42:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:32 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:32 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:32 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:32 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:32 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:32 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:32 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:32 AI_Player.update()	update
2017-01-03 14:42:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:32 AI_Player.update()	update
2017-01-03 14:42:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:32 AI_Player.update()	Search took10ms
2017-01-03 14:42:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:32 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:32 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:32 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:32 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:32 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:32 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:32 AI_Player.update()	update
2017-01-03 14:42:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:32 AI_Player.update()	update
2017-01-03 14:42:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:32 AI_Player.update()	Search took1ms
2017-01-03 14:42:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:32 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:32 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:32 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:32 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:32 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:32 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:32 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:32 AI_Player.update()	update
2017-01-03 14:42:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:33 AI_Player.update()	update
2017-01-03 14:42:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:33 AI_Player.update()	Search took10ms
2017-01-03 14:42:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:33 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:33 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:33 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:33 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:33 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:33 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:33 AI_Player.update()	update
2017-01-03 14:42:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:33 AI_Player.update()	update
2017-01-03 14:42:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:33 AI_Player.update()	Search took1ms
2017-01-03 14:42:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:33 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:33 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:33 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:33 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:33 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:33 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:33 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:33 AI_Player.update()	update
2017-01-03 14:42:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:33 AI_Player.update()	update
2017-01-03 14:42:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:33 AI_Player.update()	Search took11ms
2017-01-03 14:42:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:33 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:33 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:33 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:33 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:33 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:33 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:33 AI_Player.update()	update
2017-01-03 14:42:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:33 AI_Player.update()	update
2017-01-03 14:42:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:33 AI_Player.update()	Search took1ms
2017-01-03 14:42:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:33 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:33 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:33 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:33 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:33 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:33 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:33 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:33 AI_Player.update()	update
2017-01-03 14:42:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:33 AI_Player.update()	update
2017-01-03 14:42:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:33 AI_Player.update()	Search took10ms
2017-01-03 14:42:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:33 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:33 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:33 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:33 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:33 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:33 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:34 AI_Player.update()	update
2017-01-03 14:42:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:34 AI_Player.update()	update
2017-01-03 14:42:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:34 AI_Player.update()	Search took1ms
2017-01-03 14:42:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:34 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:34 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:34 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:34 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:34 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:34 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:34 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:34 AI_Player.update()	update
2017-01-03 14:42:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:34 AI_Player.update()	update
2017-01-03 14:42:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:34 AI_Player.update()	Search took10ms
2017-01-03 14:42:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:34 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:34 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:34 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:34 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:34 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:34 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:34 AI_Player.update()	update
2017-01-03 14:42:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:34 AI_Player.update()	update
2017-01-03 14:42:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:34 AI_Player.update()	Search took1ms
2017-01-03 14:42:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:34 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:34 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:34 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:34 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:34 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:34 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:34 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:34 AI_Player.update()	update
2017-01-03 14:42:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:34 AI_Player.update()	update
2017-01-03 14:42:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:34 AI_Player.update()	Search took10ms
2017-01-03 14:42:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:34 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:34 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:34 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:34 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:34 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:34 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:34 AI_Player.update()	update
2017-01-03 14:42:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:35 AI_Player.update()	update
2017-01-03 14:42:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:35 AI_Player.update()	Search took1ms
2017-01-03 14:42:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:35 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:35 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:35 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:35 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:35 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:35 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:35 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:35 AI_Player.update()	update
2017-01-03 14:42:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:35 AI_Player.update()	update
2017-01-03 14:42:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:35 AI_Player.update()	Search took10ms
2017-01-03 14:42:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:35 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:35 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:35 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:35 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:35 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:35 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:35 AI_Player.update()	update
2017-01-03 14:42:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:35 AI_Player.update()	update
2017-01-03 14:42:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:35 AI_Player.update()	Search took1ms
2017-01-03 14:42:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:35 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:35 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:35 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:35 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:35 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:35 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:35 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:35 AI_Player.update()	update
2017-01-03 14:42:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:35 AI_Player.update()	update
2017-01-03 14:42:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:35 AI_Player.update()	Search took10ms
2017-01-03 14:42:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:35 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:35 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:35 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:35 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:35 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:35 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:35 AI_Player.update()	update
2017-01-03 14:42:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:35 AI_Player.update()	update
2017-01-03 14:42:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:35 AI_Player.update()	Search took1ms
2017-01-03 14:42:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:35 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:35 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:35 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:35 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:35 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:35 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:35 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:36 AI_Player.update()	update
2017-01-03 14:42:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:36 AI_Player.update()	update
2017-01-03 14:42:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:36 AI_Player.update()	Search took11ms
2017-01-03 14:42:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:36 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:36 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:36 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:36 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:36 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:36 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:36 AI_Player.update()	update
2017-01-03 14:42:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:36 AI_Player.update()	update
2017-01-03 14:42:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:36 AI_Player.update()	Search took1ms
2017-01-03 14:42:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:36 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:36 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:36 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:36 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:36 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:36 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:36 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:36 AI_Player.update()	update
2017-01-03 14:42:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:36 AI_Player.update()	update
2017-01-03 14:42:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:36 AI_Player.update()	Search took10ms
2017-01-03 14:42:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:36 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:36 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:36 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:36 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:36 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:36 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:36 AI_Player.update()	update
2017-01-03 14:42:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:36 AI_Player.update()	update
2017-01-03 14:42:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:36 AI_Player.update()	Search took1ms
2017-01-03 14:42:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:36 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:36 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:36 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:36 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:36 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:36 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:36 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:37 AI_Player.update()	update
2017-01-03 14:42:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:37 AI_Player.update()	update
2017-01-03 14:42:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:37 AI_Player.update()	Search took10ms
2017-01-03 14:42:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:37 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:37 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:37 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:37 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:37 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:37 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:37 AI_Player.update()	update
2017-01-03 14:42:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:37 AI_Player.update()	update
2017-01-03 14:42:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:37 AI_Player.update()	Search took1ms
2017-01-03 14:42:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:37 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:37 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:37 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:37 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:37 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:37 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:37 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:37 AI_Player.update()	update
2017-01-03 14:42:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:37 AI_Player.update()	update
2017-01-03 14:42:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:37 AI_Player.update()	Search took10ms
2017-01-03 14:42:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:37 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:37 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:37 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:37 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:37 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:37 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:37 AI_Player.update()	update
2017-01-03 14:42:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:37 AI_Player.update()	update
2017-01-03 14:42:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:37 AI_Player.update()	Search took2ms
2017-01-03 14:42:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:37 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:37 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:37 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:37 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:37 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:37 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:37 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:37 AI_Player.update()	update
2017-01-03 14:42:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:38 AI_Player.update()	update
2017-01-03 14:42:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:38 AI_Player.update()	Search took10ms
2017-01-03 14:42:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:38 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:38 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:38 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:38 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:38 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:38 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:38 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:38 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:38 AI_Player.update()	update
2017-01-03 14:42:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:38 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:38 AI_Player.update()	update
2017-01-03 14:42:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:38 AI_Player.update()	Search took1ms
2017-01-03 14:42:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:38 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:38 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:38 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:38 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:38 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:38 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:38 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:38 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:38 AI_Player.update()	update
2017-01-03 14:42:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:38 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:38 AI_Player.update()	update
2017-01-03 14:42:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:38 AI_Player.update()	Search took12ms
2017-01-03 14:42:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:38 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:38 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:38 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:38 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:38 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:38 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:38 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:38 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:38 AI_Player.update()	update
2017-01-03 14:42:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:38 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:38 AI_Player.update()	update
2017-01-03 14:42:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:38 AI_Player.update()	Search took1ms
2017-01-03 14:42:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:38 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:38 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:38 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:38 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:38 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:38 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:38 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:38 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:38 AI_Player.update()	update
2017-01-03 14:42:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:38 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:38 AI_Player.update()	update
2017-01-03 14:42:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:38 AI_Player.update()	Search took10ms
2017-01-03 14:42:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:38 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:38 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:38 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:38 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:38 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:38 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:38 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:38 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:39 AI_Player.update()	update
2017-01-03 14:42:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:39 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:39 AI_Player.update()	update
2017-01-03 14:42:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:39 AI_Player.update()	Search took1ms
2017-01-03 14:42:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:39 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:39 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:39 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:39 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:39 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:39 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:39 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:39 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:39 AI_Player.update()	update
2017-01-03 14:42:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:39 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:39 AI_Player.update()	update
2017-01-03 14:42:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:39 AI_Player.update()	Search took11ms
2017-01-03 14:42:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:39 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:39 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:39 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:39 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:39 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:39 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:39 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:39 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:39 AI_Player.update()	update
2017-01-03 14:42:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:39 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:39 AI_Player.update()	update
2017-01-03 14:42:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:39 AI_Player.update()	Search took1ms
2017-01-03 14:42:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:39 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:39 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:39 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:39 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:39 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:39 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:39 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:39 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:39 AI_Player.update()	update
2017-01-03 14:42:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:39 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:39 AI_Player.update()	update
2017-01-03 14:42:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:39 AI_Player.update()	Search took10ms
2017-01-03 14:42:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:39 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:39 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:39 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:39 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:39 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:39 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:39 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:39 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:39 AI_Player.update()	update
2017-01-03 14:42:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:39 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:40 AI_Player.update()	update
2017-01-03 14:42:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:40 AI_Player.update()	Search took1ms
2017-01-03 14:42:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:40 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:40 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:40 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:40 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:40 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:40 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:40 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:40 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:40 AI_Player.update()	update
2017-01-03 14:42:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:40 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:40 AI_Player.update()	update
2017-01-03 14:42:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:40 AI_Player.update()	Search took10ms
2017-01-03 14:42:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:40 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:40 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:40 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:40 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:40 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:40 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:40 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:40 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:40 AI_Player.update()	update
2017-01-03 14:42:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:40 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:40 AI_Player.update()	update
2017-01-03 14:42:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:40 AI_Player.update()	Search took1ms
2017-01-03 14:42:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:40 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:40 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:40 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:40 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:40 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:40 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:40 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:40 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:40 AI_Player.update()	update
2017-01-03 14:42:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:40 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:40 AI_Player.update()	update
2017-01-03 14:42:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:40 AI_Player.update()	Search took10ms
2017-01-03 14:42:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:40 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:40 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:40 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:40 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:40 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:40 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:40 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:40 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:40 AI_Player.update()	update
2017-01-03 14:42:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:40 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:40 AI_Player.update()	update
2017-01-03 14:42:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:40 AI_Player.update()	Search took1ms
2017-01-03 14:42:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:40 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:40 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:40 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:40 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:40 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:40 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:40 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:40 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:41 AI_Player.update()	update
2017-01-03 14:42:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:41 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:41 AI_Player.update()	update
2017-01-03 14:42:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:41 AI_Player.update()	Search took10ms
2017-01-03 14:42:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:41 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:41 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:41 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:41 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:41 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:41 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:41 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:41 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:41 AI_Player.update()	update
2017-01-03 14:42:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:41 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:41 AI_Player.update()	update
2017-01-03 14:42:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:41 AI_Player.update()	Search took1ms
2017-01-03 14:42:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:41 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:41 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:41 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:41 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:41 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:41 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:41 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:41 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:41 AI_Player.update()	update
2017-01-03 14:42:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:41 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:41 AI_Player.update()	update
2017-01-03 14:42:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:41 AI_Player.update()	Search took10ms
2017-01-03 14:42:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:41 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:41 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:41 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:41 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:41 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:41 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:41 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:41 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:41 AI_Player.update()	update
2017-01-03 14:42:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:41 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:41 AI_Player.update()	update
2017-01-03 14:42:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:41 AI_Player.update()	Search took1ms
2017-01-03 14:42:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:41 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:41 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:41 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:41 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:41 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:41 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:41 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:41 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:41 AI_Player.update()	update
2017-01-03 14:42:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:41 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:41 AI_Player.update()	update
2017-01-03 14:42:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:41 AI_Player.update()	Search took10ms
2017-01-03 14:42:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:41 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:41 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:41 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:41 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:41 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:41 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:41 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:41 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:42 AI_Player.update()	update
2017-01-03 14:42:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:42 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:42 AI_Player.update()	update
2017-01-03 14:42:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:42 AI_Player.update()	Search took1ms
2017-01-03 14:42:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:42 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:42 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:42 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:42 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:42 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:42 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:42 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:42 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:42 AI_Player.update()	update
2017-01-03 14:42:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:42 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:42 AI_Player.update()	update
2017-01-03 14:42:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:42 AI_Player.update()	Search took10ms
2017-01-03 14:42:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:42 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:42 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:42 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:42 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:42 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:42 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:42 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:42 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:42 AI_Player.update()	update
2017-01-03 14:42:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:42 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:42 AI_Player.update()	update
2017-01-03 14:42:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:42 AI_Player.update()	Search took1ms
2017-01-03 14:42:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:42 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:42 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:42 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:42 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:42 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:42 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:42 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:42 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:42 AI_Player.update()	update
2017-01-03 14:42:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:42 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:42 AI_Player.update()	update
2017-01-03 14:42:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:42 AI_Player.update()	Search took11ms
2017-01-03 14:42:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:42 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:42 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:42 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:42 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:42 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:42 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:42 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:42 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:42 AI_Player.update()	update
2017-01-03 14:42:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:42 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:43 AI_Player.update()	update
2017-01-03 14:42:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:43 AI_Player.update()	Search took2ms
2017-01-03 14:42:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:43 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:43 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:43 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:43 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:43 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:43 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:43 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:43 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:43 AI_Player.update()	update
2017-01-03 14:42:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:43 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:43 AI_Player.update()	update
2017-01-03 14:42:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:43 AI_Player.update()	Search took10ms
2017-01-03 14:42:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:43 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:43 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:43 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:43 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:43 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:43 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:43 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:43 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:43 AI_Player.update()	update
2017-01-03 14:42:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:43 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:43 AI_Player.update()	update
2017-01-03 14:42:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:43 AI_Player.update()	Search took1ms
2017-01-03 14:42:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:43 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:43 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:43 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:43 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:43 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:43 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:43 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:43 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:43 AI_Player.update()	update
2017-01-03 14:42:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:43 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:43 AI_Player.update()	update
2017-01-03 14:42:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:43 AI_Player.update()	Search took10ms
2017-01-03 14:42:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:43 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:43 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:43 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:43 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:43 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:43 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:43 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:43 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:43 AI_Player.update()	update
2017-01-03 14:42:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:43 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:43 AI_Player.update()	update
2017-01-03 14:42:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:43 AI_Player.update()	Search took1ms
2017-01-03 14:42:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:43 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:43 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:43 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:43 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:43 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:43 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:43 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:43 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:43 AI_Player.update()	update
2017-01-03 14:42:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:43 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:44 AI_Player.update()	update
2017-01-03 14:42:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:44 AI_Player.update()	Search took10ms
2017-01-03 14:42:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:44 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:44 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:44 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:44 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:44 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:44 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:44 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:44 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:44 AI_Player.update()	update
2017-01-03 14:42:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:44 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:44 AI_Player.update()	update
2017-01-03 14:42:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:44 AI_Player.update()	Search took1ms
2017-01-03 14:42:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:44 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:44 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:44 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:44 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:44 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:44 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:44 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:44 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:44 AI_Player.update()	update
2017-01-03 14:42:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:44 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:44 AI_Player.update()	update
2017-01-03 14:42:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:44 AI_Player.update()	Search took10ms
2017-01-03 14:42:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:44 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:44 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:44 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:44 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:44 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:44 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:44 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:44 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:44 AI_Player.update()	update
2017-01-03 14:42:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:44 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:44 AI_Player.update()	update
2017-01-03 14:42:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:44 AI_Player.update()	Search took2ms
2017-01-03 14:42:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:44 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:44 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:44 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:44 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:44 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:44 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:44 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:44 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:44 AI_Player.update()	update
2017-01-03 14:42:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:44 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:44 AI_Player.update()	update
2017-01-03 14:42:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:44 AI_Player.update()	Search took10ms
2017-01-03 14:42:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:44 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:44 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:44 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:44 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:44 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:44 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:44 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:44 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:45 AI_Player.update()	update
2017-01-03 14:42:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:45 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:45 AI_Player.update()	update
2017-01-03 14:42:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:45 AI_Player.update()	Search took1ms
2017-01-03 14:42:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:45 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:45 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:45 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:45 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:45 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:45 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:45 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:45 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:45 AI_Player.update()	update
2017-01-03 14:42:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:45 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:45 AI_Player.update()	update
2017-01-03 14:42:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:45 AI_Player.update()	Search took10ms
2017-01-03 14:42:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:45 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:45 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:45 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:45 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:45 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:45 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:45 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:45 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:45 AI_Player.update()	update
2017-01-03 14:42:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:45 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:45 AI_Player.update()	update
2017-01-03 14:42:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:45 AI_Player.update()	Search took1ms
2017-01-03 14:42:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:45 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:45 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:45 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:45 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:45 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:45 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:45 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:45 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:45 AI_Player.update()	update
2017-01-03 14:42:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:45 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:45 AI_Player.update()	update
2017-01-03 14:42:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:45 AI_Player.update()	Search took10ms
2017-01-03 14:42:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:45 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:45 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:45 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:45 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:45 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:45 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:45 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:45 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:45 AI_Player.update()	update
2017-01-03 14:42:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:45 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:45 AI_Player.update()	update
2017-01-03 14:42:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:45 AI_Player.update()	Search took1ms
2017-01-03 14:42:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:45 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:45 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:45 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:45 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:45 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:45 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:45 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:45 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:46 AI_Player.update()	update
2017-01-03 14:42:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:46 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:46 AI_Player.update()	update
2017-01-03 14:42:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:46 AI_Player.update()	Search took10ms
2017-01-03 14:42:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:46 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:46 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:46 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:46 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:46 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:46 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:46 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:46 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:46 AI_Player.update()	update
2017-01-03 14:42:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:46 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:46 AI_Player.update()	update
2017-01-03 14:42:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:46 AI_Player.update()	Search took1ms
2017-01-03 14:42:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:46 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:46 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:46 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:46 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:46 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:46 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:46 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:46 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:46 AI_Player.update()	update
2017-01-03 14:42:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:46 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:46 AI_Player.update()	update
2017-01-03 14:42:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:46 AI_Player.update()	Search took10ms
2017-01-03 14:42:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:46 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:46 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:46 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:46 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:46 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:46 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:46 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:46 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:46 AI_Player.update()	update
2017-01-03 14:42:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:46 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:46 AI_Player.update()	update
2017-01-03 14:42:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:46 AI_Player.update()	Search took1ms
2017-01-03 14:42:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:46 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:46 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:46 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:46 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:46 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:46 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:46 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:46 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:46 AI_Player.update()	update
2017-01-03 14:42:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:46 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:47 AI_Player.update()	update
2017-01-03 14:42:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:47 AI_Player.update()	Search took10ms
2017-01-03 14:42:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:47 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:47 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:47 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:47 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:47 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:47 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:47 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:47 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:47 AI_Player.update()	update
2017-01-03 14:42:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:47 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:47 AI_Player.update()	update
2017-01-03 14:42:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:47 AI_Player.update()	Search took1ms
2017-01-03 14:42:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:47 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:47 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:47 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:47 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:47 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:47 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:47 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:47 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:47 AI_Player.update()	update
2017-01-03 14:42:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:47 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:47 AI_Player.update()	update
2017-01-03 14:42:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:47 AI_Player.update()	Search took10ms
2017-01-03 14:42:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:47 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:47 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:47 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:47 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:47 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:47 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:47 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:47 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:47 AI_Player.update()	update
2017-01-03 14:42:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:47 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:47 AI_Player.update()	update
2017-01-03 14:42:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:47 AI_Player.update()	Search took1ms
2017-01-03 14:42:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:47 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:47 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:47 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:47 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:47 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:47 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:47 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:47 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:47 AI_Player.update()	update
2017-01-03 14:42:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:47 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:47 AI_Player.update()	update
2017-01-03 14:42:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:47 AI_Player.update()	Search took10ms
2017-01-03 14:42:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:47 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:47 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:47 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:47 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:47 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:47 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:47 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:47 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:47 AI_Player.update()	update
2017-01-03 14:42:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:47 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:48 AI_Player.update()	update
2017-01-03 14:42:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:48 AI_Player.update()	Search took1ms
2017-01-03 14:42:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:48 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:48 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:48 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:48 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:48 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:48 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:48 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:48 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:48 AI_Player.update()	update
2017-01-03 14:42:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:48 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:48 AI_Player.update()	update
2017-01-03 14:42:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:48 AI_Player.update()	Search took10ms
2017-01-03 14:42:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:48 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:48 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:48 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:48 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:48 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:48 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:48 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:48 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:48 AI_Player.update()	update
2017-01-03 14:42:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:48 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:48 AI_Player.update()	update
2017-01-03 14:42:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:48 AI_Player.update()	Search took1ms
2017-01-03 14:42:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:48 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:48 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:48 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:48 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:48 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:48 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:48 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:48 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:48 AI_Player.update()	update
2017-01-03 14:42:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:48 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:48 AI_Player.update()	update
2017-01-03 14:42:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:48 AI_Player.update()	Search took11ms
2017-01-03 14:42:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:48 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:48 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:48 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:48 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:48 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:48 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:48 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:48 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:48 AI_Player.update()	update
2017-01-03 14:42:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:48 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:48 AI_Player.update()	update
2017-01-03 14:42:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:48 AI_Player.update()	Search took1ms
2017-01-03 14:42:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:48 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:48 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:48 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:48 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:48 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:48 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:48 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:48 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:49 AI_Player.update()	update
2017-01-03 14:42:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:49 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:49 AI_Player.update()	update
2017-01-03 14:42:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:49 AI_Player.update()	Search took10ms
2017-01-03 14:42:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:49 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:49 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:49 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:49 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:49 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:49 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:49 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:49 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:49 AI_Player.update()	update
2017-01-03 14:42:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:49 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:49 AI_Player.update()	update
2017-01-03 14:42:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:49 AI_Player.update()	Search took1ms
2017-01-03 14:42:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:49 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:49 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:49 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:49 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:49 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:49 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:49 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:49 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:49 AI_Player.update()	update
2017-01-03 14:42:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:49 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:49 AI_Player.update()	update
2017-01-03 14:42:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:49 AI_Player.update()	Search took10ms
2017-01-03 14:42:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:49 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:49 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:49 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:49 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:49 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:49 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:49 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:49 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:49 AI_Player.update()	update
2017-01-03 14:42:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:49 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:49 AI_Player.update()	update
2017-01-03 14:42:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:49 AI_Player.update()	Search took1ms
2017-01-03 14:42:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:49 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:49 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:49 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:49 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:49 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:49 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:49 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:49 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:49 AI_Player.update()	update
2017-01-03 14:42:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:49 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:49 AI_Player.update()	update
2017-01-03 14:42:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:49 AI_Player.update()	Search took10ms
2017-01-03 14:42:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:49 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:49 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:49 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:49 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:49 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:49 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:49 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:49 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:50 AI_Player.update()	update
2017-01-03 14:42:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:50 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:50 AI_Player.update()	update
2017-01-03 14:42:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:50 AI_Player.update()	Search took1ms
2017-01-03 14:42:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:50 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:50 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:50 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:50 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:50 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:50 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:50 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:50 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:50 AI_Player.update()	update
2017-01-03 14:42:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:50 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:50 AI_Player.update()	update
2017-01-03 14:42:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:50 AI_Player.update()	Search took10ms
2017-01-03 14:42:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:50 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:50 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:50 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:50 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:50 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:50 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:50 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:50 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:50 AI_Player.update()	update
2017-01-03 14:42:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:50 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:50 AI_Player.update()	update
2017-01-03 14:42:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:50 AI_Player.update()	Search took1ms
2017-01-03 14:42:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:50 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:50 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:50 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:50 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:50 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:50 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:50 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:50 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:50 AI_Player.update()	update
2017-01-03 14:42:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:50 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:50 AI_Player.update()	update
2017-01-03 14:42:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:50 AI_Player.update()	Search took11ms
2017-01-03 14:42:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:50 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:50 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:50 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:50 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:50 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:50 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:50 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:50 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:50 AI_Player.update()	update
2017-01-03 14:42:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:50 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:51 AI_Player.update()	update
2017-01-03 14:42:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:51 AI_Player.update()	Search took1ms
2017-01-03 14:42:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:51 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:51 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:51 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:51 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:51 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:51 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:51 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:51 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:51 AI_Player.update()	update
2017-01-03 14:42:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:51 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:51 AI_Player.update()	update
2017-01-03 14:42:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:51 AI_Player.update()	Search took11ms
2017-01-03 14:42:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:51 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:51 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:51 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:51 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:51 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:51 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:51 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:51 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:51 AI_Player.update()	update
2017-01-03 14:42:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:51 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:51 AI_Player.update()	update
2017-01-03 14:42:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:51 AI_Player.update()	Search took1ms
2017-01-03 14:42:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:51 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:51 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:51 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:51 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:51 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:51 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:51 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:51 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:51 AI_Player.update()	update
2017-01-03 14:42:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:51 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:51 AI_Player.update()	update
2017-01-03 14:42:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:51 AI_Player.update()	Search took10ms
2017-01-03 14:42:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:51 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:51 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:51 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:51 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:51 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:51 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:51 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:51 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:51 AI_Player.update()	update
2017-01-03 14:42:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:51 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:51 AI_Player.update()	update
2017-01-03 14:42:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:51 AI_Player.update()	Search took1ms
2017-01-03 14:42:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:51 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:51 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:51 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:51 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:51 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:51 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:51 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:51 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:51 AI_Player.update()	update
2017-01-03 14:42:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:51 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:52 AI_Player.update()	update
2017-01-03 14:42:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:52 AI_Player.update()	Search took10ms
2017-01-03 14:42:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:52 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:52 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:52 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:52 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:52 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:52 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:52 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:52 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:52 AI_Player.update()	update
2017-01-03 14:42:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:52 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:52 AI_Player.update()	update
2017-01-03 14:42:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:52 AI_Player.update()	Search took1ms
2017-01-03 14:42:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:52 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:52 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:52 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:52 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:52 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:52 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:52 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:52 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:52 AI_Player.update()	update
2017-01-03 14:42:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:52 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:52 AI_Player.update()	update
2017-01-03 14:42:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:52 AI_Player.update()	Search took16ms
2017-01-03 14:42:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:52 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:52 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:52 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:52 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:52 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:52 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:52 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:52 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:52 AI_Player.update()	update
2017-01-03 14:42:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:52 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:52 AI_Player.update()	update
2017-01-03 14:42:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:52 AI_Player.update()	Search took1ms
2017-01-03 14:42:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:52 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:52 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:52 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:52 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:52 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:52 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:52 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:52 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:52 AI_Player.update()	update
2017-01-03 14:42:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:52 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:52 AI_Player.update()	update
2017-01-03 14:42:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:52 AI_Player.update()	Search took11ms
2017-01-03 14:42:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:52 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:52 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:52 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:52 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:52 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:52 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:52 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:52 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:53 AI_Player.update()	update
2017-01-03 14:42:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:53 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:53 AI_Player.update()	update
2017-01-03 14:42:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:53 AI_Player.update()	Search took2ms
2017-01-03 14:42:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:53 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:53 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:53 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:53 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:53 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:53 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:53 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:53 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:53 AI_Player.update()	update
2017-01-03 14:42:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:53 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:53 AI_Player.update()	update
2017-01-03 14:42:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:53 AI_Player.update()	Search took10ms
2017-01-03 14:42:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:53 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:53 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:53 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:53 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:53 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:53 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:53 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:53 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:53 AI_Player.update()	update
2017-01-03 14:42:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:53 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:53 AI_Player.update()	update
2017-01-03 14:42:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:53 AI_Player.update()	Search took1ms
2017-01-03 14:42:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:53 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:53 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:53 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:53 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:53 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:53 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:53 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:53 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:53 AI_Player.update()	update
2017-01-03 14:42:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:53 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:53 AI_Player.update()	update
2017-01-03 14:42:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:53 AI_Player.update()	Search took10ms
2017-01-03 14:42:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:53 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:53 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:53 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:53 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:53 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:53 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:53 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:53 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:53 AI_Player.update()	update
2017-01-03 14:42:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:53 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:53 AI_Player.update()	update
2017-01-03 14:42:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:53 AI_Player.update()	Search took1ms
2017-01-03 14:42:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:53 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:53 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:53 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:53 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:53 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:53 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:53 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:53 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:54 AI_Player.update()	update
2017-01-03 14:42:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:54 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:54 AI_Player.update()	update
2017-01-03 14:42:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:54 AI_Player.update()	Search took10ms
2017-01-03 14:42:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:54 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:54 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:54 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:54 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:54 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:54 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:54 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:54 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:54 AI_Player.update()	update
2017-01-03 14:42:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:54 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:54 AI_Player.update()	update
2017-01-03 14:42:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:54 AI_Player.update()	Search took1ms
2017-01-03 14:42:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:54 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:54 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:54 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:54 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:54 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:54 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:54 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:54 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:54 AI_Player.update()	update
2017-01-03 14:42:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:54 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:54 AI_Player.update()	update
2017-01-03 14:42:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:54 AI_Player.update()	Search took10ms
2017-01-03 14:42:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:54 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:54 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:54 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:54 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:54 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:54 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:54 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:54 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:54 AI_Player.update()	update
2017-01-03 14:42:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:54 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:54 AI_Player.update()	update
2017-01-03 14:42:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:54 AI_Player.update()	Search took1ms
2017-01-03 14:42:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:54 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:54 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:54 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:54 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:54 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:54 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:54 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:54 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:54 AI_Player.update()	update
2017-01-03 14:42:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:54 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:54 AI_Player.update()	update
2017-01-03 14:42:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:54 AI_Player.update()	Search took10ms
2017-01-03 14:42:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:54 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:54 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:54 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:54 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:54 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:54 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:54 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:54 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:55 AI_Player.update()	update
2017-01-03 14:42:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:55 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:55 AI_Player.update()	update
2017-01-03 14:42:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:55 AI_Player.update()	Search took1ms
2017-01-03 14:42:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:55 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:55 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:55 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:55 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:55 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:55 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:55 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:55 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:55 AI_Player.update()	update
2017-01-03 14:42:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:55 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:55 AI_Player.update()	update
2017-01-03 14:42:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:55 AI_Player.update()	Search took11ms
2017-01-03 14:42:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:55 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:55 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:55 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:55 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:55 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:55 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:55 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:55 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:55 AI_Player.update()	update
2017-01-03 14:42:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:55 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:55 AI_Player.update()	update
2017-01-03 14:42:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:55 AI_Player.update()	Search took2ms
2017-01-03 14:42:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:55 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:55 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:55 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:55 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:55 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:55 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:55 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:55 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:55 AI_Player.update()	update
2017-01-03 14:42:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:55 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:55 AI_Player.update()	update
2017-01-03 14:42:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:55 AI_Player.update()	Search took10ms
2017-01-03 14:42:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:55 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:55 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:55 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:55 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:55 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:55 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:55 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:55 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:55 AI_Player.update()	update
2017-01-03 14:42:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:55 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:56 AI_Player.update()	update
2017-01-03 14:42:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:56 AI_Player.update()	Search took1ms
2017-01-03 14:42:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:56 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:56 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:56 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:56 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:56 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:56 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:56 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:56 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:56 AI_Player.update()	update
2017-01-03 14:42:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:56 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:56 AI_Player.update()	update
2017-01-03 14:42:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:56 AI_Player.update()	Search took10ms
2017-01-03 14:42:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:56 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:56 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:56 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:56 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:56 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:56 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:56 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:56 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:56 AI_Player.update()	update
2017-01-03 14:42:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:56 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:56 AI_Player.update()	update
2017-01-03 14:42:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:56 AI_Player.update()	Search took1ms
2017-01-03 14:42:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:56 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:56 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:56 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:56 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:56 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:56 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:56 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:56 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:56 AI_Player.update()	update
2017-01-03 14:42:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:56 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:56 AI_Player.update()	update
2017-01-03 14:42:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:56 AI_Player.update()	Search took10ms
2017-01-03 14:42:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:56 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:56 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:56 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:56 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:56 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:56 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:56 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:56 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:56 AI_Player.update()	update
2017-01-03 14:42:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:56 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:56 AI_Player.update()	update
2017-01-03 14:42:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:56 AI_Player.update()	Search took1ms
2017-01-03 14:42:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:56 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:56 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:56 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:56 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:56 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:56 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:56 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:56 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:56 AI_Player.update()	update
2017-01-03 14:42:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:56 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:57 AI_Player.update()	update
2017-01-03 14:42:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:57 AI_Player.update()	Search took10ms
2017-01-03 14:42:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:57 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:57 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:57 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:57 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:57 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:57 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:57 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:57 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:57 AI_Player.update()	update
2017-01-03 14:42:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:57 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:57 AI_Player.update()	update
2017-01-03 14:42:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:57 AI_Player.update()	Search took1ms
2017-01-03 14:42:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:57 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:57 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:57 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:57 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:57 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:57 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:57 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:57 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:57 AI_Player.update()	update
2017-01-03 14:42:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:57 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:57 AI_Player.update()	update
2017-01-03 14:42:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:57 AI_Player.update()	Search took10ms
2017-01-03 14:42:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:57 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:57 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:57 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:57 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:57 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:57 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:57 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:57 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:57 AI_Player.update()	update
2017-01-03 14:42:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:57 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:57 AI_Player.update()	update
2017-01-03 14:42:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:57 AI_Player.update()	Search took1ms
2017-01-03 14:42:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:57 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:57 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:57 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:57 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:57 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:57 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:57 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:57 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:57 AI_Player.update()	update
2017-01-03 14:42:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:57 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:57 AI_Player.update()	update
2017-01-03 14:42:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:57 AI_Player.update()	Search took10ms
2017-01-03 14:42:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:57 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:57 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:57 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:57 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:57 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:57 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:57 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:57 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:58 AI_Player.update()	update
2017-01-03 14:42:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:58 AI_Player.update()	update
2017-01-03 14:42:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:58 AI_Player.update()	Search took1ms
2017-01-03 14:42:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:58 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:58 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:58 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:58 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:58 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:58 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:58 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:58 AI_Player.update()	update
2017-01-03 14:42:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:58 AI_Player.update()	update
2017-01-03 14:42:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:58 AI_Player.update()	Search took10ms
2017-01-03 14:42:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:58 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:58 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:58 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:58 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:58 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:58 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:58 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:58 AI_Player.update()	update
2017-01-03 14:42:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:58 AI_Player.update()	update
2017-01-03 14:42:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:58 AI_Player.update()	Search took1ms
2017-01-03 14:42:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:58 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:58 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:58 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:58 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:58 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:58 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:58 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:58 AI_Player.update()	update
2017-01-03 14:42:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:58 AI_Player.update()	update
2017-01-03 14:42:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:58 AI_Player.update()	Search took10ms
2017-01-03 14:42:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:58 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:58 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:58 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:58 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:58 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:58 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:58 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:58 AI_Player.update()	update
2017-01-03 14:42:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:58 AI_Player.update()	update
2017-01-03 14:42:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:58 AI_Player.update()	Search took1ms
2017-01-03 14:42:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:58 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:58 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:58 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:58 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:58 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:58 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:58 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:59 AI_Player.update()	update
2017-01-03 14:42:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:59 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:59 AI_Player.update()	update
2017-01-03 14:42:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:59 AI_Player.update()	Search took10ms
2017-01-03 14:42:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:59 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:59 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:59 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:59 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:59 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:59 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:59 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:59 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:59 AI_Player.update()	update
2017-01-03 14:42:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:59 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:59 AI_Player.update()	update
2017-01-03 14:42:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:59 AI_Player.update()	Search took1ms
2017-01-03 14:42:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:59 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:59 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:59 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:59 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:59 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:59 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:59 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:59 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:59 AI_Player.update()	update
2017-01-03 14:42:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:59 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:59 AI_Player.update()	update
2017-01-03 14:42:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:42:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:42:59 AI_Player.update()	Search took10ms
2017-01-03 14:42:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:59 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:42:59 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:59 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:42:59 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:42:59 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:42:59 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:42:59 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:42:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:59 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:59 AI_Player.update()	update
2017-01-03 14:42:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:42:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:42:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:42:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:42:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:59 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:59 AI_Player.update()	update
2017-01-03 14:42:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:42:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:42:59 AI_Player.update()	Search took1ms
2017-01-03 14:42:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:42:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:59 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:42:59 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:42:59 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:42:59 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:42:59 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:42:59 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:42:59 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:42:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:42:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:42:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:59 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:42:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:42:59 AI_Player.update()	update
2017-01-03 14:42:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:42:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:42:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:42:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:42:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:42:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:42:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:42:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:42:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:42:59 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:00 AI_Player.update()	update
2017-01-03 14:43:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:00 AI_Player.update()	Search took10ms
2017-01-03 14:43:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:00 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:00 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:00 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:00 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:00 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:00 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:00 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:00 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:00 AI_Player.update()	update
2017-01-03 14:43:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:00 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:00 AI_Player.update()	update
2017-01-03 14:43:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:00 AI_Player.update()	Search took1ms
2017-01-03 14:43:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:00 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:00 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:00 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:00 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:00 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:00 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:00 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:00 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:00 AI_Player.update()	update
2017-01-03 14:43:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:00 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:00 AI_Player.update()	update
2017-01-03 14:43:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:00 AI_Player.update()	Search took10ms
2017-01-03 14:43:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:00 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:00 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:00 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:00 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:00 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:00 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:00 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:00 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:00 AI_Player.update()	update
2017-01-03 14:43:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:00 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:00 AI_Player.update()	update
2017-01-03 14:43:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:00 AI_Player.update()	Search took2ms
2017-01-03 14:43:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:00 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:00 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:00 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:00 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:00 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:00 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:00 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:00 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:00 AI_Player.update()	update
2017-01-03 14:43:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:00 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:00 AI_Player.update()	update
2017-01-03 14:43:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:00 AI_Player.update()	Search took10ms
2017-01-03 14:43:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:00 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:00 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:00 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:00 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:00 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:00 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:00 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:00 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:00 AI_Player.update()	update
2017-01-03 14:43:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:00 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:01 AI_Player.update()	update
2017-01-03 14:43:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:01 AI_Player.update()	Search took1ms
2017-01-03 14:43:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:01 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:01 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:01 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:01 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:01 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:01 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:01 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:01 AI_Player.update()	update
2017-01-03 14:43:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:01 AI_Player.update()	update
2017-01-03 14:43:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:01 AI_Player.update()	Search took10ms
2017-01-03 14:43:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:01 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:01 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:01 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:01 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:01 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:01 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:01 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:01 AI_Player.update()	update
2017-01-03 14:43:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:01 AI_Player.update()	update
2017-01-03 14:43:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:01 AI_Player.update()	Search took1ms
2017-01-03 14:43:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:01 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:01 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:01 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:01 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:01 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:01 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:01 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:01 AI_Player.update()	update
2017-01-03 14:43:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:01 AI_Player.update()	update
2017-01-03 14:43:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:01 AI_Player.update()	Search took10ms
2017-01-03 14:43:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:01 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:01 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:01 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:01 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:01 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:01 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:01 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:01 AI_Player.update()	update
2017-01-03 14:43:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:01 AI_Player.update()	update
2017-01-03 14:43:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:01 AI_Player.update()	Search took1ms
2017-01-03 14:43:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:01 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:01 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:01 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:01 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:01 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:01 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:01 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:02 AI_Player.update()	update
2017-01-03 14:43:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:02 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:02 AI_Player.update()	update
2017-01-03 14:43:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:02 AI_Player.update()	Search took10ms
2017-01-03 14:43:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:02 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:02 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:02 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:02 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:02 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:02 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:02 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:02 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:02 AI_Player.update()	update
2017-01-03 14:43:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:02 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:02 AI_Player.update()	update
2017-01-03 14:43:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:02 AI_Player.update()	Search took1ms
2017-01-03 14:43:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:02 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:02 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:02 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:02 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:02 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:02 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:02 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:02 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:02 AI_Player.update()	update
2017-01-03 14:43:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:02 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:02 AI_Player.update()	update
2017-01-03 14:43:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:02 AI_Player.update()	Search took10ms
2017-01-03 14:43:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:02 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:02 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:02 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:02 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:02 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:02 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:02 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:02 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:02 AI_Player.update()	update
2017-01-03 14:43:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:02 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:02 AI_Player.update()	update
2017-01-03 14:43:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:02 AI_Player.update()	Search took1ms
2017-01-03 14:43:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:02 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:02 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:02 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:02 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:02 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:02 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:02 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:02 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:02 AI_Player.update()	update
2017-01-03 14:43:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:02 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:02 AI_Player.update()	update
2017-01-03 14:43:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:02 AI_Player.update()	Search took10ms
2017-01-03 14:43:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:02 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:02 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:02 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:02 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:02 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:02 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:02 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:02 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:03 AI_Player.update()	update
2017-01-03 14:43:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:03 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:03 AI_Player.update()	update
2017-01-03 14:43:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:03 AI_Player.update()	Search took1ms
2017-01-03 14:43:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:03 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:03 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:03 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:03 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:03 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:03 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:03 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:03 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:03 AI_Player.update()	update
2017-01-03 14:43:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:03 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:03 AI_Player.update()	update
2017-01-03 14:43:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:03 AI_Player.update()	Search took11ms
2017-01-03 14:43:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:03 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:03 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:03 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:03 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:03 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:03 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:03 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:03 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:03 AI_Player.update()	update
2017-01-03 14:43:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:03 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:03 AI_Player.update()	update
2017-01-03 14:43:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:03 AI_Player.update()	Search took2ms
2017-01-03 14:43:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:03 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:03 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:03 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:03 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:03 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:03 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:03 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:03 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:03 AI_Player.update()	update
2017-01-03 14:43:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:03 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:03 AI_Player.update()	update
2017-01-03 14:43:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:03 AI_Player.update()	Search took11ms
2017-01-03 14:43:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:03 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:03 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:03 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:03 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:03 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:03 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:03 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:03 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:03 AI_Player.update()	update
2017-01-03 14:43:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:03 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:03 AI_Player.update()	update
2017-01-03 14:43:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:04 AI_Player.update()	Search took1ms
2017-01-03 14:43:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:04 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:04 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:04 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:04 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:04 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:04 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:04 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:04 AI_Player.update()	update
2017-01-03 14:43:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:04 AI_Player.update()	update
2017-01-03 14:43:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:04 AI_Player.update()	Search took10ms
2017-01-03 14:43:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:04 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:04 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:04 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:04 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:04 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:04 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:04 AI_Player.update()	update
2017-01-03 14:43:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:04 AI_Player.update()	update
2017-01-03 14:43:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:04 AI_Player.update()	Search took1ms
2017-01-03 14:43:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:04 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:04 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:04 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:04 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:04 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:04 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:04 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:04 AI_Player.update()	update
2017-01-03 14:43:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:04 AI_Player.update()	update
2017-01-03 14:43:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:04 AI_Player.update()	Search took10ms
2017-01-03 14:43:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:04 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:04 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:04 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:04 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:04 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:04 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:04 AI_Player.update()	update
2017-01-03 14:43:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:04 AI_Player.update()	update
2017-01-03 14:43:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:04 AI_Player.update()	Search took1ms
2017-01-03 14:43:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:04 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:04 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:04 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:04 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:04 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:04 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:04 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:04 AI_Player.update()	update
2017-01-03 14:43:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:05 AI_Player.update()	update
2017-01-03 14:43:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:05 AI_Player.update()	Search took10ms
2017-01-03 14:43:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:05 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:05 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:05 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:05 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:05 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:05 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:05 AI_Player.update()	update
2017-01-03 14:43:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:05 AI_Player.update()	update
2017-01-03 14:43:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:05 AI_Player.update()	Search took1ms
2017-01-03 14:43:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:05 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:05 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:05 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:05 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:05 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:05 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:05 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:05 AI_Player.update()	update
2017-01-03 14:43:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:05 AI_Player.update()	update
2017-01-03 14:43:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:05 AI_Player.update()	Search took10ms
2017-01-03 14:43:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:05 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:05 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:05 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:05 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:05 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:05 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:05 AI_Player.update()	update
2017-01-03 14:43:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:05 AI_Player.update()	update
2017-01-03 14:43:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:05 AI_Player.update()	Search took1ms
2017-01-03 14:43:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:05 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:05 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:05 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:05 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:05 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:05 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:05 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:05 AI_Player.update()	update
2017-01-03 14:43:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:05 AI_Player.update()	update
2017-01-03 14:43:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:05 AI_Player.update()	Search took10ms
2017-01-03 14:43:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:05 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:05 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:05 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:05 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:05 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:05 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:05 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:06 AI_Player.update()	update
2017-01-03 14:43:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:06 AI_Player.update()	update
2017-01-03 14:43:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:06 AI_Player.update()	Search took1ms
2017-01-03 14:43:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:06 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:06 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:06 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:06 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:06 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:06 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:06 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:06 AI_Player.update()	update
2017-01-03 14:43:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:06 AI_Player.update()	update
2017-01-03 14:43:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:06 AI_Player.update()	Search took10ms
2017-01-03 14:43:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:06 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:06 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:06 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:06 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:06 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:06 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:06 AI_Player.update()	update
2017-01-03 14:43:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:06 AI_Player.update()	update
2017-01-03 14:43:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:06 AI_Player.update()	Search took1ms
2017-01-03 14:43:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:06 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:06 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:06 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:06 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:06 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:06 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:06 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:06 AI_Player.update()	update
2017-01-03 14:43:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:06 AI_Player.update()	update
2017-01-03 14:43:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:06 AI_Player.update()	Search took10ms
2017-01-03 14:43:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:06 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:06 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:06 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:06 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:06 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:06 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:06 AI_Player.update()	update
2017-01-03 14:43:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:06 AI_Player.update()	update
2017-01-03 14:43:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:06 AI_Player.update()	Search took1ms
2017-01-03 14:43:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:06 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:06 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:06 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:06 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:06 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:06 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:06 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:06 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:07 AI_Player.update()	update
2017-01-03 14:43:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:07 AI_Player.update()	update
2017-01-03 14:43:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:07 AI_Player.update()	Search took10ms
2017-01-03 14:43:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:07 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:07 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:07 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:07 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:07 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:07 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:07 AI_Player.update()	update
2017-01-03 14:43:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:07 AI_Player.update()	update
2017-01-03 14:43:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:07 AI_Player.update()	Search took1ms
2017-01-03 14:43:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:07 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:07 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:07 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:07 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:07 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:07 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:07 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:07 AI_Player.update()	update
2017-01-03 14:43:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:07 AI_Player.update()	update
2017-01-03 14:43:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:07 AI_Player.update()	Search took10ms
2017-01-03 14:43:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:07 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:07 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:07 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:07 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:07 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:07 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:07 AI_Player.update()	update
2017-01-03 14:43:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:07 AI_Player.update()	update
2017-01-03 14:43:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:07 AI_Player.update()	Search took1ms
2017-01-03 14:43:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:07 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:07 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:07 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:07 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:07 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:07 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:07 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:07 AI_Player.update()	update
2017-01-03 14:43:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:07 AI_Player.update()	update
2017-01-03 14:43:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:07 AI_Player.update()	Search took10ms
2017-01-03 14:43:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:07 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:07 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:07 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:07 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:07 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:07 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:07 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:07 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:08 AI_Player.update()	update
2017-01-03 14:43:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:08 AI_Player.update()	update
2017-01-03 14:43:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:08 AI_Player.update()	Search took1ms
2017-01-03 14:43:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:08 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:08 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:08 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:08 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:08 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:08 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:08 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:08 AI_Player.update()	update
2017-01-03 14:43:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:08 AI_Player.update()	update
2017-01-03 14:43:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:08 AI_Player.update()	Search took10ms
2017-01-03 14:43:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:08 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:08 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:08 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:08 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:08 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:08 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:08 AI_Player.update()	update
2017-01-03 14:43:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:08 AI_Player.update()	update
2017-01-03 14:43:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:08 AI_Player.update()	Search took1ms
2017-01-03 14:43:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:08 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:08 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:08 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:08 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:08 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:08 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:08 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:08 AI_Player.update()	update
2017-01-03 14:43:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:08 AI_Player.update()	update
2017-01-03 14:43:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:08 AI_Player.update()	Search took10ms
2017-01-03 14:43:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:08 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:08 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:08 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:08 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:08 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:08 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:08 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:08 AI_Player.update()	update
2017-01-03 14:43:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:08 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:09 AI_Player.update()	update
2017-01-03 14:43:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:09 AI_Player.update()	Search took1ms
2017-01-03 14:43:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:09 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:09 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:09 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:09 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:09 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:09 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:09 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:09 AI_Player.update()	update
2017-01-03 14:43:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:09 AI_Player.update()	update
2017-01-03 14:43:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:09 AI_Player.update()	Search took10ms
2017-01-03 14:43:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:09 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:09 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:09 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:09 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:09 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:09 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:09 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:09 AI_Player.update()	update
2017-01-03 14:43:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:09 AI_Player.update()	update
2017-01-03 14:43:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:09 AI_Player.update()	Search took1ms
2017-01-03 14:43:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:09 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:09 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:09 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:09 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:09 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:09 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:09 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:09 AI_Player.update()	update
2017-01-03 14:43:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:09 AI_Player.update()	update
2017-01-03 14:43:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:09 AI_Player.update()	Search took10ms
2017-01-03 14:43:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:09 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:09 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:09 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:09 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:09 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:09 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:09 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:09 AI_Player.update()	update
2017-01-03 14:43:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:09 AI_Player.update()	update
2017-01-03 14:43:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:09 AI_Player.update()	Search took1ms
2017-01-03 14:43:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:09 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:09 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:09 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:09 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:09 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:09 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:09 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:09 AI_Player.update()	update
2017-01-03 14:43:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:09 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:10 AI_Player.update()	update
2017-01-03 14:43:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:10 AI_Player.update()	Search took10ms
2017-01-03 14:43:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:10 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:10 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:10 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:10 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:10 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:10 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:10 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:10 AI_Player.update()	update
2017-01-03 14:43:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:10 AI_Player.update()	update
2017-01-03 14:43:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:10 AI_Player.update()	Search took1ms
2017-01-03 14:43:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:10 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:10 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:10 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:10 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:10 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:10 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:10 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:10 AI_Player.update()	update
2017-01-03 14:43:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:10 AI_Player.update()	update
2017-01-03 14:43:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:10 AI_Player.update()	Search took10ms
2017-01-03 14:43:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:10 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:10 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:10 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:10 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:10 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:10 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:10 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:10 AI_Player.update()	update
2017-01-03 14:43:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:10 AI_Player.update()	update
2017-01-03 14:43:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:10 AI_Player.update()	Search took0ms
2017-01-03 14:43:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:10 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:10 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:10 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:10 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:10 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:10 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:10 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:10 AI_Player.update()	update
2017-01-03 14:43:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:10 AI_Player.update()	update
2017-01-03 14:43:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:10 AI_Player.update()	Search took10ms
2017-01-03 14:43:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:10 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:10 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:10 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:10 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:10 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:10 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:10 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:11 AI_Player.update()	update
2017-01-03 14:43:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:11 AI_Player.update()	update
2017-01-03 14:43:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:11 AI_Player.update()	Search took1ms
2017-01-03 14:43:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:11 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:11 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:11 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:11 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:11 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:11 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:11 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:11 AI_Player.update()	update
2017-01-03 14:43:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:11 AI_Player.update()	update
2017-01-03 14:43:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:11 AI_Player.update()	Search took11ms
2017-01-03 14:43:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:11 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:11 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:11 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:11 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:11 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:11 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:11 AI_Player.update()	update
2017-01-03 14:43:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:11 AI_Player.update()	update
2017-01-03 14:43:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:11 AI_Player.update()	Search took1ms
2017-01-03 14:43:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:11 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:11 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:11 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:11 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:11 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:11 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:11 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:11 AI_Player.update()	update
2017-01-03 14:43:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:11 AI_Player.update()	update
2017-01-03 14:43:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:11 AI_Player.update()	Search took10ms
2017-01-03 14:43:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:11 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:11 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:11 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:11 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:11 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:11 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:11 AI_Player.update()	update
2017-01-03 14:43:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:11 AI_Player.update()	update
2017-01-03 14:43:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:11 AI_Player.update()	Search took1ms
2017-01-03 14:43:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:11 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:11 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:11 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:11 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:11 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:11 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:11 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:12 AI_Player.update()	update
2017-01-03 14:43:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:12 AI_Player.update()	update
2017-01-03 14:43:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:12 AI_Player.update()	Search took10ms
2017-01-03 14:43:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:12 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:12 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:12 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:12 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:12 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:12 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:12 AI_Player.update()	update
2017-01-03 14:43:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:12 AI_Player.update()	update
2017-01-03 14:43:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:12 AI_Player.update()	Search took1ms
2017-01-03 14:43:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:12 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:12 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:12 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:12 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:12 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:12 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:12 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:12 AI_Player.update()	update
2017-01-03 14:43:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:12 AI_Player.update()	update
2017-01-03 14:43:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:12 AI_Player.update()	Search took10ms
2017-01-03 14:43:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:12 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:12 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:12 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:12 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:12 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:12 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:12 AI_Player.update()	update
2017-01-03 14:43:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:12 AI_Player.update()	update
2017-01-03 14:43:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:12 AI_Player.update()	Search took1ms
2017-01-03 14:43:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:12 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:12 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:12 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:12 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:12 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:12 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:12 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:12 AI_Player.update()	update
2017-01-03 14:43:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:12 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:12 AI_Player.update()	update
2017-01-03 14:43:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:13 AI_Player.update()	Search took10ms
2017-01-03 14:43:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:13 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:13 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:13 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:13 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:13 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:13 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:13 AI_Player.update()	update
2017-01-03 14:43:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:13 AI_Player.update()	update
2017-01-03 14:43:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:13 AI_Player.update()	Search took1ms
2017-01-03 14:43:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:13 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:13 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:13 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:13 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:13 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:13 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:13 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:13 AI_Player.update()	update
2017-01-03 14:43:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:13 AI_Player.update()	update
2017-01-03 14:43:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:13 AI_Player.update()	Search took10ms
2017-01-03 14:43:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:13 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:13 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:13 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:13 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:13 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:13 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:13 AI_Player.update()	update
2017-01-03 14:43:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:13 AI_Player.update()	update
2017-01-03 14:43:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:13 AI_Player.update()	Search took1ms
2017-01-03 14:43:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:13 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:13 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:13 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:13 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:13 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:13 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:13 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:13 AI_Player.update()	update
2017-01-03 14:43:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:13 AI_Player.update()	update
2017-01-03 14:43:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:13 AI_Player.update()	Search took10ms
2017-01-03 14:43:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:13 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:13 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:13 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:13 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:13 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:13 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:13 AI_Player.update()	update
2017-01-03 14:43:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:13 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:14 AI_Player.update()	update
2017-01-03 14:43:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:14 AI_Player.update()	Search took2ms
2017-01-03 14:43:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:14 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:14 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:14 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:14 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:14 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:14 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:14 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:14 AI_Player.update()	update
2017-01-03 14:43:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:14 AI_Player.update()	update
2017-01-03 14:43:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:14 AI_Player.update()	Search took10ms
2017-01-03 14:43:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:14 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:14 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:14 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:14 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:14 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:14 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:14 AI_Player.update()	update
2017-01-03 14:43:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:14 AI_Player.update()	update
2017-01-03 14:43:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:14 AI_Player.update()	Search took1ms
2017-01-03 14:43:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:14 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:14 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:14 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:14 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:14 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:14 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:14 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:14 AI_Player.update()	update
2017-01-03 14:43:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:14 AI_Player.update()	update
2017-01-03 14:43:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:14 AI_Player.update()	Search took10ms
2017-01-03 14:43:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:14 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:14 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:14 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:14 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:14 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:14 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:14 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:14 AI_Player.update()	update
2017-01-03 14:43:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:14 AI_Player.update()	update
2017-01-03 14:43:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:14 AI_Player.update()	Search took1ms
2017-01-03 14:43:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:14 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:14 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:14 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:14 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:14 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:14 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:14 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:14 AI_Player.update()	update
2017-01-03 14:43:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:14 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:15 AI_Player.update()	update
2017-01-03 14:43:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:15 AI_Player.update()	Search took10ms
2017-01-03 14:43:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:15 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:15 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:15 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:15 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:15 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:15 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:15 AI_Player.update()	update
2017-01-03 14:43:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:15 AI_Player.update()	update
2017-01-03 14:43:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:15 AI_Player.update()	Search took1ms
2017-01-03 14:43:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:15 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:15 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:15 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:15 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:15 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:15 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:15 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:15 AI_Player.update()	update
2017-01-03 14:43:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:15 AI_Player.update()	update
2017-01-03 14:43:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:15 AI_Player.update()	Search took10ms
2017-01-03 14:43:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:15 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:15 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:15 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:15 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:15 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:15 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:15 AI_Player.update()	update
2017-01-03 14:43:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:15 AI_Player.update()	update
2017-01-03 14:43:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:15 AI_Player.update()	Search took1ms
2017-01-03 14:43:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:15 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:15 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:15 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:15 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:15 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:15 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:15 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:15 AI_Player.update()	update
2017-01-03 14:43:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:15 AI_Player.update()	update
2017-01-03 14:43:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:15 AI_Player.update()	Search took10ms
2017-01-03 14:43:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:15 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:15 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:15 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:15 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:15 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:15 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:16 AI_Player.update()	update
2017-01-03 14:43:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:16 AI_Player.update()	update
2017-01-03 14:43:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:16 AI_Player.update()	Search took1ms
2017-01-03 14:43:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:16 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:16 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:16 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:16 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:16 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:16 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:16 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:16 AI_Player.update()	update
2017-01-03 14:43:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:16 AI_Player.update()	update
2017-01-03 14:43:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:16 AI_Player.update()	Search took10ms
2017-01-03 14:43:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:16 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:16 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:16 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:16 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:16 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:16 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:16 AI_Player.update()	update
2017-01-03 14:43:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:16 AI_Player.update()	update
2017-01-03 14:43:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:16 AI_Player.update()	Search took2ms
2017-01-03 14:43:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:16 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:16 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:16 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:16 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:16 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:16 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:16 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:16 AI_Player.update()	update
2017-01-03 14:43:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:16 AI_Player.update()	update
2017-01-03 14:43:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:16 AI_Player.update()	Search took11ms
2017-01-03 14:43:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:16 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:16 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:16 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:16 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:16 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:16 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:16 AI_Player.update()	update
2017-01-03 14:43:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:16 AI_Player.update()	update
2017-01-03 14:43:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:16 AI_Player.update()	Search took1ms
2017-01-03 14:43:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:16 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:16 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:16 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:16 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:16 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:16 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:16 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:17 AI_Player.update()	update
2017-01-03 14:43:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:17 AI_Player.update()	update
2017-01-03 14:43:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:17 AI_Player.update()	Search took10ms
2017-01-03 14:43:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:17 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:17 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:17 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:17 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:17 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:17 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:17 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:17 AI_Player.update()	update
2017-01-03 14:43:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:17 AI_Player.update()	update
2017-01-03 14:43:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:17 AI_Player.update()	Search took1ms
2017-01-03 14:43:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:17 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:17 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:17 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:17 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:17 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:17 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:17 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:17 AI_Player.update()	update
2017-01-03 14:43:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:17 AI_Player.update()	update
2017-01-03 14:43:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:17 AI_Player.update()	Search took10ms
2017-01-03 14:43:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:17 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:17 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:17 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:17 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:17 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:17 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:17 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:17 AI_Player.update()	update
2017-01-03 14:43:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:17 AI_Player.update()	update
2017-01-03 14:43:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:17 AI_Player.update()	Search took1ms
2017-01-03 14:43:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:17 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:17 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:17 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:17 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:17 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:17 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:17 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:17 AI_Player.update()	update
2017-01-03 14:43:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:17 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:18 AI_Player.update()	update
2017-01-03 14:43:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:18 AI_Player.update()	Search took10ms
2017-01-03 14:43:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:18 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:18 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:18 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:18 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:18 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:18 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:18 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:18 AI_Player.update()	update
2017-01-03 14:43:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:18 AI_Player.update()	update
2017-01-03 14:43:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:18 AI_Player.update()	Search took1ms
2017-01-03 14:43:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:18 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:18 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:18 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:18 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:18 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:18 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:18 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:18 AI_Player.update()	update
2017-01-03 14:43:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:18 AI_Player.update()	update
2017-01-03 14:43:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:18 AI_Player.update()	Search took10ms
2017-01-03 14:43:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:18 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:18 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:18 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:18 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:18 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:18 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:18 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:18 AI_Player.update()	update
2017-01-03 14:43:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:18 AI_Player.update()	update
2017-01-03 14:43:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:18 AI_Player.update()	Search took1ms
2017-01-03 14:43:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:18 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:18 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:18 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:18 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:18 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:18 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:18 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:18 AI_Player.update()	update
2017-01-03 14:43:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:18 AI_Player.update()	update
2017-01-03 14:43:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:18 AI_Player.update()	Search took10ms
2017-01-03 14:43:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:18 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:18 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:18 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:18 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:18 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:18 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:18 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:18 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:19 AI_Player.update()	update
2017-01-03 14:43:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:19 AI_Player.update()	update
2017-01-03 14:43:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:19 AI_Player.update()	Search took1ms
2017-01-03 14:43:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:19 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:19 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:19 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:19 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:19 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:19 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:19 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:19 AI_Player.update()	update
2017-01-03 14:43:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:19 AI_Player.update()	update
2017-01-03 14:43:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:19 AI_Player.update()	Search took10ms
2017-01-03 14:43:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:19 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:19 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:19 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:19 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:19 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:19 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:19 AI_Player.update()	update
2017-01-03 14:43:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:19 AI_Player.update()	update
2017-01-03 14:43:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:19 AI_Player.update()	Search took1ms
2017-01-03 14:43:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:19 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:19 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:19 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:19 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:19 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:19 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:19 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:19 AI_Player.update()	update
2017-01-03 14:43:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:19 AI_Player.update()	update
2017-01-03 14:43:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:19 AI_Player.update()	Search took10ms
2017-01-03 14:43:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:19 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:19 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:19 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:19 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:19 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:19 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:19 AI_Player.update()	update
2017-01-03 14:43:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:19 AI_Player.update()	update
2017-01-03 14:43:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:19 AI_Player.update()	Search took1ms
2017-01-03 14:43:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:19 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:19 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:19 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:19 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:19 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:19 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:19 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:20 AI_Player.update()	update
2017-01-03 14:43:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:20 AI_Player.update()	update
2017-01-03 14:43:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:20 AI_Player.update()	Search took11ms
2017-01-03 14:43:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:20 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:20 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:20 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:20 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:20 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:20 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:20 AI_Player.update()	update
2017-01-03 14:43:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:20 AI_Player.update()	update
2017-01-03 14:43:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:20 AI_Player.update()	Search took1ms
2017-01-03 14:43:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:20 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:20 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:20 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:20 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:20 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:20 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:20 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:20 AI_Player.update()	update
2017-01-03 14:43:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:20 AI_Player.update()	update
2017-01-03 14:43:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:20 AI_Player.update()	Search took14ms
2017-01-03 14:43:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:20 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:20 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:20 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:20 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:20 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:20 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:20 AI_Player.update()	update
2017-01-03 14:43:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:20 AI_Player.update()	update
2017-01-03 14:43:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:20 AI_Player.update()	Search took1ms
2017-01-03 14:43:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:20 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:20 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:20 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:20 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:20 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:20 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:20 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:20 AI_Player.update()	update
2017-01-03 14:43:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:21 AI_Player.update()	update
2017-01-03 14:43:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:21 AI_Player.update()	Search took12ms
2017-01-03 14:43:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:21 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:21 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:21 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:21 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:21 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:21 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:21 AI_Player.update()	update
2017-01-03 14:43:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:21 AI_Player.update()	update
2017-01-03 14:43:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:21 AI_Player.update()	Search took1ms
2017-01-03 14:43:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:21 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:21 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:21 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:21 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:21 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:21 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:21 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:21 AI_Player.update()	update
2017-01-03 14:43:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:21 AI_Player.update()	update
2017-01-03 14:43:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:21 AI_Player.update()	Search took16ms
2017-01-03 14:43:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:21 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:21 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:21 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:21 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:21 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:21 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:21 AI_Player.update()	update
2017-01-03 14:43:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:21 AI_Player.update()	update
2017-01-03 14:43:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:21 AI_Player.update()	Search took2ms
2017-01-03 14:43:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:21 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:21 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:21 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:21 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:21 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:21 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:21 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:21 AI_Player.update()	update
2017-01-03 14:43:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:21 AI_Player.update()	update
2017-01-03 14:43:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:21 AI_Player.update()	Search took13ms
2017-01-03 14:43:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:21 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:21 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:21 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:21 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:21 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:21 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:21 AI_Player.update()	update
2017-01-03 14:43:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:22 AI_Player.update()	update
2017-01-03 14:43:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:22 AI_Player.update()	Search took2ms
2017-01-03 14:43:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:22 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:22 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:22 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:22 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:22 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:22 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:22 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:22 AI_Player.update()	update
2017-01-03 14:43:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:22 AI_Player.update()	update
2017-01-03 14:43:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:22 AI_Player.update()	Search took14ms
2017-01-03 14:43:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:22 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:22 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:22 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:22 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:22 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:22 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:22 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:22 AI_Player.update()	update
2017-01-03 14:43:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:22 AI_Player.update()	update
2017-01-03 14:43:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:22 AI_Player.update()	Search took1ms
2017-01-03 14:43:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:22 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:22 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:22 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:22 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:22 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:22 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:22 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:22 AI_Player.update()	update
2017-01-03 14:43:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:22 AI_Player.update()	update
2017-01-03 14:43:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:22 AI_Player.update()	Search took12ms
2017-01-03 14:43:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:22 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:22 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:22 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:22 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:22 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:22 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:22 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:22 AI_Player.update()	update
2017-01-03 14:43:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:22 AI_Player.update()	update
2017-01-03 14:43:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:22 AI_Player.update()	Search took1ms
2017-01-03 14:43:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:22 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:22 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:22 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:22 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:22 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:22 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:22 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:22 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:23 AI_Player.update()	update
2017-01-03 14:43:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:23 AI_Player.update()	update
2017-01-03 14:43:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:23 AI_Player.update()	Search took14ms
2017-01-03 14:43:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:23 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:23 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:23 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:23 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:23 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:23 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:23 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:23 AI_Player.update()	update
2017-01-03 14:43:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:23 AI_Player.update()	update
2017-01-03 14:43:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:23 AI_Player.update()	Search took1ms
2017-01-03 14:43:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:23 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:23 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:23 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:23 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:23 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:23 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:23 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:23 AI_Player.update()	update
2017-01-03 14:43:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:23 AI_Player.update()	update
2017-01-03 14:43:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:23 AI_Player.update()	Search took12ms
2017-01-03 14:43:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:23 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:23 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:23 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:23 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:23 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:23 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:23 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:23 AI_Player.update()	update
2017-01-03 14:43:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:23 AI_Player.update()	update
2017-01-03 14:43:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:23 AI_Player.update()	Search took1ms
2017-01-03 14:43:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:23 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:23 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:23 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:23 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:23 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:23 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:23 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:23 AI_Player.update()	update
2017-01-03 14:43:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:23 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:24 AI_Player.update()	update
2017-01-03 14:43:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:24 AI_Player.update()	Search took12ms
2017-01-03 14:43:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:24 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:24 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:24 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:24 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:24 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:24 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:24 AI_Player.update()	update
2017-01-03 14:43:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:24 AI_Player.update()	update
2017-01-03 14:43:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:24 AI_Player.update()	Search took2ms
2017-01-03 14:43:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:24 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:24 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:24 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:24 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:24 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:24 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:24 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:24 AI_Player.update()	update
2017-01-03 14:43:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:24 AI_Player.update()	update
2017-01-03 14:43:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:24 AI_Player.update()	Search took12ms
2017-01-03 14:43:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:24 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:24 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:24 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:24 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:24 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:24 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:24 AI_Player.update()	update
2017-01-03 14:43:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:24 AI_Player.update()	update
2017-01-03 14:43:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:24 AI_Player.update()	Search took2ms
2017-01-03 14:43:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:24 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:24 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:24 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:24 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:24 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:24 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:24 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:24 AI_Player.update()	update
2017-01-03 14:43:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:24 AI_Player.update()	update
2017-01-03 14:43:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:24 AI_Player.update()	Search took10ms
2017-01-03 14:43:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:24 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:24 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:24 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:24 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:24 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:24 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:24 AI_Player.update()	update
2017-01-03 14:43:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:24 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:25 AI_Player.update()	update
2017-01-03 14:43:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:25 AI_Player.update()	Search took1ms
2017-01-03 14:43:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:25 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:25 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:25 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:25 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:25 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:25 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:25 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:25 AI_Player.update()	update
2017-01-03 14:43:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:25 AI_Player.update()	update
2017-01-03 14:43:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:25 AI_Player.update()	Search took10ms
2017-01-03 14:43:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:25 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:25 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:25 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:25 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:25 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:25 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:25 AI_Player.update()	update
2017-01-03 14:43:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:25 AI_Player.update()	update
2017-01-03 14:43:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:25 AI_Player.update()	Search took1ms
2017-01-03 14:43:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:25 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:25 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:25 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:25 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:25 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:25 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:25 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:25 AI_Player.update()	update
2017-01-03 14:43:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:25 AI_Player.update()	update
2017-01-03 14:43:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:25 AI_Player.update()	Search took10ms
2017-01-03 14:43:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:25 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:25 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:25 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:25 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:25 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:25 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:25 AI_Player.update()	update
2017-01-03 14:43:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:25 AI_Player.update()	update
2017-01-03 14:43:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:25 AI_Player.update()	Search took1ms
2017-01-03 14:43:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:25 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:25 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:25 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:25 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:25 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:25 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:25 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:26 AI_Player.update()	update
2017-01-03 14:43:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:26 AI_Player.update()	update
2017-01-03 14:43:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:26 AI_Player.update()	Search took10ms
2017-01-03 14:43:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:26 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:26 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:26 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:26 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:26 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:26 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:26 AI_Player.update()	update
2017-01-03 14:43:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:26 AI_Player.update()	update
2017-01-03 14:43:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:26 AI_Player.update()	Search took1ms
2017-01-03 14:43:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:26 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:26 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:26 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:26 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:26 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:26 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:26 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:26 AI_Player.update()	update
2017-01-03 14:43:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:26 AI_Player.update()	update
2017-01-03 14:43:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:26 AI_Player.update()	Search took10ms
2017-01-03 14:43:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:26 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:26 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:26 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:26 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:26 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:26 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:26 AI_Player.update()	update
2017-01-03 14:43:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:26 AI_Player.update()	update
2017-01-03 14:43:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:26 AI_Player.update()	Search took1ms
2017-01-03 14:43:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:26 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:26 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:26 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:26 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:26 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:26 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:26 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:26 AI_Player.update()	update
2017-01-03 14:43:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:26 AI_Player.update()	update
2017-01-03 14:43:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:26 AI_Player.update()	Search took10ms
2017-01-03 14:43:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:26 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:26 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:26 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:26 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:26 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:26 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:27 AI_Player.update()	update
2017-01-03 14:43:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:27 AI_Player.update()	update
2017-01-03 14:43:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:27 AI_Player.update()	Search took1ms
2017-01-03 14:43:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:27 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:27 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:27 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:27 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:27 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:27 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:27 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:27 AI_Player.update()	update
2017-01-03 14:43:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:27 AI_Player.update()	update
2017-01-03 14:43:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:27 AI_Player.update()	Search took10ms
2017-01-03 14:43:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:27 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:27 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:27 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:27 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:27 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:27 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:27 AI_Player.update()	update
2017-01-03 14:43:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:27 AI_Player.update()	update
2017-01-03 14:43:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:27 AI_Player.update()	Search took1ms
2017-01-03 14:43:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:27 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:27 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:27 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:27 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:27 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:27 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:27 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:27 AI_Player.update()	update
2017-01-03 14:43:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:27 AI_Player.update()	update
2017-01-03 14:43:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:27 AI_Player.update()	Search took10ms
2017-01-03 14:43:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:27 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:27 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:27 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:27 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:27 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:27 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:27 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:27 AI_Player.update()	update
2017-01-03 14:43:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:27 AI_Player.update()	update
2017-01-03 14:43:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:27 AI_Player.update()	Search took1ms
2017-01-03 14:43:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:27 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:27 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:27 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:27 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:27 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:27 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:27 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:28 AI_Player.update()	update
2017-01-03 14:43:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:28 AI_Player.update()	update
2017-01-03 14:43:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:28 AI_Player.update()	Search took10ms
2017-01-03 14:43:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:28 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:28 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:28 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:28 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:28 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:28 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:28 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:28 AI_Player.update()	update
2017-01-03 14:43:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:28 AI_Player.update()	update
2017-01-03 14:43:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:28 AI_Player.update()	Search took1ms
2017-01-03 14:43:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:28 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:28 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:28 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:28 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:28 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:28 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:28 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:28 AI_Player.update()	update
2017-01-03 14:43:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:28 AI_Player.update()	update
2017-01-03 14:43:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:28 AI_Player.update()	Search took10ms
2017-01-03 14:43:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:28 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:28 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:28 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:28 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:28 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:28 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:28 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:28 AI_Player.update()	update
2017-01-03 14:43:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:28 AI_Player.update()	update
2017-01-03 14:43:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:28 AI_Player.update()	Search took1ms
2017-01-03 14:43:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:28 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:28 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:28 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:28 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:28 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:28 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:28 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:28 AI_Player.update()	update
2017-01-03 14:43:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:28 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:29 AI_Player.update()	update
2017-01-03 14:43:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:29 AI_Player.update()	Search took10ms
2017-01-03 14:43:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:29 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:29 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:29 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:29 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:29 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:29 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:29 AI_Player.update()	update
2017-01-03 14:43:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:29 AI_Player.update()	update
2017-01-03 14:43:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:29 AI_Player.update()	Search took1ms
2017-01-03 14:43:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:29 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:29 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:29 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:29 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:29 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:29 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:29 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:29 AI_Player.update()	update
2017-01-03 14:43:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:29 AI_Player.update()	update
2017-01-03 14:43:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:29 AI_Player.update()	Search took11ms
2017-01-03 14:43:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:29 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:29 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:29 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:29 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:29 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:29 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:29 AI_Player.update()	update
2017-01-03 14:43:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:29 AI_Player.update()	update
2017-01-03 14:43:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:29 AI_Player.update()	Search took1ms
2017-01-03 14:43:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:29 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:29 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:29 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:29 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:29 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:29 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:29 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:29 AI_Player.update()	update
2017-01-03 14:43:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:29 AI_Player.update()	update
2017-01-03 14:43:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:29 AI_Player.update()	Search took10ms
2017-01-03 14:43:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:29 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:29 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:29 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:29 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:29 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:29 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:29 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:30 AI_Player.update()	update
2017-01-03 14:43:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:30 AI_Player.update()	update
2017-01-03 14:43:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:30 AI_Player.update()	Search took1ms
2017-01-03 14:43:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:30 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:30 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:30 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:30 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:30 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:30 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:30 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:30 AI_Player.update()	update
2017-01-03 14:43:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:30 AI_Player.update()	update
2017-01-03 14:43:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:30 AI_Player.update()	Search took10ms
2017-01-03 14:43:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:30 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:30 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:30 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:30 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:30 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:30 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:30 AI_Player.update()	update
2017-01-03 14:43:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:30 AI_Player.update()	update
2017-01-03 14:43:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:30 AI_Player.update()	Search took1ms
2017-01-03 14:43:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:30 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:30 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:30 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:30 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:30 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:30 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:30 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:30 AI_Player.update()	update
2017-01-03 14:43:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:30 AI_Player.update()	update
2017-01-03 14:43:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:30 AI_Player.update()	Search took10ms
2017-01-03 14:43:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:30 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:30 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:30 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:30 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:30 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:30 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:30 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:30 AI_Player.update()	update
2017-01-03 14:43:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:30 AI_Player.update()	update
2017-01-03 14:43:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:30 AI_Player.update()	Search took1ms
2017-01-03 14:43:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:30 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:30 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:30 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:30 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:30 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:30 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:30 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:30 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:31 AI_Player.update()	update
2017-01-03 14:43:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:31 AI_Player.update()	update
2017-01-03 14:43:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:31 AI_Player.update()	Search took10ms
2017-01-03 14:43:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:31 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:31 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:31 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:31 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:31 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:31 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:31 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:31 AI_Player.update()	update
2017-01-03 14:43:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:31 AI_Player.update()	update
2017-01-03 14:43:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:31 AI_Player.update()	Search took1ms
2017-01-03 14:43:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:31 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:31 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:31 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:31 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:31 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:31 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:31 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:31 AI_Player.update()	update
2017-01-03 14:43:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:31 AI_Player.update()	update
2017-01-03 14:43:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:31 AI_Player.update()	Search took10ms
2017-01-03 14:43:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:31 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:31 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:31 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:31 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:31 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:31 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:31 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:31 AI_Player.update()	update
2017-01-03 14:43:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:31 AI_Player.update()	update
2017-01-03 14:43:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:31 AI_Player.update()	Search took1ms
2017-01-03 14:43:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:31 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:31 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:31 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:31 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:31 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:31 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:31 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:31 AI_Player.update()	update
2017-01-03 14:43:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:31 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:32 AI_Player.update()	update
2017-01-03 14:43:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:32 AI_Player.update()	Search took10ms
2017-01-03 14:43:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:32 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:32 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:32 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:32 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:32 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:32 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:32 AI_Player.update()	update
2017-01-03 14:43:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:32 AI_Player.update()	update
2017-01-03 14:43:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:32 AI_Player.update()	Search took1ms
2017-01-03 14:43:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:32 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:32 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:32 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:32 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:32 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:32 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:32 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:32 AI_Player.update()	update
2017-01-03 14:43:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:32 AI_Player.update()	update
2017-01-03 14:43:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:32 AI_Player.update()	Search took10ms
2017-01-03 14:43:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:32 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:32 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:32 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:32 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:32 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:32 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:32 AI_Player.update()	update
2017-01-03 14:43:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:32 AI_Player.update()	update
2017-01-03 14:43:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:32 AI_Player.update()	Search took1ms
2017-01-03 14:43:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:32 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:32 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:32 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:32 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:32 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:32 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:32 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:32 AI_Player.update()	update
2017-01-03 14:43:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:32 AI_Player.update()	update
2017-01-03 14:43:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:32 AI_Player.update()	Search took11ms
2017-01-03 14:43:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:32 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:32 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:32 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:32 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:32 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:32 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:32 AI_Player.update()	update
2017-01-03 14:43:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:33 AI_Player.update()	update
2017-01-03 14:43:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:33 AI_Player.update()	Search took2ms
2017-01-03 14:43:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:33 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:33 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:33 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:33 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:33 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:33 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:33 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:33 AI_Player.update()	update
2017-01-03 14:43:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:33 AI_Player.update()	update
2017-01-03 14:43:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:33 AI_Player.update()	Search took10ms
2017-01-03 14:43:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:33 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:33 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:33 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:33 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:33 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:33 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:33 AI_Player.update()	update
2017-01-03 14:43:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:33 AI_Player.update()	update
2017-01-03 14:43:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:33 AI_Player.update()	Search took1ms
2017-01-03 14:43:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:33 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:33 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:33 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:33 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:33 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:33 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:33 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:33 AI_Player.update()	update
2017-01-03 14:43:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:33 AI_Player.update()	update
2017-01-03 14:43:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:33 AI_Player.update()	Search took10ms
2017-01-03 14:43:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:33 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:33 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:33 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:33 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:33 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:33 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:33 AI_Player.update()	update
2017-01-03 14:43:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:33 AI_Player.update()	update
2017-01-03 14:43:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:33 AI_Player.update()	Search took1ms
2017-01-03 14:43:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:33 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:33 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:33 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:33 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:33 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:33 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:33 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:34 AI_Player.update()	update
2017-01-03 14:43:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:34 AI_Player.update()	update
2017-01-03 14:43:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:34 AI_Player.update()	Search took10ms
2017-01-03 14:43:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:34 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:34 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:34 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:34 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:34 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:34 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:34 AI_Player.update()	update
2017-01-03 14:43:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:34 AI_Player.update()	update
2017-01-03 14:43:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:34 AI_Player.update()	Search took1ms
2017-01-03 14:43:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:34 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:34 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:34 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:34 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:34 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:34 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:34 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:34 AI_Player.update()	update
2017-01-03 14:43:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:34 AI_Player.update()	update
2017-01-03 14:43:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:34 AI_Player.update()	Search took11ms
2017-01-03 14:43:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:34 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:34 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:34 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:34 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:34 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:34 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:34 AI_Player.update()	update
2017-01-03 14:43:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:34 AI_Player.update()	update
2017-01-03 14:43:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:34 AI_Player.update()	Search took1ms
2017-01-03 14:43:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:34 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:34 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:34 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:34 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:34 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:34 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:34 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:34 AI_Player.update()	update
2017-01-03 14:43:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:34 AI_Player.update()	update
2017-01-03 14:43:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:34 AI_Player.update()	Search took10ms
2017-01-03 14:43:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:34 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:34 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:34 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:34 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:34 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:34 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:35 AI_Player.update()	update
2017-01-03 14:43:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:35 AI_Player.update()	update
2017-01-03 14:43:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:35 AI_Player.update()	Search took1ms
2017-01-03 14:43:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:35 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:35 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:35 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:35 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:35 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:35 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:35 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:35 AI_Player.update()	update
2017-01-03 14:43:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:35 AI_Player.update()	update
2017-01-03 14:43:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:35 AI_Player.update()	Search took10ms
2017-01-03 14:43:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:35 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:35 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:35 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:35 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:35 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:35 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:35 QueryProlog.requestShiftUp()	try_to_shift_column_up( 2 ) failed
2017-01-03 14:43:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:35 AI_Player.update()	update
2017-01-03 14:43:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:35 AI_Player.update()	update
2017-01-03 14:43:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:35 AI_Player.update()	Search took1ms
2017-01-03 14:43:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:35 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:35 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:35 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:35 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:35 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:35 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:35 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:35 AI_Player.update()	update
2017-01-03 14:43:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:35 AI_Player.update()	update
2017-01-03 14:43:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:35 AI_Player.update()	Search took10ms
2017-01-03 14:43:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:35 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:35 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:35 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:35 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:35 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:35 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:35 AI_Player.update()	update
2017-01-03 14:43:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:36 AI_Player.update()	update
2017-01-03 14:43:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:36 AI_Player.update()	Search took1ms
2017-01-03 14:43:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:36 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:36 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:36 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:36 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:36 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:36 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:36 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:36 AI_Player.update()	update
2017-01-03 14:43:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:36 AI_Player.update()	update
2017-01-03 14:43:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:36 AI_Player.update()	Search took10ms
2017-01-03 14:43:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:36 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:36 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:36 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:36 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:36 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:36 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:36 AI_Player.update()	update
2017-01-03 14:43:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:36 AI_Player.update()	update
2017-01-03 14:43:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:36 AI_Player.update()	Search took1ms
2017-01-03 14:43:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:36 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:36 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:36 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:36 AI_Player.update()		1001,	1100,	1001,	101,	1101,	101,	11
2017-01-03 14:43:36 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:36 AI_Player.update()		1100,	110,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:36 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:36 AI_Player.update()	update
2017-01-03 14:43:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:36 AI_Player.update()	update
2017-01-03 14:43:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:36 AI_Player.update()	Search took10ms
2017-01-03 14:43:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:36 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 14:43:36 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:36 AI_Player.update()		1001,	1100,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:36 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:36 AI_Player.update()		1100,	110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:36 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:36 AI_Player.update()	update
2017-01-03 14:43:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:36 QueryProlog.requestShiftUp()	try_to_shift_column_up( 2 ) suceeded
2017-01-03 14:43:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:36 AI_Player.update()	update
2017-01-03 14:43:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:36 AI_Player.update()	update
2017-01-03 14:43:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:36 QueryProlog.requestShiftUp()	try_to_shift_column_up( 2 ) suceeded
2017-01-03 14:43:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). failed
2017-01-03 14:43:36 AI_Player.update()	Search took17ms
2017-01-03 14:43:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:36 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-03 14:43:36 AI_Player.update()		1100,	1100,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:36 AI_Player.update()		1001,	110,	1001,	1011,	1101,	101,	11
2017-01-03 14:43:36 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-03 14:43:36 AI_Player.update()		1100,	1110,	1010,	1100,	110,	1110,	1001
2017-01-03 14:43:36 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 14:43:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:37 AI_Player.update()	update
2017-01-03 14:43:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:37 QueryProlog.requestShiftUp()	try_to_shift_column_up( 2 ) suceeded
2017-01-03 14:43:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:37 AI_Player.update()	update
2017-01-03 14:43:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:37 AI_Player.update()	update
2017-01-03 14:43:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:37 AI_Player.update()	Search took16ms
2017-01-03 14:43:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:37 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-03 14:43:37 AI_Player.update()		1100,	1100,	1010,	101,	11,	1010,	1010
2017-01-03 14:43:37 AI_Player.update()		1110,	110,	1110,	1011,	111,	1101,	1011
2017-01-03 14:43:37 AI_Player.update()		1001,	1010,	1001,	101,	1101,	101,	11
2017-01-03 14:43:37 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	101,	1011
2017-01-03 14:43:37 AI_Player.update()		1100,	1010,	1010,	11,	110,	1110,	1001
2017-01-03 14:43:37 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-03 14:43:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:37 AI_Player.update()	update
2017-01-03 14:43:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:37 AI_Player.update()	update
2017-01-03 14:43:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:37 AI_Player.update()	Search took2ms
2017-01-03 14:43:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:37 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-03 14:43:37 AI_Player.update()		1100,	1100,	1010,	1011,	11,	1010,	1010
2017-01-03 14:43:37 AI_Player.update()		1110,	110,	1110,	101,	111,	1101,	1011
2017-01-03 14:43:37 AI_Player.update()		1001,	1010,	1001,	1100,	1101,	101,	11
2017-01-03 14:43:37 AI_Player.update()		1110,	1110,	1101,	11,	1011,	101,	1011
2017-01-03 14:43:37 AI_Player.update()		1100,	1010,	1010,	1010,	110,	1110,	1001
2017-01-03 14:43:37 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-03 14:43:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:37 AI_Player.update()	update
2017-01-03 14:43:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:37 AI_Player.update()	update
2017-01-03 14:43:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:37 AI_Player.update()	Search took19ms
2017-01-03 14:43:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:37 AI_Player.update()		110,	1100,	111,	1011,	111,	1010,	11
2017-01-03 14:43:37 AI_Player.update()		1100,	1100,	1010,	101,	11,	1010,	1010
2017-01-03 14:43:37 AI_Player.update()		1110,	110,	1110,	1100,	111,	1101,	1011
2017-01-03 14:43:37 AI_Player.update()		1001,	1010,	1001,	11,	1101,	101,	11
2017-01-03 14:43:37 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	101,	1011
2017-01-03 14:43:37 AI_Player.update()		1100,	1010,	1010,	1010,	110,	1110,	1001
2017-01-03 14:43:37 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-03 14:43:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:37 AI_Player.update()	update
2017-01-03 14:43:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:37 AI_Player.update()	update
2017-01-03 14:43:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:37 AI_Player.update()	Search took5ms
2017-01-03 14:43:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:37 AI_Player.update()		110,	1100,	111,	1011,	111,	1010,	11
2017-01-03 14:43:37 AI_Player.update()		1100,	110,	1010,	101,	11,	1010,	1010
2017-01-03 14:43:37 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1101,	1011
2017-01-03 14:43:37 AI_Player.update()		1001,	1110,	1001,	11,	1101,	101,	11
2017-01-03 14:43:37 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-03 14:43:37 AI_Player.update()		1100,	1100,	1010,	1010,	110,	1110,	1001
2017-01-03 14:43:37 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-03 14:43:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 14:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:38 AI_Player.update()	update
2017-01-03 14:43:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	3 3
2017-01-03 14:43:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:43:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:38 AI_Player.update()	update
2017-01-03 14:43:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:38 AI_Player.update()	Search took4ms
2017-01-03 14:43:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:38 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-03 14:43:38 AI_Player.update()		1100,	110,	1010,	1100,	11,	1010,	1010
2017-01-03 14:43:38 AI_Player.update()		1110,	1010,	1110,	11,	111,	1101,	1011
2017-01-03 14:43:38 AI_Player.update()		1001,	1110,	1001,	1010,	1101,	101,	11
2017-01-03 14:43:38 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-03 14:43:38 AI_Player.update()		1100,	1100,	1010,	101,	110,	1110,	1001
2017-01-03 14:43:38 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1001,	1001
2017-01-03 14:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	3 3
2017-01-03 14:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:38 AI_Player.update()	update
2017-01-03 14:43:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	3 3
2017-01-03 14:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:38 AI_Player.update()	update
2017-01-03 14:43:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:38 AI_Player.update()	Search took3ms
2017-01-03 14:43:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:38 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-03 14:43:38 AI_Player.update()		1100,	110,	1010,	1100,	11,	1010,	1010
2017-01-03 14:43:38 AI_Player.update()		1110,	1010,	1110,	11,	111,	1101,	1011
2017-01-03 14:43:38 AI_Player.update()		1001,	1110,	1001,	1010,	1101,	101,	11
2017-01-03 14:43:38 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-03 14:43:38 AI_Player.update()		1100,	1010,	101,	110,	1110,	1001,	1100
2017-01-03 14:43:38 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1001,	1001
2017-01-03 14:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	3 3
2017-01-03 14:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:38 AI_Player.update()	update
2017-01-03 14:43:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	4 3
2017-01-03 14:43:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:43:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:38 AI_Player.update()	update
2017-01-03 14:43:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:38 AI_Player.update()	Search took7ms
2017-01-03 14:43:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:38 AI_Player.update()		110,	1100,	111,	1100,	111,	1010,	11
2017-01-03 14:43:38 AI_Player.update()		1100,	110,	1010,	11,	11,	1010,	1010
2017-01-03 14:43:38 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:38 AI_Player.update()		1001,	1110,	1001,	1010,	1101,	101,	11
2017-01-03 14:43:38 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-03 14:43:38 AI_Player.update()		1100,	1010,	101,	1011,	1110,	1001,	1100
2017-01-03 14:43:38 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-03 14:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	4 3
2017-01-03 14:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:38 AI_Player.update()	update
2017-01-03 14:43:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	4 3
2017-01-03 14:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:38 AI_Player.update()	update
2017-01-03 14:43:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:38 AI_Player.update()	Search took3ms
2017-01-03 14:43:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:38 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-03 14:43:38 AI_Player.update()		1100,	1010,	1010,	11,	11,	1010,	1010
2017-01-03 14:43:38 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:38 AI_Player.update()		1001,	1010,	1001,	1010,	1101,	101,	11
2017-01-03 14:43:38 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-03 14:43:38 AI_Player.update()		1100,	1100,	101,	1011,	1110,	1001,	1100
2017-01-03 14:43:38 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-03 14:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	4 3
2017-01-03 14:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:38 AI_Player.update()	update
2017-01-03 14:43:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	5 3
2017-01-03 14:43:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:43:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:43:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:38 AI_Player.update()	update
2017-01-03 14:43:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:38 AI_Player.update()	Search took10ms
2017-01-03 14:43:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:38 AI_Player.update()		110,	110,	111,	11,	111,	1010,	11
2017-01-03 14:43:38 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:38 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:38 AI_Player.update()		1001,	1010,	1001,	110,	1101,	101,	11
2017-01-03 14:43:38 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:38 AI_Player.update()		1100,	1100,	101,	101,	1110,	1001,	1100
2017-01-03 14:43:38 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:38 GameBoard.setupTreasurePanel()	5 3
2017-01-03 14:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:39 AI_Player.update()	update
2017-01-03 14:43:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:39 GameBoard.setupTreasurePanel()	5 3
2017-01-03 14:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:39 AI_Player.update()	update
2017-01-03 14:43:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:39 AI_Player.update()	Search took3ms
2017-01-03 14:43:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:39 AI_Player.update()		110,	110,	111,	11,	111,	1010,	11
2017-01-03 14:43:39 AI_Player.update()		1100,	1010,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:39 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:39 AI_Player.update()		1010,	1001,	110,	1101,	101,	11,	1001
2017-01-03 14:43:39 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:39 AI_Player.update()		1100,	1100,	101,	101,	1110,	1001,	1100
2017-01-03 14:43:39 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:39 GameBoard.setupTreasurePanel()	5 3
2017-01-03 14:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:39 AI_Player.update()	update
2017-01-03 14:43:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:39 GameBoard.setupTreasurePanel()	6 3
2017-01-03 14:43:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:43:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:43:39 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:43:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:43:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:43:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:43:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:43:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:43:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:43:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 14:43:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:43:39 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:39 AI_Player.update()	update
2017-01-03 14:43:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:39 AI_Player.update()	Search took5ms
2017-01-03 14:43:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:39 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-03 14:43:39 AI_Player.update()		1100,	1110,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:39 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:39 AI_Player.update()		1010,	1010,	110,	1101,	101,	11,	1001
2017-01-03 14:43:39 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:39 AI_Player.update()		1100,	1100,	101,	101,	1110,	1001,	1100
2017-01-03 14:43:39 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:39 GameBoard.setupTreasurePanel()	6 3
2017-01-03 14:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:39 AI_Player.update()	update
2017-01-03 14:43:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:39 GameBoard.setupTreasurePanel()	6 3
2017-01-03 14:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:39 AI_Player.update()	update
2017-01-03 14:43:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:39 AI_Player.update()	Search took4ms
2017-01-03 14:43:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:39 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-03 14:43:39 AI_Player.update()		1100,	1001,	1010,	1010,	11,	1010,	1010
2017-01-03 14:43:39 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1101,	1011
2017-01-03 14:43:39 AI_Player.update()		1010,	1100,	110,	1101,	101,	11,	1001
2017-01-03 14:43:39 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-03 14:43:39 AI_Player.update()		1100,	110,	101,	101,	1110,	1001,	1100
2017-01-03 14:43:39 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 14:43:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:39 GameBoard.setupTreasurePanel()	6 3
2017-01-03 14:43:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:39 AI_Player.update()	update
2017-01-03 14:43:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:39 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-03 14:43:39 AI_Player.update()	Player a has won!
2017-01-03 14:43:40 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 14:43:40 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 14:43:40 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 14:43:40 QueryProlog.reset()	setup(h1/h2). suceeded
2017-01-03 14:43:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:43:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:43:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:43:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:43:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:43:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:43:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:43:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:43:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:43:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:43:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 14:43:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:43:40 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:41 AI_Player.update()	update
2017-01-03 14:43:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:41 AI_Player.update()	Search took1ms
2017-01-03 14:43:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:41 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:43:41 AI_Player.update()		1010,	110,	1110,	101,	1100,	110,	110
2017-01-03 14:43:41 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:41 AI_Player.update()		1100,	11,	111,	11,	110,	11,	110
2017-01-03 14:43:41 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-03 14:43:41 AI_Player.update()		101,	11,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:41 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:41 AI_Player.update()	update
2017-01-03 14:43:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:41 AI_Player.update()	update
2017-01-03 14:43:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:41 AI_Player.update()	Search took1ms
2017-01-03 14:43:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:41 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:43:41 AI_Player.update()		1010,	110,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:41 AI_Player.update()		1110,	1010,	1110,	1011,	111,	11,	1011
2017-01-03 14:43:41 AI_Player.update()		1100,	11,	111,	11,	110,	1100,	110
2017-01-03 14:43:41 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:41 AI_Player.update()		101,	11,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:41 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:41 AI_Player.update()	update
2017-01-03 14:43:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:41 AI_Player.update()	update
2017-01-03 14:43:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:41 AI_Player.update()	Search took2ms
2017-01-03 14:43:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:41 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:43:41 AI_Player.update()		1010,	110,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:41 AI_Player.update()		1110,	1010,	1110,	1011,	111,	11,	1011
2017-01-03 14:43:41 AI_Player.update()		11,	111,	11,	110,	1100,	110,	1100
2017-01-03 14:43:41 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:41 AI_Player.update()		101,	11,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:41 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:41 AI_Player.update()	update
2017-01-03 14:43:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:41 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:43:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:43:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:43:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:43:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:43:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:43:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:43:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:43:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:43:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 14:43:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:43:41 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:41 AI_Player.update()	update
2017-01-03 14:43:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:41 AI_Player.update()	Search took1ms
2017-01-03 14:43:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:41 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-03 14:43:41 AI_Player.update()		1010,	110,	1110,	101,	1100,	11,	110
2017-01-03 14:43:41 AI_Player.update()		1110,	1010,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:41 AI_Player.update()		11,	111,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:41 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:41 AI_Player.update()		101,	11,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:41 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:41 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:41 AI_Player.update()	update
2017-01-03 14:43:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:41 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:41 AI_Player.update()	update
2017-01-03 14:43:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:41 AI_Player.update()	Search took2ms
2017-01-03 14:43:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:41 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-03 14:43:41 AI_Player.update()		1010,	1010,	1110,	101,	1100,	11,	110
2017-01-03 14:43:41 AI_Player.update()		1110,	111,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:41 AI_Player.update()		11,	1010,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:41 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:41 AI_Player.update()		101,	101,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:41 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:41 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:41 AI_Player.update()	update
2017-01-03 14:43:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:41 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:42 AI_Player.update()	update
2017-01-03 14:43:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:42 AI_Player.update()	Search took1ms
2017-01-03 14:43:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:42 AI_Player.update()		110,	110,	111,	1100,	111,	11,	11
2017-01-03 14:43:42 AI_Player.update()		1010,	1010,	1110,	101,	1100,	110,	110
2017-01-03 14:43:42 AI_Player.update()		1110,	111,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:42 AI_Player.update()		11,	1010,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:42 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:42 AI_Player.update()		101,	101,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:42 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:42 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:42 AI_Player.update()	update
2017-01-03 14:43:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:42 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:42 AI_Player.update()	update
2017-01-03 14:43:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:42 AI_Player.update()	Search took2ms
2017-01-03 14:43:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:42 AI_Player.update()		110,	1010,	111,	1100,	111,	11,	11
2017-01-03 14:43:42 AI_Player.update()		1010,	111,	1110,	101,	1100,	110,	110
2017-01-03 14:43:42 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:42 AI_Player.update()		11,	11,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:42 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:42 AI_Player.update()		101,	101,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:42 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:42 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:42 AI_Player.update()	update
2017-01-03 14:43:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:42 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:42 AI_Player.update()	update
2017-01-03 14:43:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:42 AI_Player.update()	Search took1ms
2017-01-03 14:43:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:42 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-03 14:43:42 AI_Player.update()		1010,	111,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:42 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:42 AI_Player.update()		11,	11,	11,	110,	1100,	110,	1100
2017-01-03 14:43:42 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:42 AI_Player.update()		101,	101,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:42 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-03 14:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:42 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:42 AI_Player.update()	update
2017-01-03 14:43:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:42 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:42 AI_Player.update()	update
2017-01-03 14:43:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:42 AI_Player.update()	Search took1ms
2017-01-03 14:43:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:42 AI_Player.update()		110,	111,	111,	1100,	111,	110,	11
2017-01-03 14:43:42 AI_Player.update()		1010,	1010,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:42 AI_Player.update()		1110,	11,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:42 AI_Player.update()		11,	101,	11,	110,	1100,	110,	1100
2017-01-03 14:43:42 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:42 AI_Player.update()		101,	110,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:42 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-03 14:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:42 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:42 AI_Player.update()	update
2017-01-03 14:43:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:42 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:42 AI_Player.update()	update
2017-01-03 14:43:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:42 AI_Player.update()	Search took1ms
2017-01-03 14:43:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:42 AI_Player.update()		110,	111,	111,	1100,	111,	1010,	11
2017-01-03 14:43:42 AI_Player.update()		1010,	1010,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:42 AI_Player.update()		1110,	11,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:42 AI_Player.update()		11,	101,	11,	110,	1100,	110,	1100
2017-01-03 14:43:42 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:42 AI_Player.update()		101,	110,	111,	1001,	1001,	11,	1010
2017-01-03 14:43:42 AI_Player.update()		1100,	1010,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:42 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:42 AI_Player.update()	update
2017-01-03 14:43:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:42 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:43 AI_Player.update()	update
2017-01-03 14:43:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:43 AI_Player.update()	Search took2ms
2017-01-03 14:43:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:43 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-03 14:43:43 AI_Player.update()		1010,	11,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:43 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:43 AI_Player.update()		11,	101,	11,	110,	1100,	110,	1100
2017-01-03 14:43:43 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:43 AI_Player.update()		101,	1010,	111,	1001,	1001,	11,	1010
2017-01-03 14:43:43 AI_Player.update()		1100,	111,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:43 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:43 AI_Player.update()	update
2017-01-03 14:43:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:43 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:43 AI_Player.update()	update
2017-01-03 14:43:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:43 AI_Player.update()	Search took1ms
2017-01-03 14:43:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:43 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-03 14:43:43 AI_Player.update()		1010,	11,	1110,	101,	1100,	110,	110
2017-01-03 14:43:43 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:43 AI_Player.update()		11,	101,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:43 AI_Player.update()		1110,	110,	1101,	11,	1011,	11,	1011
2017-01-03 14:43:43 AI_Player.update()		101,	1010,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:43 AI_Player.update()		1100,	111,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:43 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:43 AI_Player.update()	update
2017-01-03 14:43:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:43 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:43 AI_Player.update()	update
2017-01-03 14:43:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:43 AI_Player.update()	Search took2ms
2017-01-03 14:43:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:43 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-03 14:43:43 AI_Player.update()		1010,	101,	1110,	101,	1100,	110,	110
2017-01-03 14:43:43 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:43 AI_Player.update()		11,	110,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:43 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-03 14:43:43 AI_Player.update()		101,	111,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:43 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:43 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:43 AI_Player.update()	update
2017-01-03 14:43:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:43 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:43 AI_Player.update()	update
2017-01-03 14:43:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:43 AI_Player.update()	Search took1ms
2017-01-03 14:43:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:43 AI_Player.update()		110,	11,	111,	1100,	111,	110,	11
2017-01-03 14:43:43 AI_Player.update()		1010,	101,	1110,	101,	1100,	110,	110
2017-01-03 14:43:43 AI_Player.update()		1110,	101,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:43 AI_Player.update()		11,	110,	11,	110,	1100,	11,	1100
2017-01-03 14:43:43 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:43 AI_Player.update()		101,	111,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:43 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:43 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:43 AI_Player.update()	update
2017-01-03 14:43:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:43 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:43 AI_Player.update()	update
2017-01-03 14:43:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:43 AI_Player.update()	Search took2ms
2017-01-03 14:43:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:43 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:43:43 AI_Player.update()		1010,	101,	1110,	101,	1100,	110,	110
2017-01-03 14:43:43 AI_Player.update()		1110,	110,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:43 AI_Player.update()		11,	1010,	11,	110,	1100,	11,	1100
2017-01-03 14:43:43 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:43 AI_Player.update()		101,	1010,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:43 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:43 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:44 AI_Player.update()	update
2017-01-03 14:43:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:44 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:44 AI_Player.update()	update
2017-01-03 14:43:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:44 AI_Player.update()	Search took1ms
2017-01-03 14:43:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:44 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:43:44 AI_Player.update()		1010,	101,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:44 AI_Player.update()		1110,	110,	1110,	1011,	111,	11,	1011
2017-01-03 14:43:44 AI_Player.update()		11,	1010,	11,	110,	1100,	110,	1100
2017-01-03 14:43:44 AI_Player.update()		1110,	111,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:44 AI_Player.update()		101,	1010,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:44 AI_Player.update()		1100,	11,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:44 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:44 AI_Player.update()	update
2017-01-03 14:43:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:44 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:44 AI_Player.update()	update
2017-01-03 14:43:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:44 AI_Player.update()	Search took2ms
2017-01-03 14:43:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:44 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:43:44 AI_Player.update()		1010,	110,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:44 AI_Player.update()		1110,	1010,	1110,	1011,	111,	11,	1011
2017-01-03 14:43:44 AI_Player.update()		11,	111,	11,	110,	1100,	110,	1100
2017-01-03 14:43:44 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:44 AI_Player.update()		101,	11,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:44 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:44 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:44 AI_Player.update()	update
2017-01-03 14:43:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:44 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:44 AI_Player.update()	update
2017-01-03 14:43:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:44 AI_Player.update()	Search took1ms
2017-01-03 14:43:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:44 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-03 14:43:44 AI_Player.update()		1010,	110,	1110,	101,	1100,	11,	110
2017-01-03 14:43:44 AI_Player.update()		1110,	1010,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:44 AI_Player.update()		11,	111,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:44 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:44 AI_Player.update()		101,	11,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:44 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:44 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:44 AI_Player.update()	update
2017-01-03 14:43:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:44 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:44 AI_Player.update()	update
2017-01-03 14:43:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:44 AI_Player.update()	Search took2ms
2017-01-03 14:43:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:44 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-03 14:43:44 AI_Player.update()		1010,	1010,	1110,	101,	1100,	11,	110
2017-01-03 14:43:44 AI_Player.update()		1110,	111,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:44 AI_Player.update()		11,	1010,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:44 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:44 AI_Player.update()		101,	101,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:44 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:44 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:44 AI_Player.update()	update
2017-01-03 14:43:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:44 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:44 AI_Player.update()	update
2017-01-03 14:43:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:44 AI_Player.update()	Search took1ms
2017-01-03 14:43:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:44 AI_Player.update()		110,	110,	111,	1100,	111,	11,	11
2017-01-03 14:43:44 AI_Player.update()		1010,	1010,	1110,	101,	1100,	110,	110
2017-01-03 14:43:44 AI_Player.update()		1110,	111,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:44 AI_Player.update()		11,	1010,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:44 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:44 AI_Player.update()		101,	101,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:44 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:44 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:45 AI_Player.update()	update
2017-01-03 14:43:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:45 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:45 AI_Player.update()	update
2017-01-03 14:43:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:45 AI_Player.update()	Search took2ms
2017-01-03 14:43:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:45 AI_Player.update()		110,	1010,	111,	1100,	111,	11,	11
2017-01-03 14:43:45 AI_Player.update()		1010,	111,	1110,	101,	1100,	110,	110
2017-01-03 14:43:45 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:45 AI_Player.update()		11,	11,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:45 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:45 AI_Player.update()		101,	101,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:45 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:45 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:45 AI_Player.update()	update
2017-01-03 14:43:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:45 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:45 AI_Player.update()	update
2017-01-03 14:43:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:45 AI_Player.update()	Search took1ms
2017-01-03 14:43:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:45 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-03 14:43:45 AI_Player.update()		1010,	111,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:45 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:45 AI_Player.update()		11,	11,	11,	110,	1100,	110,	1100
2017-01-03 14:43:45 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:45 AI_Player.update()		101,	101,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:45 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-03 14:43:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:45 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:45 AI_Player.update()	update
2017-01-03 14:43:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:45 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:45 AI_Player.update()	update
2017-01-03 14:43:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:45 AI_Player.update()	Search took2ms
2017-01-03 14:43:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:45 AI_Player.update()		110,	111,	111,	1100,	111,	110,	11
2017-01-03 14:43:45 AI_Player.update()		1010,	1010,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:45 AI_Player.update()		1110,	11,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:45 AI_Player.update()		11,	101,	11,	110,	1100,	110,	1100
2017-01-03 14:43:45 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:45 AI_Player.update()		101,	110,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:45 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-03 14:43:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:45 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:45 AI_Player.update()	update
2017-01-03 14:43:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:45 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:45 AI_Player.update()	update
2017-01-03 14:43:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:45 AI_Player.update()	Search took1ms
2017-01-03 14:43:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:45 AI_Player.update()		110,	111,	111,	1100,	111,	1010,	11
2017-01-03 14:43:45 AI_Player.update()		1010,	1010,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:45 AI_Player.update()		1110,	11,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:45 AI_Player.update()		11,	101,	11,	110,	1100,	110,	1100
2017-01-03 14:43:45 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:45 AI_Player.update()		101,	110,	111,	1001,	1001,	11,	1010
2017-01-03 14:43:45 AI_Player.update()		1100,	1010,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:45 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:45 AI_Player.update()	update
2017-01-03 14:43:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:45 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:46 AI_Player.update()	update
2017-01-03 14:43:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:46 AI_Player.update()	Search took3ms
2017-01-03 14:43:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:46 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-03 14:43:46 AI_Player.update()		1010,	11,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:46 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:46 AI_Player.update()		11,	101,	11,	110,	1100,	110,	1100
2017-01-03 14:43:46 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:46 AI_Player.update()		101,	1010,	111,	1001,	1001,	11,	1010
2017-01-03 14:43:46 AI_Player.update()		1100,	111,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:46 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:46 AI_Player.update()	update
2017-01-03 14:43:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:46 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:46 AI_Player.update()	update
2017-01-03 14:43:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:46 AI_Player.update()	Search took1ms
2017-01-03 14:43:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:46 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-03 14:43:46 AI_Player.update()		1010,	11,	1110,	101,	1100,	110,	110
2017-01-03 14:43:46 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:46 AI_Player.update()		11,	101,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:46 AI_Player.update()		1110,	110,	1101,	11,	1011,	11,	1011
2017-01-03 14:43:46 AI_Player.update()		101,	1010,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:46 AI_Player.update()		1100,	111,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:46 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:46 AI_Player.update()	update
2017-01-03 14:43:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:46 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:46 AI_Player.update()	update
2017-01-03 14:43:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:46 AI_Player.update()	Search took2ms
2017-01-03 14:43:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:46 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-03 14:43:46 AI_Player.update()		1010,	101,	1110,	101,	1100,	110,	110
2017-01-03 14:43:46 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:46 AI_Player.update()		11,	110,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:46 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-03 14:43:46 AI_Player.update()		101,	111,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:46 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:46 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:46 AI_Player.update()	update
2017-01-03 14:43:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:46 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:46 AI_Player.update()	update
2017-01-03 14:43:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:46 AI_Player.update()	Search took1ms
2017-01-03 14:43:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:46 AI_Player.update()		110,	11,	111,	1100,	111,	110,	11
2017-01-03 14:43:46 AI_Player.update()		1010,	101,	1110,	101,	1100,	110,	110
2017-01-03 14:43:46 AI_Player.update()		1110,	101,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:46 AI_Player.update()		11,	110,	11,	110,	1100,	11,	1100
2017-01-03 14:43:46 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:46 AI_Player.update()		101,	111,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:46 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:46 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:46 AI_Player.update()	update
2017-01-03 14:43:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:46 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:46 AI_Player.update()	update
2017-01-03 14:43:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:46 AI_Player.update()	Search took2ms
2017-01-03 14:43:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:46 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:43:46 AI_Player.update()		1010,	101,	1110,	101,	1100,	110,	110
2017-01-03 14:43:46 AI_Player.update()		1110,	110,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:46 AI_Player.update()		11,	1010,	11,	110,	1100,	11,	1100
2017-01-03 14:43:46 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:46 AI_Player.update()		101,	1010,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:46 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:46 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:46 AI_Player.update()	update
2017-01-03 14:43:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:46 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:47 AI_Player.update()	update
2017-01-03 14:43:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:47 AI_Player.update()	Search took1ms
2017-01-03 14:43:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:47 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:43:47 AI_Player.update()		1010,	101,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:47 AI_Player.update()		1110,	110,	1110,	1011,	111,	11,	1011
2017-01-03 14:43:47 AI_Player.update()		11,	1010,	11,	110,	1100,	110,	1100
2017-01-03 14:43:47 AI_Player.update()		1110,	111,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:47 AI_Player.update()		101,	1010,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:47 AI_Player.update()		1100,	11,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:47 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:47 AI_Player.update()	update
2017-01-03 14:43:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:47 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:47 AI_Player.update()	update
2017-01-03 14:43:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:47 AI_Player.update()	Search took2ms
2017-01-03 14:43:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:47 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:43:47 AI_Player.update()		1010,	110,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:47 AI_Player.update()		1110,	1010,	1110,	1011,	111,	11,	1011
2017-01-03 14:43:47 AI_Player.update()		11,	111,	11,	110,	1100,	110,	1100
2017-01-03 14:43:47 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:47 AI_Player.update()		101,	11,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:47 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:47 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:47 AI_Player.update()	update
2017-01-03 14:43:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:47 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:47 AI_Player.update()	update
2017-01-03 14:43:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:47 AI_Player.update()	Search took1ms
2017-01-03 14:43:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:47 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-03 14:43:47 AI_Player.update()		1010,	110,	1110,	101,	1100,	11,	110
2017-01-03 14:43:47 AI_Player.update()		1110,	1010,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:47 AI_Player.update()		11,	111,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:47 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:47 AI_Player.update()		101,	11,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:47 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:47 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:47 AI_Player.update()	update
2017-01-03 14:43:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:47 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:47 AI_Player.update()	update
2017-01-03 14:43:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:47 AI_Player.update()	Search took2ms
2017-01-03 14:43:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:47 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-03 14:43:47 AI_Player.update()		1010,	1010,	1110,	101,	1100,	11,	110
2017-01-03 14:43:47 AI_Player.update()		1110,	111,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:47 AI_Player.update()		11,	1010,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:47 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:47 AI_Player.update()		101,	101,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:47 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:47 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:47 AI_Player.update()	update
2017-01-03 14:43:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:47 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:47 AI_Player.update()	update
2017-01-03 14:43:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:47 AI_Player.update()	Search took1ms
2017-01-03 14:43:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:47 AI_Player.update()		110,	110,	111,	1100,	111,	11,	11
2017-01-03 14:43:47 AI_Player.update()		1010,	1010,	1110,	101,	1100,	110,	110
2017-01-03 14:43:47 AI_Player.update()		1110,	111,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:47 AI_Player.update()		11,	1010,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:47 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:47 AI_Player.update()		101,	101,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:47 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:47 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:47 AI_Player.update()	update
2017-01-03 14:43:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:47 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:48 AI_Player.update()	update
2017-01-03 14:43:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:48 AI_Player.update()	Search took2ms
2017-01-03 14:43:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:48 AI_Player.update()		110,	1010,	111,	1100,	111,	11,	11
2017-01-03 14:43:48 AI_Player.update()		1010,	111,	1110,	101,	1100,	110,	110
2017-01-03 14:43:48 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:48 AI_Player.update()		11,	11,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:48 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:48 AI_Player.update()		101,	101,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:48 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:48 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:48 AI_Player.update()	update
2017-01-03 14:43:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:48 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:48 AI_Player.update()	update
2017-01-03 14:43:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:48 AI_Player.update()	Search took1ms
2017-01-03 14:43:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:48 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-03 14:43:48 AI_Player.update()		1010,	111,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:48 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:48 AI_Player.update()		11,	11,	11,	110,	1100,	110,	1100
2017-01-03 14:43:48 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:48 AI_Player.update()		101,	101,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:48 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-03 14:43:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:48 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:48 AI_Player.update()	update
2017-01-03 14:43:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:48 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:48 AI_Player.update()	update
2017-01-03 14:43:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:48 AI_Player.update()	Search took2ms
2017-01-03 14:43:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:48 AI_Player.update()		110,	111,	111,	1100,	111,	110,	11
2017-01-03 14:43:48 AI_Player.update()		1010,	1010,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:48 AI_Player.update()		1110,	11,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:48 AI_Player.update()		11,	101,	11,	110,	1100,	110,	1100
2017-01-03 14:43:48 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:48 AI_Player.update()		101,	110,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:48 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-03 14:43:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:48 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:48 AI_Player.update()	update
2017-01-03 14:43:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:48 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:48 AI_Player.update()	update
2017-01-03 14:43:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:48 AI_Player.update()	Search took1ms
2017-01-03 14:43:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:48 AI_Player.update()		110,	111,	111,	1100,	111,	1010,	11
2017-01-03 14:43:48 AI_Player.update()		1010,	1010,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:48 AI_Player.update()		1110,	11,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:48 AI_Player.update()		11,	101,	11,	110,	1100,	110,	1100
2017-01-03 14:43:48 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:48 AI_Player.update()		101,	110,	111,	1001,	1001,	11,	1010
2017-01-03 14:43:48 AI_Player.update()		1100,	1010,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:48 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:48 AI_Player.update()	update
2017-01-03 14:43:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:48 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:48 AI_Player.update()	update
2017-01-03 14:43:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:48 AI_Player.update()	Search took2ms
2017-01-03 14:43:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:48 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-03 14:43:48 AI_Player.update()		1010,	11,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:48 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:48 AI_Player.update()		11,	101,	11,	110,	1100,	110,	1100
2017-01-03 14:43:48 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:48 AI_Player.update()		101,	1010,	111,	1001,	1001,	11,	1010
2017-01-03 14:43:48 AI_Player.update()		1100,	111,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:48 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:49 AI_Player.update()	update
2017-01-03 14:43:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:49 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:49 AI_Player.update()	update
2017-01-03 14:43:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:49 AI_Player.update()	Search took1ms
2017-01-03 14:43:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:49 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-03 14:43:49 AI_Player.update()		1010,	11,	1110,	101,	1100,	110,	110
2017-01-03 14:43:49 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:49 AI_Player.update()		11,	101,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:49 AI_Player.update()		1110,	110,	1101,	11,	1011,	11,	1011
2017-01-03 14:43:49 AI_Player.update()		101,	1010,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:49 AI_Player.update()		1100,	111,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:49 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:49 AI_Player.update()	update
2017-01-03 14:43:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:49 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:49 AI_Player.update()	update
2017-01-03 14:43:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:49 AI_Player.update()	Search took2ms
2017-01-03 14:43:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:49 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-03 14:43:49 AI_Player.update()		1010,	101,	1110,	101,	1100,	110,	110
2017-01-03 14:43:49 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:49 AI_Player.update()		11,	110,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:49 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-03 14:43:49 AI_Player.update()		101,	111,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:49 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:49 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:49 AI_Player.update()	update
2017-01-03 14:43:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:49 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:49 AI_Player.update()	update
2017-01-03 14:43:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:49 AI_Player.update()	Search took1ms
2017-01-03 14:43:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:49 AI_Player.update()		110,	11,	111,	1100,	111,	110,	11
2017-01-03 14:43:49 AI_Player.update()		1010,	101,	1110,	101,	1100,	110,	110
2017-01-03 14:43:49 AI_Player.update()		1110,	101,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:49 AI_Player.update()		11,	110,	11,	110,	1100,	11,	1100
2017-01-03 14:43:49 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:49 AI_Player.update()		101,	111,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:49 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:49 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:49 AI_Player.update()	update
2017-01-03 14:43:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:49 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:49 AI_Player.update()	update
2017-01-03 14:43:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:49 AI_Player.update()	Search took2ms
2017-01-03 14:43:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:49 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:43:49 AI_Player.update()		1010,	101,	1110,	101,	1100,	110,	110
2017-01-03 14:43:49 AI_Player.update()		1110,	110,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:49 AI_Player.update()		11,	1010,	11,	110,	1100,	11,	1100
2017-01-03 14:43:49 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:49 AI_Player.update()		101,	1010,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:49 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:49 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:49 AI_Player.update()	update
2017-01-03 14:43:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:49 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:49 AI_Player.update()	update
2017-01-03 14:43:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:49 AI_Player.update()	Search took1ms
2017-01-03 14:43:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:49 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:43:49 AI_Player.update()		1010,	101,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:49 AI_Player.update()		1110,	110,	1110,	1011,	111,	11,	1011
2017-01-03 14:43:49 AI_Player.update()		11,	1010,	11,	110,	1100,	110,	1100
2017-01-03 14:43:49 AI_Player.update()		1110,	111,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:49 AI_Player.update()		101,	1010,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:49 AI_Player.update()		1100,	11,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:49 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:50 AI_Player.update()	update
2017-01-03 14:43:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:50 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:50 AI_Player.update()	update
2017-01-03 14:43:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:50 AI_Player.update()	Search took2ms
2017-01-03 14:43:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:50 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:43:50 AI_Player.update()		1010,	110,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:50 AI_Player.update()		1110,	1010,	1110,	1011,	111,	11,	1011
2017-01-03 14:43:50 AI_Player.update()		11,	111,	11,	110,	1100,	110,	1100
2017-01-03 14:43:50 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:50 AI_Player.update()		101,	11,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:50 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:50 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:50 AI_Player.update()	update
2017-01-03 14:43:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:50 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:50 AI_Player.update()	update
2017-01-03 14:43:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:50 AI_Player.update()	Search took1ms
2017-01-03 14:43:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:50 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-03 14:43:50 AI_Player.update()		1010,	110,	1110,	101,	1100,	11,	110
2017-01-03 14:43:50 AI_Player.update()		1110,	1010,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:50 AI_Player.update()		11,	111,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:50 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:50 AI_Player.update()		101,	11,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:50 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:50 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:50 AI_Player.update()	update
2017-01-03 14:43:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:50 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:50 AI_Player.update()	update
2017-01-03 14:43:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:50 AI_Player.update()	Search took2ms
2017-01-03 14:43:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:50 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-03 14:43:50 AI_Player.update()		1010,	1010,	1110,	101,	1100,	11,	110
2017-01-03 14:43:50 AI_Player.update()		1110,	111,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:50 AI_Player.update()		11,	1010,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:50 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:50 AI_Player.update()		101,	101,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:50 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:50 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:50 AI_Player.update()	update
2017-01-03 14:43:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:50 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:50 AI_Player.update()	update
2017-01-03 14:43:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:50 AI_Player.update()	Search took1ms
2017-01-03 14:43:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:50 AI_Player.update()		110,	110,	111,	1100,	111,	11,	11
2017-01-03 14:43:50 AI_Player.update()		1010,	1010,	1110,	101,	1100,	110,	110
2017-01-03 14:43:50 AI_Player.update()		1110,	111,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:50 AI_Player.update()		11,	1010,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:50 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:50 AI_Player.update()		101,	101,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:50 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:50 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:50 AI_Player.update()	update
2017-01-03 14:43:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:50 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:51 AI_Player.update()	update
2017-01-03 14:43:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:51 AI_Player.update()	Search took3ms
2017-01-03 14:43:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:51 AI_Player.update()		110,	1010,	111,	1100,	111,	11,	11
2017-01-03 14:43:51 AI_Player.update()		1010,	111,	1110,	101,	1100,	110,	110
2017-01-03 14:43:51 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:51 AI_Player.update()		11,	11,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:51 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:51 AI_Player.update()		101,	101,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:51 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:51 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:51 AI_Player.update()	update
2017-01-03 14:43:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:51 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:51 AI_Player.update()	update
2017-01-03 14:43:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:51 AI_Player.update()	Search took1ms
2017-01-03 14:43:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:51 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-03 14:43:51 AI_Player.update()		1010,	111,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:51 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:51 AI_Player.update()		11,	11,	11,	110,	1100,	110,	1100
2017-01-03 14:43:51 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:51 AI_Player.update()		101,	101,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:51 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-03 14:43:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:51 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:51 AI_Player.update()	update
2017-01-03 14:43:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:51 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:51 AI_Player.update()	update
2017-01-03 14:43:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:51 AI_Player.update()	Search took2ms
2017-01-03 14:43:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:51 AI_Player.update()		110,	111,	111,	1100,	111,	110,	11
2017-01-03 14:43:51 AI_Player.update()		1010,	1010,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:51 AI_Player.update()		1110,	11,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:51 AI_Player.update()		11,	101,	11,	110,	1100,	110,	1100
2017-01-03 14:43:51 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:51 AI_Player.update()		101,	110,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:51 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-03 14:43:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:51 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:51 AI_Player.update()	update
2017-01-03 14:43:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:51 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:51 AI_Player.update()	update
2017-01-03 14:43:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:51 AI_Player.update()	Search took1ms
2017-01-03 14:43:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:51 AI_Player.update()		110,	111,	111,	1100,	111,	1010,	11
2017-01-03 14:43:51 AI_Player.update()		1010,	1010,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:51 AI_Player.update()		1110,	11,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:51 AI_Player.update()		11,	101,	11,	110,	1100,	110,	1100
2017-01-03 14:43:51 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:51 AI_Player.update()		101,	110,	111,	1001,	1001,	11,	1010
2017-01-03 14:43:51 AI_Player.update()		1100,	1010,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:51 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:51 AI_Player.update()	update
2017-01-03 14:43:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:51 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:51 AI_Player.update()	update
2017-01-03 14:43:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:51 AI_Player.update()	Search took2ms
2017-01-03 14:43:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:51 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-03 14:43:51 AI_Player.update()		1010,	11,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:51 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:51 AI_Player.update()		11,	101,	11,	110,	1100,	110,	1100
2017-01-03 14:43:51 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:51 AI_Player.update()		101,	1010,	111,	1001,	1001,	11,	1010
2017-01-03 14:43:51 AI_Player.update()		1100,	111,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:51 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:51 AI_Player.update()	update
2017-01-03 14:43:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:51 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:52 AI_Player.update()	update
2017-01-03 14:43:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:52 AI_Player.update()	Search took1ms
2017-01-03 14:43:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:52 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-03 14:43:52 AI_Player.update()		1010,	11,	1110,	101,	1100,	110,	110
2017-01-03 14:43:52 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:52 AI_Player.update()		11,	101,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:52 AI_Player.update()		1110,	110,	1101,	11,	1011,	11,	1011
2017-01-03 14:43:52 AI_Player.update()		101,	1010,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:52 AI_Player.update()		1100,	111,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:52 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:52 AI_Player.update()	update
2017-01-03 14:43:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:52 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:52 AI_Player.update()	update
2017-01-03 14:43:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:52 AI_Player.update()	Search took2ms
2017-01-03 14:43:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:52 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-03 14:43:52 AI_Player.update()		1010,	101,	1110,	101,	1100,	110,	110
2017-01-03 14:43:52 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:52 AI_Player.update()		11,	110,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:52 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-03 14:43:52 AI_Player.update()		101,	111,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:52 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:52 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:52 AI_Player.update()	update
2017-01-03 14:43:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:52 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:52 AI_Player.update()	update
2017-01-03 14:43:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:52 AI_Player.update()	Search took1ms
2017-01-03 14:43:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:52 AI_Player.update()		110,	11,	111,	1100,	111,	110,	11
2017-01-03 14:43:52 AI_Player.update()		1010,	101,	1110,	101,	1100,	110,	110
2017-01-03 14:43:52 AI_Player.update()		1110,	101,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:52 AI_Player.update()		11,	110,	11,	110,	1100,	11,	1100
2017-01-03 14:43:52 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:52 AI_Player.update()		101,	111,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:52 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:52 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:52 AI_Player.update()	update
2017-01-03 14:43:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:52 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:52 AI_Player.update()	update
2017-01-03 14:43:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:52 AI_Player.update()	Search took2ms
2017-01-03 14:43:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:52 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:43:52 AI_Player.update()		1010,	101,	1110,	101,	1100,	110,	110
2017-01-03 14:43:52 AI_Player.update()		1110,	110,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:52 AI_Player.update()		11,	1010,	11,	110,	1100,	11,	1100
2017-01-03 14:43:52 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:52 AI_Player.update()		101,	1010,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:52 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:52 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:52 AI_Player.update()	update
2017-01-03 14:43:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:52 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:52 AI_Player.update()	update
2017-01-03 14:43:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:52 AI_Player.update()	Search took1ms
2017-01-03 14:43:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:52 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:43:52 AI_Player.update()		1010,	101,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:52 AI_Player.update()		1110,	110,	1110,	1011,	111,	11,	1011
2017-01-03 14:43:52 AI_Player.update()		11,	1010,	11,	110,	1100,	110,	1100
2017-01-03 14:43:52 AI_Player.update()		1110,	111,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:52 AI_Player.update()		101,	1010,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:52 AI_Player.update()		1100,	11,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:52 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:52 AI_Player.update()	update
2017-01-03 14:43:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:52 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:53 AI_Player.update()	update
2017-01-03 14:43:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:53 AI_Player.update()	Search took2ms
2017-01-03 14:43:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:53 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:43:53 AI_Player.update()		1010,	110,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:53 AI_Player.update()		1110,	1010,	1110,	1011,	111,	11,	1011
2017-01-03 14:43:53 AI_Player.update()		11,	111,	11,	110,	1100,	110,	1100
2017-01-03 14:43:53 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:53 AI_Player.update()		101,	11,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:53 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:53 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:53 AI_Player.update()	update
2017-01-03 14:43:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:53 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:53 AI_Player.update()	update
2017-01-03 14:43:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:53 AI_Player.update()	Search took1ms
2017-01-03 14:43:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:53 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-03 14:43:53 AI_Player.update()		1010,	110,	1110,	101,	1100,	11,	110
2017-01-03 14:43:53 AI_Player.update()		1110,	1010,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:53 AI_Player.update()		11,	111,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:53 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:53 AI_Player.update()		101,	11,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:53 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:53 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:53 AI_Player.update()	update
2017-01-03 14:43:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:53 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:53 AI_Player.update()	update
2017-01-03 14:43:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:53 AI_Player.update()	Search took2ms
2017-01-03 14:43:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:53 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-03 14:43:53 AI_Player.update()		1010,	1010,	1110,	101,	1100,	11,	110
2017-01-03 14:43:53 AI_Player.update()		1110,	111,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:53 AI_Player.update()		11,	1010,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:53 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:53 AI_Player.update()		101,	101,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:53 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:53 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:53 AI_Player.update()	update
2017-01-03 14:43:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:53 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:53 AI_Player.update()	update
2017-01-03 14:43:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:53 AI_Player.update()	Search took1ms
2017-01-03 14:43:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:53 AI_Player.update()		110,	110,	111,	1100,	111,	11,	11
2017-01-03 14:43:53 AI_Player.update()		1010,	1010,	1110,	101,	1100,	110,	110
2017-01-03 14:43:53 AI_Player.update()		1110,	111,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:53 AI_Player.update()		11,	1010,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:53 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:53 AI_Player.update()		101,	101,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:53 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:53 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:53 AI_Player.update()	update
2017-01-03 14:43:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:53 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:53 AI_Player.update()	update
2017-01-03 14:43:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:53 AI_Player.update()	Search took2ms
2017-01-03 14:43:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:53 AI_Player.update()		110,	1010,	111,	1100,	111,	11,	11
2017-01-03 14:43:53 AI_Player.update()		1010,	111,	1110,	101,	1100,	110,	110
2017-01-03 14:43:53 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:53 AI_Player.update()		11,	11,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:53 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:53 AI_Player.update()		101,	101,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:53 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:53 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:54 AI_Player.update()	update
2017-01-03 14:43:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:54 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:54 AI_Player.update()	update
2017-01-03 14:43:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:54 AI_Player.update()	Search took1ms
2017-01-03 14:43:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:54 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-03 14:43:54 AI_Player.update()		1010,	111,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:54 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:54 AI_Player.update()		11,	11,	11,	110,	1100,	110,	1100
2017-01-03 14:43:54 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:54 AI_Player.update()		101,	101,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:54 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-03 14:43:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:54 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:54 AI_Player.update()	update
2017-01-03 14:43:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:54 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:54 AI_Player.update()	update
2017-01-03 14:43:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:54 AI_Player.update()	Search took2ms
2017-01-03 14:43:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:54 AI_Player.update()		110,	111,	111,	1100,	111,	110,	11
2017-01-03 14:43:54 AI_Player.update()		1010,	1010,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:54 AI_Player.update()		1110,	11,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:54 AI_Player.update()		11,	101,	11,	110,	1100,	110,	1100
2017-01-03 14:43:54 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:54 AI_Player.update()		101,	110,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:54 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-03 14:43:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:54 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:54 AI_Player.update()	update
2017-01-03 14:43:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:54 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:54 AI_Player.update()	update
2017-01-03 14:43:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:54 AI_Player.update()	Search took1ms
2017-01-03 14:43:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:54 AI_Player.update()		110,	111,	111,	1100,	111,	1010,	11
2017-01-03 14:43:54 AI_Player.update()		1010,	1010,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:54 AI_Player.update()		1110,	11,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:54 AI_Player.update()		11,	101,	11,	110,	1100,	110,	1100
2017-01-03 14:43:54 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:54 AI_Player.update()		101,	110,	111,	1001,	1001,	11,	1010
2017-01-03 14:43:54 AI_Player.update()		1100,	1010,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:54 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:54 AI_Player.update()	update
2017-01-03 14:43:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:54 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:54 AI_Player.update()	update
2017-01-03 14:43:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:54 AI_Player.update()	Search took2ms
2017-01-03 14:43:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:54 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-03 14:43:54 AI_Player.update()		1010,	11,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:54 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:54 AI_Player.update()		11,	101,	11,	110,	1100,	110,	1100
2017-01-03 14:43:54 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:54 AI_Player.update()		101,	1010,	111,	1001,	1001,	11,	1010
2017-01-03 14:43:54 AI_Player.update()		1100,	111,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:54 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:54 AI_Player.update()	update
2017-01-03 14:43:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:54 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:54 AI_Player.update()	update
2017-01-03 14:43:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:54 AI_Player.update()	Search took1ms
2017-01-03 14:43:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:54 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-03 14:43:54 AI_Player.update()		1010,	11,	1110,	101,	1100,	110,	110
2017-01-03 14:43:54 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:54 AI_Player.update()		11,	101,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:54 AI_Player.update()		1110,	110,	1101,	11,	1011,	11,	1011
2017-01-03 14:43:54 AI_Player.update()		101,	1010,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:54 AI_Player.update()		1100,	111,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:54 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:55 AI_Player.update()	update
2017-01-03 14:43:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:55 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:55 AI_Player.update()	update
2017-01-03 14:43:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:55 AI_Player.update()	Search took2ms
2017-01-03 14:43:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:55 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-03 14:43:55 AI_Player.update()		1010,	101,	1110,	101,	1100,	110,	110
2017-01-03 14:43:55 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:55 AI_Player.update()		11,	110,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:55 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-03 14:43:55 AI_Player.update()		101,	111,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:55 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:55 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:55 AI_Player.update()	update
2017-01-03 14:43:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:55 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:55 AI_Player.update()	update
2017-01-03 14:43:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:55 AI_Player.update()	Search took1ms
2017-01-03 14:43:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:55 AI_Player.update()		110,	11,	111,	1100,	111,	110,	11
2017-01-03 14:43:55 AI_Player.update()		1010,	101,	1110,	101,	1100,	110,	110
2017-01-03 14:43:55 AI_Player.update()		1110,	101,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:55 AI_Player.update()		11,	110,	11,	110,	1100,	11,	1100
2017-01-03 14:43:55 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:55 AI_Player.update()		101,	111,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:55 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:55 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:55 AI_Player.update()	update
2017-01-03 14:43:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:55 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:55 AI_Player.update()	update
2017-01-03 14:43:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:55 AI_Player.update()	Search took2ms
2017-01-03 14:43:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:55 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:43:55 AI_Player.update()		1010,	101,	1110,	101,	1100,	110,	110
2017-01-03 14:43:55 AI_Player.update()		1110,	110,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:55 AI_Player.update()		11,	1010,	11,	110,	1100,	11,	1100
2017-01-03 14:43:55 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:55 AI_Player.update()		101,	1010,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:55 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:55 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:55 AI_Player.update()	update
2017-01-03 14:43:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:55 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:55 AI_Player.update()	update
2017-01-03 14:43:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:55 AI_Player.update()	Search took0ms
2017-01-03 14:43:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:55 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:43:55 AI_Player.update()		1010,	101,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:55 AI_Player.update()		1110,	110,	1110,	1011,	111,	11,	1011
2017-01-03 14:43:55 AI_Player.update()		11,	1010,	11,	110,	1100,	110,	1100
2017-01-03 14:43:55 AI_Player.update()		1110,	111,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:55 AI_Player.update()		101,	1010,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:55 AI_Player.update()		1100,	11,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:55 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:55 AI_Player.update()	update
2017-01-03 14:43:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:55 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:56 AI_Player.update()	update
2017-01-03 14:43:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:56 AI_Player.update()	Search took2ms
2017-01-03 14:43:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:56 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:43:56 AI_Player.update()		1010,	110,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:56 AI_Player.update()		1110,	1010,	1110,	1011,	111,	11,	1011
2017-01-03 14:43:56 AI_Player.update()		11,	111,	11,	110,	1100,	110,	1100
2017-01-03 14:43:56 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:56 AI_Player.update()		101,	11,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:56 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:56 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:56 AI_Player.update()	update
2017-01-03 14:43:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:56 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:56 AI_Player.update()	update
2017-01-03 14:43:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:56 AI_Player.update()	Search took1ms
2017-01-03 14:43:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:56 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-03 14:43:56 AI_Player.update()		1010,	110,	1110,	101,	1100,	11,	110
2017-01-03 14:43:56 AI_Player.update()		1110,	1010,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:56 AI_Player.update()		11,	111,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:56 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:56 AI_Player.update()		101,	11,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:56 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:56 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:56 AI_Player.update()	update
2017-01-03 14:43:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:56 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:56 AI_Player.update()	update
2017-01-03 14:43:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:56 AI_Player.update()	Search took2ms
2017-01-03 14:43:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:56 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-03 14:43:56 AI_Player.update()		1010,	1010,	1110,	101,	1100,	11,	110
2017-01-03 14:43:56 AI_Player.update()		1110,	111,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:56 AI_Player.update()		11,	1010,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:56 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:56 AI_Player.update()		101,	101,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:56 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:56 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:56 AI_Player.update()	update
2017-01-03 14:43:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:56 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:56 AI_Player.update()	update
2017-01-03 14:43:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:56 AI_Player.update()	Search took1ms
2017-01-03 14:43:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:56 AI_Player.update()		110,	110,	111,	1100,	111,	11,	11
2017-01-03 14:43:56 AI_Player.update()		1010,	1010,	1110,	101,	1100,	110,	110
2017-01-03 14:43:56 AI_Player.update()		1110,	111,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:56 AI_Player.update()		11,	1010,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:56 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:56 AI_Player.update()		101,	101,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:56 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:56 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:56 AI_Player.update()	update
2017-01-03 14:43:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:56 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:56 AI_Player.update()	update
2017-01-03 14:43:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:56 AI_Player.update()	Search took2ms
2017-01-03 14:43:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:56 AI_Player.update()		110,	1010,	111,	1100,	111,	11,	11
2017-01-03 14:43:56 AI_Player.update()		1010,	111,	1110,	101,	1100,	110,	110
2017-01-03 14:43:56 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:56 AI_Player.update()		11,	11,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:56 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:56 AI_Player.update()		101,	101,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:56 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:56 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:56 AI_Player.update()	update
2017-01-03 14:43:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:56 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:57 AI_Player.update()	update
2017-01-03 14:43:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:57 AI_Player.update()	Search took2ms
2017-01-03 14:43:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:57 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-03 14:43:57 AI_Player.update()		1010,	111,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:57 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:57 AI_Player.update()		11,	11,	11,	110,	1100,	110,	1100
2017-01-03 14:43:57 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:57 AI_Player.update()		101,	101,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:57 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-03 14:43:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:57 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:57 AI_Player.update()	update
2017-01-03 14:43:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:57 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:57 AI_Player.update()	update
2017-01-03 14:43:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:57 AI_Player.update()	Search took2ms
2017-01-03 14:43:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:57 AI_Player.update()		110,	111,	111,	1100,	111,	110,	11
2017-01-03 14:43:57 AI_Player.update()		1010,	1010,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:57 AI_Player.update()		1110,	11,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:57 AI_Player.update()		11,	101,	11,	110,	1100,	110,	1100
2017-01-03 14:43:57 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:57 AI_Player.update()		101,	110,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:57 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-03 14:43:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:57 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:57 AI_Player.update()	update
2017-01-03 14:43:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:57 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:57 AI_Player.update()	update
2017-01-03 14:43:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:57 AI_Player.update()	Search took1ms
2017-01-03 14:43:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:57 AI_Player.update()		110,	111,	111,	1100,	111,	1010,	11
2017-01-03 14:43:57 AI_Player.update()		1010,	1010,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:57 AI_Player.update()		1110,	11,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:57 AI_Player.update()		11,	101,	11,	110,	1100,	110,	1100
2017-01-03 14:43:57 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:57 AI_Player.update()		101,	110,	111,	1001,	1001,	11,	1010
2017-01-03 14:43:57 AI_Player.update()		1100,	1010,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:57 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:57 AI_Player.update()	update
2017-01-03 14:43:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:57 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:57 AI_Player.update()	update
2017-01-03 14:43:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:57 AI_Player.update()	Search took2ms
2017-01-03 14:43:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:57 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-03 14:43:57 AI_Player.update()		1010,	11,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:57 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:57 AI_Player.update()		11,	101,	11,	110,	1100,	110,	1100
2017-01-03 14:43:57 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:57 AI_Player.update()		101,	1010,	111,	1001,	1001,	11,	1010
2017-01-03 14:43:57 AI_Player.update()		1100,	111,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:57 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:57 AI_Player.update()	update
2017-01-03 14:43:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:57 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:57 AI_Player.update()	update
2017-01-03 14:43:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:57 AI_Player.update()	Search took1ms
2017-01-03 14:43:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:57 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-03 14:43:57 AI_Player.update()		1010,	11,	1110,	101,	1100,	110,	110
2017-01-03 14:43:57 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:57 AI_Player.update()		11,	101,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:57 AI_Player.update()		1110,	110,	1101,	11,	1011,	11,	1011
2017-01-03 14:43:57 AI_Player.update()		101,	1010,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:57 AI_Player.update()		1100,	111,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:57 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:57 AI_Player.update()	update
2017-01-03 14:43:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:57 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:58 AI_Player.update()	update
2017-01-03 14:43:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:58 AI_Player.update()	Search took2ms
2017-01-03 14:43:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:58 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-03 14:43:58 AI_Player.update()		1010,	101,	1110,	101,	1100,	110,	110
2017-01-03 14:43:58 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:58 AI_Player.update()		11,	110,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:58 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-03 14:43:58 AI_Player.update()		101,	111,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:58 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:58 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:58 AI_Player.update()	update
2017-01-03 14:43:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:58 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:58 AI_Player.update()	update
2017-01-03 14:43:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:58 AI_Player.update()	Search took1ms
2017-01-03 14:43:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:58 AI_Player.update()		110,	11,	111,	1100,	111,	110,	11
2017-01-03 14:43:58 AI_Player.update()		1010,	101,	1110,	101,	1100,	110,	110
2017-01-03 14:43:58 AI_Player.update()		1110,	101,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:58 AI_Player.update()		11,	110,	11,	110,	1100,	11,	1100
2017-01-03 14:43:58 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:58 AI_Player.update()		101,	111,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:58 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:58 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:58 AI_Player.update()	update
2017-01-03 14:43:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:58 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:58 AI_Player.update()	update
2017-01-03 14:43:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:58 AI_Player.update()	Search took2ms
2017-01-03 14:43:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:58 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:43:58 AI_Player.update()		1010,	101,	1110,	101,	1100,	110,	110
2017-01-03 14:43:58 AI_Player.update()		1110,	110,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:58 AI_Player.update()		11,	1010,	11,	110,	1100,	11,	1100
2017-01-03 14:43:58 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:58 AI_Player.update()		101,	1010,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:58 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:58 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:58 AI_Player.update()	update
2017-01-03 14:43:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:58 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:58 AI_Player.update()	update
2017-01-03 14:43:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:58 AI_Player.update()	Search took1ms
2017-01-03 14:43:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:58 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:43:58 AI_Player.update()		1010,	101,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:58 AI_Player.update()		1110,	110,	1110,	1011,	111,	11,	1011
2017-01-03 14:43:58 AI_Player.update()		11,	1010,	11,	110,	1100,	110,	1100
2017-01-03 14:43:58 AI_Player.update()		1110,	111,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:58 AI_Player.update()		101,	1010,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:58 AI_Player.update()		1100,	11,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:58 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:58 AI_Player.update()	update
2017-01-03 14:43:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:58 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:58 AI_Player.update()	update
2017-01-03 14:43:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:58 AI_Player.update()	Search took2ms
2017-01-03 14:43:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:58 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:43:58 AI_Player.update()		1010,	110,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:58 AI_Player.update()		1110,	1010,	1110,	1011,	111,	11,	1011
2017-01-03 14:43:58 AI_Player.update()		11,	111,	11,	110,	1100,	110,	1100
2017-01-03 14:43:58 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:58 AI_Player.update()		101,	11,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:58 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:58 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:59 AI_Player.update()	update
2017-01-03 14:43:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:59 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:59 AI_Player.update()	update
2017-01-03 14:43:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:59 AI_Player.update()	Search took1ms
2017-01-03 14:43:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:59 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-03 14:43:59 AI_Player.update()		1010,	110,	1110,	101,	1100,	11,	110
2017-01-03 14:43:59 AI_Player.update()		1110,	1010,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:59 AI_Player.update()		11,	111,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:59 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:59 AI_Player.update()		101,	11,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:59 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:59 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:59 AI_Player.update()	update
2017-01-03 14:43:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:59 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:59 AI_Player.update()	update
2017-01-03 14:43:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:59 AI_Player.update()	Search took2ms
2017-01-03 14:43:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:59 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-03 14:43:59 AI_Player.update()		1010,	1010,	1110,	101,	1100,	11,	110
2017-01-03 14:43:59 AI_Player.update()		1110,	111,	1110,	1011,	111,	110,	1011
2017-01-03 14:43:59 AI_Player.update()		11,	1010,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:59 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-03 14:43:59 AI_Player.update()		101,	101,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:59 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:43:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:59 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:59 AI_Player.update()	update
2017-01-03 14:43:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:59 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:59 AI_Player.update()	update
2017-01-03 14:43:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:59 AI_Player.update()	Search took1ms
2017-01-03 14:43:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:59 AI_Player.update()		110,	110,	111,	1100,	111,	11,	11
2017-01-03 14:43:59 AI_Player.update()		1010,	1010,	1110,	101,	1100,	110,	110
2017-01-03 14:43:59 AI_Player.update()		1110,	111,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:59 AI_Player.update()		11,	1010,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:59 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:59 AI_Player.update()		101,	101,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:59 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:59 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:59 AI_Player.update()	update
2017-01-03 14:43:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:43:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:43:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:43:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:59 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:59 AI_Player.update()	update
2017-01-03 14:43:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:43:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:43:59 AI_Player.update()	Search took2ms
2017-01-03 14:43:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:59 AI_Player.update()		110,	1010,	111,	1100,	111,	11,	11
2017-01-03 14:43:59 AI_Player.update()		1010,	111,	1110,	101,	1100,	110,	110
2017-01-03 14:43:59 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:59 AI_Player.update()		11,	11,	11,	110,	1100,	1010,	1100
2017-01-03 14:43:59 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:59 AI_Player.update()		101,	101,	111,	1001,	1001,	110,	1010
2017-01-03 14:43:59 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-03 14:43:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:59 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:59 AI_Player.update()	update
2017-01-03 14:43:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:43:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:43:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:43:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:43:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:43:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:59 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:43:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:43:59 AI_Player.update()	update
2017-01-03 14:43:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:43:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:43:59 AI_Player.update()	Search took1ms
2017-01-03 14:43:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:43:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:59 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-03 14:43:59 AI_Player.update()		1010,	111,	1110,	101,	1100,	1010,	110
2017-01-03 14:43:59 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1010,	1011
2017-01-03 14:43:59 AI_Player.update()		11,	11,	11,	110,	1100,	110,	1100
2017-01-03 14:43:59 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 14:43:59 AI_Player.update()		101,	101,	111,	1001,	1001,	1010,	1010
2017-01-03 14:43:59 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-03 14:43:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:43:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:43:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:43:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:43:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:43:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:43:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:43:59 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:00 AI_Player.update()	update
2017-01-03 14:44:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:44:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:44:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:44:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:44:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:00 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:00 AI_Player.update()	update
2017-01-03 14:44:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:44:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:44:00 AI_Player.update()	Search took2ms
2017-01-03 14:44:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:44:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:00 AI_Player.update()		110,	111,	111,	1100,	111,	110,	11
2017-01-03 14:44:00 AI_Player.update()		1010,	1010,	1110,	101,	1100,	1010,	110
2017-01-03 14:44:00 AI_Player.update()		1110,	11,	1110,	1011,	111,	1010,	1011
2017-01-03 14:44:00 AI_Player.update()		11,	101,	11,	110,	1100,	110,	1100
2017-01-03 14:44:00 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 14:44:00 AI_Player.update()		101,	110,	111,	1001,	1001,	1010,	1010
2017-01-03 14:44:00 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-03 14:44:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:44:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:44:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:00 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:00 AI_Player.update()	update
2017-01-03 14:44:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:44:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:44:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:44:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:44:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:44:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:00 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:00 AI_Player.update()	update
2017-01-03 14:44:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:44:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:44:00 AI_Player.update()	Search took1ms
2017-01-03 14:44:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:44:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:00 AI_Player.update()		110,	111,	111,	1100,	111,	1010,	11
2017-01-03 14:44:00 AI_Player.update()		1010,	1010,	1110,	101,	1100,	1010,	110
2017-01-03 14:44:00 AI_Player.update()		1110,	11,	1110,	1011,	111,	110,	1011
2017-01-03 14:44:00 AI_Player.update()		11,	101,	11,	110,	1100,	110,	1100
2017-01-03 14:44:00 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-03 14:44:00 AI_Player.update()		101,	110,	111,	1001,	1001,	11,	1010
2017-01-03 14:44:00 AI_Player.update()		1100,	1010,	1101,	11,	1101,	110,	1001
2017-01-03 14:44:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:44:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:44:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:00 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:00 AI_Player.update()	update
2017-01-03 14:44:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:44:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:44:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:44:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:44:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:00 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:00 AI_Player.update()	update
2017-01-03 14:44:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:44:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:44:00 AI_Player.update()	Search took2ms
2017-01-03 14:44:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:44:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:00 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-03 14:44:00 AI_Player.update()		1010,	11,	1110,	101,	1100,	1010,	110
2017-01-03 14:44:00 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 14:44:00 AI_Player.update()		11,	101,	11,	110,	1100,	110,	1100
2017-01-03 14:44:00 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-03 14:44:00 AI_Player.update()		101,	1010,	111,	1001,	1001,	11,	1010
2017-01-03 14:44:00 AI_Player.update()		1100,	111,	1101,	11,	1101,	110,	1001
2017-01-03 14:44:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:44:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:44:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:00 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:00 AI_Player.update()	update
2017-01-03 14:44:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:44:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:44:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:44:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:44:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:44:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:00 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:00 AI_Player.update()	update
2017-01-03 14:44:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:44:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:44:00 AI_Player.update()	Search took1ms
2017-01-03 14:44:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:44:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:00 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-03 14:44:00 AI_Player.update()		1010,	11,	1110,	101,	1100,	110,	110
2017-01-03 14:44:00 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 14:44:00 AI_Player.update()		11,	101,	11,	110,	1100,	1010,	1100
2017-01-03 14:44:00 AI_Player.update()		1110,	110,	1101,	11,	1011,	11,	1011
2017-01-03 14:44:00 AI_Player.update()		101,	1010,	111,	1001,	1001,	110,	1010
2017-01-03 14:44:00 AI_Player.update()		1100,	111,	1101,	11,	1101,	1010,	1001
2017-01-03 14:44:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:44:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:44:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:00 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:00 AI_Player.update()	update
2017-01-03 14:44:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:44:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:44:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:44:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:44:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:00 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:01 AI_Player.update()	update
2017-01-03 14:44:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:44:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:44:01 AI_Player.update()	Search took2ms
2017-01-03 14:44:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:44:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:01 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-03 14:44:01 AI_Player.update()		1010,	101,	1110,	101,	1100,	110,	110
2017-01-03 14:44:01 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 14:44:01 AI_Player.update()		11,	110,	11,	110,	1100,	1010,	1100
2017-01-03 14:44:01 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-03 14:44:01 AI_Player.update()		101,	111,	111,	1001,	1001,	110,	1010
2017-01-03 14:44:01 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-03 14:44:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:44:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:44:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:01 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:01 AI_Player.update()	update
2017-01-03 14:44:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:44:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:44:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:44:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:44:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:44:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:01 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:01 AI_Player.update()	update
2017-01-03 14:44:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:44:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:44:01 AI_Player.update()	Search took1ms
2017-01-03 14:44:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:44:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:01 AI_Player.update()		110,	11,	111,	1100,	111,	110,	11
2017-01-03 14:44:01 AI_Player.update()		1010,	101,	1110,	101,	1100,	110,	110
2017-01-03 14:44:01 AI_Player.update()		1110,	101,	1110,	1011,	111,	1010,	1011
2017-01-03 14:44:01 AI_Player.update()		11,	110,	11,	110,	1100,	11,	1100
2017-01-03 14:44:01 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-03 14:44:01 AI_Player.update()		101,	111,	111,	1001,	1001,	1010,	1010
2017-01-03 14:44:01 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-03 14:44:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:44:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:44:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:01 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:01 AI_Player.update()	update
2017-01-03 14:44:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:44:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:44:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:44:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:44:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:01 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:01 AI_Player.update()	update
2017-01-03 14:44:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:44:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:44:01 AI_Player.update()	Search took2ms
2017-01-03 14:44:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:44:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:01 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:44:01 AI_Player.update()		1010,	101,	1110,	101,	1100,	110,	110
2017-01-03 14:44:01 AI_Player.update()		1110,	110,	1110,	1011,	111,	1010,	1011
2017-01-03 14:44:01 AI_Player.update()		11,	1010,	11,	110,	1100,	11,	1100
2017-01-03 14:44:01 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-03 14:44:01 AI_Player.update()		101,	1010,	111,	1001,	1001,	1010,	1010
2017-01-03 14:44:01 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-03 14:44:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:44:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:44:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:01 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:01 AI_Player.update()	update
2017-01-03 14:44:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:44:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:44:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:44:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:44:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:44:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:01 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:01 AI_Player.update()	update
2017-01-03 14:44:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:44:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:44:01 AI_Player.update()	Search took1ms
2017-01-03 14:44:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:44:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:01 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:44:01 AI_Player.update()		1010,	101,	1110,	101,	1100,	1010,	110
2017-01-03 14:44:01 AI_Player.update()		1110,	110,	1110,	1011,	111,	11,	1011
2017-01-03 14:44:01 AI_Player.update()		11,	1010,	11,	110,	1100,	110,	1100
2017-01-03 14:44:01 AI_Player.update()		1110,	111,	1101,	11,	1011,	1010,	1011
2017-01-03 14:44:01 AI_Player.update()		101,	1010,	111,	1001,	1001,	1010,	1010
2017-01-03 14:44:01 AI_Player.update()		1100,	11,	1101,	11,	1101,	110,	1001
2017-01-03 14:44:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:44:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:44:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:01 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:01 AI_Player.update()	update
2017-01-03 14:44:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:44:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:44:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:44:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:44:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:01 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:01 AI_Player.update()	update
2017-01-03 14:44:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:44:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:44:01 AI_Player.update()	Search took2ms
2017-01-03 14:44:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:44:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:01 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:44:01 AI_Player.update()		1010,	110,	1110,	101,	1100,	1010,	110
2017-01-03 14:44:01 AI_Player.update()		1110,	1010,	1110,	1011,	111,	11,	1011
2017-01-03 14:44:01 AI_Player.update()		11,	111,	11,	110,	1100,	110,	1100
2017-01-03 14:44:01 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-03 14:44:01 AI_Player.update()		101,	11,	111,	1001,	1001,	1010,	1010
2017-01-03 14:44:01 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:44:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:44:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:44:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:01 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:01 AI_Player.update()	update
2017-01-03 14:44:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:44:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:44:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:44:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:44:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:44:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:01 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:02 AI_Player.update()	update
2017-01-03 14:44:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:44:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:44:02 AI_Player.update()	Search took1ms
2017-01-03 14:44:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:44:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:02 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-03 14:44:02 AI_Player.update()		1010,	110,	1110,	101,	1100,	11,	110
2017-01-03 14:44:02 AI_Player.update()		1110,	1010,	1110,	1011,	111,	110,	1011
2017-01-03 14:44:02 AI_Player.update()		11,	111,	11,	110,	1100,	1010,	1100
2017-01-03 14:44:02 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-03 14:44:02 AI_Player.update()		101,	11,	111,	1001,	1001,	110,	1010
2017-01-03 14:44:02 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:44:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:44:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:44:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:02 AI_Player.update()	update
2017-01-03 14:44:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:44:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:44:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:44:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:44:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:02 AI_Player.update()	update
2017-01-03 14:44:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:44:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:44:02 AI_Player.update()	Search took2ms
2017-01-03 14:44:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:44:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:02 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-03 14:44:02 AI_Player.update()		1010,	1010,	1110,	101,	1100,	11,	110
2017-01-03 14:44:02 AI_Player.update()		1110,	111,	1110,	1011,	111,	110,	1011
2017-01-03 14:44:02 AI_Player.update()		11,	1010,	11,	110,	1100,	1010,	1100
2017-01-03 14:44:02 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-03 14:44:02 AI_Player.update()		101,	101,	111,	1001,	1001,	110,	1010
2017-01-03 14:44:02 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:44:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:44:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:44:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:02 AI_Player.update()	update
2017-01-03 14:44:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:44:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:44:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:44:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:44:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:44:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:02 AI_Player.update()	update
2017-01-03 14:44:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:44:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:44:02 AI_Player.update()	Search took1ms
2017-01-03 14:44:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:44:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:02 AI_Player.update()		110,	110,	111,	1100,	111,	11,	11
2017-01-03 14:44:02 AI_Player.update()		1010,	1010,	1110,	101,	1100,	110,	110
2017-01-03 14:44:02 AI_Player.update()		1110,	111,	1110,	1011,	111,	1010,	1011
2017-01-03 14:44:02 AI_Player.update()		11,	1010,	11,	110,	1100,	1010,	1100
2017-01-03 14:44:02 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-03 14:44:02 AI_Player.update()		101,	101,	111,	1001,	1001,	110,	1010
2017-01-03 14:44:02 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-03 14:44:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:44:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:44:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:02 AI_Player.update()	update
2017-01-03 14:44:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:44:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:44:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:44:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:44:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:02 AI_Player.update()	update
2017-01-03 14:44:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:44:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:44:02 AI_Player.update()	Search took2ms
2017-01-03 14:44:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:44:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:02 AI_Player.update()		110,	1010,	111,	1100,	111,	11,	11
2017-01-03 14:44:02 AI_Player.update()		1010,	111,	1110,	101,	1100,	110,	110
2017-01-03 14:44:02 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1010,	1011
2017-01-03 14:44:02 AI_Player.update()		11,	11,	11,	110,	1100,	1010,	1100
2017-01-03 14:44:02 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 14:44:02 AI_Player.update()		101,	101,	111,	1001,	1001,	110,	1010
2017-01-03 14:44:02 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-03 14:44:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:44:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:44:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:02 AI_Player.update()	update
2017-01-03 14:44:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:44:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:44:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:44:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:44:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:44:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:02 AI_Player.update()	update
2017-01-03 14:44:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:44:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:44:02 AI_Player.update()	Search took1ms
2017-01-03 14:44:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:44:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:02 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-03 14:44:02 AI_Player.update()		1010,	111,	1110,	101,	1100,	1010,	110
2017-01-03 14:44:02 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1010,	1011
2017-01-03 14:44:02 AI_Player.update()		11,	11,	11,	110,	1100,	110,	1100
2017-01-03 14:44:02 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 14:44:02 AI_Player.update()		101,	101,	111,	1001,	1001,	1010,	1010
2017-01-03 14:44:02 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-03 14:44:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:44:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:44:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:02 AI_Player.update()	update
2017-01-03 14:44:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:44:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:44:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:44:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:44:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:03 AI_Player.update()	update
2017-01-03 14:44:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:44:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:44:03 AI_Player.update()	Search took2ms
2017-01-03 14:44:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:44:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:03 AI_Player.update()		110,	111,	111,	1100,	111,	110,	11
2017-01-03 14:44:03 AI_Player.update()		1010,	1010,	1110,	101,	1100,	1010,	110
2017-01-03 14:44:03 AI_Player.update()		1110,	11,	1110,	1011,	111,	1010,	1011
2017-01-03 14:44:03 AI_Player.update()		11,	101,	11,	110,	1100,	110,	1100
2017-01-03 14:44:03 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 14:44:03 AI_Player.update()		101,	110,	111,	1001,	1001,	1010,	1010
2017-01-03 14:44:03 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-03 14:44:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:44:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:44:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:03 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:03 AI_Player.update()	update
2017-01-03 14:44:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:44:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:44:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:44:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:44:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:44:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:03 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:03 AI_Player.update()	update
2017-01-03 14:44:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:44:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:44:03 AI_Player.update()	Search took1ms
2017-01-03 14:44:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:44:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:03 AI_Player.update()		110,	111,	111,	1100,	111,	1010,	11
2017-01-03 14:44:03 AI_Player.update()		1010,	1010,	1110,	101,	1100,	1010,	110
2017-01-03 14:44:03 AI_Player.update()		1110,	11,	1110,	1011,	111,	110,	1011
2017-01-03 14:44:03 AI_Player.update()		11,	101,	11,	110,	1100,	110,	1100
2017-01-03 14:44:03 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-03 14:44:03 AI_Player.update()		101,	110,	111,	1001,	1001,	11,	1010
2017-01-03 14:44:03 AI_Player.update()		1100,	1010,	1101,	11,	1101,	110,	1001
2017-01-03 14:44:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:44:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:44:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:03 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:03 AI_Player.update()	update
2017-01-03 14:44:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:44:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:44:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:44:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:44:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:03 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:03 AI_Player.update()	update
2017-01-03 14:44:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:44:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:44:03 AI_Player.update()	Search took2ms
2017-01-03 14:44:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:44:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:03 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-03 14:44:03 AI_Player.update()		1010,	11,	1110,	101,	1100,	1010,	110
2017-01-03 14:44:03 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 14:44:03 AI_Player.update()		11,	101,	11,	110,	1100,	110,	1100
2017-01-03 14:44:03 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-03 14:44:03 AI_Player.update()		101,	1010,	111,	1001,	1001,	11,	1010
2017-01-03 14:44:03 AI_Player.update()		1100,	111,	1101,	11,	1101,	110,	1001
2017-01-03 14:44:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:44:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:44:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:03 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:03 AI_Player.update()	update
2017-01-03 14:44:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:44:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:44:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:44:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:44:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:44:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:03 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:03 AI_Player.update()	update
2017-01-03 14:44:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:44:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:44:03 AI_Player.update()	Search took1ms
2017-01-03 14:44:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:44:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:03 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-03 14:44:03 AI_Player.update()		1010,	11,	1110,	101,	1100,	110,	110
2017-01-03 14:44:03 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 14:44:03 AI_Player.update()		11,	101,	11,	110,	1100,	1010,	1100
2017-01-03 14:44:03 AI_Player.update()		1110,	110,	1101,	11,	1011,	11,	1011
2017-01-03 14:44:03 AI_Player.update()		101,	1010,	111,	1001,	1001,	110,	1010
2017-01-03 14:44:03 AI_Player.update()		1100,	111,	1101,	11,	1101,	1010,	1001
2017-01-03 14:44:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:44:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:44:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:03 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:03 AI_Player.update()	update
2017-01-03 14:44:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:44:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:44:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:44:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:44:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:03 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:03 AI_Player.update()	update
2017-01-03 14:44:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:44:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:44:03 AI_Player.update()	Search took2ms
2017-01-03 14:44:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:44:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:03 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-03 14:44:03 AI_Player.update()		1010,	101,	1110,	101,	1100,	110,	110
2017-01-03 14:44:03 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 14:44:03 AI_Player.update()		11,	110,	11,	110,	1100,	1010,	1100
2017-01-03 14:44:03 AI_Player.update()		1110,	1010,	1101,	11,	1011,	11,	1011
2017-01-03 14:44:03 AI_Player.update()		101,	111,	111,	1001,	1001,	110,	1010
2017-01-03 14:44:03 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-03 14:44:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:44:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:44:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:03 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:04 AI_Player.update()	update
2017-01-03 14:44:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:44:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:44:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:44:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:44:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:44:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:04 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:04 AI_Player.update()	update
2017-01-03 14:44:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:44:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:44:04 AI_Player.update()	Search took1ms
2017-01-03 14:44:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:44:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:04 AI_Player.update()		110,	11,	111,	1100,	111,	110,	11
2017-01-03 14:44:04 AI_Player.update()		1010,	101,	1110,	101,	1100,	110,	110
2017-01-03 14:44:04 AI_Player.update()		1110,	101,	1110,	1011,	111,	1010,	1011
2017-01-03 14:44:04 AI_Player.update()		11,	110,	11,	110,	1100,	11,	1100
2017-01-03 14:44:04 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-03 14:44:04 AI_Player.update()		101,	111,	111,	1001,	1001,	1010,	1010
2017-01-03 14:44:04 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-03 14:44:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:44:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:44:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:04 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:04 AI_Player.update()	update
2017-01-03 14:44:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:44:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:44:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:44:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:44:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:04 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:04 AI_Player.update()	update
2017-01-03 14:44:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:44:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:44:04 AI_Player.update()	Search took2ms
2017-01-03 14:44:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:44:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:04 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:44:04 AI_Player.update()		1010,	101,	1110,	101,	1100,	110,	110
2017-01-03 14:44:04 AI_Player.update()		1110,	110,	1110,	1011,	111,	1010,	1011
2017-01-03 14:44:04 AI_Player.update()		11,	1010,	11,	110,	1100,	11,	1100
2017-01-03 14:44:04 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-03 14:44:04 AI_Player.update()		101,	1010,	111,	1001,	1001,	1010,	1010
2017-01-03 14:44:04 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-03 14:44:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:44:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:44:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:04 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:04 AI_Player.update()	update
2017-01-03 14:44:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:44:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:44:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:44:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:44:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:44:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:04 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:04 AI_Player.update()	update
2017-01-03 14:44:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:44:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:44:04 AI_Player.update()	Search took1ms
2017-01-03 14:44:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:44:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:04 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:44:04 AI_Player.update()		1010,	101,	1110,	101,	1100,	1010,	110
2017-01-03 14:44:04 AI_Player.update()		1110,	110,	1110,	1011,	111,	11,	1011
2017-01-03 14:44:04 AI_Player.update()		11,	1010,	11,	110,	1100,	110,	1100
2017-01-03 14:44:04 AI_Player.update()		1110,	111,	1101,	11,	1011,	1010,	1011
2017-01-03 14:44:04 AI_Player.update()		101,	1010,	111,	1001,	1001,	1010,	1010
2017-01-03 14:44:04 AI_Player.update()		1100,	11,	1101,	11,	1101,	110,	1001
2017-01-03 14:44:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:44:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:44:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:04 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:04 AI_Player.update()	update
2017-01-03 14:44:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:44:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:44:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:44:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:44:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:04 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:04 AI_Player.update()	update
2017-01-03 14:44:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:44:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:44:04 AI_Player.update()	Search took2ms
2017-01-03 14:44:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:44:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:04 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 14:44:04 AI_Player.update()		1010,	110,	1110,	101,	1100,	1010,	110
2017-01-03 14:44:04 AI_Player.update()		1110,	1010,	1110,	1011,	111,	11,	1011
2017-01-03 14:44:04 AI_Player.update()		11,	111,	11,	110,	1100,	110,	1100
2017-01-03 14:44:04 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-03 14:44:04 AI_Player.update()		101,	11,	111,	1001,	1001,	1010,	1010
2017-01-03 14:44:04 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:44:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:44:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:44:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:04 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:04 AI_Player.update()	update
2017-01-03 14:44:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:44:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:44:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:44:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:44:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:44:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:04 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:44:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:44:04 AI_Player.update()	update
2017-01-03 14:44:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:44:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:44:04 AI_Player.update()	Search took1ms
2017-01-03 14:44:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:44:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:04 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-03 14:44:04 AI_Player.update()		1010,	110,	1110,	101,	1100,	11,	110
2017-01-03 14:44:04 AI_Player.update()		1110,	1010,	1110,	1011,	111,	110,	1011
2017-01-03 14:44:04 AI_Player.update()		11,	111,	11,	110,	1100,	1010,	1100
2017-01-03 14:44:04 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-03 14:44:04 AI_Player.update()		101,	11,	111,	1001,	1001,	110,	1010
2017-01-03 14:44:04 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 14:44:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:44:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:44:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:44:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:44:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:44:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:44:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:44:04 GameBoard.setupTreasurePanel()	2 1
