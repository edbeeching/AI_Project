2017-01-03 14:40:03 GameBoard.<init>()	Hello World!
2017-01-03 14:40:03 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-03 14:40:03 QueryProlog.initialise()	setup(h1/h2). suceeded
2017-01-03 14:40:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:03 GameBoard.setupBoardFromString()	Board created
2017-01-03 14:40:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:40:03 GameBoard.initialise()	[map, chest, candle, book, gem]
2017-01-03 14:40:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:40:03 GameBoard.initialise()	[helmet, sword, ring, crown, fairy]
2017-01-03 14:40:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:03 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-03 14:40:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:40:03 GameBoard.setupTreasurePanel()	null
2017-01-03 14:40:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:40:03 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:40:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:40:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:40:03 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:40:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:40:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:40:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 14:40:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:40:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:40:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:40:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 14:40:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:03 AI_Player.update()	update
2017-01-03 14:40:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:03 AI_Player.update()	Search took1ms
2017-01-03 14:40:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:03 AI_Player.update()		110,	110,	111,	1001,	111,	110,	11
2017-01-03 14:40:03 AI_Player.update()		1110,	1011,	111,	1010,	1010,	1001,	101
2017-01-03 14:40:03 AI_Player.update()		1110,	11,	1110,	110,	111,	11,	1011
2017-01-03 14:40:03 AI_Player.update()		101,	1010,	101,	1101,	110,	101,	1001
2017-01-03 14:40:03 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1101,	1011
2017-01-03 14:40:03 AI_Player.update()		1001,	101,	11,	1101,	11,	1001,	101
2017-01-03 14:40:03 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-03 14:40:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:40:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:40:03 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:40:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:40:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:40:03 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:40:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:40:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:40:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 14:40:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:40:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:40:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:40:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 14:40:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:04 AI_Player.update()	update
2017-01-03 14:40:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:40:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:40:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 14:40:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:04 AI_Player.update()	update
2017-01-03 14:40:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:04 AI_Player.update()	Search took8ms
2017-01-03 14:40:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:04 AI_Player.update()		110,	110,	111,	1001,	111,	1001,	11
2017-01-03 14:40:04 AI_Player.update()		1110,	1011,	111,	1010,	1010,	11,	101
2017-01-03 14:40:04 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-03 14:40:04 AI_Player.update()		101,	1010,	101,	1101,	110,	1101,	1001
2017-01-03 14:40:04 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:40:04 AI_Player.update()		1001,	101,	11,	1101,	11,	101,	101
2017-01-03 14:40:04 AI_Player.update()		1100,	11,	1101,	1010,	1101,	110,	1001
2017-01-03 14:40:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:40:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:04 AI_Player.update()	update
2017-01-03 14:40:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:40:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:04 AI_Player.update()	update
2017-01-03 14:40:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:04 AI_Player.update()	Search took3ms
2017-01-03 14:40:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:04 AI_Player.update()		110,	1011,	111,	1001,	111,	1001,	11
2017-01-03 14:40:04 AI_Player.update()		1110,	11,	111,	1010,	1010,	11,	101
2017-01-03 14:40:04 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-03 14:40:04 AI_Player.update()		101,	1110,	101,	1101,	110,	1101,	1001
2017-01-03 14:40:04 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:40:04 AI_Player.update()		1001,	11,	11,	1101,	11,	101,	101
2017-01-03 14:40:04 AI_Player.update()		1100,	110,	1101,	1010,	1101,	110,	1001
2017-01-03 14:40:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:40:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:04 AI_Player.update()	update
2017-01-03 14:40:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:40:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 14:40:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:04 AI_Player.update()	update
2017-01-03 14:40:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:04 AI_Player.update()	Search took5ms
2017-01-03 14:40:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:04 AI_Player.update()		110,	1011,	111,	1001,	111,	11,	11
2017-01-03 14:40:04 AI_Player.update()		1110,	11,	111,	1010,	1010,	101,	101
2017-01-03 14:40:04 AI_Player.update()		1110,	1010,	1110,	110,	111,	1101,	1011
2017-01-03 14:40:04 AI_Player.update()		101,	1110,	101,	1101,	110,	1001,	1001
2017-01-03 14:40:04 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-03 14:40:04 AI_Player.update()		1001,	11,	11,	1101,	11,	110,	101
2017-01-03 14:40:04 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1001,	1001
2017-01-03 14:40:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:04 AI_Player.update()	update
2017-01-03 14:40:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:04 AI_Player.update()	update
2017-01-03 14:40:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:04 AI_Player.update()	Search took4ms
2017-01-03 14:40:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:04 AI_Player.update()		110,	1011,	111,	1001,	111,	101,	11
2017-01-03 14:40:04 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:04 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:04 AI_Player.update()		101,	1110,	101,	1101,	110,	101,	1001
2017-01-03 14:40:04 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:04 AI_Player.update()		1001,	11,	11,	1101,	11,	1001,	101
2017-01-03 14:40:04 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:04 AI_Player.update()	update
2017-01-03 14:40:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:04 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:05 AI_Player.update()	update
2017-01-03 14:40:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:05 AI_Player.update()	Search took5ms
2017-01-03 14:40:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:05 AI_Player.update()		110,	1011,	111,	1010,	111,	101,	11
2017-01-03 14:40:05 AI_Player.update()		1110,	11,	111,	110,	1010,	1101,	101
2017-01-03 14:40:05 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:05 AI_Player.update()		101,	1110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:05 AI_Player.update()		1110,	101,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:05 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:05 AI_Player.update()		1100,	110,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:05 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:05 AI_Player.update()	update
2017-01-03 14:40:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:05 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:05 AI_Player.update()	update
2017-01-03 14:40:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:05 AI_Player.update()	Search took5ms
2017-01-03 14:40:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:05 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:05 AI_Player.update()		1110,	1010,	111,	110,	1010,	1101,	101
2017-01-03 14:40:05 AI_Player.update()		1110,	1110,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:05 AI_Player.update()		101,	101,	101,	1010,	110,	101,	1001
2017-01-03 14:40:05 AI_Player.update()		1110,	11,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:05 AI_Player.update()		1001,	110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:05 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:05 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:05 AI_Player.update()	update
2017-01-03 14:40:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:05 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:05 AI_Player.update()	update
2017-01-03 14:40:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:05 AI_Player.update()	Search took5ms
2017-01-03 14:40:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:05 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-03 14:40:05 AI_Player.update()		1110,	1010,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:05 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:05 AI_Player.update()		101,	101,	101,	1101,	110,	101,	1001
2017-01-03 14:40:05 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:05 AI_Player.update()		1001,	110,	11,	1001,	11,	1001,	101
2017-01-03 14:40:05 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:05 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:05 AI_Player.update()	update
2017-01-03 14:40:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:05 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:05 AI_Player.update()	update
2017-01-03 14:40:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:05 AI_Player.update()	Search took5ms
2017-01-03 14:40:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:05 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-03 14:40:05 AI_Player.update()		1110,	1110,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:05 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:05 AI_Player.update()		101,	11,	101,	1101,	110,	101,	1001
2017-01-03 14:40:05 AI_Player.update()		1110,	110,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:05 AI_Player.update()		1001,	1011,	11,	1001,	11,	1001,	101
2017-01-03 14:40:05 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:05 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:05 AI_Player.update()	update
2017-01-03 14:40:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:05 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:05 AI_Player.update()	update
2017-01-03 14:40:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:05 AI_Player.update()	Search took10ms
2017-01-03 14:40:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:05 AI_Player.update()		110,	1010,	111,	1101,	111,	101,	11
2017-01-03 14:40:05 AI_Player.update()		1110,	1110,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:05 AI_Player.update()		1110,	101,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:05 AI_Player.update()		101,	11,	101,	1010,	110,	101,	1001
2017-01-03 14:40:05 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-03 14:40:05 AI_Player.update()		1001,	1011,	11,	1010,	11,	1001,	101
2017-01-03 14:40:05 AI_Player.update()		1100,	11,	1101,	110,	1101,	11,	1001
2017-01-03 14:40:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:05 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:06 AI_Player.update()	update
2017-01-03 14:40:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:06 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:06 AI_Player.update()	update
2017-01-03 14:40:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:06 AI_Player.update()	Search took5ms
2017-01-03 14:40:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:06 AI_Player.update()		110,	1110,	111,	1101,	111,	101,	11
2017-01-03 14:40:06 AI_Player.update()		1110,	101,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:06 AI_Player.update()		1110,	11,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:06 AI_Player.update()		101,	110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:06 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	110,	1011
2017-01-03 14:40:06 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:06 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-03 14:40:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:06 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:06 AI_Player.update()	update
2017-01-03 14:40:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:06 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:06 AI_Player.update()	update
2017-01-03 14:40:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:06 AI_Player.update()	Search took7ms
2017-01-03 14:40:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:06 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-03 14:40:06 AI_Player.update()		1110,	101,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:06 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:06 AI_Player.update()		101,	110,	101,	1001,	110,	101,	1001
2017-01-03 14:40:06 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:06 AI_Player.update()		1001,	11,	11,	110,	11,	1001,	101
2017-01-03 14:40:06 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:06 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:06 AI_Player.update()	update
2017-01-03 14:40:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:06 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:06 AI_Player.update()	update
2017-01-03 14:40:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:06 AI_Player.update()	Search took4ms
2017-01-03 14:40:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:06 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:40:06 AI_Player.update()		1110,	11,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:06 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:06 AI_Player.update()		101,	1011,	101,	1001,	110,	101,	1001
2017-01-03 14:40:06 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:06 AI_Player.update()		1001,	1010,	11,	110,	11,	1001,	101
2017-01-03 14:40:06 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:06 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:06 AI_Player.update()	update
2017-01-03 14:40:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:06 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:06 AI_Player.update()	update
2017-01-03 14:40:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:06 AI_Player.update()	Search took2ms
2017-01-03 14:40:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:06 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-03 14:40:06 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:06 AI_Player.update()		1110,	110,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:06 AI_Player.update()		101,	1011,	101,	1010,	110,	101,	1001
2017-01-03 14:40:06 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-03 14:40:06 AI_Player.update()		1001,	1010,	11,	1101,	11,	1001,	101
2017-01-03 14:40:06 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:06 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:06 AI_Player.update()	update
2017-01-03 14:40:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:06 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:07 AI_Player.update()	update
2017-01-03 14:40:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:07 AI_Player.update()	Search took6ms
2017-01-03 14:40:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:07 AI_Player.update()		110,	11,	111,	1101,	111,	101,	11
2017-01-03 14:40:07 AI_Player.update()		1110,	110,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:07 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:07 AI_Player.update()		101,	11,	101,	1010,	110,	101,	1001
2017-01-03 14:40:07 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-03 14:40:07 AI_Player.update()		1001,	1110,	11,	1101,	11,	1001,	101
2017-01-03 14:40:07 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:07 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:07 AI_Player.update()	update
2017-01-03 14:40:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:07 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:07 AI_Player.update()	update
2017-01-03 14:40:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:07 AI_Player.update()	Search took7ms
2017-01-03 14:40:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:07 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:07 AI_Player.update()		1110,	110,	111,	1001,	1010,	1101,	101
2017-01-03 14:40:07 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:07 AI_Player.update()		101,	11,	101,	110,	110,	101,	1001
2017-01-03 14:40:07 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:07 AI_Player.update()		1001,	1110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:07 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:07 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:07 AI_Player.update()	update
2017-01-03 14:40:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:07 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:07 AI_Player.update()	update
2017-01-03 14:40:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:07 AI_Player.update()	Search took3ms
2017-01-03 14:40:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:07 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-03 14:40:07 AI_Player.update()		1110,	1011,	111,	1001,	1010,	1101,	101
2017-01-03 14:40:07 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:07 AI_Player.update()		101,	1010,	101,	110,	110,	101,	1001
2017-01-03 14:40:07 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:07 AI_Player.update()		1001,	101,	11,	1010,	11,	1001,	101
2017-01-03 14:40:07 AI_Player.update()		1100,	11,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:07 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:07 AI_Player.update()	update
2017-01-03 14:40:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:07 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:07 AI_Player.update()	update
2017-01-03 14:40:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:07 AI_Player.update()	Search took6ms
2017-01-03 14:40:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:07 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-03 14:40:07 AI_Player.update()		1110,	1011,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:07 AI_Player.update()		1110,	11,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:07 AI_Player.update()		101,	1010,	101,	1101,	110,	101,	1001
2017-01-03 14:40:07 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:07 AI_Player.update()		1001,	101,	11,	1101,	11,	1001,	101
2017-01-03 14:40:07 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:07 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:07 AI_Player.update()	update
2017-01-03 14:40:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:07 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:07 AI_Player.update()	update
2017-01-03 14:40:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:07 AI_Player.update()	Search took2ms
2017-01-03 14:40:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:07 AI_Player.update()		110,	1011,	111,	1001,	111,	101,	11
2017-01-03 14:40:07 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:07 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:07 AI_Player.update()		101,	1110,	101,	1101,	110,	101,	1001
2017-01-03 14:40:07 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:07 AI_Player.update()		1001,	11,	11,	1101,	11,	1001,	101
2017-01-03 14:40:07 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:07 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:08 AI_Player.update()	update
2017-01-03 14:40:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:08 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:08 AI_Player.update()	update
2017-01-03 14:40:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:08 AI_Player.update()	Search took5ms
2017-01-03 14:40:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:08 AI_Player.update()		110,	1011,	111,	1010,	111,	101,	11
2017-01-03 14:40:08 AI_Player.update()		1110,	11,	111,	110,	1010,	1101,	101
2017-01-03 14:40:08 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:08 AI_Player.update()		101,	1110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:08 AI_Player.update()		1110,	101,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:08 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:08 AI_Player.update()		1100,	110,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:08 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:08 AI_Player.update()	update
2017-01-03 14:40:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:08 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:08 AI_Player.update()	update
2017-01-03 14:40:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:08 AI_Player.update()	Search took5ms
2017-01-03 14:40:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:08 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:08 AI_Player.update()		1110,	1010,	111,	110,	1010,	1101,	101
2017-01-03 14:40:08 AI_Player.update()		1110,	1110,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:08 AI_Player.update()		101,	101,	101,	1010,	110,	101,	1001
2017-01-03 14:40:08 AI_Player.update()		1110,	11,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:08 AI_Player.update()		1001,	110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:08 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:08 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:08 AI_Player.update()	update
2017-01-03 14:40:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:08 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:08 AI_Player.update()	update
2017-01-03 14:40:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:08 AI_Player.update()	Search took2ms
2017-01-03 14:40:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:08 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-03 14:40:08 AI_Player.update()		1110,	1010,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:08 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:08 AI_Player.update()		101,	101,	101,	1101,	110,	101,	1001
2017-01-03 14:40:08 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:08 AI_Player.update()		1001,	110,	11,	1001,	11,	1001,	101
2017-01-03 14:40:08 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:08 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:08 AI_Player.update()	update
2017-01-03 14:40:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:08 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:08 AI_Player.update()	update
2017-01-03 14:40:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:08 AI_Player.update()	Search took4ms
2017-01-03 14:40:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:08 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-03 14:40:08 AI_Player.update()		1110,	1110,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:08 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:08 AI_Player.update()		101,	11,	101,	1101,	110,	101,	1001
2017-01-03 14:40:08 AI_Player.update()		1110,	110,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:08 AI_Player.update()		1001,	1011,	11,	1001,	11,	1001,	101
2017-01-03 14:40:08 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:08 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:08 AI_Player.update()	update
2017-01-03 14:40:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:08 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:08 AI_Player.update()	update
2017-01-03 14:40:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:08 AI_Player.update()	Search took4ms
2017-01-03 14:40:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:08 AI_Player.update()		110,	1010,	111,	1101,	111,	101,	11
2017-01-03 14:40:08 AI_Player.update()		1110,	1110,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:08 AI_Player.update()		1110,	101,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:08 AI_Player.update()		101,	11,	101,	1010,	110,	101,	1001
2017-01-03 14:40:08 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-03 14:40:08 AI_Player.update()		1001,	1011,	11,	1010,	11,	1001,	101
2017-01-03 14:40:08 AI_Player.update()		1100,	11,	1101,	110,	1101,	11,	1001
2017-01-03 14:40:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:08 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:09 AI_Player.update()	update
2017-01-03 14:40:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:09 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:09 AI_Player.update()	update
2017-01-03 14:40:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:09 AI_Player.update()	Search took5ms
2017-01-03 14:40:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:09 AI_Player.update()		110,	1110,	111,	1101,	111,	101,	11
2017-01-03 14:40:09 AI_Player.update()		1110,	101,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:09 AI_Player.update()		1110,	11,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:09 AI_Player.update()		101,	110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:09 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	110,	1011
2017-01-03 14:40:09 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:09 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-03 14:40:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:09 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:09 AI_Player.update()	update
2017-01-03 14:40:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:09 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:09 AI_Player.update()	update
2017-01-03 14:40:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:09 AI_Player.update()	Search took7ms
2017-01-03 14:40:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:09 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-03 14:40:09 AI_Player.update()		1110,	101,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:09 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:09 AI_Player.update()		101,	110,	101,	1001,	110,	101,	1001
2017-01-03 14:40:09 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:09 AI_Player.update()		1001,	11,	11,	110,	11,	1001,	101
2017-01-03 14:40:09 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:09 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:09 AI_Player.update()	update
2017-01-03 14:40:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:09 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:09 AI_Player.update()	update
2017-01-03 14:40:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:09 AI_Player.update()	Search took4ms
2017-01-03 14:40:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:09 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:40:09 AI_Player.update()		1110,	11,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:09 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:09 AI_Player.update()		101,	1011,	101,	1001,	110,	101,	1001
2017-01-03 14:40:09 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:09 AI_Player.update()		1001,	1010,	11,	110,	11,	1001,	101
2017-01-03 14:40:09 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:09 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:09 AI_Player.update()	update
2017-01-03 14:40:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:09 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:09 AI_Player.update()	update
2017-01-03 14:40:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:09 AI_Player.update()	Search took5ms
2017-01-03 14:40:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:09 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-03 14:40:09 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:09 AI_Player.update()		1110,	110,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:09 AI_Player.update()		101,	1011,	101,	1010,	110,	101,	1001
2017-01-03 14:40:09 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-03 14:40:09 AI_Player.update()		1001,	1010,	11,	1101,	11,	1001,	101
2017-01-03 14:40:09 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:09 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:09 AI_Player.update()	update
2017-01-03 14:40:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:09 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:10 AI_Player.update()	update
2017-01-03 14:40:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:10 AI_Player.update()	Search took6ms
2017-01-03 14:40:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:10 AI_Player.update()		110,	11,	111,	1101,	111,	101,	11
2017-01-03 14:40:10 AI_Player.update()		1110,	110,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:10 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:10 AI_Player.update()		101,	11,	101,	1010,	110,	101,	1001
2017-01-03 14:40:10 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-03 14:40:10 AI_Player.update()		1001,	1110,	11,	1101,	11,	1001,	101
2017-01-03 14:40:10 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:10 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:10 AI_Player.update()	update
2017-01-03 14:40:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:10 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:10 AI_Player.update()	update
2017-01-03 14:40:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:10 AI_Player.update()	Search took8ms
2017-01-03 14:40:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:10 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:10 AI_Player.update()		1110,	110,	111,	1001,	1010,	1101,	101
2017-01-03 14:40:10 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:10 AI_Player.update()		101,	11,	101,	110,	110,	101,	1001
2017-01-03 14:40:10 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:10 AI_Player.update()		1001,	1110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:10 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:10 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:10 AI_Player.update()	update
2017-01-03 14:40:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:10 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:10 AI_Player.update()	update
2017-01-03 14:40:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:10 AI_Player.update()	Search took6ms
2017-01-03 14:40:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:10 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-03 14:40:10 AI_Player.update()		1110,	1011,	111,	1001,	1010,	1101,	101
2017-01-03 14:40:10 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:10 AI_Player.update()		101,	1010,	101,	110,	110,	101,	1001
2017-01-03 14:40:10 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:10 AI_Player.update()		1001,	101,	11,	1010,	11,	1001,	101
2017-01-03 14:40:10 AI_Player.update()		1100,	11,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:10 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:10 AI_Player.update()	update
2017-01-03 14:40:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:10 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:10 AI_Player.update()	update
2017-01-03 14:40:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:10 AI_Player.update()	Search took6ms
2017-01-03 14:40:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:10 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-03 14:40:10 AI_Player.update()		1110,	1011,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:10 AI_Player.update()		1110,	11,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:10 AI_Player.update()		101,	1010,	101,	1101,	110,	101,	1001
2017-01-03 14:40:10 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:10 AI_Player.update()		1001,	101,	11,	1101,	11,	1001,	101
2017-01-03 14:40:10 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:10 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:10 AI_Player.update()	update
2017-01-03 14:40:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:10 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:10 AI_Player.update()	update
2017-01-03 14:40:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:10 AI_Player.update()	Search took5ms
2017-01-03 14:40:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:10 AI_Player.update()		110,	1011,	111,	1001,	111,	101,	11
2017-01-03 14:40:10 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:10 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:10 AI_Player.update()		101,	1110,	101,	1101,	110,	101,	1001
2017-01-03 14:40:10 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:10 AI_Player.update()		1001,	11,	11,	1101,	11,	1001,	101
2017-01-03 14:40:10 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:10 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:11 AI_Player.update()	update
2017-01-03 14:40:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:11 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:11 AI_Player.update()	update
2017-01-03 14:40:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:11 AI_Player.update()	Search took5ms
2017-01-03 14:40:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:11 AI_Player.update()		110,	1011,	111,	1010,	111,	101,	11
2017-01-03 14:40:11 AI_Player.update()		1110,	11,	111,	110,	1010,	1101,	101
2017-01-03 14:40:11 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:11 AI_Player.update()		101,	1110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:11 AI_Player.update()		1110,	101,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:11 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:11 AI_Player.update()		1100,	110,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:11 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:11 AI_Player.update()	update
2017-01-03 14:40:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:11 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:11 AI_Player.update()	update
2017-01-03 14:40:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:11 AI_Player.update()	Search took6ms
2017-01-03 14:40:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:11 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:11 AI_Player.update()		1110,	1010,	111,	110,	1010,	1101,	101
2017-01-03 14:40:11 AI_Player.update()		1110,	1110,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:11 AI_Player.update()		101,	101,	101,	1010,	110,	101,	1001
2017-01-03 14:40:11 AI_Player.update()		1110,	11,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:11 AI_Player.update()		1001,	110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:11 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:11 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:11 AI_Player.update()	update
2017-01-03 14:40:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:11 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:11 AI_Player.update()	update
2017-01-03 14:40:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:11 AI_Player.update()	Search took6ms
2017-01-03 14:40:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:11 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-03 14:40:11 AI_Player.update()		1110,	1010,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:11 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:11 AI_Player.update()		101,	101,	101,	1101,	110,	101,	1001
2017-01-03 14:40:11 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:11 AI_Player.update()		1001,	110,	11,	1001,	11,	1001,	101
2017-01-03 14:40:11 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:11 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:11 AI_Player.update()	update
2017-01-03 14:40:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:11 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:11 AI_Player.update()	update
2017-01-03 14:40:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:11 AI_Player.update()	Search took5ms
2017-01-03 14:40:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:11 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-03 14:40:11 AI_Player.update()		1110,	1110,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:11 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:11 AI_Player.update()		101,	11,	101,	1101,	110,	101,	1001
2017-01-03 14:40:11 AI_Player.update()		1110,	110,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:11 AI_Player.update()		1001,	1011,	11,	1001,	11,	1001,	101
2017-01-03 14:40:11 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:11 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:11 AI_Player.update()	update
2017-01-03 14:40:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:11 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:11 AI_Player.update()	update
2017-01-03 14:40:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:11 AI_Player.update()	Search took6ms
2017-01-03 14:40:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:11 AI_Player.update()		110,	1010,	111,	1101,	111,	101,	11
2017-01-03 14:40:11 AI_Player.update()		1110,	1110,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:11 AI_Player.update()		1110,	101,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:11 AI_Player.update()		101,	11,	101,	1010,	110,	101,	1001
2017-01-03 14:40:11 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-03 14:40:11 AI_Player.update()		1001,	1011,	11,	1010,	11,	1001,	101
2017-01-03 14:40:11 AI_Player.update()		1100,	11,	1101,	110,	1101,	11,	1001
2017-01-03 14:40:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:12 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:12 AI_Player.update()	update
2017-01-03 14:40:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:12 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:12 AI_Player.update()	update
2017-01-03 14:40:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:12 AI_Player.update()	Search took2ms
2017-01-03 14:40:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:12 AI_Player.update()		110,	1110,	111,	1101,	111,	101,	11
2017-01-03 14:40:12 AI_Player.update()		1110,	101,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:12 AI_Player.update()		1110,	11,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:12 AI_Player.update()		101,	110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:12 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	110,	1011
2017-01-03 14:40:12 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:12 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-03 14:40:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:12 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:12 AI_Player.update()	update
2017-01-03 14:40:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:12 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:12 AI_Player.update()	update
2017-01-03 14:40:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:12 AI_Player.update()	Search took8ms
2017-01-03 14:40:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:12 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-03 14:40:12 AI_Player.update()		1110,	101,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:12 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:12 AI_Player.update()		101,	110,	101,	1001,	110,	101,	1001
2017-01-03 14:40:12 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:12 AI_Player.update()		1001,	11,	11,	110,	11,	1001,	101
2017-01-03 14:40:12 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:12 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:12 AI_Player.update()	update
2017-01-03 14:40:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:12 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:12 AI_Player.update()	update
2017-01-03 14:40:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:12 AI_Player.update()	Search took2ms
2017-01-03 14:40:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:12 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:40:12 AI_Player.update()		1110,	11,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:12 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:12 AI_Player.update()		101,	1011,	101,	1001,	110,	101,	1001
2017-01-03 14:40:12 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:12 AI_Player.update()		1001,	1010,	11,	110,	11,	1001,	101
2017-01-03 14:40:12 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:12 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:12 AI_Player.update()	update
2017-01-03 14:40:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:12 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:12 AI_Player.update()	update
2017-01-03 14:40:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:12 AI_Player.update()	Search took2ms
2017-01-03 14:40:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:12 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-03 14:40:12 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:12 AI_Player.update()		1110,	110,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:12 AI_Player.update()		101,	1011,	101,	1010,	110,	101,	1001
2017-01-03 14:40:12 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-03 14:40:12 AI_Player.update()		1001,	1010,	11,	1101,	11,	1001,	101
2017-01-03 14:40:12 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:12 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:12 AI_Player.update()	update
2017-01-03 14:40:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:12 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:13 AI_Player.update()	update
2017-01-03 14:40:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:13 AI_Player.update()	Search took7ms
2017-01-03 14:40:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:13 AI_Player.update()		110,	11,	111,	1101,	111,	101,	11
2017-01-03 14:40:13 AI_Player.update()		1110,	110,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:13 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:13 AI_Player.update()		101,	11,	101,	1010,	110,	101,	1001
2017-01-03 14:40:13 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-03 14:40:13 AI_Player.update()		1001,	1110,	11,	1101,	11,	1001,	101
2017-01-03 14:40:13 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:13 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:13 AI_Player.update()	update
2017-01-03 14:40:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:13 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:13 AI_Player.update()	update
2017-01-03 14:40:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:13 AI_Player.update()	Search took5ms
2017-01-03 14:40:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:13 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:13 AI_Player.update()		1110,	110,	111,	1001,	1010,	1101,	101
2017-01-03 14:40:13 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:13 AI_Player.update()		101,	11,	101,	110,	110,	101,	1001
2017-01-03 14:40:13 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:13 AI_Player.update()		1001,	1110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:13 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:13 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:13 AI_Player.update()	update
2017-01-03 14:40:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:13 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:13 AI_Player.update()	update
2017-01-03 14:40:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:13 AI_Player.update()	Search took3ms
2017-01-03 14:40:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:13 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-03 14:40:13 AI_Player.update()		1110,	1011,	111,	1001,	1010,	1101,	101
2017-01-03 14:40:13 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:13 AI_Player.update()		101,	1010,	101,	110,	110,	101,	1001
2017-01-03 14:40:13 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:13 AI_Player.update()		1001,	101,	11,	1010,	11,	1001,	101
2017-01-03 14:40:13 AI_Player.update()		1100,	11,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:13 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:13 AI_Player.update()	update
2017-01-03 14:40:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:13 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:13 AI_Player.update()	update
2017-01-03 14:40:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:13 AI_Player.update()	Search took6ms
2017-01-03 14:40:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:13 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-03 14:40:13 AI_Player.update()		1110,	1011,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:13 AI_Player.update()		1110,	11,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:13 AI_Player.update()		101,	1010,	101,	1101,	110,	101,	1001
2017-01-03 14:40:13 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:13 AI_Player.update()		1001,	101,	11,	1101,	11,	1001,	101
2017-01-03 14:40:13 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:13 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:13 AI_Player.update()	update
2017-01-03 14:40:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:13 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:13 AI_Player.update()	update
2017-01-03 14:40:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:13 AI_Player.update()	Search took3ms
2017-01-03 14:40:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:13 AI_Player.update()		110,	1011,	111,	1001,	111,	101,	11
2017-01-03 14:40:13 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:13 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:13 AI_Player.update()		101,	1110,	101,	1101,	110,	101,	1001
2017-01-03 14:40:13 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:13 AI_Player.update()		1001,	11,	11,	1101,	11,	1001,	101
2017-01-03 14:40:13 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:13 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:14 AI_Player.update()	update
2017-01-03 14:40:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:14 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:14 AI_Player.update()	update
2017-01-03 14:40:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:14 AI_Player.update()	Search took5ms
2017-01-03 14:40:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:14 AI_Player.update()		110,	1011,	111,	1010,	111,	101,	11
2017-01-03 14:40:14 AI_Player.update()		1110,	11,	111,	110,	1010,	1101,	101
2017-01-03 14:40:14 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:14 AI_Player.update()		101,	1110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:14 AI_Player.update()		1110,	101,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:14 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:14 AI_Player.update()		1100,	110,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:14 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:14 AI_Player.update()	update
2017-01-03 14:40:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:14 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:14 AI_Player.update()	update
2017-01-03 14:40:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:14 AI_Player.update()	Search took5ms
2017-01-03 14:40:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:14 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:14 AI_Player.update()		1110,	1010,	111,	110,	1010,	1101,	101
2017-01-03 14:40:14 AI_Player.update()		1110,	1110,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:14 AI_Player.update()		101,	101,	101,	1010,	110,	101,	1001
2017-01-03 14:40:14 AI_Player.update()		1110,	11,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:14 AI_Player.update()		1001,	110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:14 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:14 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:14 AI_Player.update()	update
2017-01-03 14:40:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:14 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:14 AI_Player.update()	update
2017-01-03 14:40:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:14 AI_Player.update()	Search took3ms
2017-01-03 14:40:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:14 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-03 14:40:14 AI_Player.update()		1110,	1010,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:14 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:14 AI_Player.update()		101,	101,	101,	1101,	110,	101,	1001
2017-01-03 14:40:14 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:14 AI_Player.update()		1001,	110,	11,	1001,	11,	1001,	101
2017-01-03 14:40:14 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:14 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:14 AI_Player.update()	update
2017-01-03 14:40:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:14 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:14 AI_Player.update()	update
2017-01-03 14:40:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:14 AI_Player.update()	Search took3ms
2017-01-03 14:40:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:14 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-03 14:40:14 AI_Player.update()		1110,	1110,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:14 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:14 AI_Player.update()		101,	11,	101,	1101,	110,	101,	1001
2017-01-03 14:40:14 AI_Player.update()		1110,	110,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:14 AI_Player.update()		1001,	1011,	11,	1001,	11,	1001,	101
2017-01-03 14:40:14 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:14 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:14 AI_Player.update()	update
2017-01-03 14:40:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:14 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:14 AI_Player.update()	update
2017-01-03 14:40:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:14 AI_Player.update()	Search took9ms
2017-01-03 14:40:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:14 AI_Player.update()		110,	1010,	111,	1101,	111,	101,	11
2017-01-03 14:40:14 AI_Player.update()		1110,	1110,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:14 AI_Player.update()		1110,	101,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:14 AI_Player.update()		101,	11,	101,	1010,	110,	101,	1001
2017-01-03 14:40:14 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-03 14:40:14 AI_Player.update()		1001,	1011,	11,	1010,	11,	1001,	101
2017-01-03 14:40:14 AI_Player.update()		1100,	11,	1101,	110,	1101,	11,	1001
2017-01-03 14:40:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:14 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:15 AI_Player.update()	update
2017-01-03 14:40:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:15 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:15 AI_Player.update()	update
2017-01-03 14:40:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:15 AI_Player.update()	Search took6ms
2017-01-03 14:40:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:15 AI_Player.update()		110,	1110,	111,	1101,	111,	101,	11
2017-01-03 14:40:15 AI_Player.update()		1110,	101,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:15 AI_Player.update()		1110,	11,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:15 AI_Player.update()		101,	110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:15 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	110,	1011
2017-01-03 14:40:15 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:15 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-03 14:40:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:15 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:15 AI_Player.update()	update
2017-01-03 14:40:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:15 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:15 AI_Player.update()	update
2017-01-03 14:40:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:15 AI_Player.update()	Search took5ms
2017-01-03 14:40:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:15 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-03 14:40:15 AI_Player.update()		1110,	101,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:15 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:15 AI_Player.update()		101,	110,	101,	1001,	110,	101,	1001
2017-01-03 14:40:15 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:15 AI_Player.update()		1001,	11,	11,	110,	11,	1001,	101
2017-01-03 14:40:15 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:15 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:15 AI_Player.update()	update
2017-01-03 14:40:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:15 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:15 AI_Player.update()	update
2017-01-03 14:40:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:15 AI_Player.update()	Search took4ms
2017-01-03 14:40:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:15 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:40:15 AI_Player.update()		1110,	11,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:15 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:15 AI_Player.update()		101,	1011,	101,	1001,	110,	101,	1001
2017-01-03 14:40:15 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:15 AI_Player.update()		1001,	1010,	11,	110,	11,	1001,	101
2017-01-03 14:40:15 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:15 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:15 AI_Player.update()	update
2017-01-03 14:40:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:15 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:15 AI_Player.update()	update
2017-01-03 14:40:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:15 AI_Player.update()	Search took5ms
2017-01-03 14:40:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:15 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-03 14:40:15 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:15 AI_Player.update()		1110,	110,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:15 AI_Player.update()		101,	1011,	101,	1010,	110,	101,	1001
2017-01-03 14:40:15 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-03 14:40:15 AI_Player.update()		1001,	1010,	11,	1101,	11,	1001,	101
2017-01-03 14:40:15 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:15 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:15 AI_Player.update()	update
2017-01-03 14:40:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:15 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:16 AI_Player.update()	update
2017-01-03 14:40:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:16 AI_Player.update()	Search took5ms
2017-01-03 14:40:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:16 AI_Player.update()		110,	11,	111,	1101,	111,	101,	11
2017-01-03 14:40:16 AI_Player.update()		1110,	110,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:16 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:16 AI_Player.update()		101,	11,	101,	1010,	110,	101,	1001
2017-01-03 14:40:16 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-03 14:40:16 AI_Player.update()		1001,	1110,	11,	1101,	11,	1001,	101
2017-01-03 14:40:16 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:16 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:16 AI_Player.update()	update
2017-01-03 14:40:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:16 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:16 AI_Player.update()	update
2017-01-03 14:40:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:16 AI_Player.update()	Search took6ms
2017-01-03 14:40:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:16 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:16 AI_Player.update()		1110,	110,	111,	1001,	1010,	1101,	101
2017-01-03 14:40:16 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:16 AI_Player.update()		101,	11,	101,	110,	110,	101,	1001
2017-01-03 14:40:16 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:16 AI_Player.update()		1001,	1110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:16 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:16 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:16 AI_Player.update()	update
2017-01-03 14:40:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:16 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:16 AI_Player.update()	update
2017-01-03 14:40:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:16 AI_Player.update()	Search took5ms
2017-01-03 14:40:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:16 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-03 14:40:16 AI_Player.update()		1110,	1011,	111,	1001,	1010,	1101,	101
2017-01-03 14:40:16 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:16 AI_Player.update()		101,	1010,	101,	110,	110,	101,	1001
2017-01-03 14:40:16 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:16 AI_Player.update()		1001,	101,	11,	1010,	11,	1001,	101
2017-01-03 14:40:16 AI_Player.update()		1100,	11,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:16 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:16 AI_Player.update()	update
2017-01-03 14:40:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:16 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:16 AI_Player.update()	update
2017-01-03 14:40:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:16 AI_Player.update()	Search took6ms
2017-01-03 14:40:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:16 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-03 14:40:16 AI_Player.update()		1110,	1011,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:16 AI_Player.update()		1110,	11,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:16 AI_Player.update()		101,	1010,	101,	1101,	110,	101,	1001
2017-01-03 14:40:16 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:16 AI_Player.update()		1001,	101,	11,	1101,	11,	1001,	101
2017-01-03 14:40:16 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:16 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:16 AI_Player.update()	update
2017-01-03 14:40:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:16 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:16 AI_Player.update()	update
2017-01-03 14:40:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:16 AI_Player.update()	Search took5ms
2017-01-03 14:40:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:16 AI_Player.update()		110,	1011,	111,	1001,	111,	101,	11
2017-01-03 14:40:16 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:16 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:16 AI_Player.update()		101,	1110,	101,	1101,	110,	101,	1001
2017-01-03 14:40:16 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:16 AI_Player.update()		1001,	11,	11,	1101,	11,	1001,	101
2017-01-03 14:40:16 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:16 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:17 AI_Player.update()	update
2017-01-03 14:40:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:17 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:17 AI_Player.update()	update
2017-01-03 14:40:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:17 AI_Player.update()	Search took4ms
2017-01-03 14:40:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:17 AI_Player.update()		110,	1011,	111,	1010,	111,	101,	11
2017-01-03 14:40:17 AI_Player.update()		1110,	11,	111,	110,	1010,	1101,	101
2017-01-03 14:40:17 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:17 AI_Player.update()		101,	1110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:17 AI_Player.update()		1110,	101,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:17 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:17 AI_Player.update()		1100,	110,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:17 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:17 AI_Player.update()	update
2017-01-03 14:40:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:17 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:17 AI_Player.update()	update
2017-01-03 14:40:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:17 AI_Player.update()	Search took5ms
2017-01-03 14:40:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:17 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:17 AI_Player.update()		1110,	1010,	111,	110,	1010,	1101,	101
2017-01-03 14:40:17 AI_Player.update()		1110,	1110,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:17 AI_Player.update()		101,	101,	101,	1010,	110,	101,	1001
2017-01-03 14:40:17 AI_Player.update()		1110,	11,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:17 AI_Player.update()		1001,	110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:17 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:17 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:17 AI_Player.update()	update
2017-01-03 14:40:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:17 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:17 AI_Player.update()	update
2017-01-03 14:40:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:17 AI_Player.update()	Search took5ms
2017-01-03 14:40:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:17 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-03 14:40:17 AI_Player.update()		1110,	1010,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:17 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:17 AI_Player.update()		101,	101,	101,	1101,	110,	101,	1001
2017-01-03 14:40:17 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:17 AI_Player.update()		1001,	110,	11,	1001,	11,	1001,	101
2017-01-03 14:40:17 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:17 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:17 AI_Player.update()	update
2017-01-03 14:40:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:17 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:17 AI_Player.update()	update
2017-01-03 14:40:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:17 AI_Player.update()	Search took4ms
2017-01-03 14:40:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:17 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-03 14:40:17 AI_Player.update()		1110,	1110,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:17 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:17 AI_Player.update()		101,	11,	101,	1101,	110,	101,	1001
2017-01-03 14:40:17 AI_Player.update()		1110,	110,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:17 AI_Player.update()		1001,	1011,	11,	1001,	11,	1001,	101
2017-01-03 14:40:17 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:17 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:17 AI_Player.update()	update
2017-01-03 14:40:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:17 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:17 AI_Player.update()	update
2017-01-03 14:40:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:17 AI_Player.update()	Search took7ms
2017-01-03 14:40:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:17 AI_Player.update()		110,	1010,	111,	1101,	111,	101,	11
2017-01-03 14:40:17 AI_Player.update()		1110,	1110,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:17 AI_Player.update()		1110,	101,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:17 AI_Player.update()		101,	11,	101,	1010,	110,	101,	1001
2017-01-03 14:40:17 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-03 14:40:17 AI_Player.update()		1001,	1011,	11,	1010,	11,	1001,	101
2017-01-03 14:40:17 AI_Player.update()		1100,	11,	1101,	110,	1101,	11,	1001
2017-01-03 14:40:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:17 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:18 AI_Player.update()	update
2017-01-03 14:40:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:18 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:18 AI_Player.update()	update
2017-01-03 14:40:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:18 AI_Player.update()	Search took4ms
2017-01-03 14:40:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:18 AI_Player.update()		110,	1110,	111,	1101,	111,	101,	11
2017-01-03 14:40:18 AI_Player.update()		1110,	101,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:18 AI_Player.update()		1110,	11,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:18 AI_Player.update()		101,	110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:18 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	110,	1011
2017-01-03 14:40:18 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:18 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-03 14:40:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:18 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:18 AI_Player.update()	update
2017-01-03 14:40:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:18 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:18 AI_Player.update()	update
2017-01-03 14:40:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:18 AI_Player.update()	Search took8ms
2017-01-03 14:40:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:18 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-03 14:40:18 AI_Player.update()		1110,	101,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:18 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:18 AI_Player.update()		101,	110,	101,	1001,	110,	101,	1001
2017-01-03 14:40:18 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:18 AI_Player.update()		1001,	11,	11,	110,	11,	1001,	101
2017-01-03 14:40:18 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:18 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:18 AI_Player.update()	update
2017-01-03 14:40:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:18 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:18 AI_Player.update()	update
2017-01-03 14:40:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:18 AI_Player.update()	Search took4ms
2017-01-03 14:40:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:18 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:40:18 AI_Player.update()		1110,	11,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:18 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:18 AI_Player.update()		101,	1011,	101,	1001,	110,	101,	1001
2017-01-03 14:40:18 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:18 AI_Player.update()		1001,	1010,	11,	110,	11,	1001,	101
2017-01-03 14:40:18 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:18 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:18 AI_Player.update()	update
2017-01-03 14:40:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:18 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:18 AI_Player.update()	update
2017-01-03 14:40:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:18 AI_Player.update()	Search took2ms
2017-01-03 14:40:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:18 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-03 14:40:18 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:18 AI_Player.update()		1110,	110,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:18 AI_Player.update()		101,	1011,	101,	1010,	110,	101,	1001
2017-01-03 14:40:18 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-03 14:40:18 AI_Player.update()		1001,	1010,	11,	1101,	11,	1001,	101
2017-01-03 14:40:18 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:18 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:18 AI_Player.update()	update
2017-01-03 14:40:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:18 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:19 AI_Player.update()	update
2017-01-03 14:40:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:19 AI_Player.update()	Search took5ms
2017-01-03 14:40:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:19 AI_Player.update()		110,	11,	111,	1101,	111,	101,	11
2017-01-03 14:40:19 AI_Player.update()		1110,	110,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:19 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:19 AI_Player.update()		101,	11,	101,	1010,	110,	101,	1001
2017-01-03 14:40:19 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-03 14:40:19 AI_Player.update()		1001,	1110,	11,	1101,	11,	1001,	101
2017-01-03 14:40:19 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:19 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:19 AI_Player.update()	update
2017-01-03 14:40:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:19 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:19 AI_Player.update()	update
2017-01-03 14:40:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:19 AI_Player.update()	Search took7ms
2017-01-03 14:40:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:19 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:19 AI_Player.update()		1110,	110,	111,	1001,	1010,	1101,	101
2017-01-03 14:40:19 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:19 AI_Player.update()		101,	11,	101,	110,	110,	101,	1001
2017-01-03 14:40:19 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:19 AI_Player.update()		1001,	1110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:19 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:19 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:19 AI_Player.update()	update
2017-01-03 14:40:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:19 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:19 AI_Player.update()	update
2017-01-03 14:40:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:19 AI_Player.update()	Search took4ms
2017-01-03 14:40:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:19 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-03 14:40:19 AI_Player.update()		1110,	1011,	111,	1001,	1010,	1101,	101
2017-01-03 14:40:19 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:19 AI_Player.update()		101,	1010,	101,	110,	110,	101,	1001
2017-01-03 14:40:19 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:19 AI_Player.update()		1001,	101,	11,	1010,	11,	1001,	101
2017-01-03 14:40:19 AI_Player.update()		1100,	11,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:19 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:19 AI_Player.update()	update
2017-01-03 14:40:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:19 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:19 AI_Player.update()	update
2017-01-03 14:40:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:19 AI_Player.update()	Search took7ms
2017-01-03 14:40:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:19 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-03 14:40:19 AI_Player.update()		1110,	1011,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:19 AI_Player.update()		1110,	11,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:19 AI_Player.update()		101,	1010,	101,	1101,	110,	101,	1001
2017-01-03 14:40:19 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:19 AI_Player.update()		1001,	101,	11,	1101,	11,	1001,	101
2017-01-03 14:40:19 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:19 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:19 AI_Player.update()	update
2017-01-03 14:40:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:19 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:19 AI_Player.update()	update
2017-01-03 14:40:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:19 AI_Player.update()	Search took2ms
2017-01-03 14:40:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:19 AI_Player.update()		110,	1011,	111,	1001,	111,	101,	11
2017-01-03 14:40:19 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:19 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:19 AI_Player.update()		101,	1110,	101,	1101,	110,	101,	1001
2017-01-03 14:40:19 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:19 AI_Player.update()		1001,	11,	11,	1101,	11,	1001,	101
2017-01-03 14:40:19 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:19 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:20 AI_Player.update()	update
2017-01-03 14:40:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:20 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:20 AI_Player.update()	update
2017-01-03 14:40:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:20 AI_Player.update()	Search took8ms
2017-01-03 14:40:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:20 AI_Player.update()		110,	1011,	111,	1010,	111,	101,	11
2017-01-03 14:40:20 AI_Player.update()		1110,	11,	111,	110,	1010,	1101,	101
2017-01-03 14:40:20 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:20 AI_Player.update()		101,	1110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:20 AI_Player.update()		1110,	101,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:20 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:20 AI_Player.update()		1100,	110,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:20 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:20 AI_Player.update()	update
2017-01-03 14:40:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:20 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:20 AI_Player.update()	update
2017-01-03 14:40:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:20 AI_Player.update()	Search took4ms
2017-01-03 14:40:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:20 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:20 AI_Player.update()		1110,	1010,	111,	110,	1010,	1101,	101
2017-01-03 14:40:20 AI_Player.update()		1110,	1110,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:20 AI_Player.update()		101,	101,	101,	1010,	110,	101,	1001
2017-01-03 14:40:20 AI_Player.update()		1110,	11,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:20 AI_Player.update()		1001,	110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:20 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:20 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:20 AI_Player.update()	update
2017-01-03 14:40:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:20 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:20 AI_Player.update()	update
2017-01-03 14:40:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:20 AI_Player.update()	Search took5ms
2017-01-03 14:40:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:20 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-03 14:40:20 AI_Player.update()		1110,	1010,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:20 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:20 AI_Player.update()		101,	101,	101,	1101,	110,	101,	1001
2017-01-03 14:40:20 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:20 AI_Player.update()		1001,	110,	11,	1001,	11,	1001,	101
2017-01-03 14:40:20 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:20 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:20 AI_Player.update()	update
2017-01-03 14:40:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:20 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:20 AI_Player.update()	update
2017-01-03 14:40:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:20 AI_Player.update()	Search took3ms
2017-01-03 14:40:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:20 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-03 14:40:20 AI_Player.update()		1110,	1110,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:20 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:20 AI_Player.update()		101,	11,	101,	1101,	110,	101,	1001
2017-01-03 14:40:20 AI_Player.update()		1110,	110,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:20 AI_Player.update()		1001,	1011,	11,	1001,	11,	1001,	101
2017-01-03 14:40:20 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:20 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:20 AI_Player.update()	update
2017-01-03 14:40:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:20 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:21 AI_Player.update()	update
2017-01-03 14:40:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:21 AI_Player.update()	Search took6ms
2017-01-03 14:40:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:21 AI_Player.update()		110,	1010,	111,	1101,	111,	101,	11
2017-01-03 14:40:21 AI_Player.update()		1110,	1110,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:21 AI_Player.update()		1110,	101,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:21 AI_Player.update()		101,	11,	101,	1010,	110,	101,	1001
2017-01-03 14:40:21 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-03 14:40:21 AI_Player.update()		1001,	1011,	11,	1010,	11,	1001,	101
2017-01-03 14:40:21 AI_Player.update()		1100,	11,	1101,	110,	1101,	11,	1001
2017-01-03 14:40:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:21 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:21 AI_Player.update()	update
2017-01-03 14:40:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:21 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:21 AI_Player.update()	update
2017-01-03 14:40:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:21 AI_Player.update()	Search took3ms
2017-01-03 14:40:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:21 AI_Player.update()		110,	1110,	111,	1101,	111,	101,	11
2017-01-03 14:40:21 AI_Player.update()		1110,	101,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:21 AI_Player.update()		1110,	11,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:21 AI_Player.update()		101,	110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:21 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	110,	1011
2017-01-03 14:40:21 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:21 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-03 14:40:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:21 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:21 AI_Player.update()	update
2017-01-03 14:40:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:21 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:21 AI_Player.update()	update
2017-01-03 14:40:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:21 AI_Player.update()	Search took12ms
2017-01-03 14:40:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:21 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-03 14:40:21 AI_Player.update()		1110,	101,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:21 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:21 AI_Player.update()		101,	110,	101,	1001,	110,	101,	1001
2017-01-03 14:40:21 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:21 AI_Player.update()		1001,	11,	11,	110,	11,	1001,	101
2017-01-03 14:40:21 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:21 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:21 AI_Player.update()	update
2017-01-03 14:40:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:21 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:21 AI_Player.update()	update
2017-01-03 14:40:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:21 AI_Player.update()	Search took3ms
2017-01-03 14:40:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:21 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:40:21 AI_Player.update()		1110,	11,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:21 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:21 AI_Player.update()		101,	1011,	101,	1001,	110,	101,	1001
2017-01-03 14:40:21 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:21 AI_Player.update()		1001,	1010,	11,	110,	11,	1001,	101
2017-01-03 14:40:21 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:21 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:21 AI_Player.update()	update
2017-01-03 14:40:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:21 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:21 AI_Player.update()	update
2017-01-03 14:40:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:21 AI_Player.update()	Search took3ms
2017-01-03 14:40:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:21 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-03 14:40:21 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:21 AI_Player.update()		1110,	110,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:21 AI_Player.update()		101,	1011,	101,	1010,	110,	101,	1001
2017-01-03 14:40:21 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-03 14:40:21 AI_Player.update()		1001,	1010,	11,	1101,	11,	1001,	101
2017-01-03 14:40:21 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:21 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:21 AI_Player.update()	update
2017-01-03 14:40:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:21 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:22 AI_Player.update()	update
2017-01-03 14:40:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:22 AI_Player.update()	Search took5ms
2017-01-03 14:40:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:22 AI_Player.update()		110,	11,	111,	1101,	111,	101,	11
2017-01-03 14:40:22 AI_Player.update()		1110,	110,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:22 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:22 AI_Player.update()		101,	11,	101,	1010,	110,	101,	1001
2017-01-03 14:40:22 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-03 14:40:22 AI_Player.update()		1001,	1110,	11,	1101,	11,	1001,	101
2017-01-03 14:40:22 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:22 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:22 AI_Player.update()	update
2017-01-03 14:40:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:22 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:22 AI_Player.update()	update
2017-01-03 14:40:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:22 AI_Player.update()	Search took9ms
2017-01-03 14:40:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:22 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:22 AI_Player.update()		1110,	110,	111,	1001,	1010,	1101,	101
2017-01-03 14:40:22 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:22 AI_Player.update()		101,	11,	101,	110,	110,	101,	1001
2017-01-03 14:40:22 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:22 AI_Player.update()		1001,	1110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:22 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:22 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:22 AI_Player.update()	update
2017-01-03 14:40:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:22 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:22 AI_Player.update()	update
2017-01-03 14:40:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:22 AI_Player.update()	Search took7ms
2017-01-03 14:40:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:22 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-03 14:40:22 AI_Player.update()		1110,	1011,	111,	1001,	1010,	1101,	101
2017-01-03 14:40:22 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:22 AI_Player.update()		101,	1010,	101,	110,	110,	101,	1001
2017-01-03 14:40:22 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:22 AI_Player.update()		1001,	101,	11,	1010,	11,	1001,	101
2017-01-03 14:40:22 AI_Player.update()		1100,	11,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:22 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:22 AI_Player.update()	update
2017-01-03 14:40:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:22 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:22 AI_Player.update()	update
2017-01-03 14:40:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:22 AI_Player.update()	Search took4ms
2017-01-03 14:40:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:22 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-03 14:40:22 AI_Player.update()		1110,	1011,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:22 AI_Player.update()		1110,	11,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:22 AI_Player.update()		101,	1010,	101,	1101,	110,	101,	1001
2017-01-03 14:40:22 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:22 AI_Player.update()		1001,	101,	11,	1101,	11,	1001,	101
2017-01-03 14:40:22 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:22 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:22 AI_Player.update()	update
2017-01-03 14:40:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:22 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:22 AI_Player.update()	update
2017-01-03 14:40:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:22 AI_Player.update()	Search took2ms
2017-01-03 14:40:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:22 AI_Player.update()		110,	1011,	111,	1001,	111,	101,	11
2017-01-03 14:40:22 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:22 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:22 AI_Player.update()		101,	1110,	101,	1101,	110,	101,	1001
2017-01-03 14:40:22 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:22 AI_Player.update()		1001,	11,	11,	1101,	11,	1001,	101
2017-01-03 14:40:22 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:22 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:23 AI_Player.update()	update
2017-01-03 14:40:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:23 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:23 AI_Player.update()	update
2017-01-03 14:40:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:23 AI_Player.update()	Search took3ms
2017-01-03 14:40:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:23 AI_Player.update()		110,	1011,	111,	1010,	111,	101,	11
2017-01-03 14:40:23 AI_Player.update()		1110,	11,	111,	110,	1010,	1101,	101
2017-01-03 14:40:23 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:23 AI_Player.update()		101,	1110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:23 AI_Player.update()		1110,	101,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:23 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:23 AI_Player.update()		1100,	110,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:23 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:23 AI_Player.update()	update
2017-01-03 14:40:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:23 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:23 AI_Player.update()	update
2017-01-03 14:40:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:23 AI_Player.update()	Search took3ms
2017-01-03 14:40:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:23 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:23 AI_Player.update()		1110,	1010,	111,	110,	1010,	1101,	101
2017-01-03 14:40:23 AI_Player.update()		1110,	1110,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:23 AI_Player.update()		101,	101,	101,	1010,	110,	101,	1001
2017-01-03 14:40:23 AI_Player.update()		1110,	11,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:23 AI_Player.update()		1001,	110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:23 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:23 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:23 AI_Player.update()	update
2017-01-03 14:40:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:23 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:23 AI_Player.update()	update
2017-01-03 14:40:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:23 AI_Player.update()	Search took4ms
2017-01-03 14:40:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:23 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-03 14:40:23 AI_Player.update()		1110,	1010,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:23 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:23 AI_Player.update()		101,	101,	101,	1101,	110,	101,	1001
2017-01-03 14:40:23 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:23 AI_Player.update()		1001,	110,	11,	1001,	11,	1001,	101
2017-01-03 14:40:23 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:23 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:23 AI_Player.update()	update
2017-01-03 14:40:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:23 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:23 AI_Player.update()	update
2017-01-03 14:40:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:23 AI_Player.update()	Search took3ms
2017-01-03 14:40:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:23 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-03 14:40:23 AI_Player.update()		1110,	1110,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:23 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:23 AI_Player.update()		101,	11,	101,	1101,	110,	101,	1001
2017-01-03 14:40:23 AI_Player.update()		1110,	110,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:23 AI_Player.update()		1001,	1011,	11,	1001,	11,	1001,	101
2017-01-03 14:40:23 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:23 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:23 AI_Player.update()	update
2017-01-03 14:40:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:23 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:23 AI_Player.update()	update
2017-01-03 14:40:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:23 AI_Player.update()	Search took4ms
2017-01-03 14:40:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:23 AI_Player.update()		110,	1010,	111,	1101,	111,	101,	11
2017-01-03 14:40:23 AI_Player.update()		1110,	1110,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:23 AI_Player.update()		1110,	101,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:23 AI_Player.update()		101,	11,	101,	1010,	110,	101,	1001
2017-01-03 14:40:23 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-03 14:40:23 AI_Player.update()		1001,	1011,	11,	1010,	11,	1001,	101
2017-01-03 14:40:23 AI_Player.update()		1100,	11,	1101,	110,	1101,	11,	1001
2017-01-03 14:40:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:23 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:24 AI_Player.update()	update
2017-01-03 14:40:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:24 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:24 AI_Player.update()	update
2017-01-03 14:40:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:24 AI_Player.update()	Search took4ms
2017-01-03 14:40:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:24 AI_Player.update()		110,	1110,	111,	1101,	111,	101,	11
2017-01-03 14:40:24 AI_Player.update()		1110,	101,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:24 AI_Player.update()		1110,	11,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:24 AI_Player.update()		101,	110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:24 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	110,	1011
2017-01-03 14:40:24 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:24 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-03 14:40:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:24 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:24 AI_Player.update()	update
2017-01-03 14:40:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:24 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:24 AI_Player.update()	update
2017-01-03 14:40:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:24 AI_Player.update()	Search took6ms
2017-01-03 14:40:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:24 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-03 14:40:24 AI_Player.update()		1110,	101,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:24 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:24 AI_Player.update()		101,	110,	101,	1001,	110,	101,	1001
2017-01-03 14:40:24 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:24 AI_Player.update()		1001,	11,	11,	110,	11,	1001,	101
2017-01-03 14:40:24 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:24 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:24 AI_Player.update()	update
2017-01-03 14:40:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:24 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:24 AI_Player.update()	update
2017-01-03 14:40:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:24 AI_Player.update()	Search took3ms
2017-01-03 14:40:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:24 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:40:24 AI_Player.update()		1110,	11,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:24 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:24 AI_Player.update()		101,	1011,	101,	1001,	110,	101,	1001
2017-01-03 14:40:24 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:24 AI_Player.update()		1001,	1010,	11,	110,	11,	1001,	101
2017-01-03 14:40:24 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:24 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:24 AI_Player.update()	update
2017-01-03 14:40:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:24 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:24 AI_Player.update()	update
2017-01-03 14:40:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:24 AI_Player.update()	Search took5ms
2017-01-03 14:40:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:24 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-03 14:40:24 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:24 AI_Player.update()		1110,	110,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:24 AI_Player.update()		101,	1011,	101,	1010,	110,	101,	1001
2017-01-03 14:40:24 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-03 14:40:24 AI_Player.update()		1001,	1010,	11,	1101,	11,	1001,	101
2017-01-03 14:40:24 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:24 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:24 AI_Player.update()	update
2017-01-03 14:40:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:24 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:25 AI_Player.update()	update
2017-01-03 14:40:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:25 AI_Player.update()	Search took5ms
2017-01-03 14:40:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:25 AI_Player.update()		110,	11,	111,	1101,	111,	101,	11
2017-01-03 14:40:25 AI_Player.update()		1110,	110,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:25 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:25 AI_Player.update()		101,	11,	101,	1010,	110,	101,	1001
2017-01-03 14:40:25 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-03 14:40:25 AI_Player.update()		1001,	1110,	11,	1101,	11,	1001,	101
2017-01-03 14:40:25 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:25 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:25 AI_Player.update()	update
2017-01-03 14:40:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:25 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:25 AI_Player.update()	update
2017-01-03 14:40:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:25 AI_Player.update()	Search took5ms
2017-01-03 14:40:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:25 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:25 AI_Player.update()		1110,	110,	111,	1001,	1010,	1101,	101
2017-01-03 14:40:25 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:25 AI_Player.update()		101,	11,	101,	110,	110,	101,	1001
2017-01-03 14:40:25 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:25 AI_Player.update()		1001,	1110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:25 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:25 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:25 AI_Player.update()	update
2017-01-03 14:40:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:25 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:25 AI_Player.update()	update
2017-01-03 14:40:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:25 AI_Player.update()	Search took4ms
2017-01-03 14:40:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:25 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-03 14:40:25 AI_Player.update()		1110,	1011,	111,	1001,	1010,	1101,	101
2017-01-03 14:40:25 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:25 AI_Player.update()		101,	1010,	101,	110,	110,	101,	1001
2017-01-03 14:40:25 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:25 AI_Player.update()		1001,	101,	11,	1010,	11,	1001,	101
2017-01-03 14:40:25 AI_Player.update()		1100,	11,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:25 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:25 AI_Player.update()	update
2017-01-03 14:40:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:25 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:25 AI_Player.update()	update
2017-01-03 14:40:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:25 AI_Player.update()	Search took4ms
2017-01-03 14:40:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:25 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-03 14:40:25 AI_Player.update()		1110,	1011,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:25 AI_Player.update()		1110,	11,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:25 AI_Player.update()		101,	1010,	101,	1101,	110,	101,	1001
2017-01-03 14:40:25 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:25 AI_Player.update()		1001,	101,	11,	1101,	11,	1001,	101
2017-01-03 14:40:25 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:25 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:25 AI_Player.update()	update
2017-01-03 14:40:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:25 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:25 AI_Player.update()	update
2017-01-03 14:40:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:25 AI_Player.update()	Search took2ms
2017-01-03 14:40:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:25 AI_Player.update()		110,	1011,	111,	1001,	111,	101,	11
2017-01-03 14:40:25 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:25 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:25 AI_Player.update()		101,	1110,	101,	1101,	110,	101,	1001
2017-01-03 14:40:25 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:25 AI_Player.update()		1001,	11,	11,	1101,	11,	1001,	101
2017-01-03 14:40:25 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:25 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:25 AI_Player.update()	update
2017-01-03 14:40:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:25 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:26 AI_Player.update()	update
2017-01-03 14:40:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:26 AI_Player.update()	Search took4ms
2017-01-03 14:40:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:26 AI_Player.update()		110,	1011,	111,	1010,	111,	101,	11
2017-01-03 14:40:26 AI_Player.update()		1110,	11,	111,	110,	1010,	1101,	101
2017-01-03 14:40:26 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:26 AI_Player.update()		101,	1110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:26 AI_Player.update()		1110,	101,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:26 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:26 AI_Player.update()		1100,	110,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:26 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:26 AI_Player.update()	update
2017-01-03 14:40:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:26 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:26 AI_Player.update()	update
2017-01-03 14:40:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:26 AI_Player.update()	Search took5ms
2017-01-03 14:40:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:26 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:26 AI_Player.update()		1110,	1010,	111,	110,	1010,	1101,	101
2017-01-03 14:40:26 AI_Player.update()		1110,	1110,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:26 AI_Player.update()		101,	101,	101,	1010,	110,	101,	1001
2017-01-03 14:40:26 AI_Player.update()		1110,	11,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:26 AI_Player.update()		1001,	110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:26 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:26 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:26 AI_Player.update()	update
2017-01-03 14:40:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:26 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:26 AI_Player.update()	update
2017-01-03 14:40:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:26 AI_Player.update()	Search took3ms
2017-01-03 14:40:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:26 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-03 14:40:26 AI_Player.update()		1110,	1010,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:26 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:26 AI_Player.update()		101,	101,	101,	1101,	110,	101,	1001
2017-01-03 14:40:26 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:26 AI_Player.update()		1001,	110,	11,	1001,	11,	1001,	101
2017-01-03 14:40:26 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:26 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:26 AI_Player.update()	update
2017-01-03 14:40:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:26 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:26 AI_Player.update()	update
2017-01-03 14:40:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:26 AI_Player.update()	Search took2ms
2017-01-03 14:40:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:26 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-03 14:40:26 AI_Player.update()		1110,	1110,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:26 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:26 AI_Player.update()		101,	11,	101,	1101,	110,	101,	1001
2017-01-03 14:40:26 AI_Player.update()		1110,	110,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:26 AI_Player.update()		1001,	1011,	11,	1001,	11,	1001,	101
2017-01-03 14:40:26 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:26 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:26 AI_Player.update()	update
2017-01-03 14:40:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:26 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:26 AI_Player.update()	update
2017-01-03 14:40:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:26 AI_Player.update()	Search took4ms
2017-01-03 14:40:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:26 AI_Player.update()		110,	1010,	111,	1101,	111,	101,	11
2017-01-03 14:40:26 AI_Player.update()		1110,	1110,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:26 AI_Player.update()		1110,	101,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:26 AI_Player.update()		101,	11,	101,	1010,	110,	101,	1001
2017-01-03 14:40:26 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-03 14:40:26 AI_Player.update()		1001,	1011,	11,	1010,	11,	1001,	101
2017-01-03 14:40:26 AI_Player.update()		1100,	11,	1101,	110,	1101,	11,	1001
2017-01-03 14:40:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:26 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:27 AI_Player.update()	update
2017-01-03 14:40:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:27 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:27 AI_Player.update()	update
2017-01-03 14:40:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:27 AI_Player.update()	Search took3ms
2017-01-03 14:40:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:27 AI_Player.update()		110,	1110,	111,	1101,	111,	101,	11
2017-01-03 14:40:27 AI_Player.update()		1110,	101,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:27 AI_Player.update()		1110,	11,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:27 AI_Player.update()		101,	110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:27 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	110,	1011
2017-01-03 14:40:27 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:27 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-03 14:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:27 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:27 AI_Player.update()	update
2017-01-03 14:40:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:27 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:27 AI_Player.update()	update
2017-01-03 14:40:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:27 AI_Player.update()	Search took6ms
2017-01-03 14:40:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:27 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-03 14:40:27 AI_Player.update()		1110,	101,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:27 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:27 AI_Player.update()		101,	110,	101,	1001,	110,	101,	1001
2017-01-03 14:40:27 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:27 AI_Player.update()		1001,	11,	11,	110,	11,	1001,	101
2017-01-03 14:40:27 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:27 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:27 AI_Player.update()	update
2017-01-03 14:40:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:27 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:27 AI_Player.update()	update
2017-01-03 14:40:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:27 AI_Player.update()	Search took3ms
2017-01-03 14:40:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:27 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:40:27 AI_Player.update()		1110,	11,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:27 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:27 AI_Player.update()		101,	1011,	101,	1001,	110,	101,	1001
2017-01-03 14:40:27 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:27 AI_Player.update()		1001,	1010,	11,	110,	11,	1001,	101
2017-01-03 14:40:27 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:27 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:27 AI_Player.update()	update
2017-01-03 14:40:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:27 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:27 AI_Player.update()	update
2017-01-03 14:40:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:27 AI_Player.update()	Search took2ms
2017-01-03 14:40:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:27 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-03 14:40:27 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:27 AI_Player.update()		1110,	110,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:27 AI_Player.update()		101,	1011,	101,	1010,	110,	101,	1001
2017-01-03 14:40:27 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-03 14:40:27 AI_Player.update()		1001,	1010,	11,	1101,	11,	1001,	101
2017-01-03 14:40:27 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:27 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:27 AI_Player.update()	update
2017-01-03 14:40:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:27 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:27 AI_Player.update()	update
2017-01-03 14:40:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:27 AI_Player.update()	Search took4ms
2017-01-03 14:40:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:27 AI_Player.update()		110,	11,	111,	1101,	111,	101,	11
2017-01-03 14:40:27 AI_Player.update()		1110,	110,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:27 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:27 AI_Player.update()		101,	11,	101,	1010,	110,	101,	1001
2017-01-03 14:40:27 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-03 14:40:27 AI_Player.update()		1001,	1110,	11,	1101,	11,	1001,	101
2017-01-03 14:40:27 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:27 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:28 AI_Player.update()	update
2017-01-03 14:40:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:28 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:28 AI_Player.update()	update
2017-01-03 14:40:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:28 AI_Player.update()	Search took4ms
2017-01-03 14:40:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:28 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:28 AI_Player.update()		1110,	110,	111,	1001,	1010,	1101,	101
2017-01-03 14:40:28 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:28 AI_Player.update()		101,	11,	101,	110,	110,	101,	1001
2017-01-03 14:40:28 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:28 AI_Player.update()		1001,	1110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:28 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:28 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:28 AI_Player.update()	update
2017-01-03 14:40:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:28 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:28 AI_Player.update()	update
2017-01-03 14:40:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:28 AI_Player.update()	Search took3ms
2017-01-03 14:40:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:28 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-03 14:40:28 AI_Player.update()		1110,	1011,	111,	1001,	1010,	1101,	101
2017-01-03 14:40:28 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:28 AI_Player.update()		101,	1010,	101,	110,	110,	101,	1001
2017-01-03 14:40:28 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:28 AI_Player.update()		1001,	101,	11,	1010,	11,	1001,	101
2017-01-03 14:40:28 AI_Player.update()		1100,	11,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:28 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:28 AI_Player.update()	update
2017-01-03 14:40:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:28 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:28 AI_Player.update()	update
2017-01-03 14:40:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:28 AI_Player.update()	Search took3ms
2017-01-03 14:40:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:28 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-03 14:40:28 AI_Player.update()		1110,	1011,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:28 AI_Player.update()		1110,	11,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:28 AI_Player.update()		101,	1010,	101,	1101,	110,	101,	1001
2017-01-03 14:40:28 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:28 AI_Player.update()		1001,	101,	11,	1101,	11,	1001,	101
2017-01-03 14:40:28 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:28 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:28 AI_Player.update()	update
2017-01-03 14:40:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:28 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:28 AI_Player.update()	update
2017-01-03 14:40:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:28 AI_Player.update()	Search took2ms
2017-01-03 14:40:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:28 AI_Player.update()		110,	1011,	111,	1001,	111,	101,	11
2017-01-03 14:40:28 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:28 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:28 AI_Player.update()		101,	1110,	101,	1101,	110,	101,	1001
2017-01-03 14:40:28 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:28 AI_Player.update()		1001,	11,	11,	1101,	11,	1001,	101
2017-01-03 14:40:28 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:28 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:28 AI_Player.update()	update
2017-01-03 14:40:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:28 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:29 AI_Player.update()	update
2017-01-03 14:40:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:29 AI_Player.update()	Search took3ms
2017-01-03 14:40:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:29 AI_Player.update()		110,	1011,	111,	1010,	111,	101,	11
2017-01-03 14:40:29 AI_Player.update()		1110,	11,	111,	110,	1010,	1101,	101
2017-01-03 14:40:29 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:29 AI_Player.update()		101,	1110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:29 AI_Player.update()		1110,	101,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:29 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:29 AI_Player.update()		1100,	110,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:29 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:29 AI_Player.update()	update
2017-01-03 14:40:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:29 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:29 AI_Player.update()	update
2017-01-03 14:40:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:29 AI_Player.update()	Search took5ms
2017-01-03 14:40:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:29 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:29 AI_Player.update()		1110,	1010,	111,	110,	1010,	1101,	101
2017-01-03 14:40:29 AI_Player.update()		1110,	1110,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:29 AI_Player.update()		101,	101,	101,	1010,	110,	101,	1001
2017-01-03 14:40:29 AI_Player.update()		1110,	11,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:29 AI_Player.update()		1001,	110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:29 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:29 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:29 AI_Player.update()	update
2017-01-03 14:40:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:29 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:29 AI_Player.update()	update
2017-01-03 14:40:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:29 AI_Player.update()	Search took3ms
2017-01-03 14:40:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:29 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-03 14:40:29 AI_Player.update()		1110,	1010,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:29 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:29 AI_Player.update()		101,	101,	101,	1101,	110,	101,	1001
2017-01-03 14:40:29 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:29 AI_Player.update()		1001,	110,	11,	1001,	11,	1001,	101
2017-01-03 14:40:29 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:29 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:29 AI_Player.update()	update
2017-01-03 14:40:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:29 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:29 AI_Player.update()	update
2017-01-03 14:40:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:29 AI_Player.update()	Search took2ms
2017-01-03 14:40:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:29 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-03 14:40:29 AI_Player.update()		1110,	1110,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:29 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:29 AI_Player.update()		101,	11,	101,	1101,	110,	101,	1001
2017-01-03 14:40:29 AI_Player.update()		1110,	110,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:29 AI_Player.update()		1001,	1011,	11,	1001,	11,	1001,	101
2017-01-03 14:40:29 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:29 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:29 AI_Player.update()	update
2017-01-03 14:40:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:29 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:29 AI_Player.update()	update
2017-01-03 14:40:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:29 AI_Player.update()	Search took6ms
2017-01-03 14:40:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:29 AI_Player.update()		110,	1010,	111,	1101,	111,	101,	11
2017-01-03 14:40:29 AI_Player.update()		1110,	1110,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:29 AI_Player.update()		1110,	101,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:29 AI_Player.update()		101,	11,	101,	1010,	110,	101,	1001
2017-01-03 14:40:29 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-03 14:40:29 AI_Player.update()		1001,	1011,	11,	1010,	11,	1001,	101
2017-01-03 14:40:29 AI_Player.update()		1100,	11,	1101,	110,	1101,	11,	1001
2017-01-03 14:40:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:29 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:29 AI_Player.update()	update
2017-01-03 14:40:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:29 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:30 AI_Player.update()	update
2017-01-03 14:40:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:30 AI_Player.update()	Search took5ms
2017-01-03 14:40:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:30 AI_Player.update()		110,	1110,	111,	1101,	111,	101,	11
2017-01-03 14:40:30 AI_Player.update()		1110,	101,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:30 AI_Player.update()		1110,	11,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:30 AI_Player.update()		101,	110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:30 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	110,	1011
2017-01-03 14:40:30 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:30 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-03 14:40:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:30 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:30 AI_Player.update()	update
2017-01-03 14:40:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:30 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:30 AI_Player.update()	update
2017-01-03 14:40:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:30 AI_Player.update()	Search took7ms
2017-01-03 14:40:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:30 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-03 14:40:30 AI_Player.update()		1110,	101,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:30 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:30 AI_Player.update()		101,	110,	101,	1001,	110,	101,	1001
2017-01-03 14:40:30 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:30 AI_Player.update()		1001,	11,	11,	110,	11,	1001,	101
2017-01-03 14:40:30 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:30 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:30 AI_Player.update()	update
2017-01-03 14:40:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:30 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:30 AI_Player.update()	update
2017-01-03 14:40:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:30 AI_Player.update()	Search took4ms
2017-01-03 14:40:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:30 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:40:30 AI_Player.update()		1110,	11,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:30 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:30 AI_Player.update()		101,	1011,	101,	1001,	110,	101,	1001
2017-01-03 14:40:30 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:30 AI_Player.update()		1001,	1010,	11,	110,	11,	1001,	101
2017-01-03 14:40:30 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:30 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:30 AI_Player.update()	update
2017-01-03 14:40:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:30 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:30 AI_Player.update()	update
2017-01-03 14:40:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:30 AI_Player.update()	Search took2ms
2017-01-03 14:40:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:30 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-03 14:40:30 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:30 AI_Player.update()		1110,	110,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:30 AI_Player.update()		101,	1011,	101,	1010,	110,	101,	1001
2017-01-03 14:40:30 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-03 14:40:30 AI_Player.update()		1001,	1010,	11,	1101,	11,	1001,	101
2017-01-03 14:40:30 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:30 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:30 AI_Player.update()	update
2017-01-03 14:40:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:30 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:30 AI_Player.update()	update
2017-01-03 14:40:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:30 AI_Player.update()	Search took3ms
2017-01-03 14:40:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:30 AI_Player.update()		110,	11,	111,	1101,	111,	101,	11
2017-01-03 14:40:30 AI_Player.update()		1110,	110,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:30 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:30 AI_Player.update()		101,	11,	101,	1010,	110,	101,	1001
2017-01-03 14:40:30 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-03 14:40:30 AI_Player.update()		1001,	1110,	11,	1101,	11,	1001,	101
2017-01-03 14:40:30 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:30 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:31 AI_Player.update()	update
2017-01-03 14:40:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:31 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:31 AI_Player.update()	update
2017-01-03 14:40:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:31 AI_Player.update()	Search took6ms
2017-01-03 14:40:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:31 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:31 AI_Player.update()		1110,	110,	111,	1001,	1010,	1101,	101
2017-01-03 14:40:31 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:31 AI_Player.update()		101,	11,	101,	110,	110,	101,	1001
2017-01-03 14:40:31 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:31 AI_Player.update()		1001,	1110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:31 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:31 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:31 AI_Player.update()	update
2017-01-03 14:40:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:31 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:31 AI_Player.update()	update
2017-01-03 14:40:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:31 AI_Player.update()	Search took4ms
2017-01-03 14:40:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:31 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-03 14:40:31 AI_Player.update()		1110,	1011,	111,	1001,	1010,	1101,	101
2017-01-03 14:40:31 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:31 AI_Player.update()		101,	1010,	101,	110,	110,	101,	1001
2017-01-03 14:40:31 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:31 AI_Player.update()		1001,	101,	11,	1010,	11,	1001,	101
2017-01-03 14:40:31 AI_Player.update()		1100,	11,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:31 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:31 AI_Player.update()	update
2017-01-03 14:40:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:31 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:31 AI_Player.update()	update
2017-01-03 14:40:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:31 AI_Player.update()	Search took5ms
2017-01-03 14:40:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:31 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-03 14:40:31 AI_Player.update()		1110,	1011,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:31 AI_Player.update()		1110,	11,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:31 AI_Player.update()		101,	1010,	101,	1101,	110,	101,	1001
2017-01-03 14:40:31 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:31 AI_Player.update()		1001,	101,	11,	1101,	11,	1001,	101
2017-01-03 14:40:31 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:31 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:31 AI_Player.update()	update
2017-01-03 14:40:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:31 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:31 AI_Player.update()	update
2017-01-03 14:40:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:31 AI_Player.update()	Search took2ms
2017-01-03 14:40:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:31 AI_Player.update()		110,	1011,	111,	1001,	111,	101,	11
2017-01-03 14:40:31 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:31 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:31 AI_Player.update()		101,	1110,	101,	1101,	110,	101,	1001
2017-01-03 14:40:31 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:31 AI_Player.update()		1001,	11,	11,	1101,	11,	1001,	101
2017-01-03 14:40:31 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:31 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:31 AI_Player.update()	update
2017-01-03 14:40:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:31 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:31 AI_Player.update()	update
2017-01-03 14:40:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:31 AI_Player.update()	Search took4ms
2017-01-03 14:40:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:31 AI_Player.update()		110,	1011,	111,	1010,	111,	101,	11
2017-01-03 14:40:31 AI_Player.update()		1110,	11,	111,	110,	1010,	1101,	101
2017-01-03 14:40:31 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:31 AI_Player.update()		101,	1110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:31 AI_Player.update()		1110,	101,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:31 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:31 AI_Player.update()		1100,	110,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:31 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:32 AI_Player.update()	update
2017-01-03 14:40:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:32 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:32 AI_Player.update()	update
2017-01-03 14:40:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:32 AI_Player.update()	Search took6ms
2017-01-03 14:40:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:32 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:32 AI_Player.update()		1110,	1010,	111,	110,	1010,	1101,	101
2017-01-03 14:40:32 AI_Player.update()		1110,	1110,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:32 AI_Player.update()		101,	101,	101,	1010,	110,	101,	1001
2017-01-03 14:40:32 AI_Player.update()		1110,	11,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:32 AI_Player.update()		1001,	110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:32 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:32 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:32 AI_Player.update()	update
2017-01-03 14:40:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:32 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:32 AI_Player.update()	update
2017-01-03 14:40:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:32 AI_Player.update()	Search took4ms
2017-01-03 14:40:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:32 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-03 14:40:32 AI_Player.update()		1110,	1010,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:32 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:32 AI_Player.update()		101,	101,	101,	1101,	110,	101,	1001
2017-01-03 14:40:32 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:32 AI_Player.update()		1001,	110,	11,	1001,	11,	1001,	101
2017-01-03 14:40:32 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:32 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:32 AI_Player.update()	update
2017-01-03 14:40:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:32 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:32 AI_Player.update()	update
2017-01-03 14:40:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:32 AI_Player.update()	Search took3ms
2017-01-03 14:40:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:32 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-03 14:40:32 AI_Player.update()		1110,	1110,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:32 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:32 AI_Player.update()		101,	11,	101,	1101,	110,	101,	1001
2017-01-03 14:40:32 AI_Player.update()		1110,	110,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:32 AI_Player.update()		1001,	1011,	11,	1001,	11,	1001,	101
2017-01-03 14:40:32 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:32 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:32 AI_Player.update()	update
2017-01-03 14:40:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:32 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:32 AI_Player.update()	update
2017-01-03 14:40:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:32 AI_Player.update()	Search took7ms
2017-01-03 14:40:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:32 AI_Player.update()		110,	1010,	111,	1101,	111,	101,	11
2017-01-03 14:40:32 AI_Player.update()		1110,	1110,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:32 AI_Player.update()		1110,	101,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:32 AI_Player.update()		101,	11,	101,	1010,	110,	101,	1001
2017-01-03 14:40:32 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-03 14:40:32 AI_Player.update()		1001,	1011,	11,	1010,	11,	1001,	101
2017-01-03 14:40:32 AI_Player.update()		1100,	11,	1101,	110,	1101,	11,	1001
2017-01-03 14:40:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:32 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:32 AI_Player.update()	update
2017-01-03 14:40:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:32 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:33 AI_Player.update()	update
2017-01-03 14:40:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:33 AI_Player.update()	Search took4ms
2017-01-03 14:40:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:33 AI_Player.update()		110,	1110,	111,	1101,	111,	101,	11
2017-01-03 14:40:33 AI_Player.update()		1110,	101,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:33 AI_Player.update()		1110,	11,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:33 AI_Player.update()		101,	110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:33 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	110,	1011
2017-01-03 14:40:33 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:33 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-03 14:40:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:33 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:33 AI_Player.update()	update
2017-01-03 14:40:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:33 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:33 AI_Player.update()	update
2017-01-03 14:40:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:33 AI_Player.update()	Search took7ms
2017-01-03 14:40:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:33 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-03 14:40:33 AI_Player.update()		1110,	101,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:33 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:33 AI_Player.update()		101,	110,	101,	1001,	110,	101,	1001
2017-01-03 14:40:33 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:33 AI_Player.update()		1001,	11,	11,	110,	11,	1001,	101
2017-01-03 14:40:33 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:33 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:33 AI_Player.update()	update
2017-01-03 14:40:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:33 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:33 AI_Player.update()	update
2017-01-03 14:40:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:33 AI_Player.update()	Search took2ms
2017-01-03 14:40:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:33 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:40:33 AI_Player.update()		1110,	11,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:33 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:33 AI_Player.update()		101,	1011,	101,	1001,	110,	101,	1001
2017-01-03 14:40:33 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:33 AI_Player.update()		1001,	1010,	11,	110,	11,	1001,	101
2017-01-03 14:40:33 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:33 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:33 AI_Player.update()	update
2017-01-03 14:40:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:33 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:33 AI_Player.update()	update
2017-01-03 14:40:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:33 AI_Player.update()	Search took6ms
2017-01-03 14:40:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:33 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-03 14:40:33 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:33 AI_Player.update()		1110,	110,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:33 AI_Player.update()		101,	1011,	101,	1010,	110,	101,	1001
2017-01-03 14:40:33 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-03 14:40:33 AI_Player.update()		1001,	1010,	11,	1101,	11,	1001,	101
2017-01-03 14:40:33 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:33 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:33 AI_Player.update()	update
2017-01-03 14:40:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:33 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:33 AI_Player.update()	update
2017-01-03 14:40:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:33 AI_Player.update()	Search took6ms
2017-01-03 14:40:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:33 AI_Player.update()		110,	11,	111,	1101,	111,	101,	11
2017-01-03 14:40:33 AI_Player.update()		1110,	110,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:33 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:33 AI_Player.update()		101,	11,	101,	1010,	110,	101,	1001
2017-01-03 14:40:33 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-03 14:40:33 AI_Player.update()		1001,	1110,	11,	1101,	11,	1001,	101
2017-01-03 14:40:33 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:33 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:33 AI_Player.update()	update
2017-01-03 14:40:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:33 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:34 AI_Player.update()	update
2017-01-03 14:40:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:34 AI_Player.update()	Search took8ms
2017-01-03 14:40:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:34 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:34 AI_Player.update()		1110,	110,	111,	1001,	1010,	1101,	101
2017-01-03 14:40:34 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:34 AI_Player.update()		101,	11,	101,	110,	110,	101,	1001
2017-01-03 14:40:34 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:34 AI_Player.update()		1001,	1110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:34 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:34 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:34 AI_Player.update()	update
2017-01-03 14:40:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:34 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:34 AI_Player.update()	update
2017-01-03 14:40:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:34 AI_Player.update()	Search took4ms
2017-01-03 14:40:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:34 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-03 14:40:34 AI_Player.update()		1110,	1011,	111,	1001,	1010,	1101,	101
2017-01-03 14:40:34 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:34 AI_Player.update()		101,	1010,	101,	110,	110,	101,	1001
2017-01-03 14:40:34 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:34 AI_Player.update()		1001,	101,	11,	1010,	11,	1001,	101
2017-01-03 14:40:34 AI_Player.update()		1100,	11,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:34 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:34 AI_Player.update()	update
2017-01-03 14:40:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:34 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:34 AI_Player.update()	update
2017-01-03 14:40:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:34 AI_Player.update()	Search took4ms
2017-01-03 14:40:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:34 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-03 14:40:34 AI_Player.update()		1110,	1011,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:34 AI_Player.update()		1110,	11,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:34 AI_Player.update()		101,	1010,	101,	1101,	110,	101,	1001
2017-01-03 14:40:34 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:34 AI_Player.update()		1001,	101,	11,	1101,	11,	1001,	101
2017-01-03 14:40:34 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:34 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:34 AI_Player.update()	update
2017-01-03 14:40:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:34 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:34 AI_Player.update()	update
2017-01-03 14:40:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:34 AI_Player.update()	Search took4ms
2017-01-03 14:40:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:34 AI_Player.update()		110,	1011,	111,	1001,	111,	101,	11
2017-01-03 14:40:34 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:34 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:34 AI_Player.update()		101,	1110,	101,	1101,	110,	101,	1001
2017-01-03 14:40:34 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:34 AI_Player.update()		1001,	11,	11,	1101,	11,	1001,	101
2017-01-03 14:40:34 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:34 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:34 AI_Player.update()	update
2017-01-03 14:40:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:34 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:34 AI_Player.update()	update
2017-01-03 14:40:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:34 AI_Player.update()	Search took4ms
2017-01-03 14:40:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:34 AI_Player.update()		110,	1011,	111,	1010,	111,	101,	11
2017-01-03 14:40:34 AI_Player.update()		1110,	11,	111,	110,	1010,	1101,	101
2017-01-03 14:40:34 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:34 AI_Player.update()		101,	1110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:34 AI_Player.update()		1110,	101,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:34 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:34 AI_Player.update()		1100,	110,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:34 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:35 AI_Player.update()	update
2017-01-03 14:40:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:35 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:35 AI_Player.update()	update
2017-01-03 14:40:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:35 AI_Player.update()	Search took8ms
2017-01-03 14:40:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:35 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:35 AI_Player.update()		1110,	1010,	111,	110,	1010,	1101,	101
2017-01-03 14:40:35 AI_Player.update()		1110,	1110,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:35 AI_Player.update()		101,	101,	101,	1010,	110,	101,	1001
2017-01-03 14:40:35 AI_Player.update()		1110,	11,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:35 AI_Player.update()		1001,	110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:35 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:35 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:35 AI_Player.update()	update
2017-01-03 14:40:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:35 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:35 AI_Player.update()	update
2017-01-03 14:40:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:35 AI_Player.update()	Search took5ms
2017-01-03 14:40:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:35 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-03 14:40:35 AI_Player.update()		1110,	1010,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:35 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:35 AI_Player.update()		101,	101,	101,	1101,	110,	101,	1001
2017-01-03 14:40:35 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:35 AI_Player.update()		1001,	110,	11,	1001,	11,	1001,	101
2017-01-03 14:40:35 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:35 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:35 AI_Player.update()	update
2017-01-03 14:40:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:35 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:35 AI_Player.update()	update
2017-01-03 14:40:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:35 AI_Player.update()	Search took4ms
2017-01-03 14:40:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:35 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-03 14:40:35 AI_Player.update()		1110,	1110,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:35 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:35 AI_Player.update()		101,	11,	101,	1101,	110,	101,	1001
2017-01-03 14:40:35 AI_Player.update()		1110,	110,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:35 AI_Player.update()		1001,	1011,	11,	1001,	11,	1001,	101
2017-01-03 14:40:35 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:35 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:35 AI_Player.update()	update
2017-01-03 14:40:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:35 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:35 AI_Player.update()	update
2017-01-03 14:40:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:35 AI_Player.update()	Search took8ms
2017-01-03 14:40:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:35 AI_Player.update()		110,	1010,	111,	1101,	111,	101,	11
2017-01-03 14:40:35 AI_Player.update()		1110,	1110,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:35 AI_Player.update()		1110,	101,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:35 AI_Player.update()		101,	11,	101,	1010,	110,	101,	1001
2017-01-03 14:40:35 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-03 14:40:35 AI_Player.update()		1001,	1011,	11,	1010,	11,	1001,	101
2017-01-03 14:40:35 AI_Player.update()		1100,	11,	1101,	110,	1101,	11,	1001
2017-01-03 14:40:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:35 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:36 AI_Player.update()	update
2017-01-03 14:40:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:36 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:36 AI_Player.update()	update
2017-01-03 14:40:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:36 AI_Player.update()	Search took6ms
2017-01-03 14:40:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:36 AI_Player.update()		110,	1110,	111,	1101,	111,	101,	11
2017-01-03 14:40:36 AI_Player.update()		1110,	101,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:36 AI_Player.update()		1110,	11,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:36 AI_Player.update()		101,	110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:36 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	110,	1011
2017-01-03 14:40:36 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:36 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-03 14:40:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:36 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:36 AI_Player.update()	update
2017-01-03 14:40:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:36 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:36 AI_Player.update()	update
2017-01-03 14:40:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:36 AI_Player.update()	Search took8ms
2017-01-03 14:40:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:36 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-03 14:40:36 AI_Player.update()		1110,	101,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:36 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:36 AI_Player.update()		101,	110,	101,	1001,	110,	101,	1001
2017-01-03 14:40:36 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:36 AI_Player.update()		1001,	11,	11,	110,	11,	1001,	101
2017-01-03 14:40:36 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:36 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:36 AI_Player.update()	update
2017-01-03 14:40:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:36 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:36 AI_Player.update()	update
2017-01-03 14:40:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:36 AI_Player.update()	Search took4ms
2017-01-03 14:40:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:36 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:40:36 AI_Player.update()		1110,	11,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:36 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:36 AI_Player.update()		101,	1011,	101,	1001,	110,	101,	1001
2017-01-03 14:40:36 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:36 AI_Player.update()		1001,	1010,	11,	110,	11,	1001,	101
2017-01-03 14:40:36 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:36 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:36 AI_Player.update()	update
2017-01-03 14:40:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:36 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:36 AI_Player.update()	update
2017-01-03 14:40:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:36 AI_Player.update()	Search took5ms
2017-01-03 14:40:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:36 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-03 14:40:36 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:36 AI_Player.update()		1110,	110,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:36 AI_Player.update()		101,	1011,	101,	1010,	110,	101,	1001
2017-01-03 14:40:36 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-03 14:40:36 AI_Player.update()		1001,	1010,	11,	1101,	11,	1001,	101
2017-01-03 14:40:36 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:36 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:36 AI_Player.update()	update
2017-01-03 14:40:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:36 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:36 AI_Player.update()	update
2017-01-03 14:40:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:36 AI_Player.update()	Search took4ms
2017-01-03 14:40:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:36 AI_Player.update()		110,	11,	111,	1101,	111,	101,	11
2017-01-03 14:40:36 AI_Player.update()		1110,	110,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:36 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:36 AI_Player.update()		101,	11,	101,	1010,	110,	101,	1001
2017-01-03 14:40:36 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-03 14:40:36 AI_Player.update()		1001,	1110,	11,	1101,	11,	1001,	101
2017-01-03 14:40:36 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:36 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:37 AI_Player.update()	update
2017-01-03 14:40:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:37 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:37 AI_Player.update()	update
2017-01-03 14:40:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:37 AI_Player.update()	Search took8ms
2017-01-03 14:40:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:37 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:37 AI_Player.update()		1110,	110,	111,	1001,	1010,	1101,	101
2017-01-03 14:40:37 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:37 AI_Player.update()		101,	11,	101,	110,	110,	101,	1001
2017-01-03 14:40:37 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:37 AI_Player.update()		1001,	1110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:37 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:37 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:37 AI_Player.update()	update
2017-01-03 14:40:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:37 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:37 AI_Player.update()	update
2017-01-03 14:40:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:37 AI_Player.update()	Search took4ms
2017-01-03 14:40:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:37 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-03 14:40:37 AI_Player.update()		1110,	1011,	111,	1001,	1010,	1101,	101
2017-01-03 14:40:37 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:37 AI_Player.update()		101,	1010,	101,	110,	110,	101,	1001
2017-01-03 14:40:37 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:37 AI_Player.update()		1001,	101,	11,	1010,	11,	1001,	101
2017-01-03 14:40:37 AI_Player.update()		1100,	11,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:37 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:37 AI_Player.update()	update
2017-01-03 14:40:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:37 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:37 AI_Player.update()	update
2017-01-03 14:40:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:37 AI_Player.update()	Search took5ms
2017-01-03 14:40:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:37 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-03 14:40:37 AI_Player.update()		1110,	1011,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:37 AI_Player.update()		1110,	11,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:37 AI_Player.update()		101,	1010,	101,	1101,	110,	101,	1001
2017-01-03 14:40:37 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:37 AI_Player.update()		1001,	101,	11,	1101,	11,	1001,	101
2017-01-03 14:40:37 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:37 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:37 AI_Player.update()	update
2017-01-03 14:40:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:37 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:37 AI_Player.update()	update
2017-01-03 14:40:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:37 AI_Player.update()	Search took5ms
2017-01-03 14:40:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:37 AI_Player.update()		110,	1011,	111,	1001,	111,	101,	11
2017-01-03 14:40:37 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:37 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:37 AI_Player.update()		101,	1110,	101,	1101,	110,	101,	1001
2017-01-03 14:40:37 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:37 AI_Player.update()		1001,	11,	11,	1101,	11,	1001,	101
2017-01-03 14:40:37 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:37 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:37 AI_Player.update()	update
2017-01-03 14:40:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:37 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:38 AI_Player.update()	update
2017-01-03 14:40:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:38 AI_Player.update()	Search took4ms
2017-01-03 14:40:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:38 AI_Player.update()		110,	1011,	111,	1010,	111,	101,	11
2017-01-03 14:40:38 AI_Player.update()		1110,	11,	111,	110,	1010,	1101,	101
2017-01-03 14:40:38 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:38 AI_Player.update()		101,	1110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:38 AI_Player.update()		1110,	101,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:38 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:38 AI_Player.update()		1100,	110,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:38 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:38 AI_Player.update()	update
2017-01-03 14:40:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:38 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:38 AI_Player.update()	update
2017-01-03 14:40:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:38 AI_Player.update()	Search took4ms
2017-01-03 14:40:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:38 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:38 AI_Player.update()		1110,	1010,	111,	110,	1010,	1101,	101
2017-01-03 14:40:38 AI_Player.update()		1110,	1110,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:38 AI_Player.update()		101,	101,	101,	1010,	110,	101,	1001
2017-01-03 14:40:38 AI_Player.update()		1110,	11,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:38 AI_Player.update()		1001,	110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:38 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:38 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:38 AI_Player.update()	update
2017-01-03 14:40:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:38 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:38 AI_Player.update()	update
2017-01-03 14:40:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:38 AI_Player.update()	Search took5ms
2017-01-03 14:40:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:38 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-03 14:40:38 AI_Player.update()		1110,	1010,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:38 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:38 AI_Player.update()		101,	101,	101,	1101,	110,	101,	1001
2017-01-03 14:40:38 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:38 AI_Player.update()		1001,	110,	11,	1001,	11,	1001,	101
2017-01-03 14:40:38 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:38 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:38 AI_Player.update()	update
2017-01-03 14:40:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:38 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:38 AI_Player.update()	update
2017-01-03 14:40:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:38 AI_Player.update()	Search took4ms
2017-01-03 14:40:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:38 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-03 14:40:38 AI_Player.update()		1110,	1110,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:38 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:38 AI_Player.update()		101,	11,	101,	1101,	110,	101,	1001
2017-01-03 14:40:38 AI_Player.update()		1110,	110,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:38 AI_Player.update()		1001,	1011,	11,	1001,	11,	1001,	101
2017-01-03 14:40:38 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:38 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:38 AI_Player.update()	update
2017-01-03 14:40:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:38 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:38 AI_Player.update()	update
2017-01-03 14:40:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:38 AI_Player.update()	Search took9ms
2017-01-03 14:40:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:38 AI_Player.update()		110,	1010,	111,	1101,	111,	101,	11
2017-01-03 14:40:38 AI_Player.update()		1110,	1110,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:38 AI_Player.update()		1110,	101,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:38 AI_Player.update()		101,	11,	101,	1010,	110,	101,	1001
2017-01-03 14:40:38 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-03 14:40:38 AI_Player.update()		1001,	1011,	11,	1010,	11,	1001,	101
2017-01-03 14:40:38 AI_Player.update()		1100,	11,	1101,	110,	1101,	11,	1001
2017-01-03 14:40:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:38 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:38 AI_Player.update()	update
2017-01-03 14:40:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:38 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:39 AI_Player.update()	update
2017-01-03 14:40:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:39 AI_Player.update()	Search took5ms
2017-01-03 14:40:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:39 AI_Player.update()		110,	1110,	111,	1101,	111,	101,	11
2017-01-03 14:40:39 AI_Player.update()		1110,	101,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:39 AI_Player.update()		1110,	11,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:39 AI_Player.update()		101,	110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:39 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	110,	1011
2017-01-03 14:40:39 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:39 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-03 14:40:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:39 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:39 AI_Player.update()	update
2017-01-03 14:40:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:39 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:39 AI_Player.update()	update
2017-01-03 14:40:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:39 AI_Player.update()	Search took9ms
2017-01-03 14:40:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:39 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-03 14:40:39 AI_Player.update()		1110,	101,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:39 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:39 AI_Player.update()		101,	110,	101,	1001,	110,	101,	1001
2017-01-03 14:40:39 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:39 AI_Player.update()		1001,	11,	11,	110,	11,	1001,	101
2017-01-03 14:40:39 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:39 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:39 AI_Player.update()	update
2017-01-03 14:40:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:39 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:39 AI_Player.update()	update
2017-01-03 14:40:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:39 AI_Player.update()	Search took5ms
2017-01-03 14:40:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:39 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:40:39 AI_Player.update()		1110,	11,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:39 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:39 AI_Player.update()		101,	1011,	101,	1001,	110,	101,	1001
2017-01-03 14:40:39 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:39 AI_Player.update()		1001,	1010,	11,	110,	11,	1001,	101
2017-01-03 14:40:39 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:39 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:39 AI_Player.update()	update
2017-01-03 14:40:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:39 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:39 AI_Player.update()	update
2017-01-03 14:40:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:39 AI_Player.update()	Search took7ms
2017-01-03 14:40:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:39 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-03 14:40:39 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:39 AI_Player.update()		1110,	110,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:39 AI_Player.update()		101,	1011,	101,	1010,	110,	101,	1001
2017-01-03 14:40:39 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-03 14:40:39 AI_Player.update()		1001,	1010,	11,	1101,	11,	1001,	101
2017-01-03 14:40:39 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:39 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:39 AI_Player.update()	update
2017-01-03 14:40:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:39 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:39 AI_Player.update()	update
2017-01-03 14:40:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:39 AI_Player.update()	Search took3ms
2017-01-03 14:40:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:39 AI_Player.update()		110,	11,	111,	1101,	111,	101,	11
2017-01-03 14:40:39 AI_Player.update()		1110,	110,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:39 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1001,	1011
2017-01-03 14:40:39 AI_Player.update()		101,	11,	101,	1010,	110,	101,	1001
2017-01-03 14:40:39 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-03 14:40:39 AI_Player.update()		1001,	1110,	11,	1101,	11,	1001,	101
2017-01-03 14:40:39 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:39 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:40 AI_Player.update()	update
2017-01-03 14:40:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:40 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:40 AI_Player.update()	update
2017-01-03 14:40:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:40 AI_Player.update()	Search took8ms
2017-01-03 14:40:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:40 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:40 AI_Player.update()		1110,	110,	111,	1001,	1010,	1101,	101
2017-01-03 14:40:40 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:40 AI_Player.update()		101,	11,	101,	110,	110,	101,	1001
2017-01-03 14:40:40 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:40 AI_Player.update()		1001,	1110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:40 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:40 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:40 AI_Player.update()	update
2017-01-03 14:40:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:40 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:40 AI_Player.update()	update
2017-01-03 14:40:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:40 AI_Player.update()	Search took6ms
2017-01-03 14:40:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:40 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-03 14:40:40 AI_Player.update()		1110,	1011,	111,	1001,	1010,	1101,	101
2017-01-03 14:40:40 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:40 AI_Player.update()		101,	1010,	101,	110,	110,	101,	1001
2017-01-03 14:40:40 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:40 AI_Player.update()		1001,	101,	11,	1010,	11,	1001,	101
2017-01-03 14:40:40 AI_Player.update()		1100,	11,	1101,	1101,	1101,	11,	1001
2017-01-03 14:40:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:40 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:40 AI_Player.update()	update
2017-01-03 14:40:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:40 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:40 AI_Player.update()	update
2017-01-03 14:40:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:40 AI_Player.update()	Search took1ms
2017-01-03 14:40:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:40 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-03 14:40:40 AI_Player.update()		1110,	1011,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:40 AI_Player.update()		1110,	11,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:40 AI_Player.update()		101,	1010,	101,	1101,	110,	101,	1001
2017-01-03 14:40:40 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:40 AI_Player.update()		1001,	101,	11,	1101,	11,	1001,	101
2017-01-03 14:40:40 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:40 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:40 AI_Player.update()	update
2017-01-03 14:40:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:40 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:40 AI_Player.update()	update
2017-01-03 14:40:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:40 AI_Player.update()	Search took5ms
2017-01-03 14:40:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:40 AI_Player.update()		110,	1011,	111,	1001,	111,	101,	11
2017-01-03 14:40:40 AI_Player.update()		1110,	11,	111,	1010,	1010,	1101,	101
2017-01-03 14:40:40 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-03 14:40:40 AI_Player.update()		101,	1110,	101,	1101,	110,	101,	1001
2017-01-03 14:40:40 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:40 AI_Player.update()		1001,	11,	11,	1101,	11,	1001,	101
2017-01-03 14:40:40 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:40 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:40 AI_Player.update()	update
2017-01-03 14:40:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:40 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:40 AI_Player.update()	update
2017-01-03 14:40:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:40 AI_Player.update()	Search took3ms
2017-01-03 14:40:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:40 AI_Player.update()		110,	1011,	111,	1010,	111,	101,	11
2017-01-03 14:40:40 AI_Player.update()		1110,	11,	111,	110,	1010,	1101,	101
2017-01-03 14:40:40 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:40 AI_Player.update()		101,	1110,	101,	1010,	110,	101,	1001
2017-01-03 14:40:40 AI_Player.update()		1110,	101,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:40 AI_Player.update()		1001,	11,	11,	1010,	11,	1001,	101
2017-01-03 14:40:40 AI_Player.update()		1100,	110,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:40 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:41 AI_Player.update()	update
2017-01-03 14:40:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:41 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:41 AI_Player.update()	update
2017-01-03 14:40:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:40:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 14:40:41 AI_Player.update()	Search took5ms
2017-01-03 14:40:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:41 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:40:41 AI_Player.update()		1110,	1010,	111,	110,	1010,	1101,	101
2017-01-03 14:40:41 AI_Player.update()		1110,	1110,	1110,	1101,	111,	1001,	1011
2017-01-03 14:40:41 AI_Player.update()		101,	101,	101,	1010,	110,	101,	1001
2017-01-03 14:40:41 AI_Player.update()		1110,	11,	1101,	1101,	1011,	110,	1011
2017-01-03 14:40:41 AI_Player.update()		1001,	110,	11,	1010,	11,	1001,	101
2017-01-03 14:40:41 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	11,	1001
2017-01-03 14:40:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:41 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:41 AI_Player.update()	update
2017-01-03 14:40:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:40:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:40:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 14:40:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:40:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:40:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:41 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:41 AI_Player.update()	update
2017-01-03 14:40:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:40:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-03 14:40:41 AI_Player.update()	Search took2ms
2017-01-03 14:40:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:40:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:41 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-03 14:40:41 AI_Player.update()		1110,	1010,	111,	1101,	1010,	1101,	101
2017-01-03 14:40:41 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1001,	1011
2017-01-03 14:40:41 AI_Player.update()		101,	101,	101,	1101,	110,	101,	1001
2017-01-03 14:40:41 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:40:41 AI_Player.update()		1001,	110,	11,	1001,	11,	1001,	101
2017-01-03 14:40:41 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	11,	1001
2017-01-03 14:40:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:40:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:40:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:41 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:40:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:40:41 AI_Player.update()	update
2017-01-03 14:40:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:40:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:40:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-03 14:40:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:40:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:40:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:40:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:40:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:40:41 GameBoard.setupTreasurePanel()	3 1
