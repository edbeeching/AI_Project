2017-01-03 14:37:33 GameBoard.<init>()	Hello World!
2017-01-03 14:37:33 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-03 14:37:33 QueryProlog.initialise()	setup(h2/h1). suceeded
2017-01-03 14:37:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:33 GameBoard.setupBoardFromString()	Board created
2017-01-03 14:37:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:37:33 GameBoard.initialise()	[sword, map, gold, gem, ring]
2017-01-03 14:37:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:37:33 GameBoard.initialise()	[book, crown, chest, candle, keys]
2017-01-03 14:37:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:33 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-03 14:37:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	null
2017-01-03 14:37:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:37:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:37:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:33 AI_Player.update()	update
2017-01-03 14:37:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:33 AI_Player.update()	Search took36ms
2017-01-03 14:37:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:33 AI_Player.update()		110,	101,	111,	1100,	111,	11,	11
2017-01-03 14:37:33 AI_Player.update()		1001,	110,	1010,	110,	111,	1010,	1001
2017-01-03 14:37:33 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-03 14:37:33 AI_Player.update()		101,	1010,	11,	11,	1010,	101,	1100
2017-01-03 14:37:33 AI_Player.update()		1110,	11,	1101,	111,	1011,	1011,	1011
2017-01-03 14:37:33 AI_Player.update()		1010,	1101,	1010,	1110,	110,	1110,	110
2017-01-03 14:37:33 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-03 14:37:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:37:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:37:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:33 AI_Player.update()	update
2017-01-03 14:37:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:37:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:37:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:37:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:37:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:33 AI_Player.update()	update
2017-01-03 14:37:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:33 AI_Player.update()	Search took7ms
2017-01-03 14:37:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:33 AI_Player.update()		110,	101,	111,	1100,	111,	11,	11
2017-01-03 14:37:33 AI_Player.update()		1001,	1001,	110,	1010,	110,	111,	1010
2017-01-03 14:37:33 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-03 14:37:33 AI_Player.update()		101,	1010,	11,	11,	1010,	101,	1100
2017-01-03 14:37:33 AI_Player.update()		1110,	11,	1101,	111,	1011,	1011,	1011
2017-01-03 14:37:33 AI_Player.update()		1010,	1101,	1010,	1110,	110,	1110,	110
2017-01-03 14:37:33 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-03 14:37:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:34 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:37:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:34 AI_Player.update()	update
2017-01-03 14:37:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:34 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:37:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:34 AI_Player.update()	update
2017-01-03 14:37:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:34 AI_Player.update()	Search took4ms
2017-01-03 14:37:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:34 AI_Player.update()		110,	1001,	111,	1100,	111,	11,	11
2017-01-03 14:37:34 AI_Player.update()		1001,	101,	110,	1010,	110,	111,	1010
2017-01-03 14:37:34 AI_Player.update()		1110,	1010,	1110,	101,	111,	1100,	1011
2017-01-03 14:37:34 AI_Player.update()		101,	11,	11,	11,	1010,	101,	1100
2017-01-03 14:37:34 AI_Player.update()		1110,	1101,	1101,	111,	1011,	1011,	1011
2017-01-03 14:37:34 AI_Player.update()		1010,	110,	1010,	1110,	110,	1110,	110
2017-01-03 14:37:34 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-03 14:37:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:34 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:37:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:34 AI_Player.update()	update
2017-01-03 14:37:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:34 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:37:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:34 AI_Player.update()	update
2017-01-03 14:37:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:34 AI_Player.update()	Search took3ms
2017-01-03 14:37:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:34 AI_Player.update()		110,	1001,	111,	1100,	111,	11,	11
2017-01-03 14:37:34 AI_Player.update()		101,	110,	1010,	110,	111,	1010,	1001
2017-01-03 14:37:34 AI_Player.update()		1110,	1010,	1110,	101,	111,	1100,	1011
2017-01-03 14:37:34 AI_Player.update()		101,	11,	11,	11,	1010,	101,	1100
2017-01-03 14:37:34 AI_Player.update()		1110,	1101,	1101,	111,	1011,	1011,	1011
2017-01-03 14:37:34 AI_Player.update()		1010,	110,	1010,	1110,	110,	1110,	110
2017-01-03 14:37:34 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-03 14:37:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:34 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:37:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:34 AI_Player.update()	update
2017-01-03 14:37:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:34 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:37:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:34 AI_Player.update()	update
2017-01-03 14:37:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:34 AI_Player.update()	Search took3ms
2017-01-03 14:37:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:34 AI_Player.update()		110,	110,	111,	1100,	111,	11,	11
2017-01-03 14:37:34 AI_Player.update()		101,	1010,	1010,	110,	111,	1010,	1001
2017-01-03 14:37:34 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 14:37:34 AI_Player.update()		101,	1101,	11,	11,	1010,	101,	1100
2017-01-03 14:37:34 AI_Player.update()		1110,	110,	1101,	111,	1011,	1011,	1011
2017-01-03 14:37:34 AI_Player.update()		1010,	101,	1010,	1110,	110,	1110,	110
2017-01-03 14:37:34 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1010,	1001
2017-01-03 14:37:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:34 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:37:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:34 AI_Player.update()	update
2017-01-03 14:37:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:34 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:37:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:34 AI_Player.update()	update
2017-01-03 14:37:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:34 AI_Player.update()	Search took3ms
2017-01-03 14:37:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:34 AI_Player.update()		110,	110,	111,	1100,	111,	11,	11
2017-01-03 14:37:34 AI_Player.update()		1010,	1010,	110,	111,	1010,	1001,	101
2017-01-03 14:37:34 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-03 14:37:34 AI_Player.update()		101,	1101,	11,	11,	1010,	101,	1100
2017-01-03 14:37:34 AI_Player.update()		1110,	110,	1101,	111,	1011,	1011,	1011
2017-01-03 14:37:34 AI_Player.update()		1010,	101,	1010,	1110,	110,	1110,	110
2017-01-03 14:37:34 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1010,	1001
2017-01-03 14:37:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:34 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:37:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:35 AI_Player.update()	update
2017-01-03 14:37:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:35 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:37:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:35 AI_Player.update()	update
2017-01-03 14:37:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:35 AI_Player.update()	Search took99ms
2017-01-03 14:37:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:35 AI_Player.update()		110,	1010,	111,	1100,	111,	11,	11
2017-01-03 14:37:35 AI_Player.update()		1010,	11,	110,	111,	1010,	1001,	101
2017-01-03 14:37:35 AI_Player.update()		1110,	1101,	1110,	101,	111,	1100,	1011
2017-01-03 14:37:35 AI_Player.update()		101,	110,	11,	11,	1010,	101,	1100
2017-01-03 14:37:35 AI_Player.update()		1110,	101,	1101,	111,	1011,	1011,	1011
2017-01-03 14:37:35 AI_Player.update()		1010,	1001,	1010,	1110,	110,	1110,	110
2017-01-03 14:37:35 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-03 14:37:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:35 GameBoard.setupTreasurePanel()	2 1
2017-01-03 14:37:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:35 AI_Player.update()	update
2017-01-03 14:37:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:35 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:37:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:37:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:37:35 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:37:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:37:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:37:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:37:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:37:35 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:37:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:37:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:37:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:37:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:37:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:35 AI_Player.update()	update
2017-01-03 14:37:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:35 AI_Player.update()	Search took5ms
2017-01-03 14:37:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:35 AI_Player.update()		110,	11,	111,	1100,	111,	11,	11
2017-01-03 14:37:35 AI_Player.update()		1010,	1101,	110,	111,	1010,	1001,	101
2017-01-03 14:37:35 AI_Player.update()		1110,	110,	1110,	101,	111,	1100,	1011
2017-01-03 14:37:35 AI_Player.update()		101,	101,	11,	11,	1010,	101,	1100
2017-01-03 14:37:35 AI_Player.update()		1110,	1001,	1101,	111,	1011,	1011,	1011
2017-01-03 14:37:35 AI_Player.update()		1010,	110,	1010,	1110,	110,	1110,	110
2017-01-03 14:37:35 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-03 14:37:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:35 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:37:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:35 AI_Player.update()	update
2017-01-03 14:37:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:35 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:37:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:35 AI_Player.update()	update
2017-01-03 14:37:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:35 AI_Player.update()	Search took3ms
2017-01-03 14:37:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:35 AI_Player.update()		110,	1101,	111,	1100,	111,	11,	11
2017-01-03 14:37:35 AI_Player.update()		1010,	110,	110,	111,	1010,	1001,	101
2017-01-03 14:37:35 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-03 14:37:35 AI_Player.update()		101,	1001,	11,	11,	1010,	101,	1100
2017-01-03 14:37:35 AI_Player.update()		1110,	110,	1101,	111,	1011,	1011,	1011
2017-01-03 14:37:35 AI_Player.update()		1010,	1010,	1010,	1110,	110,	1110,	110
2017-01-03 14:37:35 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-03 14:37:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:35 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:37:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:35 AI_Player.update()	update
2017-01-03 14:37:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:35 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:37:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:35 AI_Player.update()	update
2017-01-03 14:37:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:35 AI_Player.update()	Search took5ms
2017-01-03 14:37:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:35 AI_Player.update()		110,	1101,	111,	1100,	111,	11,	11
2017-01-03 14:37:35 AI_Player.update()		1010,	110,	110,	111,	1010,	1001,	101
2017-01-03 14:37:35 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-03 14:37:35 AI_Player.update()		101,	1001,	11,	11,	1010,	101,	1100
2017-01-03 14:37:35 AI_Player.update()		1110,	110,	1101,	111,	1011,	1011,	1011
2017-01-03 14:37:35 AI_Player.update()		1010,	1010,	1110,	110,	1110,	110,	1010
2017-01-03 14:37:35 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-03 14:37:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:35 GameBoard.setupTreasurePanel()	3 1
2017-01-03 14:37:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:36 AI_Player.update()	update
2017-01-03 14:37:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	3 2
2017-01-03 14:37:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:37:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:37:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:36 AI_Player.update()	update
2017-01-03 14:37:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:36 AI_Player.update()	Search took4ms
2017-01-03 14:37:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:36 AI_Player.update()		110,	110,	111,	1100,	111,	11,	11
2017-01-03 14:37:36 AI_Player.update()		1010,	101,	110,	111,	1010,	1001,	101
2017-01-03 14:37:36 AI_Player.update()		1110,	1001,	1110,	101,	111,	1100,	1011
2017-01-03 14:37:36 AI_Player.update()		101,	110,	11,	11,	1010,	101,	1100
2017-01-03 14:37:36 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1011,	1011
2017-01-03 14:37:36 AI_Player.update()		1010,	11,	1110,	110,	1110,	110,	1010
2017-01-03 14:37:36 AI_Player.update()		1100,	1101,	1101,	11,	1101,	1010,	1001
2017-01-03 14:37:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	3 2
2017-01-03 14:37:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:36 AI_Player.update()	update
2017-01-03 14:37:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	3 2
2017-01-03 14:37:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:36 AI_Player.update()	update
2017-01-03 14:37:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:36 AI_Player.update()	Search took5ms
2017-01-03 14:37:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:36 AI_Player.update()		110,	110,	111,	111,	111,	11,	11
2017-01-03 14:37:36 AI_Player.update()		1010,	101,	110,	101,	1010,	1001,	101
2017-01-03 14:37:36 AI_Player.update()		1110,	1001,	1110,	11,	111,	1100,	1011
2017-01-03 14:37:36 AI_Player.update()		101,	110,	11,	111,	1010,	101,	1100
2017-01-03 14:37:36 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1011,	1011
2017-01-03 14:37:36 AI_Player.update()		1010,	11,	1110,	11,	1110,	110,	1010
2017-01-03 14:37:36 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	1010,	1001
2017-01-03 14:37:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	3 2
2017-01-03 14:37:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:36 AI_Player.update()	update
2017-01-03 14:37:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	3 3
2017-01-03 14:37:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:37:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:37:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:36 AI_Player.update()	update
2017-01-03 14:37:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:36 AI_Player.update()	Search took4ms
2017-01-03 14:37:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:36 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-03 14:37:36 AI_Player.update()		1010,	101,	110,	11,	1010,	1001,	101
2017-01-03 14:37:36 AI_Player.update()		1110,	1001,	1110,	111,	111,	1100,	1011
2017-01-03 14:37:36 AI_Player.update()		101,	110,	11,	110,	1010,	101,	1100
2017-01-03 14:37:36 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1011,	1011
2017-01-03 14:37:36 AI_Player.update()		1010,	11,	1110,	1100,	1110,	110,	1010
2017-01-03 14:37:36 AI_Player.update()		1100,	1101,	1101,	111,	1101,	1010,	1001
2017-01-03 14:37:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	3 3
2017-01-03 14:37:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:36 AI_Player.update()	update
2017-01-03 14:37:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	3 3
2017-01-03 14:37:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:36 AI_Player.update()	update
2017-01-03 14:37:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:36 AI_Player.update()	Search took7ms
2017-01-03 14:37:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:36 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-03 14:37:36 AI_Player.update()		1010,	1001,	110,	11,	1010,	1001,	101
2017-01-03 14:37:36 AI_Player.update()		1110,	110,	1110,	111,	111,	1100,	1011
2017-01-03 14:37:36 AI_Player.update()		101,	1010,	11,	110,	1010,	101,	1100
2017-01-03 14:37:36 AI_Player.update()		1110,	11,	1101,	11,	1011,	1011,	1011
2017-01-03 14:37:36 AI_Player.update()		1010,	1101,	1110,	1100,	1110,	110,	1010
2017-01-03 14:37:36 AI_Player.update()		1100,	110,	1101,	111,	1101,	1010,	1001
2017-01-03 14:37:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	3 3
2017-01-03 14:37:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:36 AI_Player.update()	update
2017-01-03 14:37:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	3 4
2017-01-03 14:37:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:37:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:37:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:37:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:37 AI_Player.update()	update
2017-01-03 14:37:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:37 AI_Player.update()	Search took8ms
2017-01-03 14:37:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:37 AI_Player.update()		110,	101,	111,	11,	111,	11,	11
2017-01-03 14:37:37 AI_Player.update()		1010,	1001,	110,	111,	1010,	1001,	101
2017-01-03 14:37:37 AI_Player.update()		1110,	110,	1110,	110,	111,	1100,	1011
2017-01-03 14:37:37 AI_Player.update()		101,	1010,	11,	11,	1010,	101,	1100
2017-01-03 14:37:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1011,	1011
2017-01-03 14:37:37 AI_Player.update()		1010,	1101,	1110,	111,	1110,	110,	1010
2017-01-03 14:37:37 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-03 14:37:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:37 GameBoard.setupTreasurePanel()	3 4
2017-01-03 14:37:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:37 AI_Player.update()	update
2017-01-03 14:37:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:37 GameBoard.setupTreasurePanel()	3 4
2017-01-03 14:37:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:37 AI_Player.update()	update
2017-01-03 14:37:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:37 AI_Player.update()	Search took7ms
2017-01-03 14:37:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:37 AI_Player.update()		110,	101,	111,	11,	111,	1001,	11
2017-01-03 14:37:37 AI_Player.update()		1010,	1001,	110,	111,	1010,	1100,	101
2017-01-03 14:37:37 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-03 14:37:37 AI_Player.update()		101,	1010,	11,	11,	1010,	1011,	1100
2017-01-03 14:37:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	110,	1011
2017-01-03 14:37:37 AI_Player.update()		1010,	1101,	1110,	111,	1110,	1010,	1010
2017-01-03 14:37:37 AI_Player.update()		1100,	110,	1101,	101,	1101,	11,	1001
2017-01-03 14:37:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:37 GameBoard.setupTreasurePanel()	3 4
2017-01-03 14:37:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:37 AI_Player.update()	update
2017-01-03 14:37:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:37 GameBoard.setupTreasurePanel()	3 4
2017-01-03 14:37:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:37 AI_Player.update()	update
2017-01-03 14:37:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:37 AI_Player.update()	Search took2ms
2017-01-03 14:37:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:37 AI_Player.update()		110,	101,	111,	111,	111,	1001,	11
2017-01-03 14:37:37 AI_Player.update()		1010,	1001,	110,	110,	1010,	1100,	101
2017-01-03 14:37:37 AI_Player.update()		1110,	110,	1110,	11,	111,	101,	1011
2017-01-03 14:37:37 AI_Player.update()		101,	1010,	11,	1100,	1010,	1011,	1100
2017-01-03 14:37:37 AI_Player.update()		1110,	11,	1101,	111,	1011,	110,	1011
2017-01-03 14:37:37 AI_Player.update()		1010,	1101,	1110,	101,	1110,	1010,	1010
2017-01-03 14:37:37 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-03 14:37:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:37 GameBoard.setupTreasurePanel()	3 4
2017-01-03 14:37:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:37 AI_Player.update()	update
2017-01-03 14:37:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:37 GameBoard.setupTreasurePanel()	3 4
2017-01-03 14:37:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:37 AI_Player.update()	update
2017-01-03 14:37:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:37 AI_Player.update()	Search took5ms
2017-01-03 14:37:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:37 AI_Player.update()		110,	1001,	111,	111,	111,	1001,	11
2017-01-03 14:37:37 AI_Player.update()		1010,	110,	110,	110,	1010,	1100,	101
2017-01-03 14:37:37 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-03 14:37:37 AI_Player.update()		101,	11,	11,	1100,	1010,	1011,	1100
2017-01-03 14:37:37 AI_Player.update()		1110,	1101,	1101,	111,	1011,	110,	1011
2017-01-03 14:37:37 AI_Player.update()		1010,	110,	1110,	101,	1110,	1010,	1010
2017-01-03 14:37:37 AI_Player.update()		1100,	101,	1101,	11,	1101,	11,	1001
2017-01-03 14:37:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:37 GameBoard.setupTreasurePanel()	3 4
2017-01-03 14:37:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:37 AI_Player.update()	update
2017-01-03 14:37:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:37 GameBoard.setupTreasurePanel()	3 4
2017-01-03 14:37:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:37 AI_Player.update()	update
2017-01-03 14:37:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:37 AI_Player.update()	Search took4ms
2017-01-03 14:37:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:37 AI_Player.update()		110,	1001,	111,	110,	111,	1001,	11
2017-01-03 14:37:37 AI_Player.update()		1010,	110,	110,	11,	1010,	1100,	101
2017-01-03 14:37:37 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-03 14:37:37 AI_Player.update()		101,	11,	11,	111,	1010,	1011,	1100
2017-01-03 14:37:37 AI_Player.update()		1110,	1101,	1101,	101,	1011,	110,	1011
2017-01-03 14:37:37 AI_Player.update()		1010,	110,	1110,	11,	1110,	1010,	1010
2017-01-03 14:37:37 AI_Player.update()		1100,	101,	1101,	111,	1101,	11,	1001
2017-01-03 14:37:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:37 GameBoard.setupTreasurePanel()	3 4
2017-01-03 14:37:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:38 AI_Player.update()	update
2017-01-03 14:37:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:38 GameBoard.setupTreasurePanel()	3 4
2017-01-03 14:37:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:38 AI_Player.update()	update
2017-01-03 14:37:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:38 AI_Player.update()	Search took11ms
2017-01-03 14:37:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:38 AI_Player.update()		110,	110,	111,	110,	111,	1001,	11
2017-01-03 14:37:38 AI_Player.update()		1010,	1010,	110,	11,	1010,	1100,	101
2017-01-03 14:37:38 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-03 14:37:38 AI_Player.update()		101,	1101,	11,	111,	1010,	1011,	1100
2017-01-03 14:37:38 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-03 14:37:38 AI_Player.update()		1010,	101,	1110,	11,	1110,	1010,	1010
2017-01-03 14:37:38 AI_Player.update()		1100,	1001,	1101,	111,	1101,	11,	1001
2017-01-03 14:37:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:38 GameBoard.setupTreasurePanel()	3 4
2017-01-03 14:37:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:38 AI_Player.update()	update
2017-01-03 14:37:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:38 GameBoard.setupTreasurePanel()	3 4
2017-01-03 14:37:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:38 AI_Player.update()	update
2017-01-03 14:37:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:38 AI_Player.update()	Search took3ms
2017-01-03 14:37:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:38 AI_Player.update()		110,	110,	111,	11,	111,	1001,	11
2017-01-03 14:37:38 AI_Player.update()		1010,	1010,	110,	1100,	1010,	1100,	101
2017-01-03 14:37:38 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-03 14:37:38 AI_Player.update()		101,	1101,	11,	101,	1010,	1011,	1100
2017-01-03 14:37:38 AI_Player.update()		1110,	110,	1101,	11,	1011,	110,	1011
2017-01-03 14:37:38 AI_Player.update()		1010,	101,	1110,	111,	1110,	1010,	1010
2017-01-03 14:37:38 AI_Player.update()		1100,	1001,	1101,	110,	1101,	11,	1001
2017-01-03 14:37:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:38 GameBoard.setupTreasurePanel()	3 4
2017-01-03 14:37:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:38 AI_Player.update()	update
2017-01-03 14:37:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:38 GameBoard.setupTreasurePanel()	3 4
2017-01-03 14:37:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:38 AI_Player.update()	update
2017-01-03 14:37:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:38 AI_Player.update()	Search took4ms
2017-01-03 14:37:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:38 AI_Player.update()		110,	110,	111,	11,	111,	1001,	11
2017-01-03 14:37:38 AI_Player.update()		1010,	1010,	110,	1100,	1010,	1100,	101
2017-01-03 14:37:38 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-03 14:37:38 AI_Player.update()		1100,	101,	1101,	11,	101,	1010,	1011
2017-01-03 14:37:38 AI_Player.update()		1110,	110,	1101,	11,	1011,	110,	1011
2017-01-03 14:37:38 AI_Player.update()		1010,	101,	1110,	111,	1110,	1010,	1010
2017-01-03 14:37:38 AI_Player.update()		1100,	1001,	1101,	110,	1101,	11,	1001
2017-01-03 14:37:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:38 GameBoard.setupTreasurePanel()	3 4
2017-01-03 14:37:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:38 AI_Player.update()	update
2017-01-03 14:37:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:38 GameBoard.setupTreasurePanel()	3 5
2017-01-03 14:37:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:37:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:37:38 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:37:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:37:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:37:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:37:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:37:38 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:37:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:37:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:37:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:37:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:37:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:38 AI_Player.update()	update
2017-01-03 14:37:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:38 AI_Player.update()	Search took1ms
2017-01-03 14:37:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:38 AI_Player.update()		110,	110,	111,	1100,	111,	1001,	11
2017-01-03 14:37:38 AI_Player.update()		1010,	1010,	110,	111,	1010,	1100,	101
2017-01-03 14:37:38 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-03 14:37:38 AI_Player.update()		1100,	101,	1101,	11,	101,	1010,	1011
2017-01-03 14:37:38 AI_Player.update()		1110,	110,	1101,	111,	1011,	110,	1011
2017-01-03 14:37:38 AI_Player.update()		1010,	101,	1110,	110,	1110,	1010,	1010
2017-01-03 14:37:38 AI_Player.update()		1100,	1001,	1101,	11,	1101,	11,	1001
2017-01-03 14:37:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:38 GameBoard.setupTreasurePanel()	3 5
2017-01-03 14:37:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:38 AI_Player.update()	update
2017-01-03 14:37:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:38 GameBoard.setupTreasurePanel()	3 5
2017-01-03 14:37:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:38 AI_Player.update()	update
2017-01-03 14:37:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:38 AI_Player.update()	Search took5ms
2017-01-03 14:37:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:38 AI_Player.update()		110,	110,	111,	11,	111,	1001,	11
2017-01-03 14:37:38 AI_Player.update()		1010,	1010,	110,	1100,	1010,	1100,	101
2017-01-03 14:37:38 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-03 14:37:38 AI_Player.update()		1100,	101,	1101,	11,	101,	1010,	1011
2017-01-03 14:37:38 AI_Player.update()		1110,	110,	1101,	11,	1011,	110,	1011
2017-01-03 14:37:38 AI_Player.update()		1010,	101,	1110,	111,	1110,	1010,	1010
2017-01-03 14:37:38 AI_Player.update()		1100,	1001,	1101,	110,	1101,	11,	1001
2017-01-03 14:37:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:38 GameBoard.setupTreasurePanel()	3 5
2017-01-03 14:37:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:39 AI_Player.update()	update
2017-01-03 14:37:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:39 GameBoard.setupTreasurePanel()	3 6
2017-01-03 14:37:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:37:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:37:39 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:37:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:37:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:37:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:37:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:37:39 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:37:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:37:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:37:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:37:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:37:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:39 AI_Player.update()	update
2017-01-03 14:37:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:39 AI_Player.update()	Search took1ms
2017-01-03 14:37:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:39 AI_Player.update()		110,	110,	111,	1100,	111,	1001,	11
2017-01-03 14:37:39 AI_Player.update()		1010,	1010,	110,	111,	1010,	1100,	101
2017-01-03 14:37:39 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-03 14:37:39 AI_Player.update()		1100,	101,	1101,	11,	101,	1010,	1011
2017-01-03 14:37:39 AI_Player.update()		1110,	110,	1101,	111,	1011,	110,	1011
2017-01-03 14:37:39 AI_Player.update()		1010,	101,	1110,	110,	1110,	1010,	1010
2017-01-03 14:37:39 AI_Player.update()		1100,	1001,	1101,	11,	1101,	11,	1001
2017-01-03 14:37:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:39 GameBoard.setupTreasurePanel()	3 6
2017-01-03 14:37:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:39 AI_Player.update()	update
2017-01-03 14:37:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:39 GameBoard.setupTreasurePanel()	3 6
2017-01-03 14:37:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:39 AI_Player.update()	update
2017-01-03 14:37:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:39 AI_Player.update()	Search took5ms
2017-01-03 14:37:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:39 AI_Player.update()		110,	110,	111,	11,	111,	1001,	11
2017-01-03 14:37:39 AI_Player.update()		1010,	1010,	110,	1100,	1010,	1100,	101
2017-01-03 14:37:39 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-03 14:37:39 AI_Player.update()		1100,	101,	1101,	11,	101,	1010,	1011
2017-01-03 14:37:39 AI_Player.update()		1110,	110,	1101,	11,	1011,	110,	1011
2017-01-03 14:37:39 AI_Player.update()		1010,	101,	1110,	111,	1110,	1010,	1010
2017-01-03 14:37:39 AI_Player.update()		1100,	1001,	1101,	110,	1101,	11,	1001
2017-01-03 14:37:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:39 GameBoard.setupTreasurePanel()	3 6
2017-01-03 14:37:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:39 AI_Player.update()	update
2017-01-03 14:37:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:39 GameBoard.setupTreasurePanel()	3 6
2017-01-03 14:37:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:39 AI_Player.update()	update
2017-01-03 14:37:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:39 AI_Player.update()	Search took2ms
2017-01-03 14:37:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:39 AI_Player.update()		110,	110,	111,	1100,	111,	1001,	11
2017-01-03 14:37:39 AI_Player.update()		1010,	1010,	110,	111,	1010,	1100,	101
2017-01-03 14:37:39 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-03 14:37:39 AI_Player.update()		1100,	101,	1101,	11,	101,	1010,	1011
2017-01-03 14:37:39 AI_Player.update()		1110,	110,	1101,	111,	1011,	110,	1011
2017-01-03 14:37:39 AI_Player.update()		1010,	101,	1110,	110,	1110,	1010,	1010
2017-01-03 14:37:39 AI_Player.update()		1100,	1001,	1101,	11,	1101,	11,	1001
2017-01-03 14:37:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:39 GameBoard.setupTreasurePanel()	3 6
2017-01-03 14:37:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:39 AI_Player.update()	update
2017-01-03 14:37:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:39 GameBoard.setupTreasurePanel()	3 6
2017-01-03 14:37:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:39 AI_Player.update()	update
2017-01-03 14:37:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:39 AI_Player.update()	Search took4ms
2017-01-03 14:37:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:39 AI_Player.update()		110,	110,	111,	1100,	111,	1001,	11
2017-01-03 14:37:39 AI_Player.update()		1010,	110,	111,	1010,	1100,	101,	1010
2017-01-03 14:37:39 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-03 14:37:39 AI_Player.update()		1100,	101,	1101,	11,	101,	1010,	1011
2017-01-03 14:37:39 AI_Player.update()		1110,	110,	1101,	111,	1011,	110,	1011
2017-01-03 14:37:39 AI_Player.update()		1010,	101,	1110,	110,	1110,	1010,	1010
2017-01-03 14:37:39 AI_Player.update()		1100,	1001,	1101,	11,	1101,	11,	1001
2017-01-03 14:37:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:39 GameBoard.setupTreasurePanel()	3 6
2017-01-03 14:37:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:39 AI_Player.update()	update
2017-01-03 14:37:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:39 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 14:37:39 AI_Player.update()	Player b has won!
2017-01-03 14:37:42 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 14:37:42 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 14:37:42 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 14:37:42 QueryProlog.reset()	setup(h2/h1). suceeded
2017-01-03 14:37:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:37:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 14:37:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:37:42 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:37:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 14:37:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:37:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:37:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:37:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 14:37:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:37:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:37:42 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:37:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:42 AI_Player.update()	update
2017-01-03 14:37:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:42 AI_Player.update()	Search took3ms
2017-01-03 14:37:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:42 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-03 14:37:42 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:42 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-03 14:37:42 AI_Player.update()		11,	1010,	111,	1110,	11,	1001,	11
2017-01-03 14:37:42 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-03 14:37:42 AI_Player.update()		110,	1001,	101,	11,	110,	1001,	1001
2017-01-03 14:37:42 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1100,	1001
2017-01-03 14:37:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:42 AI_Player.update()	update
2017-01-03 14:37:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:42 AI_Player.update()	update
2017-01-03 14:37:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:42 AI_Player.update()	Search took1ms
2017-01-03 14:37:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:42 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:42 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:42 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:42 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:42 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:42 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:37:42 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:42 AI_Player.update()	update
2017-01-03 14:37:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:42 AI_Player.update()	update
2017-01-03 14:37:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:42 AI_Player.update()	Search took1ms
2017-01-03 14:37:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:42 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:42 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:42 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:42 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:37:42 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:42 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:42 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:43 AI_Player.update()	update
2017-01-03 14:37:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:43 AI_Player.update()	update
2017-01-03 14:37:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:43 AI_Player.update()	Search took3ms
2017-01-03 14:37:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:43 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:43 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:43 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:43 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:43 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:43 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:37:43 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:43 AI_Player.update()	update
2017-01-03 14:37:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:43 AI_Player.update()	update
2017-01-03 14:37:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:43 AI_Player.update()	Search took1ms
2017-01-03 14:37:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:43 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:43 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:43 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:43 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:37:43 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:43 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:43 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:43 AI_Player.update()	update
2017-01-03 14:37:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:43 AI_Player.update()	update
2017-01-03 14:37:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:43 AI_Player.update()	Search took3ms
2017-01-03 14:37:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:43 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:43 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:37:43 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:43 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:37:43 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:43 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:37:43 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:43 AI_Player.update()	update
2017-01-03 14:37:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:43 AI_Player.update()	update
2017-01-03 14:37:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:43 AI_Player.update()	Search took4ms
2017-01-03 14:37:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:43 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:43 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:37:43 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:43 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:43 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:43 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:43 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:43 AI_Player.update()	update
2017-01-03 14:37:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:43 AI_Player.update()	update
2017-01-03 14:37:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:43 AI_Player.update()	Search took3ms
2017-01-03 14:37:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:43 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:37:43 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:37:43 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:43 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:43 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:43 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:43 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:44 AI_Player.update()	update
2017-01-03 14:37:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:44 AI_Player.update()	update
2017-01-03 14:37:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:44 AI_Player.update()	Search took3ms
2017-01-03 14:37:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:44 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:37:44 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:44 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:44 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:44 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:44 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:37:44 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:44 AI_Player.update()	update
2017-01-03 14:37:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:44 AI_Player.update()	update
2017-01-03 14:37:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:44 AI_Player.update()	Search took4ms
2017-01-03 14:37:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:44 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:44 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:37:44 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:44 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:44 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:44 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:37:44 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:44 AI_Player.update()	update
2017-01-03 14:37:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:44 AI_Player.update()	update
2017-01-03 14:37:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:44 AI_Player.update()	Search took1ms
2017-01-03 14:37:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:44 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:44 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:44 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:44 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:44 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:44 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:37:44 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:44 AI_Player.update()	update
2017-01-03 14:37:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:44 AI_Player.update()	update
2017-01-03 14:37:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:44 AI_Player.update()	Search took2ms
2017-01-03 14:37:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:44 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:44 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:44 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:44 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:37:44 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:44 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:44 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:44 AI_Player.update()	update
2017-01-03 14:37:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:45 AI_Player.update()	update
2017-01-03 14:37:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:45 AI_Player.update()	Search took4ms
2017-01-03 14:37:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:45 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:45 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:37:45 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:45 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:37:45 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:45 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:37:45 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:45 AI_Player.update()	update
2017-01-03 14:37:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:45 AI_Player.update()	update
2017-01-03 14:37:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:45 AI_Player.update()	Search took2ms
2017-01-03 14:37:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:45 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:45 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:37:45 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:45 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:45 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:45 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:45 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:45 AI_Player.update()	update
2017-01-03 14:37:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:45 AI_Player.update()	update
2017-01-03 14:37:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:45 AI_Player.update()	Search took2ms
2017-01-03 14:37:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:45 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:37:45 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:37:45 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:45 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:45 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:45 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:45 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:45 AI_Player.update()	update
2017-01-03 14:37:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:45 AI_Player.update()	update
2017-01-03 14:37:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:45 AI_Player.update()	Search took3ms
2017-01-03 14:37:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:45 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:37:45 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:45 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:45 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:45 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:45 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:37:45 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:45 AI_Player.update()	update
2017-01-03 14:37:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:45 AI_Player.update()	update
2017-01-03 14:37:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:45 AI_Player.update()	Search took6ms
2017-01-03 14:37:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:45 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:45 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:37:45 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:45 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:45 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:45 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:37:45 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:45 AI_Player.update()	update
2017-01-03 14:37:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:46 AI_Player.update()	update
2017-01-03 14:37:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:46 AI_Player.update()	Search took3ms
2017-01-03 14:37:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:46 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:46 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:46 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:46 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:46 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:46 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:37:46 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:46 AI_Player.update()	update
2017-01-03 14:37:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:46 AI_Player.update()	update
2017-01-03 14:37:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:46 AI_Player.update()	Search took6ms
2017-01-03 14:37:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:46 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:46 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:46 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:46 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:37:46 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:46 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:46 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:46 AI_Player.update()	update
2017-01-03 14:37:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:46 AI_Player.update()	update
2017-01-03 14:37:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:46 AI_Player.update()	Search took3ms
2017-01-03 14:37:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:46 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:46 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:46 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:46 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:46 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:46 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:37:46 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:46 AI_Player.update()	update
2017-01-03 14:37:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:46 AI_Player.update()	update
2017-01-03 14:37:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:46 AI_Player.update()	Search took4ms
2017-01-03 14:37:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:46 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:46 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:46 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:46 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:37:46 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:46 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:46 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:46 AI_Player.update()	update
2017-01-03 14:37:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:46 AI_Player.update()	update
2017-01-03 14:37:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:46 AI_Player.update()	Search took4ms
2017-01-03 14:37:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:46 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:46 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:37:46 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:46 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:37:46 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:46 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:37:46 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:46 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:47 AI_Player.update()	update
2017-01-03 14:37:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:47 AI_Player.update()	update
2017-01-03 14:37:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:47 AI_Player.update()	Search took2ms
2017-01-03 14:37:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:47 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:47 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:37:47 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:47 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:47 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:47 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:47 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:47 AI_Player.update()	update
2017-01-03 14:37:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:47 AI_Player.update()	update
2017-01-03 14:37:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:47 AI_Player.update()	Search took1ms
2017-01-03 14:37:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:47 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:37:47 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:37:47 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:47 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:47 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:47 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:47 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:47 AI_Player.update()	update
2017-01-03 14:37:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:47 AI_Player.update()	update
2017-01-03 14:37:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:47 AI_Player.update()	Search took4ms
2017-01-03 14:37:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:47 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:37:47 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:47 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:47 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:47 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:47 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:37:47 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:47 AI_Player.update()	update
2017-01-03 14:37:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:47 AI_Player.update()	update
2017-01-03 14:37:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:47 AI_Player.update()	Search took2ms
2017-01-03 14:37:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:47 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:47 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:37:47 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:47 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:47 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:47 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:37:47 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:47 AI_Player.update()	update
2017-01-03 14:37:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:48 AI_Player.update()	update
2017-01-03 14:37:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:48 AI_Player.update()	Search took1ms
2017-01-03 14:37:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:48 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:48 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:48 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:48 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:48 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:48 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:37:48 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:48 AI_Player.update()	update
2017-01-03 14:37:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:48 AI_Player.update()	update
2017-01-03 14:37:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:48 AI_Player.update()	Search took4ms
2017-01-03 14:37:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:48 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:48 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:48 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:48 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:37:48 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:48 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:48 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:48 AI_Player.update()	update
2017-01-03 14:37:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:48 AI_Player.update()	update
2017-01-03 14:37:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:48 AI_Player.update()	Search took6ms
2017-01-03 14:37:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:48 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:48 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:37:48 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:48 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:37:48 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:48 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:37:48 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:48 AI_Player.update()	update
2017-01-03 14:37:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:48 AI_Player.update()	update
2017-01-03 14:37:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:48 AI_Player.update()	Search took3ms
2017-01-03 14:37:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:48 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:48 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:37:48 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:48 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:48 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:48 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:48 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:48 AI_Player.update()	update
2017-01-03 14:37:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:48 AI_Player.update()	update
2017-01-03 14:37:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:48 AI_Player.update()	Search took2ms
2017-01-03 14:37:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:48 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:37:48 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:37:48 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:48 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:48 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:48 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:48 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:48 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:49 AI_Player.update()	update
2017-01-03 14:37:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:49 AI_Player.update()	update
2017-01-03 14:37:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:49 AI_Player.update()	Search took3ms
2017-01-03 14:37:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:49 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:37:49 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:49 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:49 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:49 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:49 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:37:49 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:49 AI_Player.update()	update
2017-01-03 14:37:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:49 AI_Player.update()	update
2017-01-03 14:37:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:49 AI_Player.update()	Search took5ms
2017-01-03 14:37:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:49 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:49 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:37:49 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:49 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:49 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:49 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:37:49 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:49 AI_Player.update()	update
2017-01-03 14:37:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:49 AI_Player.update()	update
2017-01-03 14:37:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:49 AI_Player.update()	Search took3ms
2017-01-03 14:37:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:49 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:49 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:49 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:49 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:49 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:49 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:37:49 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:49 AI_Player.update()	update
2017-01-03 14:37:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:49 AI_Player.update()	update
2017-01-03 14:37:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:49 AI_Player.update()	Search took4ms
2017-01-03 14:37:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:49 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:49 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:49 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:49 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:37:49 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:49 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:49 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:49 AI_Player.update()	update
2017-01-03 14:37:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:50 AI_Player.update()	update
2017-01-03 14:37:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:50 AI_Player.update()	Search took5ms
2017-01-03 14:37:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:50 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:50 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:50 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:50 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:50 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:50 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:37:50 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:50 AI_Player.update()	update
2017-01-03 14:37:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:50 AI_Player.update()	update
2017-01-03 14:37:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:50 AI_Player.update()	Search took8ms
2017-01-03 14:37:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:50 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:50 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:50 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:50 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:37:50 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:50 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:50 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:50 AI_Player.update()	update
2017-01-03 14:37:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:50 AI_Player.update()	update
2017-01-03 14:37:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:50 AI_Player.update()	Search took4ms
2017-01-03 14:37:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:50 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:50 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:37:50 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:50 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:37:50 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:50 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:37:50 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:50 AI_Player.update()	update
2017-01-03 14:37:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:50 AI_Player.update()	update
2017-01-03 14:37:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:50 AI_Player.update()	Search took1ms
2017-01-03 14:37:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:50 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:50 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:37:50 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:50 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:50 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:50 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:50 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:50 AI_Player.update()	update
2017-01-03 14:37:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:50 AI_Player.update()	update
2017-01-03 14:37:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:50 AI_Player.update()	Search took2ms
2017-01-03 14:37:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:50 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:37:50 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:37:50 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:50 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:50 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:50 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:50 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:50 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:51 AI_Player.update()	update
2017-01-03 14:37:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:51 AI_Player.update()	update
2017-01-03 14:37:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:51 AI_Player.update()	Search took2ms
2017-01-03 14:37:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:51 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:37:51 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:51 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:51 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:51 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:51 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:37:51 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:51 AI_Player.update()	update
2017-01-03 14:37:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:51 AI_Player.update()	update
2017-01-03 14:37:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:51 AI_Player.update()	Search took3ms
2017-01-03 14:37:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:51 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:51 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:37:51 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:51 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:51 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:51 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:37:51 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:51 AI_Player.update()	update
2017-01-03 14:37:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:51 AI_Player.update()	update
2017-01-03 14:37:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:51 AI_Player.update()	Search took1ms
2017-01-03 14:37:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:51 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:51 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:51 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:51 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:51 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:51 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:37:51 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:51 AI_Player.update()	update
2017-01-03 14:37:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:51 AI_Player.update()	update
2017-01-03 14:37:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:51 AI_Player.update()	Search took3ms
2017-01-03 14:37:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:51 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:51 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:51 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:51 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:37:51 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:51 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:51 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:51 AI_Player.update()	update
2017-01-03 14:37:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:51 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:52 AI_Player.update()	update
2017-01-03 14:37:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:52 AI_Player.update()	Search took8ms
2017-01-03 14:37:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:52 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:52 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:37:52 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:52 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:37:52 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:52 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:37:52 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:52 AI_Player.update()	update
2017-01-03 14:37:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:52 AI_Player.update()	update
2017-01-03 14:37:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:52 AI_Player.update()	Search took3ms
2017-01-03 14:37:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:52 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:52 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:37:52 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:52 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:52 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:52 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:52 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:52 AI_Player.update()	update
2017-01-03 14:37:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:52 AI_Player.update()	update
2017-01-03 14:37:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:52 AI_Player.update()	Search took2ms
2017-01-03 14:37:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:52 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:37:52 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:37:52 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:52 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:52 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:52 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:52 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:52 AI_Player.update()	update
2017-01-03 14:37:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:52 AI_Player.update()	update
2017-01-03 14:37:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:52 AI_Player.update()	Search took3ms
2017-01-03 14:37:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:52 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:37:52 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:52 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:52 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:52 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:52 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:37:52 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:52 AI_Player.update()	update
2017-01-03 14:37:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:52 AI_Player.update()	update
2017-01-03 14:37:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:52 AI_Player.update()	Search took5ms
2017-01-03 14:37:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:52 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:52 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:37:52 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:52 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:52 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:52 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:37:52 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:52 AI_Player.update()	update
2017-01-03 14:37:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:53 AI_Player.update()	update
2017-01-03 14:37:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:53 AI_Player.update()	Search took2ms
2017-01-03 14:37:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:53 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:53 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:53 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:53 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:53 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:53 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:37:53 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:53 AI_Player.update()	update
2017-01-03 14:37:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:53 AI_Player.update()	update
2017-01-03 14:37:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:53 AI_Player.update()	Search took6ms
2017-01-03 14:37:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:53 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:53 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:53 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:53 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:37:53 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:53 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:53 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:53 AI_Player.update()	update
2017-01-03 14:37:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:53 AI_Player.update()	update
2017-01-03 14:37:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:53 AI_Player.update()	Search took2ms
2017-01-03 14:37:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:53 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:53 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:53 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:53 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:53 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:53 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:37:53 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:53 AI_Player.update()	update
2017-01-03 14:37:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:53 AI_Player.update()	update
2017-01-03 14:37:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:53 AI_Player.update()	Search took7ms
2017-01-03 14:37:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:53 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:53 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:53 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:53 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:37:53 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:53 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:53 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:53 AI_Player.update()	update
2017-01-03 14:37:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:53 AI_Player.update()	update
2017-01-03 14:37:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:53 AI_Player.update()	Search took4ms
2017-01-03 14:37:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:53 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:53 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:37:53 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:53 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:37:53 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:53 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:37:53 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:54 AI_Player.update()	update
2017-01-03 14:37:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:54 AI_Player.update()	update
2017-01-03 14:37:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:54 AI_Player.update()	Search took3ms
2017-01-03 14:37:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:54 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:54 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:37:54 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:54 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:54 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:54 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:54 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:54 AI_Player.update()	update
2017-01-03 14:37:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:54 AI_Player.update()	update
2017-01-03 14:37:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:54 AI_Player.update()	Search took2ms
2017-01-03 14:37:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:54 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:37:54 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:37:54 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:54 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:54 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:54 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:54 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:54 AI_Player.update()	update
2017-01-03 14:37:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:54 AI_Player.update()	update
2017-01-03 14:37:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:54 AI_Player.update()	Search took4ms
2017-01-03 14:37:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:54 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:37:54 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:54 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:54 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:54 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:54 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:37:54 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:54 AI_Player.update()	update
2017-01-03 14:37:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:54 AI_Player.update()	update
2017-01-03 14:37:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:54 AI_Player.update()	Search took4ms
2017-01-03 14:37:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:54 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:54 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:37:54 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:54 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:54 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:54 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:37:54 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:54 AI_Player.update()	update
2017-01-03 14:37:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:54 AI_Player.update()	update
2017-01-03 14:37:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:54 AI_Player.update()	Search took1ms
2017-01-03 14:37:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:54 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:54 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:54 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:54 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:54 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:54 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:37:54 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:55 AI_Player.update()	update
2017-01-03 14:37:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:55 AI_Player.update()	update
2017-01-03 14:37:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:55 AI_Player.update()	Search took4ms
2017-01-03 14:37:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:55 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:55 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:55 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:55 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:37:55 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:55 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:55 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:55 AI_Player.update()	update
2017-01-03 14:37:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:55 AI_Player.update()	update
2017-01-03 14:37:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:55 AI_Player.update()	Search took5ms
2017-01-03 14:37:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:55 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:55 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:37:55 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:55 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:37:55 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:55 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:37:55 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:55 AI_Player.update()	update
2017-01-03 14:37:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:55 AI_Player.update()	update
2017-01-03 14:37:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:55 AI_Player.update()	Search took3ms
2017-01-03 14:37:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:55 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:55 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:37:55 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:55 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:55 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:55 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:55 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:55 AI_Player.update()	update
2017-01-03 14:37:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:55 AI_Player.update()	update
2017-01-03 14:37:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:55 AI_Player.update()	Search took2ms
2017-01-03 14:37:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:55 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:37:55 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:37:55 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:55 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:55 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:55 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:55 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:55 AI_Player.update()	update
2017-01-03 14:37:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:56 AI_Player.update()	update
2017-01-03 14:37:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:56 AI_Player.update()	Search took3ms
2017-01-03 14:37:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:56 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:37:56 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:56 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:56 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:56 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:56 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:37:56 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:56 AI_Player.update()	update
2017-01-03 14:37:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:56 AI_Player.update()	update
2017-01-03 14:37:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:56 AI_Player.update()	Search took7ms
2017-01-03 14:37:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:56 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:56 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:37:56 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:56 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:56 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:56 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:37:56 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:56 AI_Player.update()	update
2017-01-03 14:37:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:56 AI_Player.update()	update
2017-01-03 14:37:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:56 AI_Player.update()	Search took3ms
2017-01-03 14:37:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:56 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:56 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:56 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:56 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:56 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:56 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:37:56 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:56 AI_Player.update()	update
2017-01-03 14:37:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:56 AI_Player.update()	update
2017-01-03 14:37:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:56 AI_Player.update()	Search took5ms
2017-01-03 14:37:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:56 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:56 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:56 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:56 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:37:56 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:56 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:56 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:56 AI_Player.update()	update
2017-01-03 14:37:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:56 AI_Player.update()	update
2017-01-03 14:37:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:56 AI_Player.update()	Search took3ms
2017-01-03 14:37:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:56 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:56 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:56 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:56 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:56 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:56 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:37:56 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:56 AI_Player.update()	update
2017-01-03 14:37:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:56 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:57 AI_Player.update()	update
2017-01-03 14:37:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:57 AI_Player.update()	Search took7ms
2017-01-03 14:37:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:57 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:57 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:57 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:57 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:37:57 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:57 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:57 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:57 AI_Player.update()	update
2017-01-03 14:37:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:57 AI_Player.update()	update
2017-01-03 14:37:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:57 AI_Player.update()	Search took3ms
2017-01-03 14:37:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:57 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:57 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:37:57 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:57 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:37:57 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:57 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:37:57 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:57 AI_Player.update()	update
2017-01-03 14:37:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:57 AI_Player.update()	update
2017-01-03 14:37:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:57 AI_Player.update()	Search took3ms
2017-01-03 14:37:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:57 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:57 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:37:57 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:57 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:57 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:57 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:57 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:57 AI_Player.update()	update
2017-01-03 14:37:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:57 AI_Player.update()	update
2017-01-03 14:37:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:57 AI_Player.update()	Search took3ms
2017-01-03 14:37:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:57 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:37:57 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:37:57 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:57 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:57 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:57 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:57 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:57 AI_Player.update()	update
2017-01-03 14:37:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:57 AI_Player.update()	update
2017-01-03 14:37:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:57 AI_Player.update()	Search took3ms
2017-01-03 14:37:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:57 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:37:57 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:57 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:57 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:57 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:57 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:37:57 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:58 AI_Player.update()	update
2017-01-03 14:37:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:58 AI_Player.update()	update
2017-01-03 14:37:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:58 AI_Player.update()	Search took3ms
2017-01-03 14:37:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:58 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:58 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:37:58 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:58 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:58 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:58 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:37:58 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:58 AI_Player.update()	update
2017-01-03 14:37:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:58 AI_Player.update()	update
2017-01-03 14:37:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:58 AI_Player.update()	Search took3ms
2017-01-03 14:37:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:58 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:58 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:58 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:58 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:58 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:58 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:37:58 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:58 AI_Player.update()	update
2017-01-03 14:37:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:58 AI_Player.update()	update
2017-01-03 14:37:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:58 AI_Player.update()	Search took4ms
2017-01-03 14:37:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:58 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:58 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:58 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:58 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:37:58 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:58 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:58 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:58 AI_Player.update()	update
2017-01-03 14:37:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:58 AI_Player.update()	update
2017-01-03 14:37:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:58 AI_Player.update()	Search took5ms
2017-01-03 14:37:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:58 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:58 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:37:58 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:58 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:37:58 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:58 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:37:58 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:58 AI_Player.update()	update
2017-01-03 14:37:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:59 AI_Player.update()	update
2017-01-03 14:37:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:59 AI_Player.update()	Search took3ms
2017-01-03 14:37:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:59 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:59 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:37:59 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:59 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:59 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:59 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:59 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:59 AI_Player.update()	update
2017-01-03 14:37:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:59 AI_Player.update()	update
2017-01-03 14:37:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:59 AI_Player.update()	Search took2ms
2017-01-03 14:37:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:59 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:37:59 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:37:59 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:59 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:59 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:59 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:37:59 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:59 AI_Player.update()	update
2017-01-03 14:37:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:59 AI_Player.update()	update
2017-01-03 14:37:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:59 AI_Player.update()	Search took3ms
2017-01-03 14:37:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:59 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:37:59 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:59 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:59 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:59 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:59 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:37:59 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:59 AI_Player.update()	update
2017-01-03 14:37:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:37:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:37:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:37:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:59 AI_Player.update()	update
2017-01-03 14:37:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:37:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:37:59 AI_Player.update()	Search took8ms
2017-01-03 14:37:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:59 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:37:59 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:37:59 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:59 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:37:59 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:59 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:37:59 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:59 AI_Player.update()	update
2017-01-03 14:37:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:37:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:37:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:37:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:37:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:37:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:37:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:37:59 AI_Player.update()	update
2017-01-03 14:37:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:37:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:37:59 AI_Player.update()	Search took1ms
2017-01-03 14:37:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:37:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:59 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:37:59 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:37:59 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:37:59 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:37:59 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:37:59 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:37:59 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:37:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:37:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:37:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:37:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:37:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:37:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:37:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:37:59 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:00 AI_Player.update()	update
2017-01-03 14:38:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:00 AI_Player.update()	update
2017-01-03 14:38:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:00 AI_Player.update()	Search took4ms
2017-01-03 14:38:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:00 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:00 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:00 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:00 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:00 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:00 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:00 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:00 AI_Player.update()	update
2017-01-03 14:38:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:00 AI_Player.update()	update
2017-01-03 14:38:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:00 AI_Player.update()	Search took4ms
2017-01-03 14:38:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:00 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:00 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:00 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:00 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:00 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:00 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:00 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:00 AI_Player.update()	update
2017-01-03 14:38:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:00 AI_Player.update()	update
2017-01-03 14:38:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:00 AI_Player.update()	Search took5ms
2017-01-03 14:38:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:00 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:00 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:00 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:00 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:00 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:00 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:00 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:00 AI_Player.update()	update
2017-01-03 14:38:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:00 AI_Player.update()	update
2017-01-03 14:38:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:00 AI_Player.update()	Search took3ms
2017-01-03 14:38:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:00 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:00 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:00 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:00 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:38:00 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:00 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:00 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:00 AI_Player.update()	update
2017-01-03 14:38:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:00 AI_Player.update()	update
2017-01-03 14:38:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:00 AI_Player.update()	Search took2ms
2017-01-03 14:38:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:00 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:00 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:38:00 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:00 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:00 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:00 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:00 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:01 AI_Player.update()	update
2017-01-03 14:38:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:01 AI_Player.update()	update
2017-01-03 14:38:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:01 AI_Player.update()	Search took3ms
2017-01-03 14:38:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:01 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:38:01 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:38:01 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:01 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:01 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:01 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:01 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:01 AI_Player.update()	update
2017-01-03 14:38:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:01 AI_Player.update()	update
2017-01-03 14:38:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:01 AI_Player.update()	Search took5ms
2017-01-03 14:38:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:01 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:38:01 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:01 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:01 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:01 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:01 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:01 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:01 AI_Player.update()	update
2017-01-03 14:38:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:01 AI_Player.update()	update
2017-01-03 14:38:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:01 AI_Player.update()	Search took3ms
2017-01-03 14:38:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:01 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:01 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:01 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:01 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:01 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:01 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:38:01 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:01 AI_Player.update()	update
2017-01-03 14:38:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:01 AI_Player.update()	update
2017-01-03 14:38:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:01 AI_Player.update()	Search took2ms
2017-01-03 14:38:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:01 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:01 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:01 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:01 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:01 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:01 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:01 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:01 AI_Player.update()	update
2017-01-03 14:38:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:02 AI_Player.update()	update
2017-01-03 14:38:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:02 AI_Player.update()	Search took4ms
2017-01-03 14:38:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:02 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:02 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:02 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:02 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:02 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:02 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:02 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:02 AI_Player.update()	update
2017-01-03 14:38:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:02 AI_Player.update()	update
2017-01-03 14:38:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:02 AI_Player.update()	Search took6ms
2017-01-03 14:38:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:02 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:02 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:02 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:02 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:38:02 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:02 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:02 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:02 AI_Player.update()	update
2017-01-03 14:38:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:02 AI_Player.update()	update
2017-01-03 14:38:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:02 AI_Player.update()	Search took3ms
2017-01-03 14:38:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:02 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:02 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:38:02 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:02 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:02 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:02 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:02 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:02 AI_Player.update()	update
2017-01-03 14:38:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:02 AI_Player.update()	update
2017-01-03 14:38:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:02 AI_Player.update()	Search took1ms
2017-01-03 14:38:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:02 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:38:02 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:38:02 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:02 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:02 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:02 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:02 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:02 AI_Player.update()	update
2017-01-03 14:38:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:03 AI_Player.update()	update
2017-01-03 14:38:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:03 AI_Player.update()	Search took2ms
2017-01-03 14:38:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:03 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:38:03 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:03 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:03 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:03 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:03 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:03 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:03 AI_Player.update()	update
2017-01-03 14:38:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:03 AI_Player.update()	update
2017-01-03 14:38:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:03 AI_Player.update()	Search took6ms
2017-01-03 14:38:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:03 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:03 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:03 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:03 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:03 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:03 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:38:03 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:03 AI_Player.update()	update
2017-01-03 14:38:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:03 AI_Player.update()	update
2017-01-03 14:38:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:03 AI_Player.update()	Search took2ms
2017-01-03 14:38:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:03 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:03 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:03 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:03 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:03 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:03 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:03 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:03 AI_Player.update()	update
2017-01-03 14:38:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:03 AI_Player.update()	update
2017-01-03 14:38:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:03 AI_Player.update()	Search took4ms
2017-01-03 14:38:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:03 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:03 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:03 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:03 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:03 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:03 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:03 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:03 AI_Player.update()	update
2017-01-03 14:38:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:03 AI_Player.update()	update
2017-01-03 14:38:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:03 AI_Player.update()	Search took3ms
2017-01-03 14:38:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:03 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:03 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:03 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:03 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:03 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:03 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:03 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:03 AI_Player.update()	update
2017-01-03 14:38:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:03 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:04 AI_Player.update()	update
2017-01-03 14:38:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:04 AI_Player.update()	Search took6ms
2017-01-03 14:38:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:04 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:04 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:04 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:04 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:04 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:04 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:04 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:04 AI_Player.update()	update
2017-01-03 14:38:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:04 AI_Player.update()	update
2017-01-03 14:38:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:04 AI_Player.update()	Search took3ms
2017-01-03 14:38:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:04 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:04 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:04 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:04 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:38:04 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:04 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:04 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:04 AI_Player.update()	update
2017-01-03 14:38:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:04 AI_Player.update()	update
2017-01-03 14:38:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:04 AI_Player.update()	Search took2ms
2017-01-03 14:38:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:04 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:04 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:38:04 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:04 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:04 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:04 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:04 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:04 AI_Player.update()	update
2017-01-03 14:38:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:04 AI_Player.update()	update
2017-01-03 14:38:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:04 AI_Player.update()	Search took2ms
2017-01-03 14:38:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:04 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:38:04 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:38:04 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:04 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:04 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:04 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:04 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:04 AI_Player.update()	update
2017-01-03 14:38:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:04 AI_Player.update()	update
2017-01-03 14:38:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:04 AI_Player.update()	Search took4ms
2017-01-03 14:38:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:04 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:38:04 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:04 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:04 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:04 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:04 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:04 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:05 AI_Player.update()	update
2017-01-03 14:38:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:05 AI_Player.update()	update
2017-01-03 14:38:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:05 AI_Player.update()	Search took4ms
2017-01-03 14:38:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:05 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:05 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:05 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:05 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:05 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:05 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:38:05 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:05 AI_Player.update()	update
2017-01-03 14:38:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:05 AI_Player.update()	update
2017-01-03 14:38:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:05 AI_Player.update()	Search took3ms
2017-01-03 14:38:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:05 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:05 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:05 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:05 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:05 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:05 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:05 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:05 AI_Player.update()	update
2017-01-03 14:38:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:05 AI_Player.update()	update
2017-01-03 14:38:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:05 AI_Player.update()	Search took4ms
2017-01-03 14:38:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:05 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:05 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:05 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:05 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:05 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:05 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:05 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:05 AI_Player.update()	update
2017-01-03 14:38:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:05 AI_Player.update()	update
2017-01-03 14:38:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:05 AI_Player.update()	Search took6ms
2017-01-03 14:38:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:05 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:05 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:05 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:05 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:38:05 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:05 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:05 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:05 AI_Player.update()	update
2017-01-03 14:38:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:05 AI_Player.update()	update
2017-01-03 14:38:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:05 AI_Player.update()	Search took3ms
2017-01-03 14:38:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:05 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:05 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:38:05 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:05 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:05 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:05 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:05 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:06 AI_Player.update()	update
2017-01-03 14:38:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:06 AI_Player.update()	update
2017-01-03 14:38:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:06 AI_Player.update()	Search took3ms
2017-01-03 14:38:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:06 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:38:06 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:38:06 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:06 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:06 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:06 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:06 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:06 AI_Player.update()	update
2017-01-03 14:38:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:06 AI_Player.update()	update
2017-01-03 14:38:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:06 AI_Player.update()	Search took4ms
2017-01-03 14:38:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:06 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:38:06 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:06 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:06 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:06 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:06 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:06 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:06 AI_Player.update()	update
2017-01-03 14:38:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:06 AI_Player.update()	update
2017-01-03 14:38:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:06 AI_Player.update()	Search took5ms
2017-01-03 14:38:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:06 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:06 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:06 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:06 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:06 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:06 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:38:06 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:06 AI_Player.update()	update
2017-01-03 14:38:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:06 AI_Player.update()	update
2017-01-03 14:38:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:06 AI_Player.update()	Search took2ms
2017-01-03 14:38:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:06 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:06 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:06 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:06 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:06 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:06 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:06 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:06 AI_Player.update()	update
2017-01-03 14:38:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:07 AI_Player.update()	update
2017-01-03 14:38:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:07 AI_Player.update()	Search took7ms
2017-01-03 14:38:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:07 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:07 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:07 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:07 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:07 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:07 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:07 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:07 AI_Player.update()	update
2017-01-03 14:38:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:07 AI_Player.update()	update
2017-01-03 14:38:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:07 AI_Player.update()	Search took3ms
2017-01-03 14:38:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:07 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:07 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:07 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:07 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:07 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:07 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:07 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:07 AI_Player.update()	update
2017-01-03 14:38:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:07 AI_Player.update()	update
2017-01-03 14:38:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:07 AI_Player.update()	Search took5ms
2017-01-03 14:38:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:07 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:07 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:07 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:07 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:07 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:07 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:07 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:07 AI_Player.update()	update
2017-01-03 14:38:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:07 AI_Player.update()	update
2017-01-03 14:38:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:07 AI_Player.update()	Search took3ms
2017-01-03 14:38:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:07 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:07 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:07 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:07 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:38:07 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:07 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:07 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:07 AI_Player.update()	update
2017-01-03 14:38:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:07 AI_Player.update()	update
2017-01-03 14:38:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:07 AI_Player.update()	Search took2ms
2017-01-03 14:38:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:07 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:07 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:38:07 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:07 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:07 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:07 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:07 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:07 AI_Player.update()	update
2017-01-03 14:38:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:08 AI_Player.update()	update
2017-01-03 14:38:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:08 AI_Player.update()	Search took3ms
2017-01-03 14:38:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:08 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:38:08 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:38:08 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:08 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:08 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:08 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:08 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:08 AI_Player.update()	update
2017-01-03 14:38:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:08 AI_Player.update()	update
2017-01-03 14:38:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:08 AI_Player.update()	Search took3ms
2017-01-03 14:38:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:08 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:38:08 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:08 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:08 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:08 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:08 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:08 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:08 AI_Player.update()	update
2017-01-03 14:38:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:08 AI_Player.update()	update
2017-01-03 14:38:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:08 AI_Player.update()	Search took3ms
2017-01-03 14:38:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:08 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:08 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:08 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:08 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:08 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:08 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:38:08 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:08 AI_Player.update()	update
2017-01-03 14:38:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:08 AI_Player.update()	update
2017-01-03 14:38:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:08 AI_Player.update()	Search took2ms
2017-01-03 14:38:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:08 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:08 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:08 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:08 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:08 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:08 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:08 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:08 AI_Player.update()	update
2017-01-03 14:38:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:08 AI_Player.update()	update
2017-01-03 14:38:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:08 AI_Player.update()	Search took3ms
2017-01-03 14:38:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:08 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:08 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:08 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:08 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:08 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:08 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:08 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:09 AI_Player.update()	update
2017-01-03 14:38:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:09 AI_Player.update()	update
2017-01-03 14:38:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:09 AI_Player.update()	Search took6ms
2017-01-03 14:38:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:09 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:09 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:09 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:09 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:38:09 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:09 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:09 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:09 AI_Player.update()	update
2017-01-03 14:38:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:09 AI_Player.update()	update
2017-01-03 14:38:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:09 AI_Player.update()	Search took2ms
2017-01-03 14:38:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:09 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:09 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:38:09 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:09 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:09 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:09 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:09 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:09 AI_Player.update()	update
2017-01-03 14:38:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:09 AI_Player.update()	update
2017-01-03 14:38:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:09 AI_Player.update()	Search took3ms
2017-01-03 14:38:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:09 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:38:09 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:38:09 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:09 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:09 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:09 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:09 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:09 AI_Player.update()	update
2017-01-03 14:38:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:09 AI_Player.update()	update
2017-01-03 14:38:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:09 AI_Player.update()	Search took4ms
2017-01-03 14:38:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:09 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:38:09 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:09 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:09 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:09 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:09 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:09 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:09 AI_Player.update()	update
2017-01-03 14:38:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:09 AI_Player.update()	update
2017-01-03 14:38:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:09 AI_Player.update()	Search took7ms
2017-01-03 14:38:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:09 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:09 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:09 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:09 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:09 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:09 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:38:09 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:10 AI_Player.update()	update
2017-01-03 14:38:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:10 AI_Player.update()	update
2017-01-03 14:38:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:10 AI_Player.update()	Search took3ms
2017-01-03 14:38:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:10 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:10 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:10 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:10 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:10 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:10 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:10 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:10 AI_Player.update()	update
2017-01-03 14:38:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:10 AI_Player.update()	update
2017-01-03 14:38:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:10 AI_Player.update()	Search took7ms
2017-01-03 14:38:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:10 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:10 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:10 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:10 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:10 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:10 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:10 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:10 AI_Player.update()	update
2017-01-03 14:38:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:10 AI_Player.update()	update
2017-01-03 14:38:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:10 AI_Player.update()	Search took3ms
2017-01-03 14:38:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:10 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:10 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:10 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:10 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:10 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:10 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:10 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:10 AI_Player.update()	update
2017-01-03 14:38:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:10 AI_Player.update()	update
2017-01-03 14:38:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:10 AI_Player.update()	Search took6ms
2017-01-03 14:38:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:10 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:10 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:10 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:10 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:10 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:10 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:10 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:10 AI_Player.update()	update
2017-01-03 14:38:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:10 AI_Player.update()	update
2017-01-03 14:38:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:11 AI_Player.update()	Search took4ms
2017-01-03 14:38:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:11 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:11 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:11 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:11 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:38:11 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:11 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:11 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:11 AI_Player.update()	update
2017-01-03 14:38:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:11 AI_Player.update()	update
2017-01-03 14:38:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:11 AI_Player.update()	Search took3ms
2017-01-03 14:38:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:11 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:11 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:38:11 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:11 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:11 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:11 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:11 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:11 AI_Player.update()	update
2017-01-03 14:38:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:11 AI_Player.update()	update
2017-01-03 14:38:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:11 AI_Player.update()	Search took2ms
2017-01-03 14:38:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:11 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:38:11 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:38:11 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:11 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:11 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:11 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:11 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:11 AI_Player.update()	update
2017-01-03 14:38:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:11 AI_Player.update()	update
2017-01-03 14:38:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:11 AI_Player.update()	Search took4ms
2017-01-03 14:38:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:11 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:38:11 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:11 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:11 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:11 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:11 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:11 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:11 AI_Player.update()	update
2017-01-03 14:38:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:11 AI_Player.update()	update
2017-01-03 14:38:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:11 AI_Player.update()	Search took4ms
2017-01-03 14:38:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:11 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:11 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:11 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:11 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:11 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:11 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:38:11 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:11 AI_Player.update()	update
2017-01-03 14:38:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:12 AI_Player.update()	update
2017-01-03 14:38:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:12 AI_Player.update()	Search took3ms
2017-01-03 14:38:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:12 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:12 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:12 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:12 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:12 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:12 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:12 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:12 AI_Player.update()	update
2017-01-03 14:38:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:12 AI_Player.update()	update
2017-01-03 14:38:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:12 AI_Player.update()	Search took4ms
2017-01-03 14:38:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:12 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:12 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:12 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:12 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:12 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:12 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:12 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:12 AI_Player.update()	update
2017-01-03 14:38:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:12 AI_Player.update()	update
2017-01-03 14:38:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:12 AI_Player.update()	Search took6ms
2017-01-03 14:38:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:12 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:12 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:12 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:12 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:38:12 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:12 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:12 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:12 AI_Player.update()	update
2017-01-03 14:38:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:12 AI_Player.update()	update
2017-01-03 14:38:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:12 AI_Player.update()	Search took2ms
2017-01-03 14:38:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:12 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:12 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:38:12 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:12 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:12 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:12 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:12 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:12 AI_Player.update()	update
2017-01-03 14:38:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:12 AI_Player.update()	update
2017-01-03 14:38:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:12 AI_Player.update()	Search took4ms
2017-01-03 14:38:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:12 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:38:12 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:38:12 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:12 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:12 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:12 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:12 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:12 AI_Player.update()	update
2017-01-03 14:38:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:13 AI_Player.update()	update
2017-01-03 14:38:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:13 AI_Player.update()	Search took7ms
2017-01-03 14:38:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:13 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:38:13 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:13 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:13 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:13 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:13 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:13 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:13 AI_Player.update()	update
2017-01-03 14:38:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:13 AI_Player.update()	update
2017-01-03 14:38:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:13 AI_Player.update()	Search took7ms
2017-01-03 14:38:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:13 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:13 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:13 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:13 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:13 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:13 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:38:13 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:13 AI_Player.update()	update
2017-01-03 14:38:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:13 AI_Player.update()	update
2017-01-03 14:38:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:13 AI_Player.update()	Search took4ms
2017-01-03 14:38:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:13 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:13 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:13 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:13 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:13 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:13 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:13 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:13 AI_Player.update()	update
2017-01-03 14:38:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:13 AI_Player.update()	update
2017-01-03 14:38:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:13 AI_Player.update()	Search took5ms
2017-01-03 14:38:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:13 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:13 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:13 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:13 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:13 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:13 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:13 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:13 AI_Player.update()	update
2017-01-03 14:38:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:13 AI_Player.update()	update
2017-01-03 14:38:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:13 AI_Player.update()	Search took2ms
2017-01-03 14:38:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:13 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:13 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:13 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:13 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:13 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:13 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:13 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:14 AI_Player.update()	update
2017-01-03 14:38:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:14 AI_Player.update()	update
2017-01-03 14:38:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:14 AI_Player.update()	Search took5ms
2017-01-03 14:38:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:14 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:14 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:14 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:14 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:14 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:14 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:14 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:14 AI_Player.update()	update
2017-01-03 14:38:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:14 AI_Player.update()	update
2017-01-03 14:38:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:14 AI_Player.update()	Search took3ms
2017-01-03 14:38:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:14 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:14 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:14 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:14 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:38:14 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:14 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:14 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:14 AI_Player.update()	update
2017-01-03 14:38:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:14 AI_Player.update()	update
2017-01-03 14:38:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:14 AI_Player.update()	Search took2ms
2017-01-03 14:38:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:14 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:14 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:38:14 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:14 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:14 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:14 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:14 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:14 AI_Player.update()	update
2017-01-03 14:38:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:14 AI_Player.update()	update
2017-01-03 14:38:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:14 AI_Player.update()	Search took2ms
2017-01-03 14:38:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:14 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:38:14 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:38:14 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:14 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:14 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:14 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:14 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:14 AI_Player.update()	update
2017-01-03 14:38:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:14 AI_Player.update()	update
2017-01-03 14:38:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:14 AI_Player.update()	Search took6ms
2017-01-03 14:38:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:14 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:38:14 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:14 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:14 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:14 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:14 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:14 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:15 AI_Player.update()	update
2017-01-03 14:38:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:15 AI_Player.update()	update
2017-01-03 14:38:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:15 AI_Player.update()	Search took3ms
2017-01-03 14:38:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:15 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:15 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:15 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:15 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:15 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:15 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:38:15 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:15 AI_Player.update()	update
2017-01-03 14:38:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:15 AI_Player.update()	update
2017-01-03 14:38:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:15 AI_Player.update()	Search took2ms
2017-01-03 14:38:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:15 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:15 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:15 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:15 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:15 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:15 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:15 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:15 AI_Player.update()	update
2017-01-03 14:38:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:15 AI_Player.update()	update
2017-01-03 14:38:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:15 AI_Player.update()	Search took5ms
2017-01-03 14:38:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:15 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:15 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:15 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:15 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:15 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:15 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:15 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:15 AI_Player.update()	update
2017-01-03 14:38:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:15 AI_Player.update()	update
2017-01-03 14:38:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:15 AI_Player.update()	Search took3ms
2017-01-03 14:38:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:15 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:15 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:15 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:15 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:38:15 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:15 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:15 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:15 AI_Player.update()	update
2017-01-03 14:38:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:16 AI_Player.update()	update
2017-01-03 14:38:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:16 AI_Player.update()	Search took8ms
2017-01-03 14:38:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:16 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:16 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:38:16 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:16 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:16 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:16 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:16 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:16 AI_Player.update()	update
2017-01-03 14:38:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:16 AI_Player.update()	update
2017-01-03 14:38:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:16 AI_Player.update()	Search took2ms
2017-01-03 14:38:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:16 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:38:16 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:38:16 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:16 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:16 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:16 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:16 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:16 AI_Player.update()	update
2017-01-03 14:38:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:16 AI_Player.update()	update
2017-01-03 14:38:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:16 AI_Player.update()	Search took2ms
2017-01-03 14:38:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:16 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:38:16 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:16 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:16 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:16 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:16 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:16 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:16 AI_Player.update()	update
2017-01-03 14:38:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:16 AI_Player.update()	update
2017-01-03 14:38:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:16 AI_Player.update()	Search took6ms
2017-01-03 14:38:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:16 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:16 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:16 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:16 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:16 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:16 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:38:16 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:16 AI_Player.update()	update
2017-01-03 14:38:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:16 AI_Player.update()	update
2017-01-03 14:38:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:16 AI_Player.update()	Search took3ms
2017-01-03 14:38:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:16 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:16 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:16 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:16 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:16 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:16 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:16 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:16 AI_Player.update()	update
2017-01-03 14:38:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:17 AI_Player.update()	update
2017-01-03 14:38:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:17 AI_Player.update()	Search took6ms
2017-01-03 14:38:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:17 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:17 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:17 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:17 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:17 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:17 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:17 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:17 AI_Player.update()	update
2017-01-03 14:38:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:17 AI_Player.update()	update
2017-01-03 14:38:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:17 AI_Player.update()	Search took4ms
2017-01-03 14:38:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:17 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:17 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:17 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:17 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:17 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:17 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:17 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:17 AI_Player.update()	update
2017-01-03 14:38:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:17 AI_Player.update()	update
2017-01-03 14:38:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:17 AI_Player.update()	Search took6ms
2017-01-03 14:38:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:17 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:17 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:17 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:17 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:17 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:17 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:17 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:17 AI_Player.update()	update
2017-01-03 14:38:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:17 AI_Player.update()	update
2017-01-03 14:38:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:17 AI_Player.update()	Search took4ms
2017-01-03 14:38:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:17 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:17 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:17 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:17 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:38:17 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:17 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:17 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:17 AI_Player.update()	update
2017-01-03 14:38:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:17 AI_Player.update()	update
2017-01-03 14:38:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:17 AI_Player.update()	Search took2ms
2017-01-03 14:38:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:17 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:17 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:38:17 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:17 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:17 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:17 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:17 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:18 AI_Player.update()	update
2017-01-03 14:38:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:18 AI_Player.update()	update
2017-01-03 14:38:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:18 AI_Player.update()	Search took1ms
2017-01-03 14:38:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:18 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:38:18 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:38:18 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:18 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:18 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:18 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:18 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:18 AI_Player.update()	update
2017-01-03 14:38:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:18 AI_Player.update()	update
2017-01-03 14:38:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:18 AI_Player.update()	Search took3ms
2017-01-03 14:38:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:18 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:38:18 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:18 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:18 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:18 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:18 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:18 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:18 AI_Player.update()	update
2017-01-03 14:38:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:18 AI_Player.update()	update
2017-01-03 14:38:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:18 AI_Player.update()	Search took4ms
2017-01-03 14:38:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:18 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:18 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:18 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:18 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:18 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:18 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:38:18 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:18 AI_Player.update()	update
2017-01-03 14:38:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:18 AI_Player.update()	update
2017-01-03 14:38:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:18 AI_Player.update()	Search took2ms
2017-01-03 14:38:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:18 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:18 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:18 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:18 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:18 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:18 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:18 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:18 AI_Player.update()	update
2017-01-03 14:38:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:18 AI_Player.update()	update
2017-01-03 14:38:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:18 AI_Player.update()	Search took4ms
2017-01-03 14:38:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:18 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:18 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:18 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:18 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:18 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:18 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:18 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:19 AI_Player.update()	update
2017-01-03 14:38:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:19 AI_Player.update()	update
2017-01-03 14:38:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:19 AI_Player.update()	Search took4ms
2017-01-03 14:38:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:19 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:19 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:19 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:19 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:38:19 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:19 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:19 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:19 AI_Player.update()	update
2017-01-03 14:38:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:19 AI_Player.update()	update
2017-01-03 14:38:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:19 AI_Player.update()	Search took3ms
2017-01-03 14:38:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:19 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:19 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:38:19 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:19 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:19 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:19 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:19 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:19 AI_Player.update()	update
2017-01-03 14:38:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:19 AI_Player.update()	update
2017-01-03 14:38:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:19 AI_Player.update()	Search took2ms
2017-01-03 14:38:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:19 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:38:19 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:38:19 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:19 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:19 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:19 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:19 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:19 AI_Player.update()	update
2017-01-03 14:38:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:19 AI_Player.update()	update
2017-01-03 14:38:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:19 AI_Player.update()	Search took1ms
2017-01-03 14:38:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:19 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:38:19 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:19 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:19 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:19 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:19 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:19 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:19 AI_Player.update()	update
2017-01-03 14:38:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:20 AI_Player.update()	update
2017-01-03 14:38:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:20 AI_Player.update()	Search took3ms
2017-01-03 14:38:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:20 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:20 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:20 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:20 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:20 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:20 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:38:20 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:20 AI_Player.update()	update
2017-01-03 14:38:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:20 AI_Player.update()	update
2017-01-03 14:38:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:20 AI_Player.update()	Search took1ms
2017-01-03 14:38:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:20 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:20 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:20 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:20 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:20 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:20 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:20 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:20 AI_Player.update()	update
2017-01-03 14:38:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:20 AI_Player.update()	update
2017-01-03 14:38:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:20 AI_Player.update()	Search took6ms
2017-01-03 14:38:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:20 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:20 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:20 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:20 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:20 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:20 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:20 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:20 AI_Player.update()	update
2017-01-03 14:38:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:20 AI_Player.update()	update
2017-01-03 14:38:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:20 AI_Player.update()	Search took3ms
2017-01-03 14:38:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:20 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:20 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:20 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:20 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:20 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:20 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:20 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:20 AI_Player.update()	update
2017-01-03 14:38:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:20 AI_Player.update()	update
2017-01-03 14:38:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:20 AI_Player.update()	Search took7ms
2017-01-03 14:38:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:20 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:20 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:20 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:20 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:20 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:20 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:20 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:20 AI_Player.update()	update
2017-01-03 14:38:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:21 AI_Player.update()	update
2017-01-03 14:38:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:21 AI_Player.update()	Search took4ms
2017-01-03 14:38:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:21 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:21 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:21 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:21 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:38:21 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:21 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:21 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:21 AI_Player.update()	update
2017-01-03 14:38:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:21 AI_Player.update()	update
2017-01-03 14:38:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:21 AI_Player.update()	Search took4ms
2017-01-03 14:38:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:21 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:21 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:38:21 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:21 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:21 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:21 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:21 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:21 AI_Player.update()	update
2017-01-03 14:38:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:21 AI_Player.update()	update
2017-01-03 14:38:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:21 AI_Player.update()	Search took3ms
2017-01-03 14:38:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:21 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:38:21 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:38:21 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:21 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:21 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:21 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:21 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:21 AI_Player.update()	update
2017-01-03 14:38:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:21 AI_Player.update()	update
2017-01-03 14:38:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:21 AI_Player.update()	Search took2ms
2017-01-03 14:38:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:21 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:38:21 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:21 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:21 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:21 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:21 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:21 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:21 AI_Player.update()	update
2017-01-03 14:38:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:21 AI_Player.update()	update
2017-01-03 14:38:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:21 AI_Player.update()	Search took4ms
2017-01-03 14:38:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:21 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:21 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:21 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:21 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:21 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:21 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:38:21 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:22 AI_Player.update()	update
2017-01-03 14:38:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:22 AI_Player.update()	update
2017-01-03 14:38:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:22 AI_Player.update()	Search took3ms
2017-01-03 14:38:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:22 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:22 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:22 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:22 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:22 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:22 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:22 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:22 AI_Player.update()	update
2017-01-03 14:38:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:22 AI_Player.update()	update
2017-01-03 14:38:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:22 AI_Player.update()	Search took3ms
2017-01-03 14:38:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:22 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:22 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:22 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:22 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:22 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:22 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:22 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:22 AI_Player.update()	update
2017-01-03 14:38:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:22 AI_Player.update()	update
2017-01-03 14:38:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:22 AI_Player.update()	Search took6ms
2017-01-03 14:38:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:22 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:22 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:22 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:22 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:38:22 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:22 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:22 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:22 AI_Player.update()	update
2017-01-03 14:38:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:22 AI_Player.update()	update
2017-01-03 14:38:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:22 AI_Player.update()	Search took1ms
2017-01-03 14:38:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:22 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:22 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:38:22 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:22 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:22 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:22 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:22 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:22 AI_Player.update()	update
2017-01-03 14:38:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:22 AI_Player.update()	update
2017-01-03 14:38:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:22 AI_Player.update()	Search took2ms
2017-01-03 14:38:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:22 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:38:22 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:38:22 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:22 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:22 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:22 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:22 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:22 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:23 AI_Player.update()	update
2017-01-03 14:38:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:23 AI_Player.update()	update
2017-01-03 14:38:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:23 AI_Player.update()	Search took3ms
2017-01-03 14:38:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:23 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:38:23 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:23 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:23 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:23 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:23 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:23 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:23 AI_Player.update()	update
2017-01-03 14:38:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:23 AI_Player.update()	update
2017-01-03 14:38:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:23 AI_Player.update()	Search took4ms
2017-01-03 14:38:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:23 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:23 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:23 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:23 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:23 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:23 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:38:23 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:23 AI_Player.update()	update
2017-01-03 14:38:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:23 AI_Player.update()	update
2017-01-03 14:38:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:23 AI_Player.update()	Search took3ms
2017-01-03 14:38:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:23 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:23 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:23 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:23 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:23 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:23 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:23 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:23 AI_Player.update()	update
2017-01-03 14:38:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:23 AI_Player.update()	update
2017-01-03 14:38:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:23 AI_Player.update()	Search took7ms
2017-01-03 14:38:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:23 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:23 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:23 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:23 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:23 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:23 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:23 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:23 AI_Player.update()	update
2017-01-03 14:38:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:23 AI_Player.update()	update
2017-01-03 14:38:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:23 AI_Player.update()	Search took4ms
2017-01-03 14:38:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:23 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:23 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:23 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:23 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:23 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:23 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:23 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:24 AI_Player.update()	update
2017-01-03 14:38:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:24 AI_Player.update()	update
2017-01-03 14:38:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:24 AI_Player.update()	Search took11ms
2017-01-03 14:38:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:24 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:24 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:24 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:24 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:24 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:24 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:24 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:24 AI_Player.update()	update
2017-01-03 14:38:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:24 AI_Player.update()	update
2017-01-03 14:38:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:24 AI_Player.update()	Search took2ms
2017-01-03 14:38:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:24 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:24 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:24 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:24 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:38:24 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:24 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:24 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:24 AI_Player.update()	update
2017-01-03 14:38:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:24 AI_Player.update()	update
2017-01-03 14:38:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:24 AI_Player.update()	Search took2ms
2017-01-03 14:38:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:24 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:24 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:38:24 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:24 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:24 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:24 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:24 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:24 AI_Player.update()	update
2017-01-03 14:38:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:24 AI_Player.update()	update
2017-01-03 14:38:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:24 AI_Player.update()	Search took3ms
2017-01-03 14:38:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:24 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:38:24 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:38:24 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:24 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:24 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:24 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:24 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:25 AI_Player.update()	update
2017-01-03 14:38:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:25 AI_Player.update()	update
2017-01-03 14:38:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:25 AI_Player.update()	Search took4ms
2017-01-03 14:38:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:25 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:38:25 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:25 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:25 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:25 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:25 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:25 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:25 AI_Player.update()	update
2017-01-03 14:38:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:25 AI_Player.update()	update
2017-01-03 14:38:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:25 AI_Player.update()	Search took3ms
2017-01-03 14:38:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:25 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:25 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:25 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:25 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:25 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:25 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:38:25 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:25 AI_Player.update()	update
2017-01-03 14:38:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:25 AI_Player.update()	update
2017-01-03 14:38:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:25 AI_Player.update()	Search took3ms
2017-01-03 14:38:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:25 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:25 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:25 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:25 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:25 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:25 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:25 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:25 AI_Player.update()	update
2017-01-03 14:38:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:25 AI_Player.update()	update
2017-01-03 14:38:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:25 AI_Player.update()	Search took5ms
2017-01-03 14:38:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:25 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:25 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:25 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:25 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:25 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:25 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:25 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:25 AI_Player.update()	update
2017-01-03 14:38:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:26 AI_Player.update()	update
2017-01-03 14:38:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:26 AI_Player.update()	Search took5ms
2017-01-03 14:38:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:26 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:26 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:26 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:26 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:38:26 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:26 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:26 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:26 AI_Player.update()	update
2017-01-03 14:38:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:26 AI_Player.update()	update
2017-01-03 14:38:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:26 AI_Player.update()	Search took2ms
2017-01-03 14:38:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:26 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:26 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:38:26 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:26 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:26 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:26 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:26 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:26 AI_Player.update()	update
2017-01-03 14:38:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:26 AI_Player.update()	update
2017-01-03 14:38:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:26 AI_Player.update()	Search took2ms
2017-01-03 14:38:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:26 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:38:26 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:38:26 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:26 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:26 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:26 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:26 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:26 AI_Player.update()	update
2017-01-03 14:38:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:26 AI_Player.update()	update
2017-01-03 14:38:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:26 AI_Player.update()	Search took3ms
2017-01-03 14:38:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:26 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:38:26 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:26 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:26 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:26 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:26 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:26 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:26 AI_Player.update()	update
2017-01-03 14:38:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:26 AI_Player.update()	update
2017-01-03 14:38:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:26 AI_Player.update()	Search took7ms
2017-01-03 14:38:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:26 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:26 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:26 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:26 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:26 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:26 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:38:26 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:26 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:27 AI_Player.update()	update
2017-01-03 14:38:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:27 AI_Player.update()	update
2017-01-03 14:38:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:27 AI_Player.update()	Search took2ms
2017-01-03 14:38:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:27 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:27 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:27 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:27 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:27 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:27 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:27 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:27 AI_Player.update()	update
2017-01-03 14:38:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:27 AI_Player.update()	update
2017-01-03 14:38:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:27 AI_Player.update()	Search took6ms
2017-01-03 14:38:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:27 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:27 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:27 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:27 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:27 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:27 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:27 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:27 AI_Player.update()	update
2017-01-03 14:38:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:27 AI_Player.update()	update
2017-01-03 14:38:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:27 AI_Player.update()	Search took2ms
2017-01-03 14:38:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:27 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:27 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:27 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:27 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:27 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:27 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:27 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:27 AI_Player.update()	update
2017-01-03 14:38:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:27 AI_Player.update()	update
2017-01-03 14:38:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:27 AI_Player.update()	Search took5ms
2017-01-03 14:38:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:27 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:27 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:27 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:27 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:27 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:27 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:27 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:27 AI_Player.update()	update
2017-01-03 14:38:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:27 AI_Player.update()	update
2017-01-03 14:38:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:27 AI_Player.update()	Search took2ms
2017-01-03 14:38:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:27 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:27 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:27 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:27 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:38:27 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:27 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:27 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:27 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:28 AI_Player.update()	update
2017-01-03 14:38:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:28 AI_Player.update()	update
2017-01-03 14:38:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:28 AI_Player.update()	Search took2ms
2017-01-03 14:38:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:28 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:28 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:38:28 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:28 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:28 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:28 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:28 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:28 AI_Player.update()	update
2017-01-03 14:38:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:28 AI_Player.update()	update
2017-01-03 14:38:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:28 AI_Player.update()	Search took2ms
2017-01-03 14:38:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:28 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:38:28 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:38:28 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:28 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:28 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:28 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:28 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:28 AI_Player.update()	update
2017-01-03 14:38:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:28 AI_Player.update()	update
2017-01-03 14:38:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:28 AI_Player.update()	Search took3ms
2017-01-03 14:38:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:28 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:38:28 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:28 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:28 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:28 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:28 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:28 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:28 AI_Player.update()	update
2017-01-03 14:38:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:28 AI_Player.update()	update
2017-01-03 14:38:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:28 AI_Player.update()	Search took3ms
2017-01-03 14:38:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:28 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:28 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:28 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:28 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:28 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:28 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:38:28 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:28 AI_Player.update()	update
2017-01-03 14:38:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:28 AI_Player.update()	update
2017-01-03 14:38:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:28 AI_Player.update()	Search took3ms
2017-01-03 14:38:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:28 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:28 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:28 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:28 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:28 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:28 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:28 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:29 AI_Player.update()	update
2017-01-03 14:38:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:29 AI_Player.update()	update
2017-01-03 14:38:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:29 AI_Player.update()	Search took4ms
2017-01-03 14:38:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:29 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:29 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:29 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:29 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:29 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:29 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:29 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:29 AI_Player.update()	update
2017-01-03 14:38:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:29 AI_Player.update()	update
2017-01-03 14:38:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:29 AI_Player.update()	Search took7ms
2017-01-03 14:38:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:29 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:29 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:29 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:29 AI_Player.update()		11,	1001,	111,	1110,	11,	110,	11
2017-01-03 14:38:29 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:29 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:29 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:29 AI_Player.update()	update
2017-01-03 14:38:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:29 AI_Player.update()	update
2017-01-03 14:38:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:29 AI_Player.update()	Search took1ms
2017-01-03 14:38:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:29 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:29 AI_Player.update()		111,	11,	101,	101,	1011,	101,	111
2017-01-03 14:38:29 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:29 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:29 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:29 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:29 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:29 AI_Player.update()	update
2017-01-03 14:38:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:29 AI_Player.update()	update
2017-01-03 14:38:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:29 AI_Player.update()	Search took1ms
2017-01-03 14:38:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:29 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 14:38:29 AI_Player.update()		111,	1001,	101,	101,	1011,	101,	111
2017-01-03 14:38:29 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:29 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:29 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:29 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:29 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:29 AI_Player.update()	update
2017-01-03 14:38:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:30 AI_Player.update()	update
2017-01-03 14:38:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:30 AI_Player.update()	Search took3ms
2017-01-03 14:38:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:30 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 14:38:30 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:30 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:30 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:30 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:30 AI_Player.update()		110,	1010,	101,	11,	110,	1100,	1001
2017-01-03 14:38:30 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:30 AI_Player.update()	update
2017-01-03 14:38:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:30 AI_Player.update()	update
2017-01-03 14:38:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:30 AI_Player.update()	Search took6ms
2017-01-03 14:38:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:30 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:30 AI_Player.update()		111,	1010,	101,	101,	1011,	101,	111
2017-01-03 14:38:30 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:30 AI_Player.update()		11,	101,	111,	1110,	11,	110,	11
2017-01-03 14:38:30 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:30 AI_Player.update()		110,	11,	101,	11,	110,	1100,	1001
2017-01-03 14:38:30 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:30 AI_Player.update()	update
2017-01-03 14:38:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:30 AI_Player.update()	update
2017-01-03 14:38:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:38:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:38:30 AI_Player.update()	Search took1ms
2017-01-03 14:38:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:30 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 14:38:30 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:30 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:30 AI_Player.update()		11,	1010,	111,	1110,	11,	110,	11
2017-01-03 14:38:30 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:30 AI_Player.update()		110,	1001,	101,	11,	110,	1100,	1001
2017-01-03 14:38:30 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:30 AI_Player.update()	update
2017-01-03 14:38:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:38:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:38:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:38:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:38:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:30 AI_Player.update()	update
2017-01-03 14:38:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:38:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:38:30 AI_Player.update()	Search took5ms
2017-01-03 14:38:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:38:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:30 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 14:38:30 AI_Player.update()		111,	101,	101,	101,	1011,	101,	111
2017-01-03 14:38:30 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 14:38:30 AI_Player.update()		11,	11,	111,	1110,	11,	110,	11
2017-01-03 14:38:30 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 14:38:30 AI_Player.update()		110,	101,	101,	11,	110,	1100,	1001
2017-01-03 14:38:30 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 14:38:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:38:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:38:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:38:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:38:30 AI_Player.update()	update
2017-01-03 14:38:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:38:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:38:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:38:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:38:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:38:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:38:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:38:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:38:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:38:30 GameBoard.setupTreasurePanel()	1 1
