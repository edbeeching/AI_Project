2017-01-03 14:48:06 GameBoard.<init>()	Hello World!
2017-01-03 14:48:06 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-03 14:48:07 QueryProlog.initialise()	setup(h2/h1). suceeded
2017-01-03 14:48:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:07 GameBoard.setupBoardFromString()	Board created
2017-01-03 14:48:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:48:07 GameBoard.initialise()	[chest, crown, gem, helmet, sword]
2017-01-03 14:48:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:48:07 GameBoard.initialise()	[candle, book, map, keys, ring]
2017-01-03 14:48:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:07 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-03 14:48:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	null
2017-01-03 14:48:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:48:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:48:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:07 AI_Player.update()	update
2017-01-03 14:48:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:07 AI_Player.update()	Search took3ms
2017-01-03 14:48:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:07 AI_Player.update()		110,	1110,	111,	101,	111,	1010,	11
2017-01-03 14:48:07 AI_Player.update()		1011,	1001,	110,	1001,	101,	110,	110
2017-01-03 14:48:07 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1100,	1011
2017-01-03 14:48:07 AI_Player.update()		111,	101,	11,	1101,	1101,	1010,	1101
2017-01-03 14:48:07 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	11,	1011
2017-01-03 14:48:07 AI_Player.update()		1100,	1110,	1010,	1010,	101,	1001,	11
2017-01-03 14:48:07 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1100,	1001
2017-01-03 14:48:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:48:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:48:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:48:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:07 AI_Player.update()	update
2017-01-03 14:48:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:48:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:07 AI_Player.update()	update
2017-01-03 14:48:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:07 AI_Player.update()	Search took2ms
2017-01-03 14:48:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:07 AI_Player.update()		110,	1110,	111,	101,	111,	1010,	11
2017-01-03 14:48:07 AI_Player.update()		1001,	110,	1001,	101,	110,	110,	1011
2017-01-03 14:48:07 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1100,	1011
2017-01-03 14:48:07 AI_Player.update()		111,	101,	11,	1101,	1101,	1010,	1101
2017-01-03 14:48:07 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	11,	1011
2017-01-03 14:48:07 AI_Player.update()		1100,	1110,	1010,	1010,	101,	1001,	11
2017-01-03 14:48:07 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1100,	1001
2017-01-03 14:48:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:48:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:07 AI_Player.update()	update
2017-01-03 14:48:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:48:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:07 AI_Player.update()	update
2017-01-03 14:48:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:07 AI_Player.update()	Search took1ms
2017-01-03 14:48:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:07 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-03 14:48:07 AI_Player.update()		1001,	1010,	1001,	101,	110,	110,	1011
2017-01-03 14:48:07 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-03 14:48:07 AI_Player.update()		111,	1100,	11,	1101,	1101,	1010,	1101
2017-01-03 14:48:07 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	11,	1011
2017-01-03 14:48:07 AI_Player.update()		1100,	1010,	1010,	1010,	101,	1001,	11
2017-01-03 14:48:07 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1100,	1001
2017-01-03 14:48:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:48:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:07 AI_Player.update()	update
2017-01-03 14:48:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:48:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:07 AI_Player.update()	update
2017-01-03 14:48:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:07 AI_Player.update()	Search took2ms
2017-01-03 14:48:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:07 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-03 14:48:07 AI_Player.update()		1001,	1010,	1001,	101,	110,	110,	1011
2017-01-03 14:48:07 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-03 14:48:07 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1101,	111
2017-01-03 14:48:07 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	11,	1011
2017-01-03 14:48:07 AI_Player.update()		1100,	1010,	1010,	1010,	101,	1001,	11
2017-01-03 14:48:07 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1100,	1001
2017-01-03 14:48:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 14:48:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:08 AI_Player.update()	update
2017-01-03 14:48:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 14:48:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 14:48:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 14:48:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 14:48:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 14:48:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 14:48:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 14:48:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 14:48:08 GameBoard.setupTreasurePanel()	adding book
2017-01-03 14:48:08 GameBoard.setupTreasurePanel()	adding map
2017-01-03 14:48:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 14:48:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 14:48:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:08 AI_Player.update()	update
2017-01-03 14:48:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:08 AI_Player.update()	Search took5ms
2017-01-03 14:48:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:08 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-03 14:48:08 AI_Player.update()		1001,	101,	1001,	101,	110,	110,	1011
2017-01-03 14:48:08 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-03 14:48:08 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1101,	111
2017-01-03 14:48:08 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	11,	1011
2017-01-03 14:48:08 AI_Player.update()		1100,	1110,	1010,	1010,	101,	1001,	11
2017-01-03 14:48:08 AI_Player.update()		1100,	110,	1101,	110,	1101,	1100,	1001
2017-01-03 14:48:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:08 AI_Player.update()	update
2017-01-03 14:48:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:08 AI_Player.update()	update
2017-01-03 14:48:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:08 AI_Player.update()	Search took1ms
2017-01-03 14:48:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:08 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-03 14:48:08 AI_Player.update()		1001,	101,	1001,	101,	110,	110,	1011
2017-01-03 14:48:08 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-03 14:48:08 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1101,	111
2017-01-03 14:48:08 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	11,	1011
2017-01-03 14:48:08 AI_Player.update()		11,	1100,	1110,	1010,	1010,	101,	1001
2017-01-03 14:48:08 AI_Player.update()		1100,	110,	1101,	110,	1101,	1100,	1001
2017-01-03 14:48:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:08 AI_Player.update()	update
2017-01-03 14:48:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:08 AI_Player.update()	update
2017-01-03 14:48:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:08 AI_Player.update()	Search took2ms
2017-01-03 14:48:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:08 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-03 14:48:08 AI_Player.update()		1001,	11,	1001,	101,	110,	110,	1011
2017-01-03 14:48:08 AI_Player.update()		1110,	1110,	1110,	1001,	111,	1100,	1011
2017-01-03 14:48:08 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1101,	111
2017-01-03 14:48:08 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	11,	1011
2017-01-03 14:48:08 AI_Player.update()		11,	110,	1110,	1010,	1010,	101,	1001
2017-01-03 14:48:08 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1100,	1001
2017-01-03 14:48:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:08 AI_Player.update()	update
2017-01-03 14:48:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:08 AI_Player.update()	update
2017-01-03 14:48:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:08 AI_Player.update()	Search took4ms
2017-01-03 14:48:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:08 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:08 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:08 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:08 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:08 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:08 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:08 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:08 AI_Player.update()	update
2017-01-03 14:48:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:09 AI_Player.update()	update
2017-01-03 14:48:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:09 AI_Player.update()	Search took2ms
2017-01-03 14:48:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:09 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:09 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:09 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:09 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:09 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:09 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:09 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:09 AI_Player.update()	update
2017-01-03 14:48:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:09 AI_Player.update()	update
2017-01-03 14:48:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:09 AI_Player.update()	Search took2ms
2017-01-03 14:48:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:09 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:09 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:09 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:09 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:09 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:09 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:09 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:09 AI_Player.update()	update
2017-01-03 14:48:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:09 AI_Player.update()	update
2017-01-03 14:48:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:09 AI_Player.update()	Search took1ms
2017-01-03 14:48:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:09 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:09 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:09 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:09 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:09 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:09 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:09 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:09 AI_Player.update()	update
2017-01-03 14:48:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:09 AI_Player.update()	update
2017-01-03 14:48:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:09 AI_Player.update()	Search took2ms
2017-01-03 14:48:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:09 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:09 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:09 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:09 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:09 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:09 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:09 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:09 AI_Player.update()	update
2017-01-03 14:48:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:09 AI_Player.update()	update
2017-01-03 14:48:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:09 AI_Player.update()	Search took1ms
2017-01-03 14:48:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:09 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:09 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:09 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:09 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:09 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:09 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:09 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:10 AI_Player.update()	update
2017-01-03 14:48:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:10 AI_Player.update()	update
2017-01-03 14:48:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:10 AI_Player.update()	Search took3ms
2017-01-03 14:48:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:10 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:10 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:10 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:10 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:10 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:10 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:10 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:10 AI_Player.update()	update
2017-01-03 14:48:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:10 AI_Player.update()	update
2017-01-03 14:48:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:10 AI_Player.update()	Search took2ms
2017-01-03 14:48:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:10 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:10 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:10 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:10 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:10 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:10 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:10 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:10 AI_Player.update()	update
2017-01-03 14:48:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:10 AI_Player.update()	update
2017-01-03 14:48:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:10 AI_Player.update()	Search took2ms
2017-01-03 14:48:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:10 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:10 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:10 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:10 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:10 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:10 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:10 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:10 AI_Player.update()	update
2017-01-03 14:48:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:10 AI_Player.update()	update
2017-01-03 14:48:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:10 AI_Player.update()	Search took1ms
2017-01-03 14:48:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:10 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:10 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:10 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:10 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:10 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:10 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:10 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:10 AI_Player.update()	update
2017-01-03 14:48:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:10 AI_Player.update()	update
2017-01-03 14:48:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:10 AI_Player.update()	Search took2ms
2017-01-03 14:48:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:10 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:10 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:10 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:10 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:10 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:10 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:10 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:11 AI_Player.update()	update
2017-01-03 14:48:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:11 AI_Player.update()	update
2017-01-03 14:48:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:11 AI_Player.update()	Search took2ms
2017-01-03 14:48:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:11 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:11 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:11 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:11 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:11 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:11 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:11 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:11 AI_Player.update()	update
2017-01-03 14:48:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:11 AI_Player.update()	update
2017-01-03 14:48:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:11 AI_Player.update()	Search took2ms
2017-01-03 14:48:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:11 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:11 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:11 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:11 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:11 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:11 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:11 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:11 AI_Player.update()	update
2017-01-03 14:48:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:11 AI_Player.update()	update
2017-01-03 14:48:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:11 AI_Player.update()	Search took5ms
2017-01-03 14:48:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:11 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:11 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:11 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:11 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:11 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:11 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:11 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:11 AI_Player.update()	update
2017-01-03 14:48:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:11 AI_Player.update()	update
2017-01-03 14:48:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:11 AI_Player.update()	Search took2ms
2017-01-03 14:48:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:11 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:11 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:11 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:11 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:11 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:11 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:11 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:11 AI_Player.update()	update
2017-01-03 14:48:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:12 AI_Player.update()	update
2017-01-03 14:48:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:12 AI_Player.update()	Search took2ms
2017-01-03 14:48:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:12 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:12 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:12 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:12 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:12 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:12 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:12 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:12 AI_Player.update()	update
2017-01-03 14:48:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:12 AI_Player.update()	update
2017-01-03 14:48:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:12 AI_Player.update()	Search took3ms
2017-01-03 14:48:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:12 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:12 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:12 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:12 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:12 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:12 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:12 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:12 AI_Player.update()	update
2017-01-03 14:48:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:12 AI_Player.update()	update
2017-01-03 14:48:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:12 AI_Player.update()	Search took1ms
2017-01-03 14:48:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:12 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:12 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:12 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:12 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:12 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:12 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:12 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:12 AI_Player.update()	update
2017-01-03 14:48:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:12 AI_Player.update()	update
2017-01-03 14:48:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:12 AI_Player.update()	Search took3ms
2017-01-03 14:48:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:12 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:12 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:12 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:12 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:12 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:12 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:12 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:12 AI_Player.update()	update
2017-01-03 14:48:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:12 AI_Player.update()	update
2017-01-03 14:48:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:12 AI_Player.update()	Search took3ms
2017-01-03 14:48:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:12 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:12 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:12 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:12 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:12 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:12 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:12 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:12 AI_Player.update()	update
2017-01-03 14:48:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:13 AI_Player.update()	update
2017-01-03 14:48:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:13 AI_Player.update()	Search took3ms
2017-01-03 14:48:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:13 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:13 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:13 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:13 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:13 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:13 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:13 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:13 AI_Player.update()	update
2017-01-03 14:48:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:13 AI_Player.update()	update
2017-01-03 14:48:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:13 AI_Player.update()	Search took2ms
2017-01-03 14:48:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:13 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:13 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:13 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:13 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:13 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:13 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:13 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:13 AI_Player.update()	update
2017-01-03 14:48:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:13 AI_Player.update()	update
2017-01-03 14:48:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:13 AI_Player.update()	Search took2ms
2017-01-03 14:48:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:13 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:13 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:13 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:13 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:13 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:13 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:13 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:13 AI_Player.update()	update
2017-01-03 14:48:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:13 AI_Player.update()	update
2017-01-03 14:48:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:13 AI_Player.update()	Search took1ms
2017-01-03 14:48:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:13 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:13 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:13 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:13 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:13 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:13 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:13 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:13 AI_Player.update()	update
2017-01-03 14:48:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:14 AI_Player.update()	update
2017-01-03 14:48:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:14 AI_Player.update()	Search took2ms
2017-01-03 14:48:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:14 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:14 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:14 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:14 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:14 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:14 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:14 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:14 AI_Player.update()	update
2017-01-03 14:48:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:14 AI_Player.update()	update
2017-01-03 14:48:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:14 AI_Player.update()	Search took2ms
2017-01-03 14:48:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:14 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:14 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:14 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:14 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:14 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:14 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:14 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:14 AI_Player.update()	update
2017-01-03 14:48:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:14 AI_Player.update()	update
2017-01-03 14:48:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:14 AI_Player.update()	Search took2ms
2017-01-03 14:48:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:14 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:14 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:14 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:14 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:14 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:14 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:14 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:14 AI_Player.update()	update
2017-01-03 14:48:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:14 AI_Player.update()	update
2017-01-03 14:48:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:14 AI_Player.update()	Search took5ms
2017-01-03 14:48:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:14 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:14 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:14 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:14 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:14 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:14 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:14 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:14 AI_Player.update()	update
2017-01-03 14:48:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:14 AI_Player.update()	update
2017-01-03 14:48:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:14 AI_Player.update()	Search took2ms
2017-01-03 14:48:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:14 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:14 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:14 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:14 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:14 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:14 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:14 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:14 AI_Player.update()	update
2017-01-03 14:48:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:15 AI_Player.update()	update
2017-01-03 14:48:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:15 AI_Player.update()	Search took1ms
2017-01-03 14:48:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:15 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:15 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:15 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:15 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:15 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:15 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:15 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:15 AI_Player.update()	update
2017-01-03 14:48:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:15 AI_Player.update()	update
2017-01-03 14:48:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:15 AI_Player.update()	Search took2ms
2017-01-03 14:48:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:15 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:15 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:15 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:15 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:15 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:15 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:15 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:15 AI_Player.update()	update
2017-01-03 14:48:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:15 AI_Player.update()	update
2017-01-03 14:48:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:15 AI_Player.update()	Search took1ms
2017-01-03 14:48:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:15 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:15 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:15 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:15 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:15 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:15 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:15 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:15 AI_Player.update()	update
2017-01-03 14:48:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:15 AI_Player.update()	update
2017-01-03 14:48:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:15 AI_Player.update()	Search took2ms
2017-01-03 14:48:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:15 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:15 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:15 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:15 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:15 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:15 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:15 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:15 AI_Player.update()	update
2017-01-03 14:48:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:15 AI_Player.update()	update
2017-01-03 14:48:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:15 AI_Player.update()	Search took1ms
2017-01-03 14:48:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:15 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:15 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:15 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:15 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:15 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:15 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:15 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:16 AI_Player.update()	update
2017-01-03 14:48:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:16 AI_Player.update()	update
2017-01-03 14:48:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:16 AI_Player.update()	Search took2ms
2017-01-03 14:48:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:16 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:16 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:16 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:16 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:16 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:16 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:16 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:16 AI_Player.update()	update
2017-01-03 14:48:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:16 AI_Player.update()	update
2017-01-03 14:48:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:16 AI_Player.update()	Search took2ms
2017-01-03 14:48:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:16 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:16 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:16 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:16 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:16 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:16 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:16 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:16 AI_Player.update()	update
2017-01-03 14:48:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:16 AI_Player.update()	update
2017-01-03 14:48:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:16 AI_Player.update()	Search took3ms
2017-01-03 14:48:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:16 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:16 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:16 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:16 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:16 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:16 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:16 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:16 AI_Player.update()	update
2017-01-03 14:48:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:16 AI_Player.update()	update
2017-01-03 14:48:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:16 AI_Player.update()	Search took2ms
2017-01-03 14:48:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:16 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:16 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:16 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:16 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:16 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:16 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:16 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:16 AI_Player.update()	update
2017-01-03 14:48:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:16 AI_Player.update()	update
2017-01-03 14:48:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:16 AI_Player.update()	Search took2ms
2017-01-03 14:48:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:16 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:16 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:16 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:16 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:16 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:16 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:16 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:17 AI_Player.update()	update
2017-01-03 14:48:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:17 AI_Player.update()	update
2017-01-03 14:48:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:17 AI_Player.update()	Search took2ms
2017-01-03 14:48:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:17 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:17 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:17 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:17 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:17 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:17 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:17 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:17 AI_Player.update()	update
2017-01-03 14:48:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:17 AI_Player.update()	update
2017-01-03 14:48:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:17 AI_Player.update()	Search took3ms
2017-01-03 14:48:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:17 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:17 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:17 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:17 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:17 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:17 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:17 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:17 AI_Player.update()	update
2017-01-03 14:48:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:17 AI_Player.update()	update
2017-01-03 14:48:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:17 AI_Player.update()	Search took5ms
2017-01-03 14:48:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:17 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:17 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:17 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:17 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:17 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:17 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:17 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:17 AI_Player.update()	update
2017-01-03 14:48:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:17 AI_Player.update()	update
2017-01-03 14:48:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:17 AI_Player.update()	Search took2ms
2017-01-03 14:48:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:17 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:17 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:17 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:17 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:17 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:17 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:17 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:17 AI_Player.update()	update
2017-01-03 14:48:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:18 AI_Player.update()	update
2017-01-03 14:48:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:18 AI_Player.update()	Search took1ms
2017-01-03 14:48:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:18 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:18 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:18 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:18 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:18 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:18 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:18 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:18 AI_Player.update()	update
2017-01-03 14:48:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:18 AI_Player.update()	update
2017-01-03 14:48:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:18 AI_Player.update()	Search took2ms
2017-01-03 14:48:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:18 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:18 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:18 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:18 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:18 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:18 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:18 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:18 AI_Player.update()	update
2017-01-03 14:48:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:18 AI_Player.update()	update
2017-01-03 14:48:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:18 AI_Player.update()	Search took2ms
2017-01-03 14:48:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:18 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:18 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:18 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:18 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:18 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:18 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:18 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:18 AI_Player.update()	update
2017-01-03 14:48:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:18 AI_Player.update()	update
2017-01-03 14:48:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:18 AI_Player.update()	Search took2ms
2017-01-03 14:48:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:18 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:18 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:18 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:18 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:18 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:18 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:18 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:18 AI_Player.update()	update
2017-01-03 14:48:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:18 AI_Player.update()	update
2017-01-03 14:48:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:18 AI_Player.update()	Search took1ms
2017-01-03 14:48:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:18 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:18 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:18 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:18 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:18 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:18 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:18 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:19 AI_Player.update()	update
2017-01-03 14:48:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:19 AI_Player.update()	update
2017-01-03 14:48:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:19 AI_Player.update()	Search took2ms
2017-01-03 14:48:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:19 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:19 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:19 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:19 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:19 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:19 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:19 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:19 AI_Player.update()	update
2017-01-03 14:48:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:19 AI_Player.update()	update
2017-01-03 14:48:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:19 AI_Player.update()	Search took2ms
2017-01-03 14:48:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:19 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:19 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:19 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:19 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:19 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:19 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:19 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:19 AI_Player.update()	update
2017-01-03 14:48:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:19 AI_Player.update()	update
2017-01-03 14:48:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:19 AI_Player.update()	Search took3ms
2017-01-03 14:48:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:19 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:19 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:19 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:19 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:19 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:19 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:19 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:19 AI_Player.update()	update
2017-01-03 14:48:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:19 AI_Player.update()	update
2017-01-03 14:48:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:19 AI_Player.update()	Search took1ms
2017-01-03 14:48:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:19 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:19 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:19 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:19 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:19 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:19 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:19 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:19 AI_Player.update()	update
2017-01-03 14:48:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:19 AI_Player.update()	update
2017-01-03 14:48:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:19 AI_Player.update()	Search took3ms
2017-01-03 14:48:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:19 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:19 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:19 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:19 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:19 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:19 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:19 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:20 AI_Player.update()	update
2017-01-03 14:48:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:20 AI_Player.update()	update
2017-01-03 14:48:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:20 AI_Player.update()	Search took2ms
2017-01-03 14:48:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:20 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:20 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:20 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:20 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:20 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:20 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:20 AI_Player.update()	update
2017-01-03 14:48:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:20 AI_Player.update()	update
2017-01-03 14:48:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:20 AI_Player.update()	Search took2ms
2017-01-03 14:48:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:20 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:20 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:20 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:20 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:20 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:20 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:20 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:20 AI_Player.update()	update
2017-01-03 14:48:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:20 AI_Player.update()	update
2017-01-03 14:48:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:20 AI_Player.update()	Search took5ms
2017-01-03 14:48:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:20 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:20 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:20 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:20 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:20 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:20 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:20 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:20 AI_Player.update()	update
2017-01-03 14:48:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:20 AI_Player.update()	update
2017-01-03 14:48:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:20 AI_Player.update()	Search took2ms
2017-01-03 14:48:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:20 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:20 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:20 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:20 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:20 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:20 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:20 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:20 AI_Player.update()	update
2017-01-03 14:48:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:20 AI_Player.update()	update
2017-01-03 14:48:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:20 AI_Player.update()	Search took1ms
2017-01-03 14:48:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:20 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:20 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:20 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:20 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:20 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:20 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:20 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:21 AI_Player.update()	update
2017-01-03 14:48:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:21 AI_Player.update()	update
2017-01-03 14:48:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:21 AI_Player.update()	Search took2ms
2017-01-03 14:48:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:21 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:21 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:21 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:21 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:21 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:21 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:21 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:21 AI_Player.update()	update
2017-01-03 14:48:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:21 AI_Player.update()	update
2017-01-03 14:48:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:21 AI_Player.update()	Search took1ms
2017-01-03 14:48:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:21 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:21 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:21 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:21 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:21 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:21 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:21 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:21 AI_Player.update()	update
2017-01-03 14:48:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:21 AI_Player.update()	update
2017-01-03 14:48:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:21 AI_Player.update()	Search took2ms
2017-01-03 14:48:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:21 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:21 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:21 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:21 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:21 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:21 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:21 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:21 AI_Player.update()	update
2017-01-03 14:48:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:21 AI_Player.update()	update
2017-01-03 14:48:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:21 AI_Player.update()	Search took1ms
2017-01-03 14:48:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:21 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:21 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:21 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:21 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:21 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:21 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:21 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:21 AI_Player.update()	update
2017-01-03 14:48:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:22 AI_Player.update()	update
2017-01-03 14:48:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:22 AI_Player.update()	Search took2ms
2017-01-03 14:48:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:22 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:22 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:22 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:22 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:22 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:22 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:22 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:22 AI_Player.update()	update
2017-01-03 14:48:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:22 AI_Player.update()	update
2017-01-03 14:48:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:22 AI_Player.update()	Search took2ms
2017-01-03 14:48:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:22 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:22 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:22 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:22 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:22 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:22 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:22 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:22 AI_Player.update()	update
2017-01-03 14:48:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:22 AI_Player.update()	update
2017-01-03 14:48:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:22 AI_Player.update()	Search took2ms
2017-01-03 14:48:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:22 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:22 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:22 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:22 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:22 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:22 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:22 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:22 AI_Player.update()	update
2017-01-03 14:48:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:22 AI_Player.update()	update
2017-01-03 14:48:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:22 AI_Player.update()	Search took2ms
2017-01-03 14:48:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:22 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:22 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:22 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:22 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:22 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:22 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:22 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:22 AI_Player.update()	update
2017-01-03 14:48:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:22 AI_Player.update()	update
2017-01-03 14:48:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:22 AI_Player.update()	Search took2ms
2017-01-03 14:48:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:22 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:22 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:22 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:22 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:22 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:22 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:22 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:23 AI_Player.update()	update
2017-01-03 14:48:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:23 AI_Player.update()	update
2017-01-03 14:48:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:23 AI_Player.update()	Search took2ms
2017-01-03 14:48:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:23 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:23 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:23 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:23 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:23 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:23 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:23 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:23 AI_Player.update()	update
2017-01-03 14:48:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:23 AI_Player.update()	update
2017-01-03 14:48:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:23 AI_Player.update()	Search took2ms
2017-01-03 14:48:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:23 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:23 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:23 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:23 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:23 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:23 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:23 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:23 AI_Player.update()	update
2017-01-03 14:48:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:23 AI_Player.update()	update
2017-01-03 14:48:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:23 AI_Player.update()	Search took5ms
2017-01-03 14:48:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:23 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:23 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:23 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:23 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:23 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:23 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:23 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:23 AI_Player.update()	update
2017-01-03 14:48:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:23 AI_Player.update()	update
2017-01-03 14:48:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:23 AI_Player.update()	Search took2ms
2017-01-03 14:48:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:23 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:23 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:23 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:23 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:23 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:23 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:23 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:23 AI_Player.update()	update
2017-01-03 14:48:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:23 AI_Player.update()	update
2017-01-03 14:48:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:23 AI_Player.update()	Search took2ms
2017-01-03 14:48:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:23 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:23 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:23 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:23 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:23 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:23 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:23 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:24 AI_Player.update()	update
2017-01-03 14:48:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:24 AI_Player.update()	update
2017-01-03 14:48:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:24 AI_Player.update()	Search took2ms
2017-01-03 14:48:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:24 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:24 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:24 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:24 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:24 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:24 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:24 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:24 AI_Player.update()	update
2017-01-03 14:48:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:24 AI_Player.update()	update
2017-01-03 14:48:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:24 AI_Player.update()	Search took1ms
2017-01-03 14:48:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:24 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:24 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:24 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:24 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:24 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:24 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:24 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:24 AI_Player.update()	update
2017-01-03 14:48:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:24 AI_Player.update()	update
2017-01-03 14:48:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:24 AI_Player.update()	Search took2ms
2017-01-03 14:48:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:24 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:24 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:24 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:24 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:24 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:24 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:24 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:24 AI_Player.update()	update
2017-01-03 14:48:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:24 AI_Player.update()	update
2017-01-03 14:48:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:24 AI_Player.update()	Search took1ms
2017-01-03 14:48:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:24 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:24 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:24 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:24 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:24 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:24 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:24 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:24 AI_Player.update()	update
2017-01-03 14:48:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:25 AI_Player.update()	update
2017-01-03 14:48:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:25 AI_Player.update()	Search took2ms
2017-01-03 14:48:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:25 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:25 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:25 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:25 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:25 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:25 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:25 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:25 AI_Player.update()	update
2017-01-03 14:48:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:25 AI_Player.update()	update
2017-01-03 14:48:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:25 AI_Player.update()	Search took1ms
2017-01-03 14:48:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:25 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:25 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:25 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:25 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:25 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:25 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:25 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:25 AI_Player.update()	update
2017-01-03 14:48:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:25 AI_Player.update()	update
2017-01-03 14:48:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:25 AI_Player.update()	Search took2ms
2017-01-03 14:48:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:25 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:25 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:25 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:25 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:25 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:25 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:25 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:25 AI_Player.update()	update
2017-01-03 14:48:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:25 AI_Player.update()	update
2017-01-03 14:48:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:25 AI_Player.update()	Search took1ms
2017-01-03 14:48:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:25 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:25 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:25 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:25 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:25 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:25 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:25 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:25 AI_Player.update()	update
2017-01-03 14:48:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:25 AI_Player.update()	update
2017-01-03 14:48:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:25 AI_Player.update()	Search took2ms
2017-01-03 14:48:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:25 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:25 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:25 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:25 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:25 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:25 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:25 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:25 AI_Player.update()	update
2017-01-03 14:48:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:26 AI_Player.update()	update
2017-01-03 14:48:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:26 AI_Player.update()	Search took2ms
2017-01-03 14:48:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:26 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:26 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:26 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:26 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:26 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:26 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:26 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:26 AI_Player.update()	update
2017-01-03 14:48:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:26 AI_Player.update()	update
2017-01-03 14:48:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:26 AI_Player.update()	Search took2ms
2017-01-03 14:48:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:26 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:26 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:26 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:26 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:26 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:26 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:26 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:26 AI_Player.update()	update
2017-01-03 14:48:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:26 AI_Player.update()	update
2017-01-03 14:48:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:26 AI_Player.update()	Search took5ms
2017-01-03 14:48:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:26 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:26 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:26 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:26 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:26 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:26 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:26 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:26 AI_Player.update()	update
2017-01-03 14:48:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:26 AI_Player.update()	update
2017-01-03 14:48:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:26 AI_Player.update()	Search took2ms
2017-01-03 14:48:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:26 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:26 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:26 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:26 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:26 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:26 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:26 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:26 AI_Player.update()	update
2017-01-03 14:48:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:26 AI_Player.update()	update
2017-01-03 14:48:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:26 AI_Player.update()	Search took1ms
2017-01-03 14:48:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:26 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:26 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:26 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:26 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:26 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:26 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:26 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:26 AI_Player.update()	update
2017-01-03 14:48:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:27 AI_Player.update()	update
2017-01-03 14:48:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:27 AI_Player.update()	Search took2ms
2017-01-03 14:48:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:27 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:27 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:27 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:27 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:27 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:27 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:27 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:27 AI_Player.update()	update
2017-01-03 14:48:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:27 AI_Player.update()	update
2017-01-03 14:48:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:27 AI_Player.update()	Search took2ms
2017-01-03 14:48:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:27 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:27 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:27 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:27 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:27 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:27 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:27 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:27 AI_Player.update()	update
2017-01-03 14:48:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:27 AI_Player.update()	update
2017-01-03 14:48:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:27 AI_Player.update()	Search took2ms
2017-01-03 14:48:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:27 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:27 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:27 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:27 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:27 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:27 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:27 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:27 AI_Player.update()	update
2017-01-03 14:48:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:27 AI_Player.update()	update
2017-01-03 14:48:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:27 AI_Player.update()	Search took1ms
2017-01-03 14:48:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:27 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:27 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:27 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:27 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:27 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:27 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:27 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:27 AI_Player.update()	update
2017-01-03 14:48:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:27 AI_Player.update()	update
2017-01-03 14:48:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:27 AI_Player.update()	Search took2ms
2017-01-03 14:48:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:27 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:27 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:27 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:27 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:27 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:27 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:27 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:28 AI_Player.update()	update
2017-01-03 14:48:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:28 AI_Player.update()	update
2017-01-03 14:48:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:28 AI_Player.update()	Search took2ms
2017-01-03 14:48:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:28 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:28 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:28 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:28 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:28 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:28 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:28 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:28 AI_Player.update()	update
2017-01-03 14:48:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:28 AI_Player.update()	update
2017-01-03 14:48:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:28 AI_Player.update()	Search took2ms
2017-01-03 14:48:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:28 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:28 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:28 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:28 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:28 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:28 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:28 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:28 AI_Player.update()	update
2017-01-03 14:48:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:28 AI_Player.update()	update
2017-01-03 14:48:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:28 AI_Player.update()	Search took1ms
2017-01-03 14:48:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:28 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:28 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:28 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:28 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:28 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:28 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:28 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:28 AI_Player.update()	update
2017-01-03 14:48:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:28 AI_Player.update()	update
2017-01-03 14:48:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:28 AI_Player.update()	Search took2ms
2017-01-03 14:48:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:28 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:28 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:28 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:28 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:28 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:28 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:28 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:28 AI_Player.update()	update
2017-01-03 14:48:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:28 AI_Player.update()	update
2017-01-03 14:48:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:28 AI_Player.update()	Search took2ms
2017-01-03 14:48:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:28 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:28 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:28 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:28 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:28 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:28 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:28 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:29 AI_Player.update()	update
2017-01-03 14:48:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:29 AI_Player.update()	update
2017-01-03 14:48:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:29 AI_Player.update()	Search took2ms
2017-01-03 14:48:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:29 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:29 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:29 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:29 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:29 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:29 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:29 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:29 AI_Player.update()	update
2017-01-03 14:48:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:29 AI_Player.update()	update
2017-01-03 14:48:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:29 AI_Player.update()	Search took5ms
2017-01-03 14:48:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:29 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:29 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:29 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:29 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:29 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:29 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:29 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:29 AI_Player.update()	update
2017-01-03 14:48:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:29 AI_Player.update()	update
2017-01-03 14:48:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:29 AI_Player.update()	Search took3ms
2017-01-03 14:48:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:29 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:29 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:29 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:29 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:29 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:29 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:29 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:29 AI_Player.update()	update
2017-01-03 14:48:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:29 AI_Player.update()	update
2017-01-03 14:48:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:29 AI_Player.update()	Search took2ms
2017-01-03 14:48:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:29 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:29 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:29 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:29 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:29 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:29 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:29 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:29 AI_Player.update()	update
2017-01-03 14:48:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:29 AI_Player.update()	update
2017-01-03 14:48:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:29 AI_Player.update()	Search took2ms
2017-01-03 14:48:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:29 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:29 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:29 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:29 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:29 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:29 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:29 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:30 AI_Player.update()	update
2017-01-03 14:48:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:30 AI_Player.update()	update
2017-01-03 14:48:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:30 AI_Player.update()	Search took1ms
2017-01-03 14:48:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:30 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:30 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:30 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:30 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:30 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:30 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:30 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:30 AI_Player.update()	update
2017-01-03 14:48:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:30 AI_Player.update()	update
2017-01-03 14:48:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:30 AI_Player.update()	Search took2ms
2017-01-03 14:48:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:30 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:30 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:30 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:30 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:30 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:30 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:30 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:30 AI_Player.update()	update
2017-01-03 14:48:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:30 AI_Player.update()	update
2017-01-03 14:48:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:30 AI_Player.update()	Search took1ms
2017-01-03 14:48:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:30 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:30 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:30 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:30 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:30 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:30 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:30 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:30 AI_Player.update()	update
2017-01-03 14:48:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:30 AI_Player.update()	update
2017-01-03 14:48:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:30 AI_Player.update()	Search took2ms
2017-01-03 14:48:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:30 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:30 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:30 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:30 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:30 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:30 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:30 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:30 AI_Player.update()	update
2017-01-03 14:48:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:31 AI_Player.update()	update
2017-01-03 14:48:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:31 AI_Player.update()	Search took2ms
2017-01-03 14:48:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:31 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:31 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:31 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:31 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:31 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:31 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:31 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:31 AI_Player.update()	update
2017-01-03 14:48:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:31 AI_Player.update()	update
2017-01-03 14:48:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:31 AI_Player.update()	Search took2ms
2017-01-03 14:48:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:31 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:31 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:31 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:31 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:31 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:31 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:31 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:31 AI_Player.update()	update
2017-01-03 14:48:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:31 AI_Player.update()	update
2017-01-03 14:48:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:31 AI_Player.update()	Search took1ms
2017-01-03 14:48:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:31 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:31 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:31 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:31 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:31 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:31 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:31 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:31 AI_Player.update()	update
2017-01-03 14:48:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:31 AI_Player.update()	update
2017-01-03 14:48:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:31 AI_Player.update()	Search took2ms
2017-01-03 14:48:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:31 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:31 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:31 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:31 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:31 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:31 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:31 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:31 AI_Player.update()	update
2017-01-03 14:48:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:31 AI_Player.update()	update
2017-01-03 14:48:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:31 AI_Player.update()	Search took2ms
2017-01-03 14:48:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:31 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:31 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:31 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:31 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:31 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:31 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:31 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:31 AI_Player.update()	update
2017-01-03 14:48:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:32 AI_Player.update()	update
2017-01-03 14:48:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:32 AI_Player.update()	Search took2ms
2017-01-03 14:48:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:32 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:32 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:32 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:32 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:32 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:32 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:32 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:32 AI_Player.update()	update
2017-01-03 14:48:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:32 AI_Player.update()	update
2017-01-03 14:48:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:32 AI_Player.update()	Search took5ms
2017-01-03 14:48:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:32 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:32 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:32 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:32 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:32 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:32 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:32 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:32 AI_Player.update()	update
2017-01-03 14:48:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:32 AI_Player.update()	update
2017-01-03 14:48:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:32 AI_Player.update()	Search took2ms
2017-01-03 14:48:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:32 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:32 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:32 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:32 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:32 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:32 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:32 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:32 AI_Player.update()	update
2017-01-03 14:48:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:32 AI_Player.update()	update
2017-01-03 14:48:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:32 AI_Player.update()	Search took1ms
2017-01-03 14:48:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:32 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:32 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:32 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:32 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:32 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:32 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:32 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:32 AI_Player.update()	update
2017-01-03 14:48:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:32 AI_Player.update()	update
2017-01-03 14:48:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:32 AI_Player.update()	Search took2ms
2017-01-03 14:48:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:32 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:32 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:32 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:32 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:32 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:32 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:32 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:33 AI_Player.update()	update
2017-01-03 14:48:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:33 AI_Player.update()	update
2017-01-03 14:48:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:33 AI_Player.update()	Search took1ms
2017-01-03 14:48:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:33 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:33 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:33 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:33 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:33 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:33 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:33 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:33 AI_Player.update()	update
2017-01-03 14:48:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:33 AI_Player.update()	update
2017-01-03 14:48:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:33 AI_Player.update()	Search took2ms
2017-01-03 14:48:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:33 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:33 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:33 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:33 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:33 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:33 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:33 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:33 AI_Player.update()	update
2017-01-03 14:48:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:33 AI_Player.update()	update
2017-01-03 14:48:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:33 AI_Player.update()	Search took1ms
2017-01-03 14:48:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:33 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:33 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:33 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:33 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:33 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:33 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:33 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:33 AI_Player.update()	update
2017-01-03 14:48:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:33 AI_Player.update()	update
2017-01-03 14:48:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:33 AI_Player.update()	Search took2ms
2017-01-03 14:48:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:33 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:33 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:33 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:33 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:33 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:33 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:33 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:33 AI_Player.update()	update
2017-01-03 14:48:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:33 AI_Player.update()	update
2017-01-03 14:48:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:33 AI_Player.update()	Search took1ms
2017-01-03 14:48:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:33 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:33 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:33 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:33 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:33 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:33 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:33 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:34 AI_Player.update()	update
2017-01-03 14:48:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:34 AI_Player.update()	update
2017-01-03 14:48:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:34 AI_Player.update()	Search took2ms
2017-01-03 14:48:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:34 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:34 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:34 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:34 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:34 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:34 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:34 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:34 AI_Player.update()	update
2017-01-03 14:48:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:34 AI_Player.update()	update
2017-01-03 14:48:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:34 AI_Player.update()	Search took1ms
2017-01-03 14:48:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:34 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:34 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:34 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:34 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:34 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:34 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:34 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:34 AI_Player.update()	update
2017-01-03 14:48:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:34 AI_Player.update()	update
2017-01-03 14:48:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:34 AI_Player.update()	Search took2ms
2017-01-03 14:48:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:34 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:34 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:34 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:34 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:34 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:34 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:34 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:34 AI_Player.update()	update
2017-01-03 14:48:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:34 AI_Player.update()	update
2017-01-03 14:48:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:34 AI_Player.update()	Search took2ms
2017-01-03 14:48:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:34 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:34 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:34 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:34 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:34 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:34 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:34 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:34 AI_Player.update()	update
2017-01-03 14:48:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:34 AI_Player.update()	update
2017-01-03 14:48:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:34 AI_Player.update()	Search took2ms
2017-01-03 14:48:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:34 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:34 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:34 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:34 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:34 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:34 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:34 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:35 AI_Player.update()	update
2017-01-03 14:48:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:35 AI_Player.update()	update
2017-01-03 14:48:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:35 AI_Player.update()	Search took6ms
2017-01-03 14:48:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:35 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:35 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:35 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:35 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:35 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:35 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:35 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:35 AI_Player.update()	update
2017-01-03 14:48:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:35 AI_Player.update()	update
2017-01-03 14:48:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:35 AI_Player.update()	Search took2ms
2017-01-03 14:48:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:35 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:35 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:35 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:35 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:35 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:35 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:35 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:35 AI_Player.update()	update
2017-01-03 14:48:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:35 AI_Player.update()	update
2017-01-03 14:48:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:35 AI_Player.update()	Search took2ms
2017-01-03 14:48:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:35 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:35 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:35 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:35 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:35 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:35 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:35 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:35 AI_Player.update()	update
2017-01-03 14:48:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:35 AI_Player.update()	update
2017-01-03 14:48:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:35 AI_Player.update()	Search took2ms
2017-01-03 14:48:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:35 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:35 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:35 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:35 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:35 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:35 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:35 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:35 AI_Player.update()	update
2017-01-03 14:48:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:36 AI_Player.update()	update
2017-01-03 14:48:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:36 AI_Player.update()	Search took1ms
2017-01-03 14:48:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:36 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:36 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:36 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:36 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:36 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:36 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:36 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:36 AI_Player.update()	update
2017-01-03 14:48:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:36 AI_Player.update()	update
2017-01-03 14:48:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:36 AI_Player.update()	Search took2ms
2017-01-03 14:48:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:36 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:36 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:36 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:36 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:36 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:36 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:36 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:36 AI_Player.update()	update
2017-01-03 14:48:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:36 AI_Player.update()	update
2017-01-03 14:48:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:36 AI_Player.update()	Search took1ms
2017-01-03 14:48:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:36 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:36 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:36 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:36 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:36 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:36 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:36 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:36 AI_Player.update()	update
2017-01-03 14:48:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:36 AI_Player.update()	update
2017-01-03 14:48:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:36 AI_Player.update()	Search took3ms
2017-01-03 14:48:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:36 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:36 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:36 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:36 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:36 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:36 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:36 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:36 AI_Player.update()	update
2017-01-03 14:48:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:36 AI_Player.update()	update
2017-01-03 14:48:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:36 AI_Player.update()	Search took1ms
2017-01-03 14:48:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:36 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:36 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:36 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:36 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:36 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:36 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:36 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:36 AI_Player.update()	update
2017-01-03 14:48:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:37 AI_Player.update()	update
2017-01-03 14:48:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:37 AI_Player.update()	Search took2ms
2017-01-03 14:48:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:37 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:37 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:37 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:37 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:37 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:37 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:37 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:37 AI_Player.update()	update
2017-01-03 14:48:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:37 AI_Player.update()	update
2017-01-03 14:48:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:37 AI_Player.update()	Search took1ms
2017-01-03 14:48:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:37 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:37 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:37 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:37 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:37 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:37 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:37 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:37 AI_Player.update()	update
2017-01-03 14:48:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:37 AI_Player.update()	update
2017-01-03 14:48:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:37 AI_Player.update()	Search took2ms
2017-01-03 14:48:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:37 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:37 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:37 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:37 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:37 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:37 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:37 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:37 AI_Player.update()	update
2017-01-03 14:48:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:37 AI_Player.update()	update
2017-01-03 14:48:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:37 AI_Player.update()	Search took2ms
2017-01-03 14:48:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:37 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:37 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:37 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:37 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:37 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:37 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:37 AI_Player.update()	update
2017-01-03 14:48:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:37 AI_Player.update()	update
2017-01-03 14:48:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:37 AI_Player.update()	Search took2ms
2017-01-03 14:48:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:37 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:37 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:37 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:37 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:37 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:37 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:37 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:38 AI_Player.update()	update
2017-01-03 14:48:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:38 AI_Player.update()	update
2017-01-03 14:48:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:38 AI_Player.update()	Search took5ms
2017-01-03 14:48:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:38 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:38 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:38 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:38 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:38 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:38 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:38 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:38 AI_Player.update()	update
2017-01-03 14:48:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:38 AI_Player.update()	update
2017-01-03 14:48:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:38 AI_Player.update()	Search took2ms
2017-01-03 14:48:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:38 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:38 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:38 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:38 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:38 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:38 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:38 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:38 AI_Player.update()	update
2017-01-03 14:48:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:38 AI_Player.update()	update
2017-01-03 14:48:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:38 AI_Player.update()	Search took1ms
2017-01-03 14:48:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:38 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:38 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:38 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:38 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:38 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:38 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:38 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:38 AI_Player.update()	update
2017-01-03 14:48:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:38 AI_Player.update()	update
2017-01-03 14:48:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:38 AI_Player.update()	Search took2ms
2017-01-03 14:48:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:38 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:38 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:38 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:38 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:38 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:38 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:38 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:38 AI_Player.update()	update
2017-01-03 14:48:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:39 AI_Player.update()	update
2017-01-03 14:48:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:39 AI_Player.update()	Search took1ms
2017-01-03 14:48:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:39 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:39 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:39 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:39 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:39 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:39 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:39 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:39 AI_Player.update()	update
2017-01-03 14:48:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:39 AI_Player.update()	update
2017-01-03 14:48:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:39 AI_Player.update()	Search took2ms
2017-01-03 14:48:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:39 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:39 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:39 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:39 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:39 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:39 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:39 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:39 AI_Player.update()	update
2017-01-03 14:48:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:39 AI_Player.update()	update
2017-01-03 14:48:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:39 AI_Player.update()	Search took1ms
2017-01-03 14:48:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:39 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:39 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:39 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:39 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:39 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:39 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:39 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:39 AI_Player.update()	update
2017-01-03 14:48:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:39 AI_Player.update()	update
2017-01-03 14:48:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:39 AI_Player.update()	Search took2ms
2017-01-03 14:48:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:39 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:39 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:39 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:39 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:39 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:39 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:39 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:39 AI_Player.update()	update
2017-01-03 14:48:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:39 AI_Player.update()	update
2017-01-03 14:48:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:39 AI_Player.update()	Search took1ms
2017-01-03 14:48:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:39 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:39 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:39 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:39 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:39 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:39 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:39 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:39 AI_Player.update()	update
2017-01-03 14:48:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:40 AI_Player.update()	update
2017-01-03 14:48:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:40 AI_Player.update()	Search took2ms
2017-01-03 14:48:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:40 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:40 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:40 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:40 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:40 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:40 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:40 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:40 AI_Player.update()	update
2017-01-03 14:48:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:40 AI_Player.update()	update
2017-01-03 14:48:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:40 AI_Player.update()	Search took2ms
2017-01-03 14:48:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:40 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:40 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:40 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:40 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:40 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:40 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:40 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:40 AI_Player.update()	update
2017-01-03 14:48:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:40 AI_Player.update()	update
2017-01-03 14:48:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:40 AI_Player.update()	Search took2ms
2017-01-03 14:48:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:40 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:40 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:40 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:40 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:40 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:40 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:40 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:40 AI_Player.update()	update
2017-01-03 14:48:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:40 AI_Player.update()	update
2017-01-03 14:48:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:40 AI_Player.update()	Search took2ms
2017-01-03 14:48:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:40 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:40 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:40 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:40 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:40 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:40 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:40 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:40 AI_Player.update()	update
2017-01-03 14:48:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:40 AI_Player.update()	update
2017-01-03 14:48:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:40 AI_Player.update()	Search took2ms
2017-01-03 14:48:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:40 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:40 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:40 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:40 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:40 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:40 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:40 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:41 AI_Player.update()	update
2017-01-03 14:48:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:41 AI_Player.update()	update
2017-01-03 14:48:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:41 AI_Player.update()	Search took5ms
2017-01-03 14:48:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:41 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:41 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:41 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:41 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:41 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:41 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:41 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:41 AI_Player.update()	update
2017-01-03 14:48:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:41 AI_Player.update()	update
2017-01-03 14:48:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:41 AI_Player.update()	Search took2ms
2017-01-03 14:48:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:41 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:41 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:41 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:41 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:41 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:41 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:41 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:41 AI_Player.update()	update
2017-01-03 14:48:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:41 AI_Player.update()	update
2017-01-03 14:48:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:41 AI_Player.update()	Search took1ms
2017-01-03 14:48:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:41 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:41 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:41 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:41 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:41 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:41 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:41 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:41 AI_Player.update()	update
2017-01-03 14:48:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:41 AI_Player.update()	update
2017-01-03 14:48:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:41 AI_Player.update()	Search took2ms
2017-01-03 14:48:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:41 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:41 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:41 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:41 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:41 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:41 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:41 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:42 AI_Player.update()	update
2017-01-03 14:48:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:42 AI_Player.update()	update
2017-01-03 14:48:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:42 AI_Player.update()	Search took1ms
2017-01-03 14:48:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:42 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:42 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:42 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:42 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:42 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:42 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:42 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:42 AI_Player.update()	update
2017-01-03 14:48:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:42 AI_Player.update()	update
2017-01-03 14:48:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:42 AI_Player.update()	Search took2ms
2017-01-03 14:48:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:42 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:42 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:42 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:42 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:42 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:42 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:42 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:42 AI_Player.update()	update
2017-01-03 14:48:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:42 AI_Player.update()	update
2017-01-03 14:48:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:42 AI_Player.update()	Search took1ms
2017-01-03 14:48:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:42 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:42 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:42 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:42 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:42 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:42 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:42 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:42 AI_Player.update()	update
2017-01-03 14:48:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:42 AI_Player.update()	update
2017-01-03 14:48:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:42 AI_Player.update()	Search took2ms
2017-01-03 14:48:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:42 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:42 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:42 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:42 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:42 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:42 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:42 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:42 AI_Player.update()	update
2017-01-03 14:48:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:42 AI_Player.update()	update
2017-01-03 14:48:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:42 AI_Player.update()	Search took2ms
2017-01-03 14:48:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:42 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:42 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:42 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:42 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:42 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:42 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:42 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:43 AI_Player.update()	update
2017-01-03 14:48:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:43 AI_Player.update()	update
2017-01-03 14:48:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:43 AI_Player.update()	Search took2ms
2017-01-03 14:48:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:43 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:43 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:43 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:43 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:43 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:43 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:43 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:43 AI_Player.update()	update
2017-01-03 14:48:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:43 AI_Player.update()	update
2017-01-03 14:48:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:43 AI_Player.update()	Search took1ms
2017-01-03 14:48:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:43 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:43 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:43 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:43 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:43 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:43 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:43 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:43 AI_Player.update()	update
2017-01-03 14:48:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:43 AI_Player.update()	update
2017-01-03 14:48:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:43 AI_Player.update()	Search took2ms
2017-01-03 14:48:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:43 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:43 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:43 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:43 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:43 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:43 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:43 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:43 AI_Player.update()	update
2017-01-03 14:48:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:43 AI_Player.update()	update
2017-01-03 14:48:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:43 AI_Player.update()	Search took2ms
2017-01-03 14:48:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:43 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:43 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:43 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:43 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:43 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:43 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:43 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:43 AI_Player.update()	update
2017-01-03 14:48:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:43 AI_Player.update()	update
2017-01-03 14:48:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:43 AI_Player.update()	Search took2ms
2017-01-03 14:48:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:43 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:43 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:43 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:43 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:43 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:43 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:43 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:44 AI_Player.update()	update
2017-01-03 14:48:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:44 AI_Player.update()	update
2017-01-03 14:48:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:44 AI_Player.update()	Search took5ms
2017-01-03 14:48:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:44 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:44 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:44 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:44 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:44 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:44 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:44 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:44 AI_Player.update()	update
2017-01-03 14:48:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:44 AI_Player.update()	update
2017-01-03 14:48:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:44 AI_Player.update()	Search took2ms
2017-01-03 14:48:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:44 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:44 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:44 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:44 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:44 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:44 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:44 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:44 AI_Player.update()	update
2017-01-03 14:48:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:44 AI_Player.update()	update
2017-01-03 14:48:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:44 AI_Player.update()	Search took2ms
2017-01-03 14:48:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:44 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:44 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:44 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:44 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:44 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:44 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:44 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:44 AI_Player.update()	update
2017-01-03 14:48:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:44 AI_Player.update()	update
2017-01-03 14:48:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:44 AI_Player.update()	Search took2ms
2017-01-03 14:48:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:44 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:44 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:44 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:44 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:44 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:44 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:44 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:44 AI_Player.update()	update
2017-01-03 14:48:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:45 AI_Player.update()	update
2017-01-03 14:48:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:45 AI_Player.update()	Search took1ms
2017-01-03 14:48:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:45 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:45 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:45 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:45 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:45 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:45 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:45 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:45 AI_Player.update()	update
2017-01-03 14:48:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:45 AI_Player.update()	update
2017-01-03 14:48:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:45 AI_Player.update()	Search took2ms
2017-01-03 14:48:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:45 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:45 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:45 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:45 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:45 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:45 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:45 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:45 AI_Player.update()	update
2017-01-03 14:48:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:45 AI_Player.update()	update
2017-01-03 14:48:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:45 AI_Player.update()	Search took1ms
2017-01-03 14:48:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:45 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:45 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:45 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:45 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:45 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:45 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:45 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:45 AI_Player.update()	update
2017-01-03 14:48:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:45 AI_Player.update()	update
2017-01-03 14:48:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:45 AI_Player.update()	Search took2ms
2017-01-03 14:48:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:45 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:45 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:45 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:45 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:45 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:45 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:45 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:45 AI_Player.update()	update
2017-01-03 14:48:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:45 AI_Player.update()	update
2017-01-03 14:48:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:45 AI_Player.update()	Search took1ms
2017-01-03 14:48:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:45 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:45 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:45 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:45 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:45 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:45 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:45 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:45 AI_Player.update()	update
2017-01-03 14:48:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:46 AI_Player.update()	update
2017-01-03 14:48:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:46 AI_Player.update()	Search took2ms
2017-01-03 14:48:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:46 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:46 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:46 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:46 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:46 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:46 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:46 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:46 AI_Player.update()	update
2017-01-03 14:48:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:46 AI_Player.update()	update
2017-01-03 14:48:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:46 AI_Player.update()	Search took1ms
2017-01-03 14:48:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:46 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:46 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:46 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:46 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:46 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:46 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:46 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:46 AI_Player.update()	update
2017-01-03 14:48:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:46 AI_Player.update()	update
2017-01-03 14:48:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:46 AI_Player.update()	Search took2ms
2017-01-03 14:48:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:46 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:46 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:46 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:46 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:46 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:46 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:46 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:46 AI_Player.update()	update
2017-01-03 14:48:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:46 AI_Player.update()	update
2017-01-03 14:48:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:46 AI_Player.update()	Search took2ms
2017-01-03 14:48:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:46 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:46 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:46 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:46 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:46 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:46 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:46 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:46 AI_Player.update()	update
2017-01-03 14:48:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:46 AI_Player.update()	update
2017-01-03 14:48:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:46 AI_Player.update()	Search took2ms
2017-01-03 14:48:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:46 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:46 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:46 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:46 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:46 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:46 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:46 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:46 AI_Player.update()	update
2017-01-03 14:48:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:47 AI_Player.update()	update
2017-01-03 14:48:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:47 AI_Player.update()	Search took6ms
2017-01-03 14:48:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:47 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:47 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:47 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:47 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:47 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:47 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:47 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:47 AI_Player.update()	update
2017-01-03 14:48:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:47 AI_Player.update()	update
2017-01-03 14:48:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:47 AI_Player.update()	Search took2ms
2017-01-03 14:48:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:47 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:47 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:47 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:47 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:47 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:47 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:47 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:47 AI_Player.update()	update
2017-01-03 14:48:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:47 AI_Player.update()	update
2017-01-03 14:48:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:47 AI_Player.update()	Search took1ms
2017-01-03 14:48:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:47 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:47 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:47 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:47 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:47 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:47 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:47 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:47 AI_Player.update()	update
2017-01-03 14:48:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:47 AI_Player.update()	update
2017-01-03 14:48:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:47 AI_Player.update()	Search took2ms
2017-01-03 14:48:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:47 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:47 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:47 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:47 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:47 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:47 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:47 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:47 AI_Player.update()	update
2017-01-03 14:48:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:47 AI_Player.update()	update
2017-01-03 14:48:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:47 AI_Player.update()	Search took1ms
2017-01-03 14:48:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:47 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:47 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:47 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:47 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:47 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:47 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:47 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:47 AI_Player.update()	update
2017-01-03 14:48:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:48 AI_Player.update()	update
2017-01-03 14:48:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:48 AI_Player.update()	Search took2ms
2017-01-03 14:48:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:48 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:48 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:48 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:48 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:48 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:48 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:48 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:48 AI_Player.update()	update
2017-01-03 14:48:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:48 AI_Player.update()	update
2017-01-03 14:48:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:48 AI_Player.update()	Search took1ms
2017-01-03 14:48:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:48 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:48 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:48 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:48 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:48 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:48 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:48 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:48 AI_Player.update()	update
2017-01-03 14:48:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:48 AI_Player.update()	update
2017-01-03 14:48:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:48 AI_Player.update()	Search took2ms
2017-01-03 14:48:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:48 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:48 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:48 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:48 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:48 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:48 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:48 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:48 AI_Player.update()	update
2017-01-03 14:48:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:48 AI_Player.update()	update
2017-01-03 14:48:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:48 AI_Player.update()	Search took1ms
2017-01-03 14:48:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:48 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:48 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:48 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:48 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:48 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:48 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:48 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:48 AI_Player.update()	update
2017-01-03 14:48:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:48 AI_Player.update()	update
2017-01-03 14:48:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:48 AI_Player.update()	Search took2ms
2017-01-03 14:48:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:48 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:48 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:48 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:48 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:48 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:48 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:48 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:49 AI_Player.update()	update
2017-01-03 14:48:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:49 AI_Player.update()	update
2017-01-03 14:48:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:49 AI_Player.update()	Search took1ms
2017-01-03 14:48:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:49 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:49 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:49 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:49 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:49 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:49 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:49 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:49 AI_Player.update()	update
2017-01-03 14:48:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:49 AI_Player.update()	update
2017-01-03 14:48:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:49 AI_Player.update()	Search took2ms
2017-01-03 14:48:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:49 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:49 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:49 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:49 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:49 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:49 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:49 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:49 AI_Player.update()	update
2017-01-03 14:48:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:49 AI_Player.update()	update
2017-01-03 14:48:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:49 AI_Player.update()	Search took2ms
2017-01-03 14:48:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:49 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:49 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:49 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:49 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:49 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:49 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:49 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:49 AI_Player.update()	update
2017-01-03 14:48:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:49 AI_Player.update()	update
2017-01-03 14:48:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:49 AI_Player.update()	Search took2ms
2017-01-03 14:48:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:49 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:49 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:49 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:49 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:49 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:49 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:49 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:49 AI_Player.update()	update
2017-01-03 14:48:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:49 AI_Player.update()	update
2017-01-03 14:48:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:49 AI_Player.update()	Search took5ms
2017-01-03 14:48:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:49 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:49 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:49 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:49 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:49 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:49 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:49 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:50 AI_Player.update()	update
2017-01-03 14:48:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:50 AI_Player.update()	update
2017-01-03 14:48:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:50 AI_Player.update()	Search took2ms
2017-01-03 14:48:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:50 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:50 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:50 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:50 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:50 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:50 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:50 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:50 AI_Player.update()	update
2017-01-03 14:48:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:50 AI_Player.update()	update
2017-01-03 14:48:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:50 AI_Player.update()	Search took1ms
2017-01-03 14:48:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:50 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:50 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:50 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:50 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:50 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:50 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:50 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:50 AI_Player.update()	update
2017-01-03 14:48:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:50 AI_Player.update()	update
2017-01-03 14:48:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:50 AI_Player.update()	Search took2ms
2017-01-03 14:48:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:50 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:50 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:50 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:50 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:50 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:50 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:50 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:50 AI_Player.update()	update
2017-01-03 14:48:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:50 AI_Player.update()	update
2017-01-03 14:48:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:50 AI_Player.update()	Search took1ms
2017-01-03 14:48:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:50 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:50 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:50 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:50 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:50 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:50 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:50 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:50 AI_Player.update()	update
2017-01-03 14:48:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:50 AI_Player.update()	update
2017-01-03 14:48:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:50 AI_Player.update()	Search took2ms
2017-01-03 14:48:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:50 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:50 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:50 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:50 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:50 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:50 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:50 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:51 AI_Player.update()	update
2017-01-03 14:48:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:51 AI_Player.update()	update
2017-01-03 14:48:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:51 AI_Player.update()	Search took2ms
2017-01-03 14:48:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:51 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:51 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:51 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:51 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:51 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:51 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:51 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:51 AI_Player.update()	update
2017-01-03 14:48:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:51 AI_Player.update()	update
2017-01-03 14:48:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:51 AI_Player.update()	Search took2ms
2017-01-03 14:48:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:51 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:51 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:51 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:51 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:51 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:51 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:51 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:51 AI_Player.update()	update
2017-01-03 14:48:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:51 AI_Player.update()	update
2017-01-03 14:48:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:51 AI_Player.update()	Search took1ms
2017-01-03 14:48:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:51 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:51 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:51 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:51 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:51 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:51 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:51 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:51 AI_Player.update()	update
2017-01-03 14:48:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:51 AI_Player.update()	update
2017-01-03 14:48:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:51 AI_Player.update()	Search took2ms
2017-01-03 14:48:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:51 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:51 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:51 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:51 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:51 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:51 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:51 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:51 AI_Player.update()	update
2017-01-03 14:48:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:52 AI_Player.update()	update
2017-01-03 14:48:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:52 AI_Player.update()	Search took1ms
2017-01-03 14:48:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:52 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:52 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:52 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:52 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:52 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:52 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:52 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:52 AI_Player.update()	update
2017-01-03 14:48:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:52 AI_Player.update()	update
2017-01-03 14:48:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:52 AI_Player.update()	Search took2ms
2017-01-03 14:48:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:52 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:52 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:52 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:52 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:52 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:52 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:52 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:52 AI_Player.update()	update
2017-01-03 14:48:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:52 AI_Player.update()	update
2017-01-03 14:48:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:52 AI_Player.update()	Search took3ms
2017-01-03 14:48:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:52 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:52 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:52 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:52 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:52 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:52 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:52 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:52 AI_Player.update()	update
2017-01-03 14:48:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:52 AI_Player.update()	update
2017-01-03 14:48:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:52 AI_Player.update()	Search took3ms
2017-01-03 14:48:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:52 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:52 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:52 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:52 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:52 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:52 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:52 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:52 AI_Player.update()	update
2017-01-03 14:48:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:52 AI_Player.update()	update
2017-01-03 14:48:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:52 AI_Player.update()	Search took5ms
2017-01-03 14:48:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:52 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:52 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:52 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:52 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:52 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:52 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:52 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:52 AI_Player.update()	update
2017-01-03 14:48:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:53 AI_Player.update()	update
2017-01-03 14:48:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:53 AI_Player.update()	Search took2ms
2017-01-03 14:48:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:53 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:53 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:53 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:53 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:53 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:53 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:53 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:53 AI_Player.update()	update
2017-01-03 14:48:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:53 AI_Player.update()	update
2017-01-03 14:48:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:53 AI_Player.update()	Search took1ms
2017-01-03 14:48:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:53 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:53 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:53 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:53 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:53 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:53 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:53 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:53 AI_Player.update()	update
2017-01-03 14:48:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:53 AI_Player.update()	update
2017-01-03 14:48:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:53 AI_Player.update()	Search took2ms
2017-01-03 14:48:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:53 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:53 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:53 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:53 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:53 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:53 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:53 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:53 AI_Player.update()	update
2017-01-03 14:48:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:53 AI_Player.update()	update
2017-01-03 14:48:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:53 AI_Player.update()	Search took2ms
2017-01-03 14:48:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:53 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:53 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:53 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:53 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:53 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:53 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:53 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:53 AI_Player.update()	update
2017-01-03 14:48:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:53 AI_Player.update()	update
2017-01-03 14:48:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:53 AI_Player.update()	Search took3ms
2017-01-03 14:48:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:53 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:53 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:53 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:53 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:53 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:53 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:53 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:54 AI_Player.update()	update
2017-01-03 14:48:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:54 AI_Player.update()	update
2017-01-03 14:48:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:54 AI_Player.update()	Search took1ms
2017-01-03 14:48:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:54 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:54 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:54 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:54 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:54 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:54 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:54 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:54 AI_Player.update()	update
2017-01-03 14:48:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:54 AI_Player.update()	update
2017-01-03 14:48:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:54 AI_Player.update()	Search took2ms
2017-01-03 14:48:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:54 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:54 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:54 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:54 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:54 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:54 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:54 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:54 AI_Player.update()	update
2017-01-03 14:48:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:54 AI_Player.update()	update
2017-01-03 14:48:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:54 AI_Player.update()	Search took1ms
2017-01-03 14:48:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:54 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:54 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:54 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:54 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:54 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:54 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:54 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:54 AI_Player.update()	update
2017-01-03 14:48:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:54 AI_Player.update()	update
2017-01-03 14:48:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:54 AI_Player.update()	Search took2ms
2017-01-03 14:48:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:54 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:54 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:54 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:54 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:54 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:54 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:54 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:54 AI_Player.update()	update
2017-01-03 14:48:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:54 AI_Player.update()	update
2017-01-03 14:48:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:54 AI_Player.update()	Search took1ms
2017-01-03 14:48:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:54 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:54 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:54 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:54 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:54 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:54 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:54 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:55 AI_Player.update()	update
2017-01-03 14:48:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:55 AI_Player.update()	update
2017-01-03 14:48:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:55 AI_Player.update()	Search took2ms
2017-01-03 14:48:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:55 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:55 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:55 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:55 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:55 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:55 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:55 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:55 AI_Player.update()	update
2017-01-03 14:48:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:55 AI_Player.update()	update
2017-01-03 14:48:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:55 AI_Player.update()	Search took2ms
2017-01-03 14:48:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:55 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:55 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:55 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:55 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:55 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:55 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:55 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:55 AI_Player.update()	update
2017-01-03 14:48:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:55 AI_Player.update()	update
2017-01-03 14:48:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:55 AI_Player.update()	Search took1ms
2017-01-03 14:48:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:55 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:55 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:55 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:55 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:55 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:55 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:55 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:55 AI_Player.update()	update
2017-01-03 14:48:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:55 AI_Player.update()	update
2017-01-03 14:48:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:55 AI_Player.update()	Search took5ms
2017-01-03 14:48:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:55 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:55 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:55 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:55 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:55 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:55 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:55 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:55 AI_Player.update()	update
2017-01-03 14:48:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:55 AI_Player.update()	update
2017-01-03 14:48:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:55 AI_Player.update()	Search took2ms
2017-01-03 14:48:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:55 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:55 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:55 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:55 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:55 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:55 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:55 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:56 AI_Player.update()	update
2017-01-03 14:48:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:56 AI_Player.update()	update
2017-01-03 14:48:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:56 AI_Player.update()	Search took1ms
2017-01-03 14:48:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:56 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:56 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:56 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:56 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:56 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:56 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:56 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:56 AI_Player.update()	update
2017-01-03 14:48:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:56 AI_Player.update()	update
2017-01-03 14:48:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:56 AI_Player.update()	Search took2ms
2017-01-03 14:48:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:56 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:56 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:56 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:56 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:56 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:56 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:56 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:56 AI_Player.update()	update
2017-01-03 14:48:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:56 AI_Player.update()	update
2017-01-03 14:48:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:56 AI_Player.update()	Search took2ms
2017-01-03 14:48:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:56 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:56 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:56 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:56 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:56 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:56 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:56 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:56 AI_Player.update()	update
2017-01-03 14:48:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:56 AI_Player.update()	update
2017-01-03 14:48:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:56 AI_Player.update()	Search took2ms
2017-01-03 14:48:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:56 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:56 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:56 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:56 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:56 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:56 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:56 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:56 AI_Player.update()	update
2017-01-03 14:48:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:57 AI_Player.update()	update
2017-01-03 14:48:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:57 AI_Player.update()	Search took1ms
2017-01-03 14:48:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:57 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:57 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:57 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:57 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:57 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:57 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:57 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:57 AI_Player.update()	update
2017-01-03 14:48:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:57 AI_Player.update()	update
2017-01-03 14:48:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:57 AI_Player.update()	Search took2ms
2017-01-03 14:48:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:57 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:57 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:57 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:57 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:57 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:57 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:57 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:57 AI_Player.update()	update
2017-01-03 14:48:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:57 AI_Player.update()	update
2017-01-03 14:48:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:57 AI_Player.update()	Search took2ms
2017-01-03 14:48:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:57 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:57 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:57 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:57 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:57 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:57 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:57 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:57 AI_Player.update()	update
2017-01-03 14:48:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:57 AI_Player.update()	update
2017-01-03 14:48:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:57 AI_Player.update()	Search took2ms
2017-01-03 14:48:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:57 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:57 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:57 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:57 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:57 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:57 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:57 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:57 AI_Player.update()	update
2017-01-03 14:48:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:57 AI_Player.update()	update
2017-01-03 14:48:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:57 AI_Player.update()	Search took1ms
2017-01-03 14:48:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:57 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:57 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:57 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:57 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:57 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:57 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:57 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:57 AI_Player.update()	update
2017-01-03 14:48:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:58 AI_Player.update()	update
2017-01-03 14:48:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:58 AI_Player.update()	Search took2ms
2017-01-03 14:48:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:58 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:58 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:58 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:58 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:58 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:58 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:58 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:58 AI_Player.update()	update
2017-01-03 14:48:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:58 AI_Player.update()	update
2017-01-03 14:48:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:58 AI_Player.update()	Search took2ms
2017-01-03 14:48:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:58 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:58 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:58 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:58 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:58 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:58 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:58 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:58 AI_Player.update()	update
2017-01-03 14:48:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:58 AI_Player.update()	update
2017-01-03 14:48:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:58 AI_Player.update()	Search took2ms
2017-01-03 14:48:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:58 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:58 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:58 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:58 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:58 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:58 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:58 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:58 AI_Player.update()	update
2017-01-03 14:48:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:58 AI_Player.update()	update
2017-01-03 14:48:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:58 AI_Player.update()	Search took5ms
2017-01-03 14:48:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:58 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:58 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:58 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:58 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:58 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:58 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:58 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:58 AI_Player.update()	update
2017-01-03 14:48:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:58 AI_Player.update()	update
2017-01-03 14:48:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:58 AI_Player.update()	Search took2ms
2017-01-03 14:48:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:58 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:48:58 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:58 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:58 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:58 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:58 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:58 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:58 AI_Player.update()	update
2017-01-03 14:48:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:59 AI_Player.update()	update
2017-01-03 14:48:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:59 AI_Player.update()	Search took1ms
2017-01-03 14:48:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:59 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:48:59 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:59 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:59 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:59 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:59 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:59 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:59 AI_Player.update()	update
2017-01-03 14:48:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:59 AI_Player.update()	update
2017-01-03 14:48:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:59 AI_Player.update()	Search took2ms
2017-01-03 14:48:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:59 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:48:59 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:59 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:59 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:59 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:59 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:59 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:59 AI_Player.update()	update
2017-01-03 14:48:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:59 AI_Player.update()	update
2017-01-03 14:48:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:59 AI_Player.update()	Search took1ms
2017-01-03 14:48:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:59 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:48:59 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:59 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:59 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:59 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:59 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:59 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:59 AI_Player.update()	update
2017-01-03 14:48:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:48:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:48:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:48:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:48:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:59 AI_Player.update()	update
2017-01-03 14:48:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:48:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:48:59 AI_Player.update()	Search took2ms
2017-01-03 14:48:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:59 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:48:59 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:59 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:59 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:59 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:59 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:59 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:59 AI_Player.update()	update
2017-01-03 14:48:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:48:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:48:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:48:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:48:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:48:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:48:59 AI_Player.update()	update
2017-01-03 14:48:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:48:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:48:59 AI_Player.update()	Search took1ms
2017-01-03 14:48:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:48:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:59 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:48:59 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:48:59 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:48:59 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:48:59 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:48:59 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:48:59 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:48:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:48:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:48:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:48:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:48:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:48:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:48:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:48:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:00 AI_Player.update()	update
2017-01-03 14:49:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:00 AI_Player.update()	update
2017-01-03 14:49:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:00 AI_Player.update()	Search took2ms
2017-01-03 14:49:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:00 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:00 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:00 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:00 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:00 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:00 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:00 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:00 AI_Player.update()	update
2017-01-03 14:49:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:00 AI_Player.update()	update
2017-01-03 14:49:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:00 AI_Player.update()	Search took2ms
2017-01-03 14:49:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:00 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:00 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:00 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:00 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:00 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:00 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:00 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:00 AI_Player.update()	update
2017-01-03 14:49:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:00 AI_Player.update()	update
2017-01-03 14:49:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:00 AI_Player.update()	Search took2ms
2017-01-03 14:49:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:00 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:00 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:00 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:00 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:00 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:00 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:00 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:00 AI_Player.update()	update
2017-01-03 14:49:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:00 AI_Player.update()	update
2017-01-03 14:49:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:00 AI_Player.update()	Search took1ms
2017-01-03 14:49:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:00 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:00 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:00 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:00 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:00 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:00 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:00 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:00 AI_Player.update()	update
2017-01-03 14:49:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:00 AI_Player.update()	update
2017-01-03 14:49:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:00 AI_Player.update()	Search took3ms
2017-01-03 14:49:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:00 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:00 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:00 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:00 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:00 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:00 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:00 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:01 AI_Player.update()	update
2017-01-03 14:49:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:01 AI_Player.update()	update
2017-01-03 14:49:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:01 AI_Player.update()	Search took2ms
2017-01-03 14:49:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:01 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:01 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:01 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:01 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:01 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:01 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:01 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:01 AI_Player.update()	update
2017-01-03 14:49:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:01 AI_Player.update()	update
2017-01-03 14:49:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:01 AI_Player.update()	Search took2ms
2017-01-03 14:49:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:01 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:01 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:01 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:01 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:01 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:01 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:01 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:01 AI_Player.update()	update
2017-01-03 14:49:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:01 AI_Player.update()	update
2017-01-03 14:49:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:01 AI_Player.update()	Search took5ms
2017-01-03 14:49:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:01 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:01 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:01 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:01 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:01 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:01 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:01 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:01 AI_Player.update()	update
2017-01-03 14:49:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:01 AI_Player.update()	update
2017-01-03 14:49:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:01 AI_Player.update()	Search took2ms
2017-01-03 14:49:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:01 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:01 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:01 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:01 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:01 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:01 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:01 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:01 AI_Player.update()	update
2017-01-03 14:49:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:01 AI_Player.update()	update
2017-01-03 14:49:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:01 AI_Player.update()	Search took1ms
2017-01-03 14:49:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:01 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:01 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:01 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:01 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:01 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:01 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:01 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:02 AI_Player.update()	update
2017-01-03 14:49:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:02 AI_Player.update()	update
2017-01-03 14:49:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:02 AI_Player.update()	Search took2ms
2017-01-03 14:49:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:02 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:02 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:02 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:02 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:02 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:02 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:02 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:02 AI_Player.update()	update
2017-01-03 14:49:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:02 AI_Player.update()	update
2017-01-03 14:49:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:02 AI_Player.update()	Search took1ms
2017-01-03 14:49:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:02 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:02 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:02 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:02 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:02 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:02 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:02 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:02 AI_Player.update()	update
2017-01-03 14:49:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:02 AI_Player.update()	update
2017-01-03 14:49:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:02 AI_Player.update()	Search took2ms
2017-01-03 14:49:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:02 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:02 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:02 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:02 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:02 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:02 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:02 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:02 AI_Player.update()	update
2017-01-03 14:49:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:02 AI_Player.update()	update
2017-01-03 14:49:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:02 AI_Player.update()	Search took1ms
2017-01-03 14:49:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:02 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:02 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:02 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:02 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:02 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:02 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:02 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:02 AI_Player.update()	update
2017-01-03 14:49:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:02 AI_Player.update()	update
2017-01-03 14:49:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:02 AI_Player.update()	Search took2ms
2017-01-03 14:49:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:02 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:02 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:02 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:02 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:02 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:02 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:02 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:03 AI_Player.update()	update
2017-01-03 14:49:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:03 AI_Player.update()	update
2017-01-03 14:49:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:03 AI_Player.update()	Search took1ms
2017-01-03 14:49:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:03 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:03 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:03 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:03 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:03 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:03 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:03 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:03 AI_Player.update()	update
2017-01-03 14:49:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:03 AI_Player.update()	update
2017-01-03 14:49:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:03 AI_Player.update()	Search took2ms
2017-01-03 14:49:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:03 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:03 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:03 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:03 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:03 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:03 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:03 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:03 AI_Player.update()	update
2017-01-03 14:49:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:03 AI_Player.update()	update
2017-01-03 14:49:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:03 AI_Player.update()	Search took1ms
2017-01-03 14:49:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:03 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:03 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:03 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:03 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:03 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:03 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:03 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:03 AI_Player.update()	update
2017-01-03 14:49:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:03 AI_Player.update()	update
2017-01-03 14:49:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:03 AI_Player.update()	Search took2ms
2017-01-03 14:49:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:03 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:03 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:03 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:03 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:03 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:03 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:03 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:03 AI_Player.update()	update
2017-01-03 14:49:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:04 AI_Player.update()	update
2017-01-03 14:49:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:04 AI_Player.update()	Search took2ms
2017-01-03 14:49:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:04 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:04 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:04 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:04 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:04 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:04 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:04 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:04 AI_Player.update()	update
2017-01-03 14:49:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:04 AI_Player.update()	update
2017-01-03 14:49:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:04 AI_Player.update()	Search took2ms
2017-01-03 14:49:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:04 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:04 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:04 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:04 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:04 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:04 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:04 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:04 AI_Player.update()	update
2017-01-03 14:49:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:04 AI_Player.update()	update
2017-01-03 14:49:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:04 AI_Player.update()	Search took5ms
2017-01-03 14:49:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:04 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:04 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:04 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:04 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:04 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:04 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:04 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:04 AI_Player.update()	update
2017-01-03 14:49:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:04 AI_Player.update()	update
2017-01-03 14:49:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:04 AI_Player.update()	Search took2ms
2017-01-03 14:49:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:04 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:04 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:04 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:04 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:04 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:04 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:04 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:04 AI_Player.update()	update
2017-01-03 14:49:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:04 AI_Player.update()	update
2017-01-03 14:49:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:04 AI_Player.update()	Search took1ms
2017-01-03 14:49:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:04 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:04 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:04 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:04 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:04 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:04 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:04 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:04 AI_Player.update()	update
2017-01-03 14:49:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:05 AI_Player.update()	update
2017-01-03 14:49:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:05 AI_Player.update()	Search took2ms
2017-01-03 14:49:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:05 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:05 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:05 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:05 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:05 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:05 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:05 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:05 AI_Player.update()	update
2017-01-03 14:49:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:05 AI_Player.update()	update
2017-01-03 14:49:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:05 AI_Player.update()	Search took1ms
2017-01-03 14:49:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:05 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:05 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:05 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:05 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:05 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:05 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:05 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:05 AI_Player.update()	update
2017-01-03 14:49:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:05 AI_Player.update()	update
2017-01-03 14:49:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:05 AI_Player.update()	Search took3ms
2017-01-03 14:49:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:05 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:05 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:05 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:05 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:05 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:05 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:05 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:05 AI_Player.update()	update
2017-01-03 14:49:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:05 AI_Player.update()	update
2017-01-03 14:49:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:05 AI_Player.update()	Search took1ms
2017-01-03 14:49:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:05 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:05 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:05 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:05 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:05 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:05 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:05 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:05 AI_Player.update()	update
2017-01-03 14:49:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:05 AI_Player.update()	update
2017-01-03 14:49:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:05 AI_Player.update()	Search took2ms
2017-01-03 14:49:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:05 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:05 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:05 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:05 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:05 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:05 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:05 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:05 AI_Player.update()	update
2017-01-03 14:49:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:06 AI_Player.update()	update
2017-01-03 14:49:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:06 AI_Player.update()	Search took1ms
2017-01-03 14:49:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:06 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:06 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:06 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:06 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:06 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:06 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:06 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:06 AI_Player.update()	update
2017-01-03 14:49:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:06 AI_Player.update()	update
2017-01-03 14:49:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:06 AI_Player.update()	Search took2ms
2017-01-03 14:49:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:06 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:06 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:06 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:06 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:06 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:06 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:06 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:06 AI_Player.update()	update
2017-01-03 14:49:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:06 AI_Player.update()	update
2017-01-03 14:49:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:06 AI_Player.update()	Search took2ms
2017-01-03 14:49:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:06 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:06 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:06 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:06 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:06 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:06 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:06 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:06 AI_Player.update()	update
2017-01-03 14:49:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:06 AI_Player.update()	update
2017-01-03 14:49:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:06 AI_Player.update()	Search took2ms
2017-01-03 14:49:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:06 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:06 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:06 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:06 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:06 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:06 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:06 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:06 AI_Player.update()	update
2017-01-03 14:49:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:06 AI_Player.update()	update
2017-01-03 14:49:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:06 AI_Player.update()	Search took2ms
2017-01-03 14:49:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:06 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:06 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:06 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:06 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:06 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:06 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:06 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:07 AI_Player.update()	update
2017-01-03 14:49:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:07 AI_Player.update()	update
2017-01-03 14:49:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:07 AI_Player.update()	Search took2ms
2017-01-03 14:49:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:07 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:07 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:07 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:07 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:07 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:07 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:07 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:07 AI_Player.update()	update
2017-01-03 14:49:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:07 AI_Player.update()	update
2017-01-03 14:49:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:07 AI_Player.update()	Search took5ms
2017-01-03 14:49:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:07 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:07 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:07 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:07 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:07 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:07 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:07 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:07 AI_Player.update()	update
2017-01-03 14:49:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:07 AI_Player.update()	update
2017-01-03 14:49:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:07 AI_Player.update()	Search took2ms
2017-01-03 14:49:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:07 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:07 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:07 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:07 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:07 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:07 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:07 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:07 AI_Player.update()	update
2017-01-03 14:49:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:07 AI_Player.update()	update
2017-01-03 14:49:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:07 AI_Player.update()	Search took1ms
2017-01-03 14:49:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:07 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:07 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:07 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:07 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:07 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:07 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:07 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:08 AI_Player.update()	update
2017-01-03 14:49:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:08 AI_Player.update()	update
2017-01-03 14:49:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:08 AI_Player.update()	Search took2ms
2017-01-03 14:49:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:08 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:08 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:08 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:08 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:08 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:08 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:08 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:08 AI_Player.update()	update
2017-01-03 14:49:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:08 AI_Player.update()	update
2017-01-03 14:49:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:08 AI_Player.update()	Search took1ms
2017-01-03 14:49:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:08 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:08 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:08 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:08 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:08 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:08 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:08 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:08 AI_Player.update()	update
2017-01-03 14:49:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:08 AI_Player.update()	update
2017-01-03 14:49:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:08 AI_Player.update()	Search took2ms
2017-01-03 14:49:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:08 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:08 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:08 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:08 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:08 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:08 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:08 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:08 AI_Player.update()	update
2017-01-03 14:49:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:08 AI_Player.update()	update
2017-01-03 14:49:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:08 AI_Player.update()	Search took1ms
2017-01-03 14:49:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:08 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:08 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:08 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:08 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:08 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:08 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:08 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:08 AI_Player.update()	update
2017-01-03 14:49:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:09 AI_Player.update()	update
2017-01-03 14:49:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:09 AI_Player.update()	Search took4ms
2017-01-03 14:49:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:09 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:09 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:09 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:09 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:09 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:09 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:09 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:09 AI_Player.update()	update
2017-01-03 14:49:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:09 AI_Player.update()	update
2017-01-03 14:49:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:09 AI_Player.update()	Search took1ms
2017-01-03 14:49:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:09 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:09 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:09 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:09 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:09 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:09 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:09 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:09 AI_Player.update()	update
2017-01-03 14:49:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:09 AI_Player.update()	update
2017-01-03 14:49:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:09 AI_Player.update()	Search took2ms
2017-01-03 14:49:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:09 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:09 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:09 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:09 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:09 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:09 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:09 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:09 AI_Player.update()	update
2017-01-03 14:49:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:09 AI_Player.update()	update
2017-01-03 14:49:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:09 AI_Player.update()	Search took1ms
2017-01-03 14:49:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:09 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:09 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:09 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:09 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:09 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:09 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:09 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:09 AI_Player.update()	update
2017-01-03 14:49:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:09 AI_Player.update()	update
2017-01-03 14:49:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:09 AI_Player.update()	Search took2ms
2017-01-03 14:49:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:09 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:09 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:09 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:09 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:09 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:09 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:09 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:10 AI_Player.update()	update
2017-01-03 14:49:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:10 AI_Player.update()	update
2017-01-03 14:49:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:10 AI_Player.update()	Search took2ms
2017-01-03 14:49:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:10 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:10 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:10 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:10 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:10 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:10 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:10 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:10 AI_Player.update()	update
2017-01-03 14:49:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:10 AI_Player.update()	update
2017-01-03 14:49:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:10 AI_Player.update()	Search took2ms
2017-01-03 14:49:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:10 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:10 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:10 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:10 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:10 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:10 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:10 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:10 AI_Player.update()	update
2017-01-03 14:49:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:10 AI_Player.update()	update
2017-01-03 14:49:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:10 AI_Player.update()	Search took5ms
2017-01-03 14:49:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:10 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:10 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:10 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:10 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:10 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:10 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:10 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:10 AI_Player.update()	update
2017-01-03 14:49:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:10 AI_Player.update()	update
2017-01-03 14:49:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:10 AI_Player.update()	Search took2ms
2017-01-03 14:49:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:10 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:10 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:10 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:10 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:10 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:10 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:10 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:10 AI_Player.update()	update
2017-01-03 14:49:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:10 AI_Player.update()	update
2017-01-03 14:49:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:10 AI_Player.update()	Search took1ms
2017-01-03 14:49:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:10 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:10 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:10 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:10 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:10 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:10 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:10 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:11 AI_Player.update()	update
2017-01-03 14:49:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:11 AI_Player.update()	update
2017-01-03 14:49:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:11 AI_Player.update()	Search took2ms
2017-01-03 14:49:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:11 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:11 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:11 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:11 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:11 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:11 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:11 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:11 AI_Player.update()	update
2017-01-03 14:49:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:11 AI_Player.update()	update
2017-01-03 14:49:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:11 AI_Player.update()	Search took1ms
2017-01-03 14:49:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:11 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:11 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:11 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:11 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:11 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:11 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:11 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:11 AI_Player.update()	update
2017-01-03 14:49:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:11 AI_Player.update()	update
2017-01-03 14:49:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:11 AI_Player.update()	Search took2ms
2017-01-03 14:49:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:11 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:11 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:11 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:11 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:11 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:11 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:11 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:11 AI_Player.update()	update
2017-01-03 14:49:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:11 AI_Player.update()	update
2017-01-03 14:49:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:11 AI_Player.update()	Search took1ms
2017-01-03 14:49:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:11 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:11 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:11 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:11 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:11 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:11 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:11 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:11 AI_Player.update()	update
2017-01-03 14:49:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:11 AI_Player.update()	update
2017-01-03 14:49:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:11 AI_Player.update()	Search took2ms
2017-01-03 14:49:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:11 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:11 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:11 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:11 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:11 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:11 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:11 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:12 AI_Player.update()	update
2017-01-03 14:49:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:12 AI_Player.update()	update
2017-01-03 14:49:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:12 AI_Player.update()	Search took1ms
2017-01-03 14:49:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:12 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:12 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:12 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:12 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:12 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:12 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:12 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:12 AI_Player.update()	update
2017-01-03 14:49:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:12 AI_Player.update()	update
2017-01-03 14:49:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:12 AI_Player.update()	Search took2ms
2017-01-03 14:49:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:12 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:12 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:12 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:12 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:12 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:12 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:12 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:12 AI_Player.update()	update
2017-01-03 14:49:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:12 AI_Player.update()	update
2017-01-03 14:49:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:12 AI_Player.update()	Search took1ms
2017-01-03 14:49:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:12 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:12 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:12 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:12 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:12 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:12 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:12 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:12 AI_Player.update()	update
2017-01-03 14:49:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:12 AI_Player.update()	update
2017-01-03 14:49:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:12 AI_Player.update()	Search took2ms
2017-01-03 14:49:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:12 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:12 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:12 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:12 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:12 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:12 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:12 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:12 AI_Player.update()	update
2017-01-03 14:49:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:12 AI_Player.update()	update
2017-01-03 14:49:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:13 AI_Player.update()	Search took2ms
2017-01-03 14:49:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:13 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:13 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:13 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:13 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:13 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:13 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:13 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:13 AI_Player.update()	update
2017-01-03 14:49:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:13 AI_Player.update()	update
2017-01-03 14:49:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:13 AI_Player.update()	Search took2ms
2017-01-03 14:49:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:13 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:13 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:13 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:13 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:13 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:13 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:13 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:13 AI_Player.update()	update
2017-01-03 14:49:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:13 AI_Player.update()	update
2017-01-03 14:49:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:13 AI_Player.update()	Search took5ms
2017-01-03 14:49:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:13 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:13 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:13 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:13 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:13 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:13 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:13 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:13 AI_Player.update()	update
2017-01-03 14:49:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:13 AI_Player.update()	update
2017-01-03 14:49:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:13 AI_Player.update()	Search took2ms
2017-01-03 14:49:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:13 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:13 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:13 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:13 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:13 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:13 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:13 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:13 AI_Player.update()	update
2017-01-03 14:49:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:13 AI_Player.update()	update
2017-01-03 14:49:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:13 AI_Player.update()	Search took1ms
2017-01-03 14:49:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:13 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:13 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:13 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:13 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:13 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:13 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:13 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:13 AI_Player.update()	update
2017-01-03 14:49:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:14 AI_Player.update()	update
2017-01-03 14:49:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:14 AI_Player.update()	Search took2ms
2017-01-03 14:49:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:14 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:14 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:14 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:14 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:14 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:14 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:14 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:14 AI_Player.update()	update
2017-01-03 14:49:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:14 AI_Player.update()	update
2017-01-03 14:49:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:14 AI_Player.update()	Search took1ms
2017-01-03 14:49:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:14 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:14 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:14 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:14 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:14 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:14 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:14 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:14 AI_Player.update()	update
2017-01-03 14:49:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:14 AI_Player.update()	update
2017-01-03 14:49:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:14 AI_Player.update()	Search took2ms
2017-01-03 14:49:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:14 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:14 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:14 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:14 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:14 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:14 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:14 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:14 AI_Player.update()	update
2017-01-03 14:49:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:14 AI_Player.update()	update
2017-01-03 14:49:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:14 AI_Player.update()	Search took1ms
2017-01-03 14:49:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:14 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:14 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:14 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:14 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:14 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:14 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:14 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:14 AI_Player.update()	update
2017-01-03 14:49:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:14 AI_Player.update()	update
2017-01-03 14:49:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:14 AI_Player.update()	Search took2ms
2017-01-03 14:49:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:14 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:14 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:14 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:14 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:14 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:14 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:14 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:14 AI_Player.update()	update
2017-01-03 14:49:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:15 AI_Player.update()	update
2017-01-03 14:49:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:15 AI_Player.update()	Search took2ms
2017-01-03 14:49:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:15 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:15 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:15 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:15 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:15 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:15 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:15 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:15 AI_Player.update()	update
2017-01-03 14:49:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:15 AI_Player.update()	update
2017-01-03 14:49:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:15 AI_Player.update()	Search took2ms
2017-01-03 14:49:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:15 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:15 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:15 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:15 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:15 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:15 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:15 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:15 AI_Player.update()	update
2017-01-03 14:49:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:15 AI_Player.update()	update
2017-01-03 14:49:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:15 AI_Player.update()	Search took1ms
2017-01-03 14:49:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:15 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:15 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:15 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:15 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:15 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:15 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:15 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:15 AI_Player.update()	update
2017-01-03 14:49:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:15 AI_Player.update()	update
2017-01-03 14:49:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:15 AI_Player.update()	Search took2ms
2017-01-03 14:49:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:15 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:15 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:15 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:15 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:15 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:15 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:15 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:15 AI_Player.update()	update
2017-01-03 14:49:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:15 AI_Player.update()	update
2017-01-03 14:49:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:15 AI_Player.update()	Search took2ms
2017-01-03 14:49:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:15 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:15 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:15 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:15 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:15 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:15 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:15 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:15 AI_Player.update()	update
2017-01-03 14:49:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:16 AI_Player.update()	update
2017-01-03 14:49:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:16 AI_Player.update()	Search took4ms
2017-01-03 14:49:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:16 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:16 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:16 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:16 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:16 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:16 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:16 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:16 AI_Player.update()	update
2017-01-03 14:49:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:16 AI_Player.update()	update
2017-01-03 14:49:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:16 AI_Player.update()	Search took5ms
2017-01-03 14:49:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:16 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:16 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:16 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:16 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:16 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:16 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:16 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:16 AI_Player.update()	update
2017-01-03 14:49:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:16 AI_Player.update()	update
2017-01-03 14:49:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:16 AI_Player.update()	Search took2ms
2017-01-03 14:49:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:16 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:16 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:16 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:16 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:16 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:16 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:16 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:16 AI_Player.update()	update
2017-01-03 14:49:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:16 AI_Player.update()	update
2017-01-03 14:49:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:16 AI_Player.update()	Search took1ms
2017-01-03 14:49:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:16 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:16 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:16 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:16 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:16 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:16 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:16 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:16 AI_Player.update()	update
2017-01-03 14:49:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:16 AI_Player.update()	update
2017-01-03 14:49:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:16 AI_Player.update()	Search took2ms
2017-01-03 14:49:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:16 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:16 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:16 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:16 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:16 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:16 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:16 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:17 AI_Player.update()	update
2017-01-03 14:49:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:17 AI_Player.update()	update
2017-01-03 14:49:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:17 AI_Player.update()	Search took1ms
2017-01-03 14:49:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:17 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:17 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:17 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:17 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:17 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:17 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:17 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:17 AI_Player.update()	update
2017-01-03 14:49:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:17 AI_Player.update()	update
2017-01-03 14:49:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:17 AI_Player.update()	Search took2ms
2017-01-03 14:49:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:17 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:17 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:17 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:17 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:17 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:17 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:17 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:17 AI_Player.update()	update
2017-01-03 14:49:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:17 AI_Player.update()	update
2017-01-03 14:49:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:17 AI_Player.update()	Search took1ms
2017-01-03 14:49:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:17 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:17 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:17 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:17 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:17 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:17 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:17 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:17 AI_Player.update()	update
2017-01-03 14:49:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:17 AI_Player.update()	update
2017-01-03 14:49:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:17 AI_Player.update()	Search took2ms
2017-01-03 14:49:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:17 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:17 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:17 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:17 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:17 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:17 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:17 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:17 AI_Player.update()	update
2017-01-03 14:49:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:17 AI_Player.update()	update
2017-01-03 14:49:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:17 AI_Player.update()	Search took1ms
2017-01-03 14:49:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:17 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:17 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:17 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:17 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:17 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:17 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:17 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:18 AI_Player.update()	update
2017-01-03 14:49:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:18 AI_Player.update()	update
2017-01-03 14:49:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:18 AI_Player.update()	Search took2ms
2017-01-03 14:49:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:18 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:18 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:18 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:18 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:18 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:18 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:18 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:18 AI_Player.update()	update
2017-01-03 14:49:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:18 AI_Player.update()	update
2017-01-03 14:49:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:18 AI_Player.update()	Search took1ms
2017-01-03 14:49:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:18 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:18 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:18 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:18 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:18 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:18 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:18 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:18 AI_Player.update()	update
2017-01-03 14:49:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:18 AI_Player.update()	update
2017-01-03 14:49:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:18 AI_Player.update()	Search took2ms
2017-01-03 14:49:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:18 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:18 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:18 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:18 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:18 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:18 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:18 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:18 AI_Player.update()	update
2017-01-03 14:49:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:18 AI_Player.update()	update
2017-01-03 14:49:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:18 AI_Player.update()	Search took2ms
2017-01-03 14:49:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:18 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:18 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:18 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:18 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:18 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:18 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:18 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:18 AI_Player.update()	update
2017-01-03 14:49:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:18 AI_Player.update()	update
2017-01-03 14:49:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:18 AI_Player.update()	Search took2ms
2017-01-03 14:49:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:18 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:18 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:18 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:18 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:18 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:18 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:18 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:19 AI_Player.update()	update
2017-01-03 14:49:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:19 AI_Player.update()	update
2017-01-03 14:49:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:19 AI_Player.update()	Search took5ms
2017-01-03 14:49:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:19 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:19 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:19 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:19 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:19 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:19 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:19 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:19 AI_Player.update()	update
2017-01-03 14:49:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:19 AI_Player.update()	update
2017-01-03 14:49:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:19 AI_Player.update()	Search took2ms
2017-01-03 14:49:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:19 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:19 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:19 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:19 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:19 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:19 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:19 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:19 AI_Player.update()	update
2017-01-03 14:49:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:19 AI_Player.update()	update
2017-01-03 14:49:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:19 AI_Player.update()	Search took2ms
2017-01-03 14:49:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:19 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:19 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:19 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:19 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:19 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:19 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:19 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:19 AI_Player.update()	update
2017-01-03 14:49:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:19 AI_Player.update()	update
2017-01-03 14:49:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:19 AI_Player.update()	Search took2ms
2017-01-03 14:49:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:19 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:19 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:19 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:19 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:19 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:19 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:19 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:19 AI_Player.update()	update
2017-01-03 14:49:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:20 AI_Player.update()	update
2017-01-03 14:49:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:20 AI_Player.update()	Search took1ms
2017-01-03 14:49:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:20 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:20 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:20 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:20 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:20 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:20 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:20 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:20 AI_Player.update()	update
2017-01-03 14:49:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:20 AI_Player.update()	update
2017-01-03 14:49:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:20 AI_Player.update()	Search took2ms
2017-01-03 14:49:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:20 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:20 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:20 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:20 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:20 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:20 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:20 AI_Player.update()	update
2017-01-03 14:49:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:20 AI_Player.update()	update
2017-01-03 14:49:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:20 AI_Player.update()	Search took1ms
2017-01-03 14:49:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:20 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:20 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:20 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:20 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:20 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:20 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:20 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:20 AI_Player.update()	update
2017-01-03 14:49:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:20 AI_Player.update()	update
2017-01-03 14:49:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:20 AI_Player.update()	Search took2ms
2017-01-03 14:49:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:20 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:20 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:20 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:20 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:20 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:20 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:20 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:20 AI_Player.update()	update
2017-01-03 14:49:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:20 AI_Player.update()	update
2017-01-03 14:49:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:20 AI_Player.update()	Search took1ms
2017-01-03 14:49:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:20 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:20 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:20 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:20 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:20 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:20 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:20 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:20 AI_Player.update()	update
2017-01-03 14:49:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:21 AI_Player.update()	update
2017-01-03 14:49:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:21 AI_Player.update()	Search took2ms
2017-01-03 14:49:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:21 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:21 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:21 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:21 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:21 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:21 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:21 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:21 AI_Player.update()	update
2017-01-03 14:49:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:21 AI_Player.update()	update
2017-01-03 14:49:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:21 AI_Player.update()	Search took1ms
2017-01-03 14:49:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:21 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:21 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:21 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:21 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:21 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:21 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:21 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:21 AI_Player.update()	update
2017-01-03 14:49:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:21 AI_Player.update()	update
2017-01-03 14:49:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:21 AI_Player.update()	Search took2ms
2017-01-03 14:49:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:21 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:21 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:21 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:21 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:21 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:21 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:21 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:21 AI_Player.update()	update
2017-01-03 14:49:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:21 AI_Player.update()	update
2017-01-03 14:49:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:21 AI_Player.update()	Search took2ms
2017-01-03 14:49:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:21 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:21 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:21 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:21 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:21 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:21 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:21 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:21 AI_Player.update()	update
2017-01-03 14:49:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:21 AI_Player.update()	update
2017-01-03 14:49:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:21 AI_Player.update()	Search took2ms
2017-01-03 14:49:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:21 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:21 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:21 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:21 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:21 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:21 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:21 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:21 AI_Player.update()	update
2017-01-03 14:49:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:22 AI_Player.update()	update
2017-01-03 14:49:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:22 AI_Player.update()	Search took5ms
2017-01-03 14:49:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:22 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:22 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:22 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:22 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:22 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:22 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:22 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:22 AI_Player.update()	update
2017-01-03 14:49:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:22 AI_Player.update()	update
2017-01-03 14:49:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:22 AI_Player.update()	Search took2ms
2017-01-03 14:49:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:22 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:22 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:22 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:22 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:22 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:22 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:22 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:22 AI_Player.update()	update
2017-01-03 14:49:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:22 AI_Player.update()	update
2017-01-03 14:49:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:22 AI_Player.update()	Search took2ms
2017-01-03 14:49:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:22 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:22 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:22 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:22 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:22 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:22 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:22 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:22 AI_Player.update()	update
2017-01-03 14:49:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:22 AI_Player.update()	update
2017-01-03 14:49:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:22 AI_Player.update()	Search took2ms
2017-01-03 14:49:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:22 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:22 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:22 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:22 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:22 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:22 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:22 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:22 AI_Player.update()	update
2017-01-03 14:49:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:22 AI_Player.update()	update
2017-01-03 14:49:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:22 AI_Player.update()	Search took1ms
2017-01-03 14:49:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:22 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:22 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:22 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:22 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:22 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:22 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:22 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:23 AI_Player.update()	update
2017-01-03 14:49:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:23 AI_Player.update()	update
2017-01-03 14:49:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:23 AI_Player.update()	Search took2ms
2017-01-03 14:49:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:23 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:23 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:23 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:23 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:23 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:23 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:23 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:23 AI_Player.update()	update
2017-01-03 14:49:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:23 AI_Player.update()	update
2017-01-03 14:49:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:23 AI_Player.update()	Search took1ms
2017-01-03 14:49:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:23 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:23 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:23 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:23 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:23 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:23 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:23 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:23 AI_Player.update()	update
2017-01-03 14:49:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:23 AI_Player.update()	update
2017-01-03 14:49:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:23 AI_Player.update()	Search took2ms
2017-01-03 14:49:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:23 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:23 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:23 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:23 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:23 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:23 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:23 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:23 AI_Player.update()	update
2017-01-03 14:49:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:23 AI_Player.update()	update
2017-01-03 14:49:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:23 AI_Player.update()	Search took1ms
2017-01-03 14:49:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:23 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:23 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:23 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:23 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:23 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:23 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:23 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:23 AI_Player.update()	update
2017-01-03 14:49:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:23 AI_Player.update()	update
2017-01-03 14:49:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:23 AI_Player.update()	Search took2ms
2017-01-03 14:49:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:23 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:23 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:23 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:23 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:23 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:23 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:23 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:24 AI_Player.update()	update
2017-01-03 14:49:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:24 AI_Player.update()	update
2017-01-03 14:49:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:24 AI_Player.update()	Search took1ms
2017-01-03 14:49:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:24 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:24 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:24 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:24 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:24 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:24 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:24 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:24 AI_Player.update()	update
2017-01-03 14:49:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:24 AI_Player.update()	update
2017-01-03 14:49:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:24 AI_Player.update()	Search took3ms
2017-01-03 14:49:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:24 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:24 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:24 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:24 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:24 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:24 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:24 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:24 AI_Player.update()	update
2017-01-03 14:49:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:24 AI_Player.update()	update
2017-01-03 14:49:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:24 AI_Player.update()	Search took2ms
2017-01-03 14:49:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:24 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:24 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:24 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:24 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:24 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:24 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:24 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:24 AI_Player.update()	update
2017-01-03 14:49:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:24 AI_Player.update()	update
2017-01-03 14:49:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:24 AI_Player.update()	Search took2ms
2017-01-03 14:49:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:24 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:24 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:24 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:24 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:24 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:24 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:24 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:24 AI_Player.update()	update
2017-01-03 14:49:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:25 AI_Player.update()	update
2017-01-03 14:49:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:25 AI_Player.update()	Search took5ms
2017-01-03 14:49:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:25 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:25 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:25 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:25 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:25 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:25 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:25 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:25 AI_Player.update()	update
2017-01-03 14:49:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:25 AI_Player.update()	update
2017-01-03 14:49:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:25 AI_Player.update()	Search took2ms
2017-01-03 14:49:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:25 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:25 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:25 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:25 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:25 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:25 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:25 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:25 AI_Player.update()	update
2017-01-03 14:49:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:25 AI_Player.update()	update
2017-01-03 14:49:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:25 AI_Player.update()	Search took1ms
2017-01-03 14:49:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:25 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:25 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:25 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:25 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:25 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:25 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:25 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:25 AI_Player.update()	update
2017-01-03 14:49:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:25 AI_Player.update()	update
2017-01-03 14:49:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:25 AI_Player.update()	Search took2ms
2017-01-03 14:49:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:25 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:25 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:25 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:25 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:25 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:25 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:25 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:25 AI_Player.update()	update
2017-01-03 14:49:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:25 AI_Player.update()	update
2017-01-03 14:49:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:25 AI_Player.update()	Search took1ms
2017-01-03 14:49:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:25 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:25 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:25 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:25 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:25 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:25 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:25 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:25 AI_Player.update()	update
2017-01-03 14:49:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:26 AI_Player.update()	update
2017-01-03 14:49:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:26 AI_Player.update()	Search took2ms
2017-01-03 14:49:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:26 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:26 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:26 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:26 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:26 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:26 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:26 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:26 AI_Player.update()	update
2017-01-03 14:49:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:26 AI_Player.update()	update
2017-01-03 14:49:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:26 AI_Player.update()	Search took1ms
2017-01-03 14:49:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:26 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:26 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:26 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:26 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:26 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:26 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:26 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:26 AI_Player.update()	update
2017-01-03 14:49:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:26 AI_Player.update()	update
2017-01-03 14:49:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:26 AI_Player.update()	Search took2ms
2017-01-03 14:49:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:26 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:26 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:26 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:26 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:26 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:26 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:26 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:26 AI_Player.update()	update
2017-01-03 14:49:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:26 AI_Player.update()	update
2017-01-03 14:49:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:26 AI_Player.update()	Search took1ms
2017-01-03 14:49:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:26 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:26 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:26 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:26 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:26 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:26 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:26 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:26 AI_Player.update()	update
2017-01-03 14:49:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:26 AI_Player.update()	update
2017-01-03 14:49:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:26 AI_Player.update()	Search took2ms
2017-01-03 14:49:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:26 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:26 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:26 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:26 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:26 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:26 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:26 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:27 AI_Player.update()	update
2017-01-03 14:49:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:27 AI_Player.update()	update
2017-01-03 14:49:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:27 AI_Player.update()	Search took1ms
2017-01-03 14:49:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:27 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:27 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:27 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:27 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:27 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:27 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:27 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:27 AI_Player.update()	update
2017-01-03 14:49:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:27 AI_Player.update()	update
2017-01-03 14:49:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:27 AI_Player.update()	Search took3ms
2017-01-03 14:49:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:27 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:27 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:27 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:27 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:27 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:27 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:27 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:27 AI_Player.update()	update
2017-01-03 14:49:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:27 AI_Player.update()	update
2017-01-03 14:49:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:27 AI_Player.update()	Search took3ms
2017-01-03 14:49:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:27 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:27 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:27 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:27 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:27 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:27 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:27 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:27 AI_Player.update()	update
2017-01-03 14:49:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:27 AI_Player.update()	update
2017-01-03 14:49:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:27 AI_Player.update()	Search took3ms
2017-01-03 14:49:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:27 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:27 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:27 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:27 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:27 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:27 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:27 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:27 AI_Player.update()	update
2017-01-03 14:49:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:27 AI_Player.update()	update
2017-01-03 14:49:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:27 AI_Player.update()	Search took4ms
2017-01-03 14:49:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:27 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:27 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:27 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:27 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:27 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:27 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:27 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:28 AI_Player.update()	update
2017-01-03 14:49:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:28 AI_Player.update()	update
2017-01-03 14:49:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:28 AI_Player.update()	Search took2ms
2017-01-03 14:49:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:28 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:28 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:28 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:28 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:28 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:28 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:28 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:28 AI_Player.update()	update
2017-01-03 14:49:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:28 AI_Player.update()	update
2017-01-03 14:49:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:28 AI_Player.update()	Search took1ms
2017-01-03 14:49:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:28 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:28 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:28 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:28 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:28 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:28 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:28 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:28 AI_Player.update()	update
2017-01-03 14:49:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:28 AI_Player.update()	update
2017-01-03 14:49:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:28 AI_Player.update()	Search took2ms
2017-01-03 14:49:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:28 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:28 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:28 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:28 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:28 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:28 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:28 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:28 AI_Player.update()	update
2017-01-03 14:49:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:28 AI_Player.update()	update
2017-01-03 14:49:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:28 AI_Player.update()	Search took1ms
2017-01-03 14:49:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:28 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:28 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:28 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:28 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:28 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:28 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:28 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:28 AI_Player.update()	update
2017-01-03 14:49:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:28 AI_Player.update()	update
2017-01-03 14:49:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:28 AI_Player.update()	Search took2ms
2017-01-03 14:49:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:28 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:28 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:28 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:28 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:28 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:28 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:28 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:29 AI_Player.update()	update
2017-01-03 14:49:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:29 AI_Player.update()	update
2017-01-03 14:49:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:29 AI_Player.update()	Search took1ms
2017-01-03 14:49:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:29 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:29 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:29 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:29 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:29 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:29 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:29 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:29 AI_Player.update()	update
2017-01-03 14:49:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:29 AI_Player.update()	update
2017-01-03 14:49:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:29 AI_Player.update()	Search took2ms
2017-01-03 14:49:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:29 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:29 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:29 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:29 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:29 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:29 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:29 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:29 AI_Player.update()	update
2017-01-03 14:49:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:29 AI_Player.update()	update
2017-01-03 14:49:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:29 AI_Player.update()	Search took1ms
2017-01-03 14:49:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:29 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:29 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:29 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:29 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:29 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:29 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:29 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:29 AI_Player.update()	update
2017-01-03 14:49:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:29 AI_Player.update()	update
2017-01-03 14:49:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:29 AI_Player.update()	Search took2ms
2017-01-03 14:49:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:29 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:29 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:29 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:29 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:29 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:29 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:29 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:29 AI_Player.update()	update
2017-01-03 14:49:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:29 AI_Player.update()	update
2017-01-03 14:49:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:29 AI_Player.update()	Search took1ms
2017-01-03 14:49:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:29 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:29 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:29 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:29 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:29 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:29 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:29 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:30 AI_Player.update()	update
2017-01-03 14:49:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:30 AI_Player.update()	update
2017-01-03 14:49:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:30 AI_Player.update()	Search took2ms
2017-01-03 14:49:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:30 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:30 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:30 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:30 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:30 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:30 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:30 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:30 AI_Player.update()	update
2017-01-03 14:49:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:30 AI_Player.update()	update
2017-01-03 14:49:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:30 AI_Player.update()	Search took2ms
2017-01-03 14:49:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:30 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:30 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:30 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:30 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:30 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:30 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:30 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:30 AI_Player.update()	update
2017-01-03 14:49:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:30 AI_Player.update()	update
2017-01-03 14:49:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:30 AI_Player.update()	Search took2ms
2017-01-03 14:49:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:30 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:30 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:30 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:30 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:30 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:30 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:30 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:30 AI_Player.update()	update
2017-01-03 14:49:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:30 AI_Player.update()	update
2017-01-03 14:49:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:30 AI_Player.update()	Search took5ms
2017-01-03 14:49:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:30 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:30 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:30 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:30 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:30 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:30 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:30 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:30 AI_Player.update()	update
2017-01-03 14:49:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:31 AI_Player.update()	update
2017-01-03 14:49:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:31 AI_Player.update()	Search took2ms
2017-01-03 14:49:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:31 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:31 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:31 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:31 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:31 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:31 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:31 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:31 AI_Player.update()	update
2017-01-03 14:49:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:31 AI_Player.update()	update
2017-01-03 14:49:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:31 AI_Player.update()	Search took1ms
2017-01-03 14:49:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:31 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:31 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:31 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:31 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:31 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:31 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:31 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:31 AI_Player.update()	update
2017-01-03 14:49:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:31 AI_Player.update()	update
2017-01-03 14:49:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:31 AI_Player.update()	Search took3ms
2017-01-03 14:49:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:31 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:31 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:31 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:31 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:31 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:31 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:31 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:31 AI_Player.update()	update
2017-01-03 14:49:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:31 AI_Player.update()	update
2017-01-03 14:49:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:31 AI_Player.update()	Search took1ms
2017-01-03 14:49:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:31 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:31 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:31 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:31 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:31 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:31 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:31 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:31 AI_Player.update()	update
2017-01-03 14:49:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:31 AI_Player.update()	update
2017-01-03 14:49:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:31 AI_Player.update()	Search took2ms
2017-01-03 14:49:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:31 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:31 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:31 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:31 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:31 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:31 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:31 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:31 AI_Player.update()	update
2017-01-03 14:49:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:32 AI_Player.update()	update
2017-01-03 14:49:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:32 AI_Player.update()	Search took1ms
2017-01-03 14:49:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:32 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:32 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:32 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:32 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:32 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:32 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:32 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:32 AI_Player.update()	update
2017-01-03 14:49:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:32 AI_Player.update()	update
2017-01-03 14:49:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:32 AI_Player.update()	Search took2ms
2017-01-03 14:49:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:32 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:32 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:32 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:32 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:32 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:32 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:32 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:32 AI_Player.update()	update
2017-01-03 14:49:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:32 AI_Player.update()	update
2017-01-03 14:49:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:32 AI_Player.update()	Search took1ms
2017-01-03 14:49:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:32 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:32 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:32 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:32 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:32 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:32 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:32 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:32 AI_Player.update()	update
2017-01-03 14:49:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:32 AI_Player.update()	update
2017-01-03 14:49:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:32 AI_Player.update()	Search took2ms
2017-01-03 14:49:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:32 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:32 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:32 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:32 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:32 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:32 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:32 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:32 AI_Player.update()	update
2017-01-03 14:49:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:32 AI_Player.update()	update
2017-01-03 14:49:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:32 AI_Player.update()	Search took1ms
2017-01-03 14:49:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:32 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:32 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:32 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:32 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:32 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:32 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:32 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:32 AI_Player.update()	update
2017-01-03 14:49:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:33 AI_Player.update()	update
2017-01-03 14:49:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:33 AI_Player.update()	Search took2ms
2017-01-03 14:49:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:33 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:33 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:33 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:33 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:33 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:33 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:33 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:33 AI_Player.update()	update
2017-01-03 14:49:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:33 AI_Player.update()	update
2017-01-03 14:49:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:33 AI_Player.update()	Search took2ms
2017-01-03 14:49:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:33 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:33 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:33 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:33 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:33 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:33 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:33 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:33 AI_Player.update()	update
2017-01-03 14:49:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:33 AI_Player.update()	update
2017-01-03 14:49:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:33 AI_Player.update()	Search took2ms
2017-01-03 14:49:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:33 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:33 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:33 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:33 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:33 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:33 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:33 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:33 AI_Player.update()	update
2017-01-03 14:49:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:33 AI_Player.update()	update
2017-01-03 14:49:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:33 AI_Player.update()	Search took5ms
2017-01-03 14:49:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:33 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:33 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:33 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:33 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:33 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:33 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:33 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:33 AI_Player.update()	update
2017-01-03 14:49:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:33 AI_Player.update()	update
2017-01-03 14:49:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:33 AI_Player.update()	Search took2ms
2017-01-03 14:49:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:33 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:33 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:33 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:33 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:33 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:33 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:33 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:34 AI_Player.update()	update
2017-01-03 14:49:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:34 AI_Player.update()	update
2017-01-03 14:49:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:34 AI_Player.update()	Search took1ms
2017-01-03 14:49:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:34 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:34 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:34 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:34 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:34 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:34 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:34 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:34 AI_Player.update()	update
2017-01-03 14:49:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:34 AI_Player.update()	update
2017-01-03 14:49:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:34 AI_Player.update()	Search took2ms
2017-01-03 14:49:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:34 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:34 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:34 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:34 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:34 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:34 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:34 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:34 AI_Player.update()	update
2017-01-03 14:49:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:34 AI_Player.update()	update
2017-01-03 14:49:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:34 AI_Player.update()	Search took1ms
2017-01-03 14:49:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:34 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:34 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:34 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:34 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:34 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:34 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:34 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:34 AI_Player.update()	update
2017-01-03 14:49:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:34 AI_Player.update()	update
2017-01-03 14:49:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:34 AI_Player.update()	Search took2ms
2017-01-03 14:49:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:34 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:34 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:34 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:34 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:34 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:34 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:34 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:34 AI_Player.update()	update
2017-01-03 14:49:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:34 AI_Player.update()	update
2017-01-03 14:49:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:34 AI_Player.update()	Search took1ms
2017-01-03 14:49:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:34 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:34 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:34 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:34 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:34 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:34 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:34 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:35 AI_Player.update()	update
2017-01-03 14:49:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:35 AI_Player.update()	update
2017-01-03 14:49:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:35 AI_Player.update()	Search took2ms
2017-01-03 14:49:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:35 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:35 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:35 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:35 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:35 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:35 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:35 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:35 AI_Player.update()	update
2017-01-03 14:49:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:35 AI_Player.update()	update
2017-01-03 14:49:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:35 AI_Player.update()	Search took1ms
2017-01-03 14:49:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:35 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:35 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:35 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:35 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:35 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:35 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:35 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:35 AI_Player.update()	update
2017-01-03 14:49:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:35 AI_Player.update()	update
2017-01-03 14:49:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:35 AI_Player.update()	Search took2ms
2017-01-03 14:49:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:35 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:35 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:35 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:35 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:35 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:35 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:35 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:35 AI_Player.update()	update
2017-01-03 14:49:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:35 AI_Player.update()	update
2017-01-03 14:49:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:35 AI_Player.update()	Search took1ms
2017-01-03 14:49:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:35 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:35 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:35 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:35 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:35 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:35 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:35 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:35 AI_Player.update()	update
2017-01-03 14:49:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:35 AI_Player.update()	update
2017-01-03 14:49:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:35 AI_Player.update()	Search took3ms
2017-01-03 14:49:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:35 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:35 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:35 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:35 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:35 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:35 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:35 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:36 AI_Player.update()	update
2017-01-03 14:49:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:36 AI_Player.update()	update
2017-01-03 14:49:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:36 AI_Player.update()	Search took2ms
2017-01-03 14:49:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:36 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:36 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:36 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:36 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:36 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:36 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:36 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:36 AI_Player.update()	update
2017-01-03 14:49:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:36 AI_Player.update()	update
2017-01-03 14:49:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:36 AI_Player.update()	Search took3ms
2017-01-03 14:49:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:36 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:36 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:36 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:36 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:36 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:36 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:36 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:36 AI_Player.update()	update
2017-01-03 14:49:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:36 AI_Player.update()	update
2017-01-03 14:49:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:36 AI_Player.update()	Search took8ms
2017-01-03 14:49:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:36 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:36 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:36 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:36 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:36 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:36 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:36 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:36 AI_Player.update()	update
2017-01-03 14:49:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:36 AI_Player.update()	update
2017-01-03 14:49:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:36 AI_Player.update()	Search took2ms
2017-01-03 14:49:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:36 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:36 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:36 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:36 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:36 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:36 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:36 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:36 AI_Player.update()	update
2017-01-03 14:49:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:36 AI_Player.update()	update
2017-01-03 14:49:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:36 AI_Player.update()	Search took1ms
2017-01-03 14:49:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:36 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:36 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:36 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:36 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:36 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:36 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:36 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:37 AI_Player.update()	update
2017-01-03 14:49:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:37 AI_Player.update()	update
2017-01-03 14:49:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:37 AI_Player.update()	Search took2ms
2017-01-03 14:49:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:37 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:37 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:37 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:37 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:37 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:37 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:37 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:37 AI_Player.update()	update
2017-01-03 14:49:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:37 AI_Player.update()	update
2017-01-03 14:49:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:37 AI_Player.update()	Search took1ms
2017-01-03 14:49:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:37 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:37 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:37 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:37 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:37 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:37 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:37 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:37 AI_Player.update()	update
2017-01-03 14:49:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:37 AI_Player.update()	update
2017-01-03 14:49:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:37 AI_Player.update()	Search took3ms
2017-01-03 14:49:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:37 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:37 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:37 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:37 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:37 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:37 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:37 AI_Player.update()	update
2017-01-03 14:49:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:37 AI_Player.update()	update
2017-01-03 14:49:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:37 AI_Player.update()	Search took1ms
2017-01-03 14:49:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:37 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:37 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:37 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:37 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:37 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:37 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:37 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:37 AI_Player.update()	update
2017-01-03 14:49:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:38 AI_Player.update()	update
2017-01-03 14:49:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:38 AI_Player.update()	Search took2ms
2017-01-03 14:49:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:38 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:38 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:38 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:38 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:38 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:38 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:38 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:38 AI_Player.update()	update
2017-01-03 14:49:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:38 AI_Player.update()	update
2017-01-03 14:49:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:38 AI_Player.update()	Search took1ms
2017-01-03 14:49:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:38 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:38 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:38 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:38 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:38 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:38 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:38 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:38 AI_Player.update()	update
2017-01-03 14:49:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:38 AI_Player.update()	update
2017-01-03 14:49:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:38 AI_Player.update()	Search took3ms
2017-01-03 14:49:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:38 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:38 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:38 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:38 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:38 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:38 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:38 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:38 AI_Player.update()	update
2017-01-03 14:49:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:38 AI_Player.update()	update
2017-01-03 14:49:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:38 AI_Player.update()	Search took1ms
2017-01-03 14:49:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:38 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:38 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:38 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:38 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:38 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:38 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:38 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:38 AI_Player.update()	update
2017-01-03 14:49:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:38 AI_Player.update()	update
2017-01-03 14:49:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:38 AI_Player.update()	Search took3ms
2017-01-03 14:49:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:38 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:38 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:38 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:38 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:38 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:38 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:38 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:38 AI_Player.update()	update
2017-01-03 14:49:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:39 AI_Player.update()	update
2017-01-03 14:49:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:39 AI_Player.update()	Search took2ms
2017-01-03 14:49:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:39 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:39 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:39 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:39 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:39 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:39 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:39 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:39 AI_Player.update()	update
2017-01-03 14:49:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:39 AI_Player.update()	update
2017-01-03 14:49:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:39 AI_Player.update()	Search took2ms
2017-01-03 14:49:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:39 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:39 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:39 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:39 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:39 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:39 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:39 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:39 AI_Player.update()	update
2017-01-03 14:49:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:39 AI_Player.update()	update
2017-01-03 14:49:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:39 AI_Player.update()	Search took5ms
2017-01-03 14:49:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:39 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:39 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:39 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:39 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:39 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:39 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:39 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:39 AI_Player.update()	update
2017-01-03 14:49:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:39 AI_Player.update()	update
2017-01-03 14:49:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:39 AI_Player.update()	Search took2ms
2017-01-03 14:49:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:39 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:39 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:39 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:39 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:39 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:39 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:39 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:39 AI_Player.update()	update
2017-01-03 14:49:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:39 AI_Player.update()	update
2017-01-03 14:49:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:39 AI_Player.update()	Search took1ms
2017-01-03 14:49:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:39 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:39 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:39 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:39 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:39 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:39 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:39 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:40 AI_Player.update()	update
2017-01-03 14:49:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:40 AI_Player.update()	update
2017-01-03 14:49:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:40 AI_Player.update()	Search took2ms
2017-01-03 14:49:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:40 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:40 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:40 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:40 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:40 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:40 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:40 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:40 AI_Player.update()	update
2017-01-03 14:49:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:40 AI_Player.update()	update
2017-01-03 14:49:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:40 AI_Player.update()	Search took1ms
2017-01-03 14:49:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:40 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:40 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:40 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:40 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:40 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:40 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:40 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:40 AI_Player.update()	update
2017-01-03 14:49:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:40 AI_Player.update()	update
2017-01-03 14:49:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:40 AI_Player.update()	Search took2ms
2017-01-03 14:49:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:40 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:40 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:40 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:40 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:40 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:40 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:40 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:40 AI_Player.update()	update
2017-01-03 14:49:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:40 AI_Player.update()	update
2017-01-03 14:49:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:40 AI_Player.update()	Search took1ms
2017-01-03 14:49:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:40 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:40 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:40 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:40 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:40 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:40 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:40 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:40 AI_Player.update()	update
2017-01-03 14:49:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:40 AI_Player.update()	update
2017-01-03 14:49:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:40 AI_Player.update()	Search took2ms
2017-01-03 14:49:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:40 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:40 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:40 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:40 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:40 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:40 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:40 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:41 AI_Player.update()	update
2017-01-03 14:49:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:41 AI_Player.update()	update
2017-01-03 14:49:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:41 AI_Player.update()	Search took1ms
2017-01-03 14:49:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:41 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:41 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:41 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:41 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:41 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:41 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:41 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:41 AI_Player.update()	update
2017-01-03 14:49:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:41 AI_Player.update()	update
2017-01-03 14:49:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:41 AI_Player.update()	Search took2ms
2017-01-03 14:49:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:41 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:41 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:41 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:41 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:41 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:41 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:41 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:41 AI_Player.update()	update
2017-01-03 14:49:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:41 AI_Player.update()	update
2017-01-03 14:49:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:41 AI_Player.update()	Search took1ms
2017-01-03 14:49:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:41 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:41 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:41 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:41 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:41 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:41 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:41 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:41 AI_Player.update()	update
2017-01-03 14:49:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:41 AI_Player.update()	update
2017-01-03 14:49:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:41 AI_Player.update()	Search took2ms
2017-01-03 14:49:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:41 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:41 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:41 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:41 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:41 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:41 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:41 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:41 AI_Player.update()	update
2017-01-03 14:49:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:42 AI_Player.update()	update
2017-01-03 14:49:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:42 AI_Player.update()	Search took2ms
2017-01-03 14:49:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:42 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:42 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:42 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:42 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:42 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:42 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:42 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:42 AI_Player.update()	update
2017-01-03 14:49:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:42 AI_Player.update()	update
2017-01-03 14:49:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:42 AI_Player.update()	Search took2ms
2017-01-03 14:49:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:42 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:42 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:42 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:42 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:42 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:42 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:42 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:42 AI_Player.update()	update
2017-01-03 14:49:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:42 AI_Player.update()	update
2017-01-03 14:49:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:42 AI_Player.update()	Search took5ms
2017-01-03 14:49:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:42 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:42 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:42 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:42 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:42 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:42 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:42 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:42 AI_Player.update()	update
2017-01-03 14:49:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:42 AI_Player.update()	update
2017-01-03 14:49:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:42 AI_Player.update()	Search took2ms
2017-01-03 14:49:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:42 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:42 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:42 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:42 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:42 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:42 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:42 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:42 AI_Player.update()	update
2017-01-03 14:49:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:42 AI_Player.update()	update
2017-01-03 14:49:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:42 AI_Player.update()	Search took1ms
2017-01-03 14:49:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:42 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:42 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:42 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:42 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:42 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:42 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:42 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:42 AI_Player.update()	update
2017-01-03 14:49:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:43 AI_Player.update()	update
2017-01-03 14:49:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:43 AI_Player.update()	Search took2ms
2017-01-03 14:49:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:43 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:43 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:43 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:43 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:43 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:43 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:43 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:43 AI_Player.update()	update
2017-01-03 14:49:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:43 AI_Player.update()	update
2017-01-03 14:49:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:43 AI_Player.update()	Search took1ms
2017-01-03 14:49:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:43 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:43 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:43 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:43 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:43 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:43 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:43 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:43 AI_Player.update()	update
2017-01-03 14:49:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:43 AI_Player.update()	update
2017-01-03 14:49:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:43 AI_Player.update()	Search took2ms
2017-01-03 14:49:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:43 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:43 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:43 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:43 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:43 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:43 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:43 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:43 AI_Player.update()	update
2017-01-03 14:49:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:43 AI_Player.update()	update
2017-01-03 14:49:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:43 AI_Player.update()	Search took1ms
2017-01-03 14:49:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:43 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:43 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:43 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:43 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:43 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:43 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:43 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:43 AI_Player.update()	update
2017-01-03 14:49:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:43 AI_Player.update()	update
2017-01-03 14:49:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:43 AI_Player.update()	Search took2ms
2017-01-03 14:49:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:43 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:43 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:43 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:43 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:43 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:43 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:43 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:44 AI_Player.update()	update
2017-01-03 14:49:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:44 AI_Player.update()	update
2017-01-03 14:49:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:44 AI_Player.update()	Search took1ms
2017-01-03 14:49:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:44 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:44 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:44 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:44 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:44 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:44 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:44 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:44 AI_Player.update()	update
2017-01-03 14:49:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:44 AI_Player.update()	update
2017-01-03 14:49:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:44 AI_Player.update()	Search took2ms
2017-01-03 14:49:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:44 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:44 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:44 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:44 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:44 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:44 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:44 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:44 AI_Player.update()	update
2017-01-03 14:49:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:44 AI_Player.update()	update
2017-01-03 14:49:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:44 AI_Player.update()	Search took1ms
2017-01-03 14:49:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:44 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:44 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:44 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:44 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:44 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:44 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:44 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:44 AI_Player.update()	update
2017-01-03 14:49:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:44 AI_Player.update()	update
2017-01-03 14:49:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:44 AI_Player.update()	Search took2ms
2017-01-03 14:49:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:44 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:44 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:44 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:44 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:44 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:44 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:44 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:44 AI_Player.update()	update
2017-01-03 14:49:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:44 AI_Player.update()	update
2017-01-03 14:49:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:44 AI_Player.update()	Search took2ms
2017-01-03 14:49:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:44 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:44 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:44 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:44 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:44 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:44 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:44 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:45 AI_Player.update()	update
2017-01-03 14:49:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:45 AI_Player.update()	update
2017-01-03 14:49:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:45 AI_Player.update()	Search took2ms
2017-01-03 14:49:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:45 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:45 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:45 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:45 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:45 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:45 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:45 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:45 AI_Player.update()	update
2017-01-03 14:49:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:45 AI_Player.update()	update
2017-01-03 14:49:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:45 AI_Player.update()	Search took5ms
2017-01-03 14:49:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:45 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:45 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:45 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:45 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:45 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:45 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:45 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:45 AI_Player.update()	update
2017-01-03 14:49:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:45 AI_Player.update()	update
2017-01-03 14:49:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:45 AI_Player.update()	Search took2ms
2017-01-03 14:49:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:45 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:45 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:45 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:45 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:45 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:45 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:45 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:45 AI_Player.update()	update
2017-01-03 14:49:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:45 AI_Player.update()	update
2017-01-03 14:49:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:45 AI_Player.update()	Search took1ms
2017-01-03 14:49:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:45 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:45 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:45 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:45 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:45 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:45 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:45 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:45 AI_Player.update()	update
2017-01-03 14:49:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:45 AI_Player.update()	update
2017-01-03 14:49:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:45 AI_Player.update()	Search took2ms
2017-01-03 14:49:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:45 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:45 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:45 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:45 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:45 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:45 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:45 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:46 AI_Player.update()	update
2017-01-03 14:49:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:46 AI_Player.update()	update
2017-01-03 14:49:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:46 AI_Player.update()	Search took1ms
2017-01-03 14:49:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:46 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:46 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:46 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:46 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:46 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:46 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:46 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:46 AI_Player.update()	update
2017-01-03 14:49:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:46 AI_Player.update()	update
2017-01-03 14:49:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:46 AI_Player.update()	Search took2ms
2017-01-03 14:49:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:46 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:46 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:46 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:46 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:46 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:46 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:46 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:46 AI_Player.update()	update
2017-01-03 14:49:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:46 AI_Player.update()	update
2017-01-03 14:49:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:46 AI_Player.update()	Search took1ms
2017-01-03 14:49:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:46 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:46 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:46 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:46 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:46 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:46 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:46 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:46 AI_Player.update()	update
2017-01-03 14:49:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:46 AI_Player.update()	update
2017-01-03 14:49:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:46 AI_Player.update()	Search took2ms
2017-01-03 14:49:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:46 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:46 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:46 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:46 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:46 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:46 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:46 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:46 AI_Player.update()	update
2017-01-03 14:49:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:47 AI_Player.update()	update
2017-01-03 14:49:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:47 AI_Player.update()	Search took1ms
2017-01-03 14:49:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:47 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:47 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:47 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:47 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:47 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:47 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:47 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:47 AI_Player.update()	update
2017-01-03 14:49:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:47 AI_Player.update()	update
2017-01-03 14:49:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:47 AI_Player.update()	Search took2ms
2017-01-03 14:49:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:47 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:47 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:47 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:47 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:47 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:47 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:47 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:47 AI_Player.update()	update
2017-01-03 14:49:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:47 AI_Player.update()	update
2017-01-03 14:49:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:47 AI_Player.update()	Search took2ms
2017-01-03 14:49:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:47 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:47 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:47 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:47 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:47 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:47 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:47 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:47 AI_Player.update()	update
2017-01-03 14:49:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:47 AI_Player.update()	update
2017-01-03 14:49:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:47 AI_Player.update()	Search took2ms
2017-01-03 14:49:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:47 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:47 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:47 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:47 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:47 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:47 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:47 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:47 AI_Player.update()	update
2017-01-03 14:49:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:47 AI_Player.update()	update
2017-01-03 14:49:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:47 AI_Player.update()	Search took3ms
2017-01-03 14:49:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:47 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:47 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:47 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:47 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:47 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:47 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:47 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:47 AI_Player.update()	update
2017-01-03 14:49:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:48 AI_Player.update()	update
2017-01-03 14:49:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:48 AI_Player.update()	Search took2ms
2017-01-03 14:49:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:48 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:48 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:48 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:48 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:48 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:48 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:48 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:48 AI_Player.update()	update
2017-01-03 14:49:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:48 AI_Player.update()	update
2017-01-03 14:49:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:48 AI_Player.update()	Search took5ms
2017-01-03 14:49:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:48 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:48 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:48 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:48 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:48 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:48 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:48 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:48 AI_Player.update()	update
2017-01-03 14:49:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:48 AI_Player.update()	update
2017-01-03 14:49:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:48 AI_Player.update()	Search took2ms
2017-01-03 14:49:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:48 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:48 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:48 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:48 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:48 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:48 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:48 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:48 AI_Player.update()	update
2017-01-03 14:49:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:48 AI_Player.update()	update
2017-01-03 14:49:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:48 AI_Player.update()	Search took1ms
2017-01-03 14:49:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:48 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:48 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:48 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:48 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:48 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:48 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:48 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:48 AI_Player.update()	update
2017-01-03 14:49:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:48 AI_Player.update()	update
2017-01-03 14:49:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:48 AI_Player.update()	Search took2ms
2017-01-03 14:49:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:48 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:48 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:48 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:48 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:48 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:48 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:48 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:49 AI_Player.update()	update
2017-01-03 14:49:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:49 AI_Player.update()	update
2017-01-03 14:49:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:49 AI_Player.update()	Search took1ms
2017-01-03 14:49:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:49 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:49 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:49 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:49 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:49 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:49 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:49 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:49 AI_Player.update()	update
2017-01-03 14:49:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:49 AI_Player.update()	update
2017-01-03 14:49:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:49 AI_Player.update()	Search took2ms
2017-01-03 14:49:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:49 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:49 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:49 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:49 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:49 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:49 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:49 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:49 AI_Player.update()	update
2017-01-03 14:49:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:49 AI_Player.update()	update
2017-01-03 14:49:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:49 AI_Player.update()	Search took1ms
2017-01-03 14:49:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:49 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:49 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:49 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:49 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:49 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:49 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:49 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:49 AI_Player.update()	update
2017-01-03 14:49:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:49 AI_Player.update()	update
2017-01-03 14:49:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:49 AI_Player.update()	Search took2ms
2017-01-03 14:49:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:49 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:49 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:49 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:49 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:49 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:49 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:49 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:49 AI_Player.update()	update
2017-01-03 14:49:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:49 AI_Player.update()	update
2017-01-03 14:49:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:49 AI_Player.update()	Search took1ms
2017-01-03 14:49:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:49 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:49 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:49 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:49 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:49 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:49 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:49 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:50 AI_Player.update()	update
2017-01-03 14:49:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:50 AI_Player.update()	update
2017-01-03 14:49:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:50 AI_Player.update()	Search took2ms
2017-01-03 14:49:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:50 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:50 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:50 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:50 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:50 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:50 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:50 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:50 AI_Player.update()	update
2017-01-03 14:49:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:50 AI_Player.update()	update
2017-01-03 14:49:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:50 AI_Player.update()	Search took1ms
2017-01-03 14:49:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:50 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:50 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:50 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:50 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:50 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:50 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:50 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:50 AI_Player.update()	update
2017-01-03 14:49:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:50 AI_Player.update()	update
2017-01-03 14:49:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:50 AI_Player.update()	Search took2ms
2017-01-03 14:49:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:50 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:50 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:50 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:50 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:50 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:50 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:50 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:50 AI_Player.update()	update
2017-01-03 14:49:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:50 AI_Player.update()	update
2017-01-03 14:49:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:50 AI_Player.update()	Search took2ms
2017-01-03 14:49:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:50 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:50 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:50 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:50 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:50 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:50 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:50 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:50 AI_Player.update()	update
2017-01-03 14:49:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:50 AI_Player.update()	update
2017-01-03 14:49:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:50 AI_Player.update()	Search took2ms
2017-01-03 14:49:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:50 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:50 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:50 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:50 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:50 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:50 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:50 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:51 AI_Player.update()	update
2017-01-03 14:49:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:51 AI_Player.update()	update
2017-01-03 14:49:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:51 AI_Player.update()	Search took5ms
2017-01-03 14:49:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:51 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:51 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:51 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:51 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:51 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:51 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:51 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:51 AI_Player.update()	update
2017-01-03 14:49:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:51 AI_Player.update()	update
2017-01-03 14:49:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:51 AI_Player.update()	Search took2ms
2017-01-03 14:49:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:51 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:51 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:51 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:51 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:51 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:51 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:51 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:51 AI_Player.update()	update
2017-01-03 14:49:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:51 AI_Player.update()	update
2017-01-03 14:49:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:51 AI_Player.update()	Search took1ms
2017-01-03 14:49:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:51 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:51 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:51 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:51 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:51 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:51 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:51 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:51 AI_Player.update()	update
2017-01-03 14:49:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:51 AI_Player.update()	update
2017-01-03 14:49:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:51 AI_Player.update()	Search took2ms
2017-01-03 14:49:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:51 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:51 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:51 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:51 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:51 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:51 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:51 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:51 AI_Player.update()	update
2017-01-03 14:49:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:51 AI_Player.update()	update
2017-01-03 14:49:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:51 AI_Player.update()	Search took1ms
2017-01-03 14:49:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:51 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:51 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:51 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:51 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:51 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:51 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:51 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:52 AI_Player.update()	update
2017-01-03 14:49:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:52 AI_Player.update()	update
2017-01-03 14:49:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:52 AI_Player.update()	Search took3ms
2017-01-03 14:49:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:52 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:52 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:52 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:52 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:52 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:52 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:52 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:52 AI_Player.update()	update
2017-01-03 14:49:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:52 AI_Player.update()	update
2017-01-03 14:49:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:52 AI_Player.update()	Search took1ms
2017-01-03 14:49:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:52 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:52 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:52 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:52 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:52 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:52 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:52 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:52 AI_Player.update()	update
2017-01-03 14:49:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:52 AI_Player.update()	update
2017-01-03 14:49:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:52 AI_Player.update()	Search took2ms
2017-01-03 14:49:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:52 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:52 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:52 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:52 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:52 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:52 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:52 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:52 AI_Player.update()	update
2017-01-03 14:49:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:52 AI_Player.update()	update
2017-01-03 14:49:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:52 AI_Player.update()	Search took1ms
2017-01-03 14:49:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:52 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:52 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:52 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:52 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:52 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:52 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:52 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:52 AI_Player.update()	update
2017-01-03 14:49:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:53 AI_Player.update()	update
2017-01-03 14:49:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:53 AI_Player.update()	Search took2ms
2017-01-03 14:49:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:53 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:53 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:53 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:53 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:53 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:53 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:53 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:53 AI_Player.update()	update
2017-01-03 14:49:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:53 AI_Player.update()	update
2017-01-03 14:49:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:53 AI_Player.update()	Search took1ms
2017-01-03 14:49:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:53 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:53 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:53 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:53 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:53 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:53 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:53 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:53 AI_Player.update()	update
2017-01-03 14:49:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:53 AI_Player.update()	update
2017-01-03 14:49:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:53 AI_Player.update()	Search took2ms
2017-01-03 14:49:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:53 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:53 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:53 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:53 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:53 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:53 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:53 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:53 AI_Player.update()	update
2017-01-03 14:49:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:53 AI_Player.update()	update
2017-01-03 14:49:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:53 AI_Player.update()	Search took2ms
2017-01-03 14:49:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:53 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:53 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:53 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:53 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:53 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:53 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:53 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:53 AI_Player.update()	update
2017-01-03 14:49:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:53 AI_Player.update()	update
2017-01-03 14:49:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:53 AI_Player.update()	Search took2ms
2017-01-03 14:49:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:53 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:53 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:53 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:53 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:53 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:53 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:53 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:53 AI_Player.update()	update
2017-01-03 14:49:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:54 AI_Player.update()	update
2017-01-03 14:49:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:54 AI_Player.update()	Search took5ms
2017-01-03 14:49:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:54 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:54 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:54 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:54 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:54 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:54 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:54 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:54 AI_Player.update()	update
2017-01-03 14:49:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:54 AI_Player.update()	update
2017-01-03 14:49:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:54 AI_Player.update()	Search took2ms
2017-01-03 14:49:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:54 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:54 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:54 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:54 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:54 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:54 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:54 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:54 AI_Player.update()	update
2017-01-03 14:49:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:54 AI_Player.update()	update
2017-01-03 14:49:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:54 AI_Player.update()	Search took1ms
2017-01-03 14:49:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:54 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:54 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:54 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:54 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:54 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:54 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:54 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:54 AI_Player.update()	update
2017-01-03 14:49:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:54 AI_Player.update()	update
2017-01-03 14:49:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:54 AI_Player.update()	Search took2ms
2017-01-03 14:49:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:54 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:54 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:54 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:54 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:54 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:54 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:54 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:54 AI_Player.update()	update
2017-01-03 14:49:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:54 AI_Player.update()	update
2017-01-03 14:49:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:54 AI_Player.update()	Search took1ms
2017-01-03 14:49:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:54 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:54 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:54 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:54 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:54 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:54 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:54 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:55 AI_Player.update()	update
2017-01-03 14:49:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:55 AI_Player.update()	update
2017-01-03 14:49:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:55 AI_Player.update()	Search took3ms
2017-01-03 14:49:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:55 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:55 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:55 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:55 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:55 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:55 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:55 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:55 AI_Player.update()	update
2017-01-03 14:49:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:55 AI_Player.update()	update
2017-01-03 14:49:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:55 AI_Player.update()	Search took1ms
2017-01-03 14:49:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:55 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:55 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:55 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:55 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:55 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:55 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:55 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:55 AI_Player.update()	update
2017-01-03 14:49:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:55 AI_Player.update()	update
2017-01-03 14:49:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:55 AI_Player.update()	Search took2ms
2017-01-03 14:49:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:55 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:55 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:55 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:55 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:55 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:55 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:55 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:55 AI_Player.update()	update
2017-01-03 14:49:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:55 AI_Player.update()	update
2017-01-03 14:49:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:55 AI_Player.update()	Search took1ms
2017-01-03 14:49:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:55 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:55 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:55 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:55 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:55 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:55 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:55 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:55 AI_Player.update()	update
2017-01-03 14:49:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:55 AI_Player.update()	update
2017-01-03 14:49:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:55 AI_Player.update()	Search took2ms
2017-01-03 14:49:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:55 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:55 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:55 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:55 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:55 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:55 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:55 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:56 AI_Player.update()	update
2017-01-03 14:49:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:56 AI_Player.update()	update
2017-01-03 14:49:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:56 AI_Player.update()	Search took1ms
2017-01-03 14:49:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:56 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:56 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:56 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:56 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:56 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:56 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:56 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:56 AI_Player.update()	update
2017-01-03 14:49:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:56 AI_Player.update()	update
2017-01-03 14:49:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:56 AI_Player.update()	Search took2ms
2017-01-03 14:49:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:56 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:56 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:56 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:56 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:56 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:56 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:56 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:56 AI_Player.update()	update
2017-01-03 14:49:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:56 AI_Player.update()	update
2017-01-03 14:49:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:56 AI_Player.update()	Search took2ms
2017-01-03 14:49:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:56 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:56 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:56 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:56 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:56 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:56 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:56 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:56 AI_Player.update()	update
2017-01-03 14:49:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:56 AI_Player.update()	update
2017-01-03 14:49:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:56 AI_Player.update()	Search took2ms
2017-01-03 14:49:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:56 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:56 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:56 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:56 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:56 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:56 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:56 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:56 AI_Player.update()	update
2017-01-03 14:49:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:57 AI_Player.update()	update
2017-01-03 14:49:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:57 AI_Player.update()	Search took4ms
2017-01-03 14:49:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:57 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:57 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:57 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:57 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:57 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:57 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:57 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:57 AI_Player.update()	update
2017-01-03 14:49:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:57 AI_Player.update()	update
2017-01-03 14:49:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:57 AI_Player.update()	Search took2ms
2017-01-03 14:49:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:57 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:57 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:57 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:57 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:57 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:57 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:57 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:57 AI_Player.update()	update
2017-01-03 14:49:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:57 AI_Player.update()	update
2017-01-03 14:49:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:57 AI_Player.update()	Search took1ms
2017-01-03 14:49:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:57 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:57 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:57 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:57 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:57 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:57 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:57 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:57 AI_Player.update()	update
2017-01-03 14:49:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:57 AI_Player.update()	update
2017-01-03 14:49:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:57 AI_Player.update()	Search took3ms
2017-01-03 14:49:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:57 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:57 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:57 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:57 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:57 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:57 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:57 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:57 AI_Player.update()	update
2017-01-03 14:49:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:57 AI_Player.update()	update
2017-01-03 14:49:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:57 AI_Player.update()	Search took1ms
2017-01-03 14:49:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:57 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:57 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:57 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:57 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:57 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:57 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:57 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:58 AI_Player.update()	update
2017-01-03 14:49:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:58 AI_Player.update()	update
2017-01-03 14:49:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:58 AI_Player.update()	Search took2ms
2017-01-03 14:49:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:58 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:58 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:58 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:58 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:58 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:58 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:58 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:58 AI_Player.update()	update
2017-01-03 14:49:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:58 AI_Player.update()	update
2017-01-03 14:49:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:58 AI_Player.update()	Search took1ms
2017-01-03 14:49:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:58 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:58 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:58 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:58 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:58 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:58 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:58 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:58 AI_Player.update()	update
2017-01-03 14:49:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:58 AI_Player.update()	update
2017-01-03 14:49:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:58 AI_Player.update()	Search took2ms
2017-01-03 14:49:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:58 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:58 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:58 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:58 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:58 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:58 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:58 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:58 AI_Player.update()	update
2017-01-03 14:49:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:58 AI_Player.update()	update
2017-01-03 14:49:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:58 AI_Player.update()	Search took1ms
2017-01-03 14:49:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:58 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:49:58 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:58 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:58 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:58 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:58 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:58 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:58 AI_Player.update()	update
2017-01-03 14:49:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:58 AI_Player.update()	update
2017-01-03 14:49:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:58 AI_Player.update()	Search took2ms
2017-01-03 14:49:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:58 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:49:58 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:58 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:58 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:58 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:58 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:58 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:59 AI_Player.update()	update
2017-01-03 14:49:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:59 AI_Player.update()	update
2017-01-03 14:49:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:59 AI_Player.update()	Search took1ms
2017-01-03 14:49:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:59 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:49:59 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:59 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:59 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:59 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:59 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:59 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:59 AI_Player.update()	update
2017-01-03 14:49:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:59 AI_Player.update()	update
2017-01-03 14:49:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:59 AI_Player.update()	Search took2ms
2017-01-03 14:49:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:59 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:49:59 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:59 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:59 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:59 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:59 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:59 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:59 AI_Player.update()	update
2017-01-03 14:49:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:49:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:49:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:49:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:59 AI_Player.update()	update
2017-01-03 14:49:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:49:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:49:59 AI_Player.update()	Search took3ms
2017-01-03 14:49:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:59 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:49:59 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:59 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:59 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:59 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:59 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:59 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:59 AI_Player.update()	update
2017-01-03 14:49:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:49:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:49:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:49:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:49:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:49:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:49:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:49:59 AI_Player.update()	update
2017-01-03 14:49:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:49:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:49:59 AI_Player.update()	Search took2ms
2017-01-03 14:49:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:49:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:59 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:49:59 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:49:59 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:49:59 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:49:59 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:49:59 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:49:59 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:49:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:49:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:49:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:49:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:49:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:49:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:49:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:49:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:00 AI_Player.update()	update
2017-01-03 14:50:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:00 AI_Player.update()	update
2017-01-03 14:50:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:00 AI_Player.update()	Search took5ms
2017-01-03 14:50:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:00 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:00 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:00 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:00 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:00 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:00 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:00 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:00 AI_Player.update()	update
2017-01-03 14:50:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:00 AI_Player.update()	update
2017-01-03 14:50:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:00 AI_Player.update()	Search took2ms
2017-01-03 14:50:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:00 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:00 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:00 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:00 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:00 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:00 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:00 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:00 AI_Player.update()	update
2017-01-03 14:50:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:00 AI_Player.update()	update
2017-01-03 14:50:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:00 AI_Player.update()	Search took1ms
2017-01-03 14:50:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:00 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:00 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:00 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:00 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:00 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:00 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:00 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:00 AI_Player.update()	update
2017-01-03 14:50:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:00 AI_Player.update()	update
2017-01-03 14:50:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:00 AI_Player.update()	Search took2ms
2017-01-03 14:50:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:00 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:00 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:00 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:00 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:00 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:00 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:00 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:00 AI_Player.update()	update
2017-01-03 14:50:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:00 AI_Player.update()	update
2017-01-03 14:50:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:00 AI_Player.update()	Search took1ms
2017-01-03 14:50:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:00 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:00 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:00 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:00 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:00 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:00 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:00 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:01 AI_Player.update()	update
2017-01-03 14:50:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:01 AI_Player.update()	update
2017-01-03 14:50:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:01 AI_Player.update()	Search took2ms
2017-01-03 14:50:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:01 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:01 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:01 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:01 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:01 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:01 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:01 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:01 AI_Player.update()	update
2017-01-03 14:50:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:01 AI_Player.update()	update
2017-01-03 14:50:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:01 AI_Player.update()	Search took1ms
2017-01-03 14:50:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:01 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:01 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:01 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:01 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:01 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:01 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:01 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:01 AI_Player.update()	update
2017-01-03 14:50:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:01 AI_Player.update()	update
2017-01-03 14:50:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:01 AI_Player.update()	Search took2ms
2017-01-03 14:50:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:01 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:01 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:01 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:01 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:01 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:01 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:01 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:01 AI_Player.update()	update
2017-01-03 14:50:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:01 AI_Player.update()	update
2017-01-03 14:50:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:01 AI_Player.update()	Search took1ms
2017-01-03 14:50:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:01 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:01 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:01 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:01 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:01 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:01 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:01 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:01 AI_Player.update()	update
2017-01-03 14:50:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:01 AI_Player.update()	update
2017-01-03 14:50:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:01 AI_Player.update()	Search took2ms
2017-01-03 14:50:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:01 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:01 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:01 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:01 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:01 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:01 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:01 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:02 AI_Player.update()	update
2017-01-03 14:50:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:02 AI_Player.update()	update
2017-01-03 14:50:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:02 AI_Player.update()	Search took1ms
2017-01-03 14:50:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:02 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:02 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:02 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:02 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:02 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:02 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:02 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:02 AI_Player.update()	update
2017-01-03 14:50:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:02 AI_Player.update()	update
2017-01-03 14:50:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:02 AI_Player.update()	Search took2ms
2017-01-03 14:50:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:02 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:02 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:02 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:02 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:02 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:02 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:02 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:02 AI_Player.update()	update
2017-01-03 14:50:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:02 AI_Player.update()	update
2017-01-03 14:50:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:02 AI_Player.update()	Search took2ms
2017-01-03 14:50:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:02 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:02 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:02 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:02 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:02 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:02 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:02 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:02 AI_Player.update()	update
2017-01-03 14:50:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:02 AI_Player.update()	update
2017-01-03 14:50:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:02 AI_Player.update()	Search took3ms
2017-01-03 14:50:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:02 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:02 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:02 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:02 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:02 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:02 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:02 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:02 AI_Player.update()	update
2017-01-03 14:50:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:03 AI_Player.update()	update
2017-01-03 14:50:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:03 AI_Player.update()	Search took4ms
2017-01-03 14:50:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:03 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:03 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:03 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:03 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:03 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:03 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:03 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:03 AI_Player.update()	update
2017-01-03 14:50:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:03 AI_Player.update()	update
2017-01-03 14:50:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:03 AI_Player.update()	Search took2ms
2017-01-03 14:50:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:03 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:03 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:03 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:03 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:03 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:03 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:03 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:03 AI_Player.update()	update
2017-01-03 14:50:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:03 AI_Player.update()	update
2017-01-03 14:50:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:03 AI_Player.update()	Search took1ms
2017-01-03 14:50:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:03 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:03 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:03 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:03 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:03 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:03 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:03 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:03 AI_Player.update()	update
2017-01-03 14:50:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:03 AI_Player.update()	update
2017-01-03 14:50:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:03 AI_Player.update()	Search took2ms
2017-01-03 14:50:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:03 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:03 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:03 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:03 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:03 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:03 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:03 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:03 AI_Player.update()	update
2017-01-03 14:50:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:03 AI_Player.update()	update
2017-01-03 14:50:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:03 AI_Player.update()	Search took1ms
2017-01-03 14:50:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:03 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:03 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:03 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:03 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:03 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:03 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:03 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:03 AI_Player.update()	update
2017-01-03 14:50:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:04 AI_Player.update()	update
2017-01-03 14:50:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:04 AI_Player.update()	Search took2ms
2017-01-03 14:50:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:04 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:04 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:04 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:04 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:04 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:04 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:04 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:04 AI_Player.update()	update
2017-01-03 14:50:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:04 AI_Player.update()	update
2017-01-03 14:50:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:04 AI_Player.update()	Search took1ms
2017-01-03 14:50:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:04 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:04 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:04 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:04 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:04 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:04 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:04 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:04 AI_Player.update()	update
2017-01-03 14:50:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:04 AI_Player.update()	update
2017-01-03 14:50:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:04 AI_Player.update()	Search took2ms
2017-01-03 14:50:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:04 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:04 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:04 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:04 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:04 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:04 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:04 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:04 AI_Player.update()	update
2017-01-03 14:50:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:04 AI_Player.update()	update
2017-01-03 14:50:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:04 AI_Player.update()	Search took1ms
2017-01-03 14:50:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:04 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:04 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:04 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:04 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:04 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:04 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:04 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:04 AI_Player.update()	update
2017-01-03 14:50:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:04 AI_Player.update()	update
2017-01-03 14:50:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:04 AI_Player.update()	Search took3ms
2017-01-03 14:50:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:04 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:04 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:04 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:04 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:04 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:04 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:04 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:05 AI_Player.update()	update
2017-01-03 14:50:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:05 AI_Player.update()	update
2017-01-03 14:50:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:05 AI_Player.update()	Search took2ms
2017-01-03 14:50:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:05 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:05 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:05 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:05 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:05 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:05 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:05 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:05 AI_Player.update()	update
2017-01-03 14:50:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:05 AI_Player.update()	update
2017-01-03 14:50:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:05 AI_Player.update()	Search took2ms
2017-01-03 14:50:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:05 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:05 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:05 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:05 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:05 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:05 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:05 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:05 AI_Player.update()	update
2017-01-03 14:50:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:05 AI_Player.update()	update
2017-01-03 14:50:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:05 AI_Player.update()	Search took2ms
2017-01-03 14:50:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:05 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:05 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:05 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:05 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:05 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:05 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:05 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:05 AI_Player.update()	update
2017-01-03 14:50:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:05 AI_Player.update()	update
2017-01-03 14:50:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:05 AI_Player.update()	Search took2ms
2017-01-03 14:50:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:05 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:05 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:05 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:05 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:05 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:05 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:05 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:05 AI_Player.update()	update
2017-01-03 14:50:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:05 AI_Player.update()	update
2017-01-03 14:50:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:05 AI_Player.update()	Search took5ms
2017-01-03 14:50:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:05 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:05 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:05 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:05 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:05 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:05 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:05 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:06 AI_Player.update()	update
2017-01-03 14:50:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:06 AI_Player.update()	update
2017-01-03 14:50:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:06 AI_Player.update()	Search took2ms
2017-01-03 14:50:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:06 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:06 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:06 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:06 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:06 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:06 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:06 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:06 AI_Player.update()	update
2017-01-03 14:50:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:06 AI_Player.update()	update
2017-01-03 14:50:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:06 AI_Player.update()	Search took1ms
2017-01-03 14:50:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:06 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:06 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:06 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:06 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:06 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:06 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:06 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:06 AI_Player.update()	update
2017-01-03 14:50:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:06 AI_Player.update()	update
2017-01-03 14:50:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:06 AI_Player.update()	Search took2ms
2017-01-03 14:50:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:06 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:06 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:06 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:06 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:06 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:06 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:06 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:06 AI_Player.update()	update
2017-01-03 14:50:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:06 AI_Player.update()	update
2017-01-03 14:50:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:06 AI_Player.update()	Search took1ms
2017-01-03 14:50:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:06 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:06 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:06 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:06 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:06 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:06 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:06 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:06 AI_Player.update()	update
2017-01-03 14:50:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:06 AI_Player.update()	update
2017-01-03 14:50:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:06 AI_Player.update()	Search took2ms
2017-01-03 14:50:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:06 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:06 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:06 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:06 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:06 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:06 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:06 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:07 AI_Player.update()	update
2017-01-03 14:50:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:07 AI_Player.update()	update
2017-01-03 14:50:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:07 AI_Player.update()	Search took1ms
2017-01-03 14:50:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:07 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:07 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:07 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:07 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:07 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:07 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:07 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:07 AI_Player.update()	update
2017-01-03 14:50:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:07 AI_Player.update()	update
2017-01-03 14:50:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:07 AI_Player.update()	Search took2ms
2017-01-03 14:50:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:07 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:07 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:07 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:07 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:07 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:07 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:07 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:07 AI_Player.update()	update
2017-01-03 14:50:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:07 AI_Player.update()	update
2017-01-03 14:50:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:07 AI_Player.update()	Search took2ms
2017-01-03 14:50:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:07 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:07 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:07 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:07 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:07 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:07 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:07 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:07 AI_Player.update()	update
2017-01-03 14:50:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:07 AI_Player.update()	update
2017-01-03 14:50:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:07 AI_Player.update()	Search took2ms
2017-01-03 14:50:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:07 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:07 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:07 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:07 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:07 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:07 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:07 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:07 AI_Player.update()	update
2017-01-03 14:50:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:08 AI_Player.update()	update
2017-01-03 14:50:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:08 AI_Player.update()	Search took2ms
2017-01-03 14:50:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:08 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:08 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:08 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:08 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:08 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:08 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:08 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:08 AI_Player.update()	update
2017-01-03 14:50:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:08 AI_Player.update()	update
2017-01-03 14:50:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:08 AI_Player.update()	Search took2ms
2017-01-03 14:50:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:08 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:08 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:08 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:08 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:08 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:08 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:08 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:08 AI_Player.update()	update
2017-01-03 14:50:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:08 AI_Player.update()	update
2017-01-03 14:50:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:08 AI_Player.update()	Search took2ms
2017-01-03 14:50:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:08 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:08 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:08 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:08 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:08 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:08 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:08 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:08 AI_Player.update()	update
2017-01-03 14:50:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:08 AI_Player.update()	update
2017-01-03 14:50:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:08 AI_Player.update()	Search took2ms
2017-01-03 14:50:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:08 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:08 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:08 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:08 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:08 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:08 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:08 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:08 AI_Player.update()	update
2017-01-03 14:50:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:08 AI_Player.update()	update
2017-01-03 14:50:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:08 AI_Player.update()	Search took5ms
2017-01-03 14:50:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:08 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:08 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:08 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:08 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:08 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:08 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:08 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:08 AI_Player.update()	update
2017-01-03 14:50:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:09 AI_Player.update()	update
2017-01-03 14:50:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:09 AI_Player.update()	Search took2ms
2017-01-03 14:50:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:09 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:09 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:09 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:09 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:09 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:09 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:09 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:09 AI_Player.update()	update
2017-01-03 14:50:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:09 AI_Player.update()	update
2017-01-03 14:50:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:09 AI_Player.update()	Search took1ms
2017-01-03 14:50:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:09 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:09 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:09 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:09 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:09 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:09 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:09 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:09 AI_Player.update()	update
2017-01-03 14:50:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:09 AI_Player.update()	update
2017-01-03 14:50:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:09 AI_Player.update()	Search took2ms
2017-01-03 14:50:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:09 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:09 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:09 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:09 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:09 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:09 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:09 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:09 AI_Player.update()	update
2017-01-03 14:50:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:09 AI_Player.update()	update
2017-01-03 14:50:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:09 AI_Player.update()	Search took1ms
2017-01-03 14:50:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:09 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:09 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:09 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:09 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:09 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:09 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:09 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:09 AI_Player.update()	update
2017-01-03 14:50:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:09 AI_Player.update()	update
2017-01-03 14:50:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:09 AI_Player.update()	Search took2ms
2017-01-03 14:50:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:09 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:09 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:09 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:09 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:09 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:09 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:09 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:09 AI_Player.update()	update
2017-01-03 14:50:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:10 AI_Player.update()	update
2017-01-03 14:50:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:10 AI_Player.update()	Search took1ms
2017-01-03 14:50:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:10 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:10 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:10 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:10 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:10 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:10 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:10 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:10 AI_Player.update()	update
2017-01-03 14:50:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:10 AI_Player.update()	update
2017-01-03 14:50:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:10 AI_Player.update()	Search took2ms
2017-01-03 14:50:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:10 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:10 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:10 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:10 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:10 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:10 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:10 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:10 AI_Player.update()	update
2017-01-03 14:50:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:10 AI_Player.update()	update
2017-01-03 14:50:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:10 AI_Player.update()	Search took1ms
2017-01-03 14:50:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:10 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:10 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:10 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:10 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:10 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:10 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:10 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:10 AI_Player.update()	update
2017-01-03 14:50:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:10 AI_Player.update()	update
2017-01-03 14:50:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:10 AI_Player.update()	Search took2ms
2017-01-03 14:50:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:10 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:10 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:10 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:10 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:10 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:10 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:10 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:10 AI_Player.update()	update
2017-01-03 14:50:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:10 AI_Player.update()	update
2017-01-03 14:50:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:10 AI_Player.update()	Search took1ms
2017-01-03 14:50:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:10 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:10 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:10 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:10 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:10 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:10 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:10 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:11 AI_Player.update()	update
2017-01-03 14:50:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:11 AI_Player.update()	update
2017-01-03 14:50:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:11 AI_Player.update()	Search took2ms
2017-01-03 14:50:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:11 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:11 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:11 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:11 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:11 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:11 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:11 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:11 AI_Player.update()	update
2017-01-03 14:50:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:11 AI_Player.update()	update
2017-01-03 14:50:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:11 AI_Player.update()	Search took2ms
2017-01-03 14:50:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:11 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:11 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:11 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:11 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:11 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:11 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:11 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:11 AI_Player.update()	update
2017-01-03 14:50:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:11 AI_Player.update()	update
2017-01-03 14:50:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:11 AI_Player.update()	Search took2ms
2017-01-03 14:50:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:11 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:11 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:11 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:11 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:11 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:11 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:11 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:11 AI_Player.update()	update
2017-01-03 14:50:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:11 AI_Player.update()	update
2017-01-03 14:50:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:11 AI_Player.update()	Search took5ms
2017-01-03 14:50:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:11 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:11 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:11 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:11 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:11 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:11 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:11 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:11 AI_Player.update()	update
2017-01-03 14:50:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:12 AI_Player.update()	update
2017-01-03 14:50:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:12 AI_Player.update()	Search took3ms
2017-01-03 14:50:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:12 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:12 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:12 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:12 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:12 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:12 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:12 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:12 AI_Player.update()	update
2017-01-03 14:50:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:12 AI_Player.update()	update
2017-01-03 14:50:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:12 AI_Player.update()	Search took1ms
2017-01-03 14:50:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:12 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:12 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:12 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:12 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:12 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:12 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:12 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:12 AI_Player.update()	update
2017-01-03 14:50:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:12 AI_Player.update()	update
2017-01-03 14:50:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:12 AI_Player.update()	Search took2ms
2017-01-03 14:50:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:12 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:12 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:12 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:12 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:12 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:12 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:12 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:12 AI_Player.update()	update
2017-01-03 14:50:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:12 AI_Player.update()	update
2017-01-03 14:50:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:12 AI_Player.update()	Search took1ms
2017-01-03 14:50:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:12 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:12 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:12 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:12 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:12 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:12 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:12 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:12 AI_Player.update()	update
2017-01-03 14:50:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:12 AI_Player.update()	update
2017-01-03 14:50:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:12 AI_Player.update()	Search took2ms
2017-01-03 14:50:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:12 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:12 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:12 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:12 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:12 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:12 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:12 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:12 AI_Player.update()	update
2017-01-03 14:50:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:13 AI_Player.update()	update
2017-01-03 14:50:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:13 AI_Player.update()	Search took1ms
2017-01-03 14:50:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:13 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:13 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:13 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:13 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:13 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:13 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:13 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:13 AI_Player.update()	update
2017-01-03 14:50:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:13 AI_Player.update()	update
2017-01-03 14:50:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:13 AI_Player.update()	Search took2ms
2017-01-03 14:50:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:13 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:13 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:13 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:13 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:13 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:13 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:13 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:13 AI_Player.update()	update
2017-01-03 14:50:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:13 AI_Player.update()	update
2017-01-03 14:50:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:13 AI_Player.update()	Search took2ms
2017-01-03 14:50:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:13 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:13 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:13 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:13 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:13 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:13 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:13 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:13 AI_Player.update()	update
2017-01-03 14:50:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:13 AI_Player.update()	update
2017-01-03 14:50:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:13 AI_Player.update()	Search took3ms
2017-01-03 14:50:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:13 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:13 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:13 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:13 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:13 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:13 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:13 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:13 AI_Player.update()	update
2017-01-03 14:50:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:13 AI_Player.update()	update
2017-01-03 14:50:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:13 AI_Player.update()	Search took1ms
2017-01-03 14:50:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:13 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:13 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:13 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:13 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:13 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:13 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:13 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:13 AI_Player.update()	update
2017-01-03 14:50:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:14 AI_Player.update()	update
2017-01-03 14:50:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:14 AI_Player.update()	Search took2ms
2017-01-03 14:50:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:14 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:14 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:14 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:14 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:14 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:14 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:14 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:14 AI_Player.update()	update
2017-01-03 14:50:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:14 AI_Player.update()	update
2017-01-03 14:50:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:14 AI_Player.update()	Search took2ms
2017-01-03 14:50:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:14 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:14 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:14 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:14 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:14 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:14 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:14 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:14 AI_Player.update()	update
2017-01-03 14:50:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:14 AI_Player.update()	update
2017-01-03 14:50:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:14 AI_Player.update()	Search took2ms
2017-01-03 14:50:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:14 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:14 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:14 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:14 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:14 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:14 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:14 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:14 AI_Player.update()	update
2017-01-03 14:50:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:14 AI_Player.update()	update
2017-01-03 14:50:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:14 AI_Player.update()	Search took5ms
2017-01-03 14:50:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:14 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:14 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:14 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:14 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:14 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:14 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:14 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:14 AI_Player.update()	update
2017-01-03 14:50:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:15 AI_Player.update()	update
2017-01-03 14:50:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:15 AI_Player.update()	Search took2ms
2017-01-03 14:50:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:15 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:15 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:15 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:15 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:15 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:15 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:15 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:15 AI_Player.update()	update
2017-01-03 14:50:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:15 AI_Player.update()	update
2017-01-03 14:50:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:15 AI_Player.update()	Search took1ms
2017-01-03 14:50:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:15 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:15 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:15 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:15 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:15 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:15 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:15 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:15 AI_Player.update()	update
2017-01-03 14:50:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:15 AI_Player.update()	update
2017-01-03 14:50:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:15 AI_Player.update()	Search took2ms
2017-01-03 14:50:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:15 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:15 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:15 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:15 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:15 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:15 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:15 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:15 AI_Player.update()	update
2017-01-03 14:50:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:15 AI_Player.update()	update
2017-01-03 14:50:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:15 AI_Player.update()	Search took1ms
2017-01-03 14:50:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:15 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:15 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:15 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:15 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:15 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:15 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:15 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:15 AI_Player.update()	update
2017-01-03 14:50:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:15 AI_Player.update()	update
2017-01-03 14:50:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:15 AI_Player.update()	Search took2ms
2017-01-03 14:50:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:15 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:15 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:15 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:15 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:15 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:15 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:15 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:15 AI_Player.update()	update
2017-01-03 14:50:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:16 AI_Player.update()	update
2017-01-03 14:50:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:16 AI_Player.update()	Search took1ms
2017-01-03 14:50:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:16 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:16 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:16 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:16 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:16 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:16 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:16 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:16 AI_Player.update()	update
2017-01-03 14:50:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:16 AI_Player.update()	update
2017-01-03 14:50:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:16 AI_Player.update()	Search took2ms
2017-01-03 14:50:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:16 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:16 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:16 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:16 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:16 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:16 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:16 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:16 AI_Player.update()	update
2017-01-03 14:50:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:16 AI_Player.update()	update
2017-01-03 14:50:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:16 AI_Player.update()	Search took1ms
2017-01-03 14:50:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:16 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:16 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:16 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:16 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:16 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:16 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:16 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:16 AI_Player.update()	update
2017-01-03 14:50:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:16 AI_Player.update()	update
2017-01-03 14:50:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:16 AI_Player.update()	Search took2ms
2017-01-03 14:50:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:16 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:16 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:16 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:16 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:16 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:16 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:16 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:16 AI_Player.update()	update
2017-01-03 14:50:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:16 AI_Player.update()	update
2017-01-03 14:50:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:16 AI_Player.update()	Search took1ms
2017-01-03 14:50:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:16 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:16 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:16 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:16 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:16 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:16 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:16 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:16 AI_Player.update()	update
2017-01-03 14:50:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:17 AI_Player.update()	update
2017-01-03 14:50:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:17 AI_Player.update()	Search took2ms
2017-01-03 14:50:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:17 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:17 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:17 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:17 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:17 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:17 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:17 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:17 AI_Player.update()	update
2017-01-03 14:50:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:17 AI_Player.update()	update
2017-01-03 14:50:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:17 AI_Player.update()	Search took2ms
2017-01-03 14:50:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:17 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:17 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:17 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:17 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:17 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:17 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:17 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:17 AI_Player.update()	update
2017-01-03 14:50:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:17 AI_Player.update()	update
2017-01-03 14:50:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:17 AI_Player.update()	Search took2ms
2017-01-03 14:50:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:17 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:17 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:17 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:17 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:17 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:17 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:17 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:17 AI_Player.update()	update
2017-01-03 14:50:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:17 AI_Player.update()	update
2017-01-03 14:50:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:17 AI_Player.update()	Search took5ms
2017-01-03 14:50:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:17 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:17 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:17 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:17 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:17 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:17 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:17 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:17 AI_Player.update()	update
2017-01-03 14:50:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:17 AI_Player.update()	update
2017-01-03 14:50:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:17 AI_Player.update()	Search took2ms
2017-01-03 14:50:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:17 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:17 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:17 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:17 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:17 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:17 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:17 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:18 AI_Player.update()	update
2017-01-03 14:50:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:18 AI_Player.update()	update
2017-01-03 14:50:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:18 AI_Player.update()	Search took2ms
2017-01-03 14:50:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:18 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:18 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:18 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:18 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:18 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:18 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:18 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:18 AI_Player.update()	update
2017-01-03 14:50:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:18 AI_Player.update()	update
2017-01-03 14:50:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:18 AI_Player.update()	Search took2ms
2017-01-03 14:50:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:18 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:18 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:18 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:18 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:18 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:18 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:18 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:18 AI_Player.update()	update
2017-01-03 14:50:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:18 AI_Player.update()	update
2017-01-03 14:50:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:18 AI_Player.update()	Search took1ms
2017-01-03 14:50:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:18 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:18 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:18 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:18 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:18 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:18 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:18 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:18 AI_Player.update()	update
2017-01-03 14:50:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:18 AI_Player.update()	update
2017-01-03 14:50:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:18 AI_Player.update()	Search took2ms
2017-01-03 14:50:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:18 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:18 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:18 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:18 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:18 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:18 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:18 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:18 AI_Player.update()	update
2017-01-03 14:50:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:19 AI_Player.update()	update
2017-01-03 14:50:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:19 AI_Player.update()	Search took1ms
2017-01-03 14:50:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:19 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:19 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:19 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:19 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:19 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:19 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:19 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:19 AI_Player.update()	update
2017-01-03 14:50:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:19 AI_Player.update()	update
2017-01-03 14:50:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:19 AI_Player.update()	Search took2ms
2017-01-03 14:50:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:19 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:19 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:19 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:19 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:19 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:19 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:19 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:19 AI_Player.update()	update
2017-01-03 14:50:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:19 AI_Player.update()	update
2017-01-03 14:50:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:19 AI_Player.update()	Search took1ms
2017-01-03 14:50:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:19 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:19 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:19 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:19 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:19 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:19 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:19 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:19 AI_Player.update()	update
2017-01-03 14:50:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:19 AI_Player.update()	update
2017-01-03 14:50:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:19 AI_Player.update()	Search took2ms
2017-01-03 14:50:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:19 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:19 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:19 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:19 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:19 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:19 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:19 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:19 AI_Player.update()	update
2017-01-03 14:50:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:19 AI_Player.update()	update
2017-01-03 14:50:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:19 AI_Player.update()	Search took1ms
2017-01-03 14:50:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:19 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:19 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:19 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:19 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:19 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:19 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:19 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:19 AI_Player.update()	update
2017-01-03 14:50:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:20 AI_Player.update()	update
2017-01-03 14:50:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:20 AI_Player.update()	Search took2ms
2017-01-03 14:50:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:20 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:20 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:20 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:20 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:20 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:20 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:20 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:20 AI_Player.update()	update
2017-01-03 14:50:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:20 AI_Player.update()	update
2017-01-03 14:50:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:20 AI_Player.update()	Search took2ms
2017-01-03 14:50:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:20 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:20 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:20 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:20 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:20 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:20 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:20 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:20 AI_Player.update()	update
2017-01-03 14:50:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:20 AI_Player.update()	update
2017-01-03 14:50:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:20 AI_Player.update()	Search took2ms
2017-01-03 14:50:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:20 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:20 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:20 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:20 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:20 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:20 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:20 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:20 AI_Player.update()	update
2017-01-03 14:50:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:20 AI_Player.update()	update
2017-01-03 14:50:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:20 AI_Player.update()	Search took5ms
2017-01-03 14:50:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:20 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:20 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:20 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:20 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:20 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:20 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:20 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:20 AI_Player.update()	update
2017-01-03 14:50:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:20 AI_Player.update()	update
2017-01-03 14:50:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:20 AI_Player.update()	Search took2ms
2017-01-03 14:50:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:20 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:20 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:20 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:20 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:20 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:20 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:20 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:21 AI_Player.update()	update
2017-01-03 14:50:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:21 AI_Player.update()	update
2017-01-03 14:50:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:21 AI_Player.update()	Search took0ms
2017-01-03 14:50:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:21 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:21 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:21 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:21 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:21 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:21 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:21 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:21 AI_Player.update()	update
2017-01-03 14:50:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:21 AI_Player.update()	update
2017-01-03 14:50:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:21 AI_Player.update()	Search took2ms
2017-01-03 14:50:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:21 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:21 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:21 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:21 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:21 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:21 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:21 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:21 AI_Player.update()	update
2017-01-03 14:50:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:21 AI_Player.update()	update
2017-01-03 14:50:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:21 AI_Player.update()	Search took1ms
2017-01-03 14:50:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:21 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:21 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:21 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:21 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:21 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:21 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:21 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:21 AI_Player.update()	update
2017-01-03 14:50:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:21 AI_Player.update()	update
2017-01-03 14:50:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:21 AI_Player.update()	Search took2ms
2017-01-03 14:50:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:21 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:21 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:21 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:21 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:21 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:21 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:21 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:21 AI_Player.update()	update
2017-01-03 14:50:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:21 AI_Player.update()	update
2017-01-03 14:50:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:21 AI_Player.update()	Search took1ms
2017-01-03 14:50:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:21 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:21 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:21 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:21 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:21 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:21 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:21 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:22 AI_Player.update()	update
2017-01-03 14:50:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:22 AI_Player.update()	update
2017-01-03 14:50:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:22 AI_Player.update()	Search took2ms
2017-01-03 14:50:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:22 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:22 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:22 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:22 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:22 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:22 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:22 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:22 AI_Player.update()	update
2017-01-03 14:50:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:22 AI_Player.update()	update
2017-01-03 14:50:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:22 AI_Player.update()	Search took1ms
2017-01-03 14:50:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:22 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:22 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:22 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:22 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:22 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:22 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:22 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:22 AI_Player.update()	update
2017-01-03 14:50:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:22 AI_Player.update()	update
2017-01-03 14:50:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:22 AI_Player.update()	Search took2ms
2017-01-03 14:50:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:22 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:22 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:22 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:22 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:22 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:22 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:22 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:22 AI_Player.update()	update
2017-01-03 14:50:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:22 AI_Player.update()	update
2017-01-03 14:50:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:22 AI_Player.update()	Search took1ms
2017-01-03 14:50:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:22 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:22 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:22 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:22 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:22 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:22 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:22 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:22 AI_Player.update()	update
2017-01-03 14:50:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:22 AI_Player.update()	update
2017-01-03 14:50:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:22 AI_Player.update()	Search took2ms
2017-01-03 14:50:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:22 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:22 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:22 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:22 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:22 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:22 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:22 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:23 AI_Player.update()	update
2017-01-03 14:50:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:23 AI_Player.update()	update
2017-01-03 14:50:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:23 AI_Player.update()	Search took2ms
2017-01-03 14:50:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:23 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:23 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:23 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:23 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:23 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:23 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:23 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:23 AI_Player.update()	update
2017-01-03 14:50:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:23 AI_Player.update()	update
2017-01-03 14:50:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:23 AI_Player.update()	Search took2ms
2017-01-03 14:50:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:23 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:23 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:23 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:23 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:23 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:23 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:23 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:23 AI_Player.update()	update
2017-01-03 14:50:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:23 AI_Player.update()	update
2017-01-03 14:50:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:23 AI_Player.update()	Search took5ms
2017-01-03 14:50:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:23 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:23 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:23 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:23 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:23 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:23 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:23 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:23 AI_Player.update()	update
2017-01-03 14:50:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:23 AI_Player.update()	update
2017-01-03 14:50:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:23 AI_Player.update()	Search took2ms
2017-01-03 14:50:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:23 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:23 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:23 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:23 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:23 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:23 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:23 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:23 AI_Player.update()	update
2017-01-03 14:50:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:24 AI_Player.update()	update
2017-01-03 14:50:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:24 AI_Player.update()	Search took2ms
2017-01-03 14:50:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:24 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:24 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:24 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:24 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:24 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:24 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:24 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:24 AI_Player.update()	update
2017-01-03 14:50:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:24 AI_Player.update()	update
2017-01-03 14:50:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:24 AI_Player.update()	Search took2ms
2017-01-03 14:50:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:24 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:24 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:24 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:24 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:24 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:24 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:24 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:24 AI_Player.update()	update
2017-01-03 14:50:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:24 AI_Player.update()	update
2017-01-03 14:50:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:24 AI_Player.update()	Search took2ms
2017-01-03 14:50:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:24 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:24 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:24 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:24 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:24 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:24 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:24 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:24 AI_Player.update()	update
2017-01-03 14:50:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:24 AI_Player.update()	update
2017-01-03 14:50:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:24 AI_Player.update()	Search took2ms
2017-01-03 14:50:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:24 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:24 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:24 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:24 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:24 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:24 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:24 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:24 AI_Player.update()	update
2017-01-03 14:50:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:24 AI_Player.update()	update
2017-01-03 14:50:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:24 AI_Player.update()	Search took1ms
2017-01-03 14:50:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:24 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:24 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:24 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:24 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:24 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:24 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:24 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:24 AI_Player.update()	update
2017-01-03 14:50:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:25 AI_Player.update()	update
2017-01-03 14:50:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:25 AI_Player.update()	Search took2ms
2017-01-03 14:50:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:25 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:25 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:25 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:25 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:25 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:25 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:25 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:25 AI_Player.update()	update
2017-01-03 14:50:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:25 AI_Player.update()	update
2017-01-03 14:50:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:25 AI_Player.update()	Search took2ms
2017-01-03 14:50:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:25 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:25 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:25 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:25 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:25 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:25 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:25 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:25 AI_Player.update()	update
2017-01-03 14:50:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:25 AI_Player.update()	update
2017-01-03 14:50:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:25 AI_Player.update()	Search took3ms
2017-01-03 14:50:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:25 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:25 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:25 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:25 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:25 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:25 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:25 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:25 AI_Player.update()	update
2017-01-03 14:50:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:25 AI_Player.update()	update
2017-01-03 14:50:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:25 AI_Player.update()	Search took2ms
2017-01-03 14:50:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:25 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:25 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:25 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:25 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:25 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:25 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:25 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:25 AI_Player.update()	update
2017-01-03 14:50:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:25 AI_Player.update()	update
2017-01-03 14:50:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:25 AI_Player.update()	Search took2ms
2017-01-03 14:50:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:25 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:25 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:25 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:25 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:25 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:25 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:25 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:25 AI_Player.update()	update
2017-01-03 14:50:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:26 AI_Player.update()	update
2017-01-03 14:50:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:26 AI_Player.update()	Search took2ms
2017-01-03 14:50:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:26 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:26 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:26 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:26 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:26 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:26 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:26 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:26 AI_Player.update()	update
2017-01-03 14:50:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:26 AI_Player.update()	update
2017-01-03 14:50:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:26 AI_Player.update()	Search took2ms
2017-01-03 14:50:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:26 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:26 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:26 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:26 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:26 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:26 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:26 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:26 AI_Player.update()	update
2017-01-03 14:50:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:26 AI_Player.update()	update
2017-01-03 14:50:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:26 AI_Player.update()	Search took5ms
2017-01-03 14:50:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:26 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:26 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:26 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:26 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:26 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:26 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:26 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:26 AI_Player.update()	update
2017-01-03 14:50:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:26 AI_Player.update()	update
2017-01-03 14:50:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:26 AI_Player.update()	Search took2ms
2017-01-03 14:50:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:26 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:26 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:26 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:26 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:26 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:26 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:26 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:26 AI_Player.update()	update
2017-01-03 14:50:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:26 AI_Player.update()	update
2017-01-03 14:50:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:26 AI_Player.update()	Search took1ms
2017-01-03 14:50:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:26 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:26 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:26 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:26 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:26 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:26 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:26 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:26 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:27 AI_Player.update()	update
2017-01-03 14:50:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:27 AI_Player.update()	update
2017-01-03 14:50:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:27 AI_Player.update()	Search took2ms
2017-01-03 14:50:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:27 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:27 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:27 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:27 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:27 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:27 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:27 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:27 AI_Player.update()	update
2017-01-03 14:50:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:27 AI_Player.update()	update
2017-01-03 14:50:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:27 AI_Player.update()	Search took1ms
2017-01-03 14:50:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:27 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:27 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:27 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:27 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:27 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:27 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:27 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:27 AI_Player.update()	update
2017-01-03 14:50:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:27 AI_Player.update()	update
2017-01-03 14:50:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:27 AI_Player.update()	Search took2ms
2017-01-03 14:50:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:27 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:27 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:27 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:27 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:27 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:27 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:27 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:27 AI_Player.update()	update
2017-01-03 14:50:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:27 AI_Player.update()	update
2017-01-03 14:50:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:27 AI_Player.update()	Search took2ms
2017-01-03 14:50:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:27 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:27 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:27 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:27 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:27 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:27 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:27 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:27 AI_Player.update()	update
2017-01-03 14:50:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:27 AI_Player.update()	update
2017-01-03 14:50:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:27 AI_Player.update()	Search took2ms
2017-01-03 14:50:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:27 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:27 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:27 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:27 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:27 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:27 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:27 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:27 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:28 AI_Player.update()	update
2017-01-03 14:50:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:28 AI_Player.update()	update
2017-01-03 14:50:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:28 AI_Player.update()	Search took1ms
2017-01-03 14:50:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:28 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:28 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:28 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:28 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:28 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:28 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:28 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:28 AI_Player.update()	update
2017-01-03 14:50:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:28 AI_Player.update()	update
2017-01-03 14:50:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:28 AI_Player.update()	Search took2ms
2017-01-03 14:50:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:28 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:28 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:28 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:28 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:28 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:28 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:28 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:28 AI_Player.update()	update
2017-01-03 14:50:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:28 AI_Player.update()	update
2017-01-03 14:50:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:28 AI_Player.update()	Search took1ms
2017-01-03 14:50:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:28 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:28 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:28 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:28 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:28 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:28 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:28 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:28 AI_Player.update()	update
2017-01-03 14:50:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:28 AI_Player.update()	update
2017-01-03 14:50:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:28 AI_Player.update()	Search took2ms
2017-01-03 14:50:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:28 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:28 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:28 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:28 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:28 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:28 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:28 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:28 AI_Player.update()	update
2017-01-03 14:50:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:29 AI_Player.update()	update
2017-01-03 14:50:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:29 AI_Player.update()	Search took2ms
2017-01-03 14:50:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:29 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:29 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:29 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:29 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:29 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:29 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:29 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:29 AI_Player.update()	update
2017-01-03 14:50:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:29 AI_Player.update()	update
2017-01-03 14:50:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:29 AI_Player.update()	Search took2ms
2017-01-03 14:50:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:29 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:29 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:29 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:29 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:29 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:29 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:29 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:29 AI_Player.update()	update
2017-01-03 14:50:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:29 AI_Player.update()	update
2017-01-03 14:50:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:29 AI_Player.update()	Search took7ms
2017-01-03 14:50:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:29 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:29 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:29 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:29 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:29 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:29 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:29 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:29 AI_Player.update()	update
2017-01-03 14:50:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:29 AI_Player.update()	update
2017-01-03 14:50:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:29 AI_Player.update()	Search took3ms
2017-01-03 14:50:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:29 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:29 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:29 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:29 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:29 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:29 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:29 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:29 AI_Player.update()	update
2017-01-03 14:50:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:29 AI_Player.update()	update
2017-01-03 14:50:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:29 AI_Player.update()	Search took2ms
2017-01-03 14:50:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:29 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:29 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:29 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:29 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:29 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:29 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:29 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:29 AI_Player.update()	update
2017-01-03 14:50:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:30 AI_Player.update()	update
2017-01-03 14:50:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:30 AI_Player.update()	Search took2ms
2017-01-03 14:50:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:30 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:30 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:30 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:30 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:30 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:30 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:30 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:30 AI_Player.update()	update
2017-01-03 14:50:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:30 AI_Player.update()	update
2017-01-03 14:50:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:30 AI_Player.update()	Search took1ms
2017-01-03 14:50:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:30 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:30 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:30 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:30 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:30 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:30 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:30 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:30 AI_Player.update()	update
2017-01-03 14:50:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:30 AI_Player.update()	update
2017-01-03 14:50:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:30 AI_Player.update()	Search took2ms
2017-01-03 14:50:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:30 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:30 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:30 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:30 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:30 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:30 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:30 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:30 AI_Player.update()	update
2017-01-03 14:50:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:30 AI_Player.update()	update
2017-01-03 14:50:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:30 AI_Player.update()	Search took1ms
2017-01-03 14:50:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:30 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:30 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:30 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:30 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:30 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:30 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:30 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:30 AI_Player.update()	update
2017-01-03 14:50:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:30 AI_Player.update()	update
2017-01-03 14:50:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:30 AI_Player.update()	Search took2ms
2017-01-03 14:50:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:30 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:30 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:30 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:30 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:30 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:30 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:30 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:31 AI_Player.update()	update
2017-01-03 14:50:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:31 AI_Player.update()	update
2017-01-03 14:50:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:31 AI_Player.update()	Search took1ms
2017-01-03 14:50:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:31 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:31 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:31 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:31 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:31 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:31 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:31 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:31 AI_Player.update()	update
2017-01-03 14:50:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:31 AI_Player.update()	update
2017-01-03 14:50:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:31 AI_Player.update()	Search took2ms
2017-01-03 14:50:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:31 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:31 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:31 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:31 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:31 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:31 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:31 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:31 AI_Player.update()	update
2017-01-03 14:50:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:31 AI_Player.update()	update
2017-01-03 14:50:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:31 AI_Player.update()	Search took1ms
2017-01-03 14:50:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:31 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:31 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:31 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:31 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:31 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:31 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:31 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:31 AI_Player.update()	update
2017-01-03 14:50:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:31 AI_Player.update()	update
2017-01-03 14:50:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:31 AI_Player.update()	Search took2ms
2017-01-03 14:50:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:31 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:31 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:31 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:31 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:31 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:31 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:31 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:31 AI_Player.update()	update
2017-01-03 14:50:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:31 AI_Player.update()	update
2017-01-03 14:50:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:31 AI_Player.update()	Search took2ms
2017-01-03 14:50:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:31 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:31 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:31 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:31 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:31 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:31 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:31 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:31 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:32 AI_Player.update()	update
2017-01-03 14:50:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:32 AI_Player.update()	update
2017-01-03 14:50:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:32 AI_Player.update()	Search took2ms
2017-01-03 14:50:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:32 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:32 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:32 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:32 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:32 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:32 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:32 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:32 AI_Player.update()	update
2017-01-03 14:50:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:32 AI_Player.update()	update
2017-01-03 14:50:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:32 AI_Player.update()	Search took4ms
2017-01-03 14:50:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:32 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:32 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:32 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:32 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:32 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:32 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:32 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:32 AI_Player.update()	update
2017-01-03 14:50:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:32 AI_Player.update()	update
2017-01-03 14:50:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:32 AI_Player.update()	Search took2ms
2017-01-03 14:50:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:32 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:32 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:32 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:32 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:32 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:32 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:32 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:32 AI_Player.update()	update
2017-01-03 14:50:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:32 AI_Player.update()	update
2017-01-03 14:50:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:32 AI_Player.update()	Search took2ms
2017-01-03 14:50:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:32 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:32 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:32 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:32 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:32 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:32 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:32 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:32 AI_Player.update()	update
2017-01-03 14:50:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:32 AI_Player.update()	update
2017-01-03 14:50:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:32 AI_Player.update()	Search took3ms
2017-01-03 14:50:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:32 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:32 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:32 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:32 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:32 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:32 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:32 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:33 AI_Player.update()	update
2017-01-03 14:50:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:33 AI_Player.update()	update
2017-01-03 14:50:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:33 AI_Player.update()	Search took2ms
2017-01-03 14:50:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:33 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:33 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:33 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:33 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:33 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:33 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:33 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:33 AI_Player.update()	update
2017-01-03 14:50:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:33 AI_Player.update()	update
2017-01-03 14:50:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:33 AI_Player.update()	Search took2ms
2017-01-03 14:50:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:33 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:33 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:33 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:33 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:33 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:33 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:33 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:33 AI_Player.update()	update
2017-01-03 14:50:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:33 AI_Player.update()	update
2017-01-03 14:50:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:33 AI_Player.update()	Search took1ms
2017-01-03 14:50:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:33 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:33 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:33 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:33 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:33 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:33 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:33 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:33 AI_Player.update()	update
2017-01-03 14:50:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:33 AI_Player.update()	update
2017-01-03 14:50:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:33 AI_Player.update()	Search took2ms
2017-01-03 14:50:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:33 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:33 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:33 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:33 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:33 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:33 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:33 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:33 AI_Player.update()	update
2017-01-03 14:50:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:33 AI_Player.update()	update
2017-01-03 14:50:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:33 AI_Player.update()	Search took1ms
2017-01-03 14:50:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:33 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:33 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:33 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:33 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:33 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:33 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:33 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:33 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:34 AI_Player.update()	update
2017-01-03 14:50:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:34 AI_Player.update()	update
2017-01-03 14:50:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:34 AI_Player.update()	Search took2ms
2017-01-03 14:50:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:34 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:34 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:34 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:34 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:34 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:34 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:34 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:34 AI_Player.update()	update
2017-01-03 14:50:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:34 AI_Player.update()	update
2017-01-03 14:50:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:34 AI_Player.update()	Search took1ms
2017-01-03 14:50:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:34 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:34 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:34 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:34 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:34 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:34 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:34 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:34 AI_Player.update()	update
2017-01-03 14:50:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:34 AI_Player.update()	update
2017-01-03 14:50:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:34 AI_Player.update()	Search took2ms
2017-01-03 14:50:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:34 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:34 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:34 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:34 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:34 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:34 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:34 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:34 AI_Player.update()	update
2017-01-03 14:50:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:34 AI_Player.update()	update
2017-01-03 14:50:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:34 AI_Player.update()	Search took2ms
2017-01-03 14:50:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:34 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:34 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:34 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:34 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:34 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:34 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:34 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:34 AI_Player.update()	update
2017-01-03 14:50:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:35 AI_Player.update()	update
2017-01-03 14:50:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:35 AI_Player.update()	Search took2ms
2017-01-03 14:50:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:35 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:35 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:35 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:35 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:35 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:35 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:35 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:35 AI_Player.update()	update
2017-01-03 14:50:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:35 AI_Player.update()	update
2017-01-03 14:50:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:35 AI_Player.update()	Search took5ms
2017-01-03 14:50:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:35 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:35 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:35 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:35 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:35 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:35 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:35 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:35 AI_Player.update()	update
2017-01-03 14:50:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:35 AI_Player.update()	update
2017-01-03 14:50:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:35 AI_Player.update()	Search took2ms
2017-01-03 14:50:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:35 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:35 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:35 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:35 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:35 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:35 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:35 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:35 AI_Player.update()	update
2017-01-03 14:50:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:35 AI_Player.update()	update
2017-01-03 14:50:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:35 AI_Player.update()	Search took1ms
2017-01-03 14:50:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:35 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:35 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:35 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:35 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:35 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:35 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:35 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:35 AI_Player.update()	update
2017-01-03 14:50:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:35 AI_Player.update()	update
2017-01-03 14:50:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:35 AI_Player.update()	Search took2ms
2017-01-03 14:50:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:35 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:35 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:35 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:35 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:35 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:35 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:35 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:35 AI_Player.update()	update
2017-01-03 14:50:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:35 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:36 AI_Player.update()	update
2017-01-03 14:50:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:36 AI_Player.update()	Search took1ms
2017-01-03 14:50:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:36 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:36 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:36 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:36 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:36 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:36 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:36 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:36 AI_Player.update()	update
2017-01-03 14:50:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:36 AI_Player.update()	update
2017-01-03 14:50:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:36 AI_Player.update()	Search took2ms
2017-01-03 14:50:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:36 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:36 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:36 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:36 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:36 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:36 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:36 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:36 AI_Player.update()	update
2017-01-03 14:50:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:36 AI_Player.update()	update
2017-01-03 14:50:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:36 AI_Player.update()	Search took1ms
2017-01-03 14:50:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:36 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:36 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:36 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:36 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:36 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:36 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:36 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:36 AI_Player.update()	update
2017-01-03 14:50:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:36 AI_Player.update()	update
2017-01-03 14:50:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:36 AI_Player.update()	Search took2ms
2017-01-03 14:50:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:36 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:36 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:36 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:36 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:36 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:36 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:36 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:36 AI_Player.update()	update
2017-01-03 14:50:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:36 AI_Player.update()	update
2017-01-03 14:50:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:36 AI_Player.update()	Search took1ms
2017-01-03 14:50:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:36 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:36 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:36 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:36 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:36 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:36 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:36 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:36 AI_Player.update()	update
2017-01-03 14:50:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:37 AI_Player.update()	update
2017-01-03 14:50:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:37 AI_Player.update()	Search took2ms
2017-01-03 14:50:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:37 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:37 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:37 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:37 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:37 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:37 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:37 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:37 AI_Player.update()	update
2017-01-03 14:50:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:37 AI_Player.update()	update
2017-01-03 14:50:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:37 AI_Player.update()	Search took1ms
2017-01-03 14:50:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:37 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:37 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:37 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:37 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:37 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:37 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:37 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:37 AI_Player.update()	update
2017-01-03 14:50:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:37 AI_Player.update()	update
2017-01-03 14:50:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:37 AI_Player.update()	Search took2ms
2017-01-03 14:50:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:37 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:37 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:37 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:37 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:37 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:37 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:37 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:37 AI_Player.update()	update
2017-01-03 14:50:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:37 AI_Player.update()	update
2017-01-03 14:50:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:37 AI_Player.update()	Search took2ms
2017-01-03 14:50:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:37 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:37 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:37 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:37 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:37 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:37 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:37 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:37 AI_Player.update()	update
2017-01-03 14:50:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:37 AI_Player.update()	update
2017-01-03 14:50:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:37 AI_Player.update()	Search took2ms
2017-01-03 14:50:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:37 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:37 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:37 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:37 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:37 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:37 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:37 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:38 AI_Player.update()	update
2017-01-03 14:50:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:38 AI_Player.update()	update
2017-01-03 14:50:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:38 AI_Player.update()	Search took5ms
2017-01-03 14:50:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:38 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:38 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:38 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:38 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:38 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:38 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:38 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:38 AI_Player.update()	update
2017-01-03 14:50:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:38 AI_Player.update()	update
2017-01-03 14:50:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:38 AI_Player.update()	Search took2ms
2017-01-03 14:50:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:38 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:38 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:38 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:38 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:38 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:38 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:38 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:38 AI_Player.update()	update
2017-01-03 14:50:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:38 AI_Player.update()	update
2017-01-03 14:50:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:38 AI_Player.update()	Search took1ms
2017-01-03 14:50:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:38 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:38 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:38 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:38 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:38 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:38 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:38 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:38 AI_Player.update()	update
2017-01-03 14:50:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:38 AI_Player.update()	update
2017-01-03 14:50:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:38 AI_Player.update()	Search took2ms
2017-01-03 14:50:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:38 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:38 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:38 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:38 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:38 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:38 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:38 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:38 AI_Player.update()	update
2017-01-03 14:50:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:38 AI_Player.update()	update
2017-01-03 14:50:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:38 AI_Player.update()	Search took1ms
2017-01-03 14:50:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:38 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:38 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:38 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:38 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:38 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:38 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:38 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:39 AI_Player.update()	update
2017-01-03 14:50:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:39 AI_Player.update()	update
2017-01-03 14:50:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:39 AI_Player.update()	Search took3ms
2017-01-03 14:50:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:39 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:39 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:39 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:39 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:39 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:39 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:39 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:39 AI_Player.update()	update
2017-01-03 14:50:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:39 AI_Player.update()	update
2017-01-03 14:50:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:39 AI_Player.update()	Search took1ms
2017-01-03 14:50:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:39 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:39 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:39 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:39 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:39 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:39 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:39 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:39 AI_Player.update()	update
2017-01-03 14:50:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:39 AI_Player.update()	update
2017-01-03 14:50:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:39 AI_Player.update()	Search took2ms
2017-01-03 14:50:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:39 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:39 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:39 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:39 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:39 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:39 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:39 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:39 AI_Player.update()	update
2017-01-03 14:50:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:39 AI_Player.update()	update
2017-01-03 14:50:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:39 AI_Player.update()	Search took1ms
2017-01-03 14:50:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:39 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:39 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:39 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:39 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:39 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:39 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:39 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:39 AI_Player.update()	update
2017-01-03 14:50:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:39 AI_Player.update()	update
2017-01-03 14:50:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:39 AI_Player.update()	Search took3ms
2017-01-03 14:50:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:39 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:39 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:39 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:39 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:39 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:39 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:39 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:39 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:40 AI_Player.update()	update
2017-01-03 14:50:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:40 AI_Player.update()	update
2017-01-03 14:50:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:40 AI_Player.update()	Search took1ms
2017-01-03 14:50:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:40 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:40 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:40 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:40 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:40 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:40 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:40 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:40 AI_Player.update()	update
2017-01-03 14:50:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:40 AI_Player.update()	update
2017-01-03 14:50:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:40 AI_Player.update()	Search took3ms
2017-01-03 14:50:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:40 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:40 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:40 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:40 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:40 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:40 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:40 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:40 AI_Player.update()	update
2017-01-03 14:50:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:40 AI_Player.update()	update
2017-01-03 14:50:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:40 AI_Player.update()	Search took2ms
2017-01-03 14:50:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:40 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:40 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:40 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:40 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:40 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:40 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:40 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:40 AI_Player.update()	update
2017-01-03 14:50:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:40 AI_Player.update()	update
2017-01-03 14:50:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:40 AI_Player.update()	Search took2ms
2017-01-03 14:50:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:40 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:40 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:40 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:40 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:40 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:40 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:40 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:40 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:41 AI_Player.update()	update
2017-01-03 14:50:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:41 AI_Player.update()	update
2017-01-03 14:50:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:41 AI_Player.update()	Search took5ms
2017-01-03 14:50:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:41 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:41 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:41 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:41 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:41 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:41 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:41 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:41 AI_Player.update()	update
2017-01-03 14:50:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:41 AI_Player.update()	update
2017-01-03 14:50:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:41 AI_Player.update()	Search took2ms
2017-01-03 14:50:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:41 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:41 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:41 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:41 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:41 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:41 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:41 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:41 AI_Player.update()	update
2017-01-03 14:50:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:41 AI_Player.update()	update
2017-01-03 14:50:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:41 AI_Player.update()	Search took1ms
2017-01-03 14:50:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:41 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:41 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:41 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:41 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:41 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:41 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:41 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:41 AI_Player.update()	update
2017-01-03 14:50:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:41 AI_Player.update()	update
2017-01-03 14:50:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:41 AI_Player.update()	Search took2ms
2017-01-03 14:50:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:41 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:41 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:41 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:41 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:41 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:41 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:41 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:41 AI_Player.update()	update
2017-01-03 14:50:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:41 AI_Player.update()	update
2017-01-03 14:50:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:41 AI_Player.update()	Search took1ms
2017-01-03 14:50:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:41 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:41 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:41 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:41 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:41 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:41 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:41 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:41 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:42 AI_Player.update()	update
2017-01-03 14:50:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:42 AI_Player.update()	update
2017-01-03 14:50:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:42 AI_Player.update()	Search took2ms
2017-01-03 14:50:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:42 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:42 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:42 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:42 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:42 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:42 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:42 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:42 AI_Player.update()	update
2017-01-03 14:50:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:42 AI_Player.update()	update
2017-01-03 14:50:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:42 AI_Player.update()	Search took1ms
2017-01-03 14:50:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:42 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:42 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:42 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:42 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:42 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:42 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:42 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:42 AI_Player.update()	update
2017-01-03 14:50:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:42 AI_Player.update()	update
2017-01-03 14:50:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:42 AI_Player.update()	Search took2ms
2017-01-03 14:50:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:42 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:42 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:42 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:42 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:42 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:42 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:42 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:42 AI_Player.update()	update
2017-01-03 14:50:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:42 AI_Player.update()	update
2017-01-03 14:50:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:42 AI_Player.update()	Search took1ms
2017-01-03 14:50:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:42 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:42 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:42 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:42 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:42 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:42 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:42 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:42 AI_Player.update()	update
2017-01-03 14:50:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:42 AI_Player.update()	update
2017-01-03 14:50:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:42 AI_Player.update()	Search took2ms
2017-01-03 14:50:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:42 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:42 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:42 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:42 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:42 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:42 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:42 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:42 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:43 AI_Player.update()	update
2017-01-03 14:50:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:43 AI_Player.update()	update
2017-01-03 14:50:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:43 AI_Player.update()	Search took1ms
2017-01-03 14:50:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:43 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:43 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:43 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:43 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:43 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:43 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:43 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:43 AI_Player.update()	update
2017-01-03 14:50:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:43 AI_Player.update()	update
2017-01-03 14:50:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:43 AI_Player.update()	Search took2ms
2017-01-03 14:50:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:43 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:43 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:43 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:43 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:43 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:43 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:43 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:43 AI_Player.update()	update
2017-01-03 14:50:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:43 AI_Player.update()	update
2017-01-03 14:50:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:43 AI_Player.update()	Search took2ms
2017-01-03 14:50:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:43 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:43 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:43 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:43 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:43 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:43 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:43 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:43 AI_Player.update()	update
2017-01-03 14:50:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:43 AI_Player.update()	update
2017-01-03 14:50:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:43 AI_Player.update()	Search took2ms
2017-01-03 14:50:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:43 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:43 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:43 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:43 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:43 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:43 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:43 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:43 AI_Player.update()	update
2017-01-03 14:50:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:43 AI_Player.update()	update
2017-01-03 14:50:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:43 AI_Player.update()	Search took5ms
2017-01-03 14:50:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:43 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:43 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:43 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:43 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:43 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:43 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:43 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:44 AI_Player.update()	update
2017-01-03 14:50:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:44 AI_Player.update()	update
2017-01-03 14:50:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:44 AI_Player.update()	Search took2ms
2017-01-03 14:50:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:44 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:44 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:44 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:44 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:44 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:44 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:44 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:44 AI_Player.update()	update
2017-01-03 14:50:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:44 AI_Player.update()	update
2017-01-03 14:50:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:44 AI_Player.update()	Search took2ms
2017-01-03 14:50:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:44 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:44 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:44 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:44 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:44 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:44 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:44 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:44 AI_Player.update()	update
2017-01-03 14:50:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:44 AI_Player.update()	update
2017-01-03 14:50:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:44 AI_Player.update()	Search took2ms
2017-01-03 14:50:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:44 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:44 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:44 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:44 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:44 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:44 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:44 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:44 AI_Player.update()	update
2017-01-03 14:50:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:44 AI_Player.update()	update
2017-01-03 14:50:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:44 AI_Player.update()	Search took1ms
2017-01-03 14:50:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:44 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:44 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:44 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:44 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:44 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:44 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:44 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:45 AI_Player.update()	update
2017-01-03 14:50:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:45 AI_Player.update()	update
2017-01-03 14:50:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:45 AI_Player.update()	Search took2ms
2017-01-03 14:50:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:45 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:45 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:45 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:45 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:45 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:45 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:45 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:45 AI_Player.update()	update
2017-01-03 14:50:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:45 AI_Player.update()	update
2017-01-03 14:50:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:45 AI_Player.update()	Search took1ms
2017-01-03 14:50:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:45 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:45 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:45 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:45 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:45 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:45 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:45 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:45 AI_Player.update()	update
2017-01-03 14:50:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:45 AI_Player.update()	update
2017-01-03 14:50:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:45 AI_Player.update()	Search took2ms
2017-01-03 14:50:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:45 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:45 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:45 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:45 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:45 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:45 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:45 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:45 AI_Player.update()	update
2017-01-03 14:50:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:45 AI_Player.update()	update
2017-01-03 14:50:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:45 AI_Player.update()	Search took1ms
2017-01-03 14:50:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:45 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:45 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:45 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:45 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:45 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:45 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:45 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:45 AI_Player.update()	update
2017-01-03 14:50:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:45 AI_Player.update()	update
2017-01-03 14:50:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:45 AI_Player.update()	Search took2ms
2017-01-03 14:50:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:45 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:45 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:45 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:45 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:45 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:45 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:45 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:46 AI_Player.update()	update
2017-01-03 14:50:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:46 AI_Player.update()	update
2017-01-03 14:50:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:46 AI_Player.update()	Search took1ms
2017-01-03 14:50:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:46 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:46 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:46 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:46 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:46 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:46 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:46 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:46 AI_Player.update()	update
2017-01-03 14:50:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:46 AI_Player.update()	update
2017-01-03 14:50:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:46 AI_Player.update()	Search took2ms
2017-01-03 14:50:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:46 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:46 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:46 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:46 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:46 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:46 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:46 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:46 AI_Player.update()	update
2017-01-03 14:50:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:46 AI_Player.update()	update
2017-01-03 14:50:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:46 AI_Player.update()	Search took2ms
2017-01-03 14:50:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:46 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:46 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:46 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:46 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:46 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:46 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:46 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:46 AI_Player.update()	update
2017-01-03 14:50:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:46 AI_Player.update()	update
2017-01-03 14:50:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:46 AI_Player.update()	Search took2ms
2017-01-03 14:50:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:46 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:46 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:46 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:46 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:46 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:46 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:46 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:46 AI_Player.update()	update
2017-01-03 14:50:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:46 AI_Player.update()	update
2017-01-03 14:50:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:46 AI_Player.update()	Search took5ms
2017-01-03 14:50:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:46 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:46 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:46 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:46 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:46 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:46 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:46 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:46 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:47 AI_Player.update()	update
2017-01-03 14:50:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:47 AI_Player.update()	update
2017-01-03 14:50:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:47 AI_Player.update()	Search took2ms
2017-01-03 14:50:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:47 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:47 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:47 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:47 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:47 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:47 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:47 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:47 AI_Player.update()	update
2017-01-03 14:50:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:47 AI_Player.update()	update
2017-01-03 14:50:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:47 AI_Player.update()	Search took1ms
2017-01-03 14:50:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:47 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:47 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:47 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:47 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:47 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:47 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:47 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:47 AI_Player.update()	update
2017-01-03 14:50:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:47 AI_Player.update()	update
2017-01-03 14:50:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:47 AI_Player.update()	Search took2ms
2017-01-03 14:50:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:47 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:47 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:47 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:47 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:47 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:47 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:47 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:47 AI_Player.update()	update
2017-01-03 14:50:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:47 AI_Player.update()	update
2017-01-03 14:50:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:47 AI_Player.update()	Search took2ms
2017-01-03 14:50:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:47 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:47 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:47 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:47 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:47 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:47 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:47 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:47 AI_Player.update()	update
2017-01-03 14:50:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:48 AI_Player.update()	update
2017-01-03 14:50:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:48 AI_Player.update()	Search took3ms
2017-01-03 14:50:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:48 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:48 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:48 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:48 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:48 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:48 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:48 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:48 AI_Player.update()	update
2017-01-03 14:50:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:48 AI_Player.update()	update
2017-01-03 14:50:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:48 AI_Player.update()	Search took1ms
2017-01-03 14:50:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:48 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:48 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:48 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:48 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:48 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:48 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:48 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:48 AI_Player.update()	update
2017-01-03 14:50:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:48 AI_Player.update()	update
2017-01-03 14:50:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:48 AI_Player.update()	Search took2ms
2017-01-03 14:50:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:48 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:48 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:48 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:48 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:48 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:48 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:48 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:48 AI_Player.update()	update
2017-01-03 14:50:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:48 AI_Player.update()	update
2017-01-03 14:50:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:48 AI_Player.update()	Search took1ms
2017-01-03 14:50:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:48 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:48 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:48 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:48 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:48 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:48 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:48 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:48 AI_Player.update()	update
2017-01-03 14:50:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:48 AI_Player.update()	update
2017-01-03 14:50:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:48 AI_Player.update()	Search took2ms
2017-01-03 14:50:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:48 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:48 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:48 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:48 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:48 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:48 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:48 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:49 AI_Player.update()	update
2017-01-03 14:50:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:49 AI_Player.update()	update
2017-01-03 14:50:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:49 AI_Player.update()	Search took1ms
2017-01-03 14:50:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:49 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:49 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:49 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:49 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:49 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:49 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:49 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:49 AI_Player.update()	update
2017-01-03 14:50:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:49 AI_Player.update()	update
2017-01-03 14:50:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:49 AI_Player.update()	Search took2ms
2017-01-03 14:50:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:49 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:49 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:49 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:49 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:49 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:49 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:49 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:49 AI_Player.update()	update
2017-01-03 14:50:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:49 AI_Player.update()	update
2017-01-03 14:50:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:49 AI_Player.update()	Search took2ms
2017-01-03 14:50:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:49 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:49 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:49 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:49 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:49 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:49 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:49 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:49 AI_Player.update()	update
2017-01-03 14:50:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:49 AI_Player.update()	update
2017-01-03 14:50:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:49 AI_Player.update()	Search took2ms
2017-01-03 14:50:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:49 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:49 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:49 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:49 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:49 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:49 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:49 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:49 AI_Player.update()	update
2017-01-03 14:50:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:49 AI_Player.update()	update
2017-01-03 14:50:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:49 AI_Player.update()	Search took5ms
2017-01-03 14:50:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:49 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:49 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:49 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:49 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:49 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:49 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:49 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:49 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:50 AI_Player.update()	update
2017-01-03 14:50:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:50 AI_Player.update()	update
2017-01-03 14:50:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:50 AI_Player.update()	Search took2ms
2017-01-03 14:50:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:50 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:50 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:50 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:50 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:50 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:50 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:50 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:50 AI_Player.update()	update
2017-01-03 14:50:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:50 AI_Player.update()	update
2017-01-03 14:50:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:50 AI_Player.update()	Search took1ms
2017-01-03 14:50:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:50 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:50 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:50 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:50 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:50 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:50 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:50 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:50 AI_Player.update()	update
2017-01-03 14:50:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:50 AI_Player.update()	update
2017-01-03 14:50:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:50 AI_Player.update()	Search took2ms
2017-01-03 14:50:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:50 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:50 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:50 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:50 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:50 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:50 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:50 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:50 AI_Player.update()	update
2017-01-03 14:50:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:50 AI_Player.update()	update
2017-01-03 14:50:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:50 AI_Player.update()	Search took1ms
2017-01-03 14:50:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:50 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:50 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:50 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:50 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:50 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:50 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:50 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:50 AI_Player.update()	update
2017-01-03 14:50:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:50 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:51 AI_Player.update()	update
2017-01-03 14:50:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:51 AI_Player.update()	Search took2ms
2017-01-03 14:50:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:51 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:51 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:51 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:51 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:51 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:51 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:51 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:51 AI_Player.update()	update
2017-01-03 14:50:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:51 AI_Player.update()	update
2017-01-03 14:50:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:51 AI_Player.update()	Search took1ms
2017-01-03 14:50:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:51 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:51 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:51 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:51 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:51 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:51 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:51 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:51 AI_Player.update()	update
2017-01-03 14:50:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:51 AI_Player.update()	update
2017-01-03 14:50:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:51 AI_Player.update()	Search took1ms
2017-01-03 14:50:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:51 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:51 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:51 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:51 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:51 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:51 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:51 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:51 AI_Player.update()	update
2017-01-03 14:50:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:51 AI_Player.update()	update
2017-01-03 14:50:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:51 AI_Player.update()	Search took1ms
2017-01-03 14:50:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:51 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:51 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:51 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:51 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:51 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:51 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:51 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:51 AI_Player.update()	update
2017-01-03 14:50:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:51 AI_Player.update()	update
2017-01-03 14:50:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:51 AI_Player.update()	Search took2ms
2017-01-03 14:50:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:51 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:51 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:51 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:51 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:51 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:51 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:51 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:51 AI_Player.update()	update
2017-01-03 14:50:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:51 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:52 AI_Player.update()	update
2017-01-03 14:50:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:52 AI_Player.update()	Search took1ms
2017-01-03 14:50:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:52 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:52 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:52 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:52 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:52 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:52 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:52 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:52 AI_Player.update()	update
2017-01-03 14:50:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:52 AI_Player.update()	update
2017-01-03 14:50:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:52 AI_Player.update()	Search took2ms
2017-01-03 14:50:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:52 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:52 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:52 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:52 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:52 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:52 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:52 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:52 AI_Player.update()	update
2017-01-03 14:50:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:52 AI_Player.update()	update
2017-01-03 14:50:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:52 AI_Player.update()	Search took2ms
2017-01-03 14:50:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:52 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:52 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:52 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:52 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:52 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:52 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:52 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:52 AI_Player.update()	update
2017-01-03 14:50:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:52 AI_Player.update()	update
2017-01-03 14:50:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:52 AI_Player.update()	Search took2ms
2017-01-03 14:50:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:52 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:52 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:52 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:52 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:52 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:52 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:52 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:52 AI_Player.update()	update
2017-01-03 14:50:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:52 AI_Player.update()	update
2017-01-03 14:50:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:52 AI_Player.update()	Search took5ms
2017-01-03 14:50:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:52 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:52 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:52 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:52 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:52 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:52 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:52 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:52 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:53 AI_Player.update()	update
2017-01-03 14:50:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:53 AI_Player.update()	update
2017-01-03 14:50:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:53 AI_Player.update()	Search took2ms
2017-01-03 14:50:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:53 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:53 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:53 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:53 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:53 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:53 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:53 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:53 AI_Player.update()	update
2017-01-03 14:50:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:53 AI_Player.update()	update
2017-01-03 14:50:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:53 AI_Player.update()	Search took1ms
2017-01-03 14:50:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:53 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:53 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:53 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:53 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:53 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:53 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:53 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:53 AI_Player.update()	update
2017-01-03 14:50:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:53 AI_Player.update()	update
2017-01-03 14:50:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:53 AI_Player.update()	Search took2ms
2017-01-03 14:50:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:53 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:53 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:53 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:53 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:53 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:53 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:53 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:53 AI_Player.update()	update
2017-01-03 14:50:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:53 AI_Player.update()	update
2017-01-03 14:50:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:53 AI_Player.update()	Search took1ms
2017-01-03 14:50:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:53 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:53 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:53 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:53 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:53 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:53 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:53 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:53 AI_Player.update()	update
2017-01-03 14:50:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:53 AI_Player.update()	update
2017-01-03 14:50:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:53 AI_Player.update()	Search took2ms
2017-01-03 14:50:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:53 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:53 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:53 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:53 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:53 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:53 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:53 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:54 AI_Player.update()	update
2017-01-03 14:50:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:54 AI_Player.update()	update
2017-01-03 14:50:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:54 AI_Player.update()	Search took1ms
2017-01-03 14:50:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:54 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:54 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:54 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:54 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:54 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:54 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:54 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:54 AI_Player.update()	update
2017-01-03 14:50:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:54 AI_Player.update()	update
2017-01-03 14:50:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:54 AI_Player.update()	Search took2ms
2017-01-03 14:50:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:54 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:54 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:54 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:54 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:54 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:54 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:54 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:54 AI_Player.update()	update
2017-01-03 14:50:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:54 AI_Player.update()	update
2017-01-03 14:50:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:54 AI_Player.update()	Search took2ms
2017-01-03 14:50:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:54 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:54 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:54 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:54 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:54 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:54 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:54 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:54 AI_Player.update()	update
2017-01-03 14:50:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:54 AI_Player.update()	update
2017-01-03 14:50:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:54 AI_Player.update()	Search took2ms
2017-01-03 14:50:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:54 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:54 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:54 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:54 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:54 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:54 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:54 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:54 AI_Player.update()	update
2017-01-03 14:50:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:54 AI_Player.update()	update
2017-01-03 14:50:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:54 AI_Player.update()	Search took0ms
2017-01-03 14:50:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:54 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:54 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:54 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:54 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:54 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:54 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:54 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:54 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:55 AI_Player.update()	update
2017-01-03 14:50:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:55 AI_Player.update()	update
2017-01-03 14:50:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:55 AI_Player.update()	Search took2ms
2017-01-03 14:50:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:55 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:55 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:55 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:55 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:55 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:55 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:55 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:55 AI_Player.update()	update
2017-01-03 14:50:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:55 AI_Player.update()	update
2017-01-03 14:50:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:55 AI_Player.update()	Search took2ms
2017-01-03 14:50:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:55 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:55 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:55 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:55 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:55 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:55 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:55 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:55 AI_Player.update()	update
2017-01-03 14:50:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:55 AI_Player.update()	update
2017-01-03 14:50:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:55 AI_Player.update()	Search took2ms
2017-01-03 14:50:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:55 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:55 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:55 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:55 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:55 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:55 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:55 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:55 AI_Player.update()	update
2017-01-03 14:50:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:55 AI_Player.update()	update
2017-01-03 14:50:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:55 AI_Player.update()	Search took5ms
2017-01-03 14:50:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:55 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:55 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:55 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:55 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:55 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:55 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:55 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:55 AI_Player.update()	update
2017-01-03 14:50:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:56 AI_Player.update()	update
2017-01-03 14:50:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:56 AI_Player.update()	Search took2ms
2017-01-03 14:50:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:56 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:56 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:56 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:56 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:56 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:56 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:56 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:56 AI_Player.update()	update
2017-01-03 14:50:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:56 AI_Player.update()	update
2017-01-03 14:50:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:56 AI_Player.update()	Search took1ms
2017-01-03 14:50:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:56 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:56 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:56 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:56 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:56 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:56 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:56 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:56 AI_Player.update()	update
2017-01-03 14:50:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:56 AI_Player.update()	update
2017-01-03 14:50:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:56 AI_Player.update()	Search took2ms
2017-01-03 14:50:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:56 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:56 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:56 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:56 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:56 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:56 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:56 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:56 AI_Player.update()	update
2017-01-03 14:50:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:56 AI_Player.update()	update
2017-01-03 14:50:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:56 AI_Player.update()	Search took1ms
2017-01-03 14:50:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:56 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:56 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:56 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:56 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:56 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:56 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:56 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:56 AI_Player.update()	update
2017-01-03 14:50:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:56 AI_Player.update()	update
2017-01-03 14:50:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:56 AI_Player.update()	Search took2ms
2017-01-03 14:50:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:56 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:56 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:56 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:56 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:56 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:56 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:56 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:56 AI_Player.update()	update
2017-01-03 14:50:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:56 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:57 AI_Player.update()	update
2017-01-03 14:50:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:57 AI_Player.update()	Search took1ms
2017-01-03 14:50:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:57 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:57 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:57 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:57 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:57 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:57 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:57 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:57 AI_Player.update()	update
2017-01-03 14:50:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:57 AI_Player.update()	update
2017-01-03 14:50:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:57 AI_Player.update()	Search took2ms
2017-01-03 14:50:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:57 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:57 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:57 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:57 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:57 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:57 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:57 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:57 AI_Player.update()	update
2017-01-03 14:50:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:57 AI_Player.update()	update
2017-01-03 14:50:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:57 AI_Player.update()	Search took1ms
2017-01-03 14:50:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:57 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:57 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:57 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:57 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:57 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:57 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:57 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:57 AI_Player.update()	update
2017-01-03 14:50:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:57 AI_Player.update()	update
2017-01-03 14:50:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:57 AI_Player.update()	Search took2ms
2017-01-03 14:50:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:57 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:57 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:57 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:57 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:57 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:57 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:57 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:57 AI_Player.update()	update
2017-01-03 14:50:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:57 AI_Player.update()	update
2017-01-03 14:50:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:57 AI_Player.update()	Search took1ms
2017-01-03 14:50:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:57 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:57 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:57 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:57 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:57 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:57 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:57 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:57 AI_Player.update()	update
2017-01-03 14:50:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:57 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:58 AI_Player.update()	update
2017-01-03 14:50:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:58 AI_Player.update()	Search took2ms
2017-01-03 14:50:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:58 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:58 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:58 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:58 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:58 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:58 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:58 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:58 AI_Player.update()	update
2017-01-03 14:50:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:58 AI_Player.update()	update
2017-01-03 14:50:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:58 AI_Player.update()	Search took2ms
2017-01-03 14:50:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:58 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:58 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:58 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:58 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:58 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:58 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:58 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:58 AI_Player.update()	update
2017-01-03 14:50:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:58 AI_Player.update()	update
2017-01-03 14:50:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:58 AI_Player.update()	Search took2ms
2017-01-03 14:50:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:58 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:58 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:58 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:58 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:58 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:58 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:58 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:58 AI_Player.update()	update
2017-01-03 14:50:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:58 AI_Player.update()	update
2017-01-03 14:50:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:58 AI_Player.update()	Search took5ms
2017-01-03 14:50:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:58 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:58 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:58 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:58 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:58 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:58 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:58 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:58 AI_Player.update()	update
2017-01-03 14:50:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:58 AI_Player.update()	update
2017-01-03 14:50:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:58 AI_Player.update()	Search took2ms
2017-01-03 14:50:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:58 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:50:58 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:58 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:58 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:58 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:58 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:58 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:58 AI_Player.update()	update
2017-01-03 14:50:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:59 AI_Player.update()	update
2017-01-03 14:50:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:59 AI_Player.update()	Search took2ms
2017-01-03 14:50:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:59 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:50:59 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:59 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:59 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:59 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:59 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:59 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:59 AI_Player.update()	update
2017-01-03 14:50:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:59 AI_Player.update()	update
2017-01-03 14:50:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:59 AI_Player.update()	Search took2ms
2017-01-03 14:50:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:59 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:50:59 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:59 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:59 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:59 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:59 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:59 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:59 AI_Player.update()	update
2017-01-03 14:50:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:59 AI_Player.update()	update
2017-01-03 14:50:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:59 AI_Player.update()	Search took1ms
2017-01-03 14:50:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:59 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:50:59 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:59 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:59 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:59 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:59 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:59 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:59 AI_Player.update()	update
2017-01-03 14:50:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:50:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:50:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:50:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:50:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:59 AI_Player.update()	update
2017-01-03 14:50:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:50:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:50:59 AI_Player.update()	Search took2ms
2017-01-03 14:50:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:59 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:50:59 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:59 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:59 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:59 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:59 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:59 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:59 AI_Player.update()	update
2017-01-03 14:50:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:50:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:50:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:50:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:50:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:50:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:50:59 AI_Player.update()	update
2017-01-03 14:50:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:50:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:50:59 AI_Player.update()	Search took1ms
2017-01-03 14:50:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:50:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:59 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:50:59 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:50:59 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:50:59 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:50:59 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:50:59 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:50:59 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:50:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:50:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:50:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:50:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:50:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:50:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:50:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:50:59 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:00 AI_Player.update()	update
2017-01-03 14:51:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:00 AI_Player.update()	update
2017-01-03 14:51:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:00 AI_Player.update()	Search took2ms
2017-01-03 14:51:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:00 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:51:00 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:00 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:00 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:00 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:00 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:00 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:00 AI_Player.update()	update
2017-01-03 14:51:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:00 AI_Player.update()	update
2017-01-03 14:51:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:00 AI_Player.update()	Search took1ms
2017-01-03 14:51:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:00 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:51:00 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:00 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:00 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:00 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:00 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:00 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:00 AI_Player.update()	update
2017-01-03 14:51:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:00 AI_Player.update()	update
2017-01-03 14:51:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:00 AI_Player.update()	Search took2ms
2017-01-03 14:51:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:00 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:51:00 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:00 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:00 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:00 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:00 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:00 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:00 AI_Player.update()	update
2017-01-03 14:51:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:00 AI_Player.update()	update
2017-01-03 14:51:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:00 AI_Player.update()	Search took1ms
2017-01-03 14:51:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:00 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:51:00 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:00 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:00 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:00 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:00 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:00 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:00 AI_Player.update()	update
2017-01-03 14:51:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:00 AI_Player.update()	update
2017-01-03 14:51:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:00 AI_Player.update()	Search took2ms
2017-01-03 14:51:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:00 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:51:00 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:00 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:00 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:00 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:00 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:00 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:00 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:01 AI_Player.update()	update
2017-01-03 14:51:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:01 AI_Player.update()	update
2017-01-03 14:51:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:01 AI_Player.update()	Search took2ms
2017-01-03 14:51:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:01 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:51:01 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:01 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:01 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:01 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:01 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:01 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:01 AI_Player.update()	update
2017-01-03 14:51:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:01 AI_Player.update()	update
2017-01-03 14:51:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:01 AI_Player.update()	Search took2ms
2017-01-03 14:51:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:01 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:51:01 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:01 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:01 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:01 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:01 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:01 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:01 AI_Player.update()	update
2017-01-03 14:51:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:01 AI_Player.update()	update
2017-01-03 14:51:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:01 AI_Player.update()	Search took5ms
2017-01-03 14:51:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:01 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:51:01 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:01 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:01 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:01 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:01 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:01 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:01 AI_Player.update()	update
2017-01-03 14:51:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:01 AI_Player.update()	update
2017-01-03 14:51:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:01 AI_Player.update()	Search took3ms
2017-01-03 14:51:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:01 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:51:01 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:01 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:01 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:01 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:01 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:01 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:01 AI_Player.update()	update
2017-01-03 14:51:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:01 AI_Player.update()	update
2017-01-03 14:51:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:01 AI_Player.update()	Search took1ms
2017-01-03 14:51:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:01 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:51:01 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:01 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:01 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:01 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:01 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:01 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:02 AI_Player.update()	update
2017-01-03 14:51:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:02 AI_Player.update()	update
2017-01-03 14:51:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:02 AI_Player.update()	Search took2ms
2017-01-03 14:51:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:02 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:51:02 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:02 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:02 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:02 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:02 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:02 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:02 AI_Player.update()	update
2017-01-03 14:51:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:02 AI_Player.update()	update
2017-01-03 14:51:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:02 AI_Player.update()	Search took1ms
2017-01-03 14:51:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:02 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:51:02 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:02 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:02 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:02 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:02 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:02 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:02 AI_Player.update()	update
2017-01-03 14:51:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:02 AI_Player.update()	update
2017-01-03 14:51:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:02 AI_Player.update()	Search took2ms
2017-01-03 14:51:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:02 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:51:02 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:02 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:02 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:02 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:02 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:02 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:02 AI_Player.update()	update
2017-01-03 14:51:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:02 AI_Player.update()	update
2017-01-03 14:51:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:02 AI_Player.update()	Search took1ms
2017-01-03 14:51:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:02 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:51:02 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:02 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:02 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:02 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:02 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:02 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:02 AI_Player.update()	update
2017-01-03 14:51:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:02 AI_Player.update()	update
2017-01-03 14:51:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:02 AI_Player.update()	Search took2ms
2017-01-03 14:51:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:02 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:51:02 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:02 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:02 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:02 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:02 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:02 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:02 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:03 AI_Player.update()	update
2017-01-03 14:51:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:03 AI_Player.update()	update
2017-01-03 14:51:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:03 AI_Player.update()	Search took2ms
2017-01-03 14:51:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:03 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:51:03 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:03 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:03 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:03 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:03 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:03 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:03 AI_Player.update()	update
2017-01-03 14:51:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:03 AI_Player.update()	update
2017-01-03 14:51:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:03 AI_Player.update()	Search took2ms
2017-01-03 14:51:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:03 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:51:03 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:03 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:03 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:03 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:03 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:03 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:03 AI_Player.update()	update
2017-01-03 14:51:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:03 AI_Player.update()	update
2017-01-03 14:51:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:03 AI_Player.update()	Search took1ms
2017-01-03 14:51:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:03 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:51:03 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:03 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:03 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:03 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:03 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:03 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:03 AI_Player.update()	update
2017-01-03 14:51:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:03 AI_Player.update()	update
2017-01-03 14:51:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:03 AI_Player.update()	Search took2ms
2017-01-03 14:51:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:03 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:51:03 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:03 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:03 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:03 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:03 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:03 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:03 AI_Player.update()	update
2017-01-03 14:51:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:03 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:04 AI_Player.update()	update
2017-01-03 14:51:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:04 AI_Player.update()	Search took2ms
2017-01-03 14:51:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:04 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:51:04 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:04 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:04 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:04 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:04 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:04 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:04 AI_Player.update()	update
2017-01-03 14:51:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:04 AI_Player.update()	update
2017-01-03 14:51:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:04 AI_Player.update()	Search took2ms
2017-01-03 14:51:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:04 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:51:04 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:04 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:04 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:04 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:04 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:04 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:04 AI_Player.update()	update
2017-01-03 14:51:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:04 AI_Player.update()	update
2017-01-03 14:51:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:04 AI_Player.update()	Search took5ms
2017-01-03 14:51:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:04 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:51:04 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:04 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:04 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:04 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:04 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:04 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:04 AI_Player.update()	update
2017-01-03 14:51:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:04 AI_Player.update()	update
2017-01-03 14:51:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:04 AI_Player.update()	Search took2ms
2017-01-03 14:51:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:04 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:51:04 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:04 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:04 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:04 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:04 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:04 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:04 AI_Player.update()	update
2017-01-03 14:51:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:04 AI_Player.update()	update
2017-01-03 14:51:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:04 AI_Player.update()	Search took1ms
2017-01-03 14:51:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:04 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:51:04 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:04 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:04 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:04 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:04 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:04 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:04 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:05 AI_Player.update()	update
2017-01-03 14:51:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:05 AI_Player.update()	update
2017-01-03 14:51:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:05 AI_Player.update()	Search took2ms
2017-01-03 14:51:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:05 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:51:05 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:05 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:05 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:05 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:05 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:05 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:05 AI_Player.update()	update
2017-01-03 14:51:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:05 AI_Player.update()	update
2017-01-03 14:51:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:05 AI_Player.update()	Search took1ms
2017-01-03 14:51:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:05 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:51:05 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:05 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:05 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:05 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:05 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:05 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:05 AI_Player.update()	update
2017-01-03 14:51:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:05 AI_Player.update()	update
2017-01-03 14:51:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:05 AI_Player.update()	Search took2ms
2017-01-03 14:51:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:05 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:51:05 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:05 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:05 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:05 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:05 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:05 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:05 AI_Player.update()	update
2017-01-03 14:51:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:05 AI_Player.update()	update
2017-01-03 14:51:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:05 AI_Player.update()	Search took1ms
2017-01-03 14:51:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:05 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:51:05 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:05 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:05 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:05 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:05 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:05 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:05 AI_Player.update()	update
2017-01-03 14:51:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:05 AI_Player.update()	update
2017-01-03 14:51:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:05 AI_Player.update()	Search took2ms
2017-01-03 14:51:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:05 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:51:05 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:05 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:05 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:05 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:05 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:05 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:05 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:06 AI_Player.update()	update
2017-01-03 14:51:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:06 AI_Player.update()	update
2017-01-03 14:51:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:06 AI_Player.update()	Search took1ms
2017-01-03 14:51:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:06 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:51:06 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:06 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:06 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:06 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:06 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:06 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:06 AI_Player.update()	update
2017-01-03 14:51:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:06 AI_Player.update()	update
2017-01-03 14:51:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:06 AI_Player.update()	Search took2ms
2017-01-03 14:51:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:06 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:51:06 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:06 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:06 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:06 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:06 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:06 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:06 AI_Player.update()	update
2017-01-03 14:51:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:06 AI_Player.update()	update
2017-01-03 14:51:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:06 AI_Player.update()	Search took1ms
2017-01-03 14:51:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:06 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:51:06 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:06 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:06 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:06 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:06 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:06 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:06 AI_Player.update()	update
2017-01-03 14:51:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:06 AI_Player.update()	update
2017-01-03 14:51:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:06 AI_Player.update()	Search took2ms
2017-01-03 14:51:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:06 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:51:06 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:06 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:06 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:06 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:06 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:06 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:06 AI_Player.update()	update
2017-01-03 14:51:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:06 AI_Player.update()	update
2017-01-03 14:51:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:06 AI_Player.update()	Search took2ms
2017-01-03 14:51:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:06 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:51:06 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:06 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:06 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:06 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:06 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:06 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:06 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:07 AI_Player.update()	update
2017-01-03 14:51:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:07 AI_Player.update()	update
2017-01-03 14:51:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:07 AI_Player.update()	Search took2ms
2017-01-03 14:51:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:07 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:51:07 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:07 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:07 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:07 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:07 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:07 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:07 AI_Player.update()	update
2017-01-03 14:51:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:07 AI_Player.update()	update
2017-01-03 14:51:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:07 AI_Player.update()	Search took5ms
2017-01-03 14:51:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:07 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:51:07 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:07 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:07 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:07 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:07 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:07 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:07 AI_Player.update()	update
2017-01-03 14:51:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:07 AI_Player.update()	update
2017-01-03 14:51:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:07 AI_Player.update()	Search took2ms
2017-01-03 14:51:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:07 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:51:07 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:07 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:07 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:07 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:07 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:07 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:07 AI_Player.update()	update
2017-01-03 14:51:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:07 AI_Player.update()	update
2017-01-03 14:51:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:07 AI_Player.update()	Search took1ms
2017-01-03 14:51:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:07 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:51:07 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:07 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:07 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:07 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:07 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:07 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:07 AI_Player.update()	update
2017-01-03 14:51:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:07 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:08 AI_Player.update()	update
2017-01-03 14:51:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:08 AI_Player.update()	Search took2ms
2017-01-03 14:51:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:08 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:51:08 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:08 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:08 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:08 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:08 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:08 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:08 AI_Player.update()	update
2017-01-03 14:51:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:08 AI_Player.update()	update
2017-01-03 14:51:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:08 AI_Player.update()	Search took1ms
2017-01-03 14:51:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:08 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:51:08 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:08 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:08 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:08 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:08 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:08 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:08 AI_Player.update()	update
2017-01-03 14:51:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:08 AI_Player.update()	update
2017-01-03 14:51:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:08 AI_Player.update()	Search took2ms
2017-01-03 14:51:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:08 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:51:08 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:08 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:08 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:08 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:08 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:08 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:08 AI_Player.update()	update
2017-01-03 14:51:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:08 AI_Player.update()	update
2017-01-03 14:51:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:08 AI_Player.update()	Search took1ms
2017-01-03 14:51:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:08 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:51:08 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:08 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:08 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:08 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:08 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:08 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:08 AI_Player.update()	update
2017-01-03 14:51:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:08 AI_Player.update()	update
2017-01-03 14:51:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:08 AI_Player.update()	Search took2ms
2017-01-03 14:51:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:08 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:51:08 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:08 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:08 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:08 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:08 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:08 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:08 AI_Player.update()	update
2017-01-03 14:51:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:08 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:09 AI_Player.update()	update
2017-01-03 14:51:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:09 AI_Player.update()	Search took2ms
2017-01-03 14:51:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:09 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:51:09 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:09 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:09 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:09 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:09 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:09 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:09 AI_Player.update()	update
2017-01-03 14:51:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:09 AI_Player.update()	update
2017-01-03 14:51:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:09 AI_Player.update()	Search took2ms
2017-01-03 14:51:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:09 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:51:09 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:09 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:09 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:09 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:09 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:09 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:09 AI_Player.update()	update
2017-01-03 14:51:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:09 AI_Player.update()	update
2017-01-03 14:51:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:09 AI_Player.update()	Search took1ms
2017-01-03 14:51:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:09 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:51:09 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:09 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:09 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:09 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:09 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:09 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:09 AI_Player.update()	update
2017-01-03 14:51:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:09 AI_Player.update()	update
2017-01-03 14:51:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:09 AI_Player.update()	Search took2ms
2017-01-03 14:51:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:09 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:51:09 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:09 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:09 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:09 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:09 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:09 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:09 AI_Player.update()	update
2017-01-03 14:51:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:09 AI_Player.update()	update
2017-01-03 14:51:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:09 AI_Player.update()	Search took2ms
2017-01-03 14:51:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:09 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:51:09 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:09 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:09 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:09 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:09 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:09 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:09 AI_Player.update()	update
2017-01-03 14:51:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:09 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:10 AI_Player.update()	update
2017-01-03 14:51:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:10 AI_Player.update()	Search took2ms
2017-01-03 14:51:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:10 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:51:10 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:10 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:10 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:10 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:10 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:10 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:10 AI_Player.update()	update
2017-01-03 14:51:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:10 AI_Player.update()	update
2017-01-03 14:51:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:10 AI_Player.update()	Search took5ms
2017-01-03 14:51:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:10 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:51:10 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:10 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:10 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:10 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:10 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:10 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:10 AI_Player.update()	update
2017-01-03 14:51:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:10 AI_Player.update()	update
2017-01-03 14:51:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:10 AI_Player.update()	Search took3ms
2017-01-03 14:51:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:10 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:51:10 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:10 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:10 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:10 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:10 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:10 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:10 AI_Player.update()	update
2017-01-03 14:51:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:10 AI_Player.update()	update
2017-01-03 14:51:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:10 AI_Player.update()	Search took2ms
2017-01-03 14:51:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:10 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:51:10 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:10 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:10 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:10 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:10 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:10 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:10 AI_Player.update()	update
2017-01-03 14:51:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:10 AI_Player.update()	update
2017-01-03 14:51:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:10 AI_Player.update()	Search took2ms
2017-01-03 14:51:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:10 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:51:10 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:10 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:10 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:10 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:10 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:10 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:11 AI_Player.update()	update
2017-01-03 14:51:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:11 AI_Player.update()	update
2017-01-03 14:51:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:11 AI_Player.update()	Search took1ms
2017-01-03 14:51:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:11 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:51:11 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:11 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:11 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:11 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:11 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:11 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:11 AI_Player.update()	update
2017-01-03 14:51:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:11 AI_Player.update()	update
2017-01-03 14:51:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:11 AI_Player.update()	Search took2ms
2017-01-03 14:51:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:11 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:51:11 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:11 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:11 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:11 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:11 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:11 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:11 AI_Player.update()	update
2017-01-03 14:51:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:11 AI_Player.update()	update
2017-01-03 14:51:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:11 AI_Player.update()	Search took1ms
2017-01-03 14:51:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:11 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:51:11 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:11 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:11 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:11 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:11 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:11 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:11 AI_Player.update()	update
2017-01-03 14:51:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:11 AI_Player.update()	update
2017-01-03 14:51:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:11 AI_Player.update()	Search took2ms
2017-01-03 14:51:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:11 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:51:11 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:11 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:11 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:11 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:11 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:11 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:11 AI_Player.update()	update
2017-01-03 14:51:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:11 AI_Player.update()	update
2017-01-03 14:51:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:11 AI_Player.update()	Search took1ms
2017-01-03 14:51:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:11 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:51:11 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:11 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:11 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:11 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:11 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:11 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:11 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:12 AI_Player.update()	update
2017-01-03 14:51:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:12 AI_Player.update()	update
2017-01-03 14:51:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:12 AI_Player.update()	Search took2ms
2017-01-03 14:51:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:12 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:51:12 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:12 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:12 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:12 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:12 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:12 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:12 AI_Player.update()	update
2017-01-03 14:51:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:12 AI_Player.update()	update
2017-01-03 14:51:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:12 AI_Player.update()	Search took1ms
2017-01-03 14:51:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:12 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:51:12 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:12 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:12 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:12 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:12 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:12 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:12 AI_Player.update()	update
2017-01-03 14:51:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:12 AI_Player.update()	update
2017-01-03 14:51:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:12 AI_Player.update()	Search took2ms
2017-01-03 14:51:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:12 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:51:12 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:12 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:12 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:12 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:12 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:12 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:12 AI_Player.update()	update
2017-01-03 14:51:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:12 AI_Player.update()	update
2017-01-03 14:51:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:12 AI_Player.update()	Search took2ms
2017-01-03 14:51:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:12 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:51:12 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:12 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:12 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:12 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:12 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:12 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:12 AI_Player.update()	update
2017-01-03 14:51:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:12 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:13 AI_Player.update()	update
2017-01-03 14:51:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:13 AI_Player.update()	Search took2ms
2017-01-03 14:51:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:13 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:51:13 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:13 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:13 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:13 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:13 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:13 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:13 AI_Player.update()	update
2017-01-03 14:51:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:13 AI_Player.update()	update
2017-01-03 14:51:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:13 AI_Player.update()	Search took5ms
2017-01-03 14:51:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:13 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:51:13 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:13 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:13 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:13 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:13 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:13 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:13 AI_Player.update()	update
2017-01-03 14:51:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:13 AI_Player.update()	update
2017-01-03 14:51:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:13 AI_Player.update()	Search took2ms
2017-01-03 14:51:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:13 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:51:13 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:13 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:13 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:13 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:13 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:13 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:13 AI_Player.update()	update
2017-01-03 14:51:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:13 AI_Player.update()	update
2017-01-03 14:51:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:13 AI_Player.update()	Search took1ms
2017-01-03 14:51:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:13 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:51:13 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:13 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:13 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:13 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:13 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:13 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:13 AI_Player.update()	update
2017-01-03 14:51:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:13 AI_Player.update()	update
2017-01-03 14:51:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:13 AI_Player.update()	Search took2ms
2017-01-03 14:51:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:13 AI_Player.update()		110,	1110,	111,	101,	111,	1100,	11
2017-01-03 14:51:13 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:13 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:13 AI_Player.update()		1100,	110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:13 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:13 AI_Player.update()		11,	101,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:13 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:13 AI_Player.update()	update
2017-01-03 14:51:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:13 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:14 AI_Player.update()	update
2017-01-03 14:51:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:14 AI_Player.update()	Search took1ms
2017-01-03 14:51:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:14 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:51:14 AI_Player.update()		1001,	1100,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:14 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:14 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:14 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:14 AI_Player.update()		11,	11,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:14 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:14 AI_Player.update()	update
2017-01-03 14:51:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:14 AI_Player.update()	update
2017-01-03 14:51:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:14 AI_Player.update()	Search took2ms
2017-01-03 14:51:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:14 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 14:51:14 AI_Player.update()		1001,	110,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:14 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:14 AI_Player.update()		1100,	101,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:14 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:14 AI_Player.update()		11,	1110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:14 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:14 AI_Player.update()	update
2017-01-03 14:51:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:14 AI_Player.update()	update
2017-01-03 14:51:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:14 AI_Player.update()	Search took1ms
2017-01-03 14:51:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:14 AI_Player.update()		110,	110,	111,	101,	111,	1100,	11
2017-01-03 14:51:14 AI_Player.update()		1001,	1010,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:14 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:14 AI_Player.update()		1100,	11,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:14 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:14 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:14 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:14 AI_Player.update()	update
2017-01-03 14:51:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:14 AI_Player.update()	update
2017-01-03 14:51:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:14 AI_Player.update()	Search took2ms
2017-01-03 14:51:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:14 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 14:51:14 AI_Player.update()		1001,	101,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:14 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:14 AI_Player.update()		1100,	1110,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:14 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:14 AI_Player.update()		11,	1100,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:14 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:14 AI_Player.update()	update
2017-01-03 14:51:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:14 AI_Player.update()	update
2017-01-03 14:51:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 14:51:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-03 14:51:14 AI_Player.update()	Search took2ms
2017-01-03 14:51:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:14 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-03 14:51:14 AI_Player.update()		1001,	11,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:14 AI_Player.update()		1110,	1110,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:14 AI_Player.update()		1100,	1010,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:14 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:14 AI_Player.update()		11,	110,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:14 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:14 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:15 AI_Player.update()	update
2017-01-03 14:51:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 14:51:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 14:51:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-03 14:51:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 14:51:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 14:51:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:15 AI_Player.update()	update
2017-01-03 14:51:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 14:51:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-03 14:51:15 AI_Player.update()	Search took2ms
2017-01-03 14:51:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 14:51:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:15 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-03 14:51:15 AI_Player.update()		1001,	1110,	1001,	101,	110,	1010,	1011
2017-01-03 14:51:15 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 14:51:15 AI_Player.update()		1100,	1100,	1101,	1101,	1010,	1100,	111
2017-01-03 14:51:15 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-03 14:51:15 AI_Player.update()		11,	1010,	1110,	1010,	1010,	11,	1001
2017-01-03 14:51:15 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 14:51:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 14:51:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 14:51:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:15 GameBoard.setupTreasurePanel()	1 2
2017-01-03 14:51:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 14:51:15 AI_Player.update()	update
2017-01-03 14:51:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 14:51:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 14:51:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-03 14:51:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 14:51:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 14:51:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 14:51:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 14:51:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 14:51:15 GameBoard.setupTreasurePanel()	1 2
