2017-01-03 00:04:05 GameBoard.<init>()	Hello World!
2017-01-03 00:04:05 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-03 00:04:05 QueryProlog.initialise()	setup(h3/h3). suceeded
2017-01-03 00:04:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:05 GameBoard.setupBoardFromString()	Board created
2017-01-03 00:04:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 00:04:05 GameBoard.initialise()	[candle, book, keys, fairy, gem]
2017-01-03 00:04:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 00:04:05 GameBoard.initialise()	[map, crown, chest, helmet, sword]
2017-01-03 00:04:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:05 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-03 00:04:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 00:04:05 GameBoard.setupTreasurePanel()	null
2017-01-03 00:04:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 00:04:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 00:04:05 GameBoard.setupTreasurePanel()	adding book
2017-01-03 00:04:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 00:04:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 00:04:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 00:04:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 00:04:05 GameBoard.setupTreasurePanel()	adding map
2017-01-03 00:04:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 00:04:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 00:04:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 00:04:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 00:04:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:05 AI_Player.update()	update
2017-01-03 00:04:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:04:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:04:05 AI_Player.update()	Search took38ms
2017-01-03 00:04:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:05 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-03 00:04:05 AI_Player.update()		101,	1010,	1010,	1011,	1010,	101,	1101
2017-01-03 00:04:05 AI_Player.update()		1110,	110,	1110,	11,	111,	110,	1011
2017-01-03 00:04:05 AI_Player.update()		101,	110,	101,	1010,	101,	110,	101
2017-01-03 00:04:05 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-03 00:04:05 AI_Player.update()		1010,	101,	1010,	101,	1010,	1100,	1110
2017-01-03 00:04:05 AI_Player.update()		1100,	101,	1101,	110,	1101,	110,	1001
2017-01-03 00:04:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:04:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:04:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 00:04:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 00:04:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 00:04:05 GameBoard.setupTreasurePanel()	adding book
2017-01-03 00:04:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 00:04:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 00:04:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 00:04:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 00:04:05 GameBoard.setupTreasurePanel()	adding map
2017-01-03 00:04:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 00:04:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 00:04:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 00:04:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 00:04:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:06 AI_Player.update()	update
2017-01-03 00:04:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:04:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:04:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:04:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:04:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:04:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:06 GameBoard.setupTreasurePanel()	1 1
2017-01-03 00:04:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:07 AI_Player.update()	update
2017-01-03 00:04:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:04:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:04:08 AI_Player.update()	Search took102ms
2017-01-03 00:04:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:08 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-03 00:04:08 AI_Player.update()		101,	1010,	1010,	1001,	1010,	101,	1101
2017-01-03 00:04:08 AI_Player.update()		1110,	110,	1110,	1011,	111,	110,	1011
2017-01-03 00:04:08 AI_Player.update()		101,	110,	101,	11,	101,	110,	101
2017-01-03 00:04:08 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-03 00:04:08 AI_Player.update()		1010,	101,	1010,	1010,	1010,	1100,	1110
2017-01-03 00:04:08 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-03 00:04:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:04:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:04:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:08 GameBoard.setupTreasurePanel()	1 1
2017-01-03 00:04:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:09 AI_Player.update()	update
2017-01-03 00:04:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:04:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:04:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:04:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:04:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 00:04:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:10 AI_Player.update()	update
2017-01-03 00:04:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:04:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:04:10 AI_Player.update()	Search took213ms
2017-01-03 00:04:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:10 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-03 00:04:10 AI_Player.update()		101,	110,	1010,	1001,	1010,	101,	1101
2017-01-03 00:04:10 AI_Player.update()		1110,	110,	1110,	1011,	111,	110,	1011
2017-01-03 00:04:10 AI_Player.update()		101,	101,	101,	11,	101,	110,	101
2017-01-03 00:04:10 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-03 00:04:10 AI_Player.update()		1010,	101,	1010,	1010,	1010,	1100,	1110
2017-01-03 00:04:10 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-03 00:04:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:04:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:04:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 00:04:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:11 AI_Player.update()	update
2017-01-03 00:04:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:04:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:04:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:04:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:04:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:04:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:11 GameBoard.setupTreasurePanel()	1 1
2017-01-03 00:04:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:12 AI_Player.update()	update
2017-01-03 00:04:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:04:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:04:12 AI_Player.update()	Search took175ms
2017-01-03 00:04:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:12 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-03 00:04:12 AI_Player.update()		101,	1010,	1010,	1001,	1010,	101,	1101
2017-01-03 00:04:12 AI_Player.update()		1110,	110,	1110,	1011,	111,	110,	1011
2017-01-03 00:04:12 AI_Player.update()		101,	110,	101,	11,	101,	110,	101
2017-01-03 00:04:12 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-03 00:04:12 AI_Player.update()		1010,	101,	1010,	1010,	1010,	1100,	1110
2017-01-03 00:04:12 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-03 00:04:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:04:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:04:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 00:04:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:13 AI_Player.update()	update
2017-01-03 00:04:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:04:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:04:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:04:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:04:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:13 GameBoard.setupTreasurePanel()	1 1
2017-01-03 00:04:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:14 AI_Player.update()	update
2017-01-03 00:04:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:04:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:04:14 AI_Player.update()	Search took280ms
2017-01-03 00:04:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:14 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-03 00:04:14 AI_Player.update()		101,	1010,	1010,	1001,	1010,	110,	1101
2017-01-03 00:04:14 AI_Player.update()		1110,	110,	1110,	1011,	111,	110,	1011
2017-01-03 00:04:14 AI_Player.update()		101,	110,	101,	11,	101,	1010,	101
2017-01-03 00:04:14 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-03 00:04:14 AI_Player.update()		1010,	101,	1010,	1010,	1010,	110,	1110
2017-01-03 00:04:14 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-03 00:04:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:04:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:04:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 00:04:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:15 AI_Player.update()	update
2017-01-03 00:04:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:04:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:04:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:04:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:04:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:04:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 00:04:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:16 AI_Player.update()	update
2017-01-03 00:04:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:04:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:04:17 AI_Player.update()	Search took226ms
2017-01-03 00:04:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:17 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-03 00:04:17 AI_Player.update()		1010,	1010,	1001,	1010,	110,	1101,	101
2017-01-03 00:04:17 AI_Player.update()		1110,	110,	1110,	1011,	111,	110,	1011
2017-01-03 00:04:17 AI_Player.update()		101,	110,	101,	11,	101,	1010,	101
2017-01-03 00:04:17 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-03 00:04:17 AI_Player.update()		1010,	101,	1010,	1010,	1010,	110,	1110
2017-01-03 00:04:17 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-03 00:04:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:04:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:04:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 00:04:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:18 AI_Player.update()	update
2017-01-03 00:04:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:04:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:04:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:04:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:04:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 00:04:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 00:04:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 00:04:18 GameBoard.setupTreasurePanel()	adding book
2017-01-03 00:04:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 00:04:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 00:04:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 00:04:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 00:04:18 GameBoard.setupTreasurePanel()	adding map
2017-01-03 00:04:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 00:04:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 00:04:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 00:04:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 00:04:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:19 AI_Player.update()	update
2017-01-03 00:04:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:04:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:04:19 AI_Player.update()	Search took830ms
2017-01-03 00:04:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:19 AI_Player.update()		110,	101,	111,	110,	111,	1101,	11
2017-01-03 00:04:19 AI_Player.update()		1010,	1010,	1001,	1010,	110,	110,	101
2017-01-03 00:04:19 AI_Player.update()		1110,	110,	1110,	1011,	111,	1010,	1011
2017-01-03 00:04:19 AI_Player.update()		101,	110,	101,	11,	101,	1100,	101
2017-01-03 00:04:19 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-03 00:04:19 AI_Player.update()		1010,	101,	1010,	1010,	1010,	101,	1110
2017-01-03 00:04:19 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-03 00:04:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:04:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:04:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 00:04:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:21 AI_Player.update()	update
2017-01-03 00:04:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:04:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:04:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:04:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:04:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:04:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:21 GameBoard.setupTreasurePanel()	1 2
2017-01-03 00:04:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:22 AI_Player.update()	update
2017-01-03 00:04:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:04:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:04:22 AI_Player.update()	Search took106ms
2017-01-03 00:04:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:22 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 00:04:22 AI_Player.update()		1010,	1010,	1001,	110,	110,	110,	101
2017-01-03 00:04:22 AI_Player.update()		1110,	110,	1110,	1010,	111,	1010,	1011
2017-01-03 00:04:22 AI_Player.update()		101,	110,	101,	1011,	101,	1100,	101
2017-01-03 00:04:22 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 00:04:22 AI_Player.update()		1010,	101,	1010,	1010,	1010,	101,	1110
2017-01-03 00:04:22 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-03 00:04:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:04:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:04:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:22 GameBoard.setupTreasurePanel()	1 2
2017-01-03 00:04:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:23 AI_Player.update()	update
2017-01-03 00:04:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:04:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:04:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:04:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:04:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:23 GameBoard.setupTreasurePanel()	1 2
2017-01-03 00:04:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:24 AI_Player.update()	update
2017-01-03 00:04:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:04:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:04:24 AI_Player.update()	Search took350ms
2017-01-03 00:04:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:24 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 00:04:24 AI_Player.update()		1010,	1010,	1001,	110,	110,	110,	101
2017-01-03 00:04:24 AI_Player.update()		1110,	110,	1110,	1010,	111,	1010,	1011
2017-01-03 00:04:24 AI_Player.update()		101,	110,	101,	1011,	101,	1100,	101
2017-01-03 00:04:24 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 00:04:24 AI_Player.update()		1110,	1010,	101,	1010,	1010,	1010,	101
2017-01-03 00:04:24 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-03 00:04:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:04:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:04:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 00:04:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:25 AI_Player.update()	update
2017-01-03 00:04:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:04:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:04:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:04:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:04:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:04:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:25 GameBoard.setupTreasurePanel()	2 2
2017-01-03 00:04:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 00:04:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 00:04:25 GameBoard.setupTreasurePanel()	adding book
2017-01-03 00:04:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 00:04:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 00:04:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 00:04:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 00:04:25 GameBoard.setupTreasurePanel()	adding map
2017-01-03 00:04:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 00:04:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 00:04:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 00:04:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 00:04:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:26 AI_Player.update()	update
2017-01-03 00:04:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:04:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:04:26 AI_Player.update()	Search took218ms
2017-01-03 00:04:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:26 AI_Player.update()		110,	101,	111,	110,	111,	1101,	11
2017-01-03 00:04:26 AI_Player.update()		1010,	1010,	1001,	1010,	110,	110,	101
2017-01-03 00:04:26 AI_Player.update()		1110,	110,	1110,	1011,	111,	1010,	1011
2017-01-03 00:04:26 AI_Player.update()		101,	110,	101,	11,	101,	1100,	101
2017-01-03 00:04:26 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-03 00:04:26 AI_Player.update()		1110,	1010,	101,	1010,	1010,	1010,	101
2017-01-03 00:04:26 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-03 00:04:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:04:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:04:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:26 GameBoard.setupTreasurePanel()	2 2
2017-01-03 00:04:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:27 AI_Player.update()	update
2017-01-03 00:04:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:04:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:04:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:04:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:04:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:27 GameBoard.setupTreasurePanel()	2 2
2017-01-03 00:04:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:28 AI_Player.update()	update
2017-01-03 00:04:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:04:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:04:28 AI_Player.update()	Search took189ms
2017-01-03 00:04:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:28 AI_Player.update()		110,	101,	111,	110,	111,	1101,	11
2017-01-03 00:04:28 AI_Player.update()		1010,	1010,	1001,	1010,	110,	110,	101
2017-01-03 00:04:28 AI_Player.update()		1110,	110,	1110,	1011,	111,	1010,	1011
2017-01-03 00:04:28 AI_Player.update()		101,	110,	101,	11,	101,	1100,	101
2017-01-03 00:04:28 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-03 00:04:28 AI_Player.update()		1010,	101,	1010,	1010,	1010,	101,	1110
2017-01-03 00:04:28 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-03 00:04:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:04:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:04:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:28 GameBoard.setupTreasurePanel()	2 2
2017-01-03 00:04:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:29 AI_Player.update()	update
2017-01-03 00:04:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:04:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:04:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:04:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:04:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:04:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:29 GameBoard.setupTreasurePanel()	2 2
2017-01-03 00:04:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:30 AI_Player.update()	update
2017-01-03 00:04:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:04:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:04:31 AI_Player.update()	Search took855ms
2017-01-03 00:04:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:31 AI_Player.update()		110,	101,	111,	110,	111,	1101,	11
2017-01-03 00:04:31 AI_Player.update()		1010,	1010,	1001,	1010,	110,	110,	101
2017-01-03 00:04:31 AI_Player.update()		1110,	110,	1110,	1011,	111,	1010,	1011
2017-01-03 00:04:31 AI_Player.update()		101,	110,	101,	11,	101,	1100,	101
2017-01-03 00:04:31 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-03 00:04:31 AI_Player.update()		1110,	1010,	101,	1010,	1010,	1010,	101
2017-01-03 00:04:31 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-03 00:04:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:04:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:04:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:31 GameBoard.setupTreasurePanel()	2 2
2017-01-03 00:04:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:32 AI_Player.update()	update
2017-01-03 00:04:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:04:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:04:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:04:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:04:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:32 GameBoard.setupTreasurePanel()	2 2
2017-01-03 00:04:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:33 AI_Player.update()	update
2017-01-03 00:04:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:04:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:04:34 AI_Player.update()	Search took418ms
2017-01-03 00:04:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:34 AI_Player.update()		110,	101,	111,	1010,	111,	1101,	11
2017-01-03 00:04:34 AI_Player.update()		1010,	1010,	1001,	1011,	110,	110,	101
2017-01-03 00:04:34 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-03 00:04:34 AI_Player.update()		101,	110,	101,	1010,	101,	1100,	101
2017-01-03 00:04:34 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-03 00:04:34 AI_Player.update()		1110,	1010,	101,	101,	1010,	1010,	101
2017-01-03 00:04:34 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 00:04:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:04:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:04:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:34 GameBoard.setupTreasurePanel()	2 2
2017-01-03 00:04:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:35 AI_Player.update()	update
2017-01-03 00:04:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:04:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:04:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:04:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:04:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:04:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:35 GameBoard.setupTreasurePanel()	3 2
2017-01-03 00:04:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 00:04:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 00:04:35 GameBoard.setupTreasurePanel()	adding book
2017-01-03 00:04:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 00:04:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 00:04:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 00:04:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 00:04:35 GameBoard.setupTreasurePanel()	adding map
2017-01-03 00:04:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 00:04:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 00:04:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 00:04:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 00:04:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:36 AI_Player.update()	update
2017-01-03 00:04:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:04:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:04:36 AI_Player.update()	Search took229ms
2017-01-03 00:04:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:36 AI_Player.update()		110,	1010,	111,	1010,	111,	1101,	11
2017-01-03 00:04:36 AI_Player.update()		1010,	110,	1001,	1011,	110,	110,	101
2017-01-03 00:04:36 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-03 00:04:36 AI_Player.update()		101,	101,	101,	1010,	101,	1100,	101
2017-01-03 00:04:36 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	110,	1011
2017-01-03 00:04:36 AI_Player.update()		1110,	101,	101,	101,	1010,	1010,	101
2017-01-03 00:04:36 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 00:04:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:04:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:04:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:36 GameBoard.setupTreasurePanel()	3 2
2017-01-03 00:04:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:37 AI_Player.update()	update
2017-01-03 00:04:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:04:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:04:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:04:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:04:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:37 GameBoard.setupTreasurePanel()	3 2
2017-01-03 00:04:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:38 AI_Player.update()	update
2017-01-03 00:04:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:04:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:04:38 AI_Player.update()	Search took181ms
2017-01-03 00:04:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:38 AI_Player.update()		110,	101,	111,	1010,	111,	1101,	11
2017-01-03 00:04:38 AI_Player.update()		1010,	1010,	1001,	1011,	110,	110,	101
2017-01-03 00:04:38 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-03 00:04:38 AI_Player.update()		101,	110,	101,	1010,	101,	1100,	101
2017-01-03 00:04:38 AI_Player.update()		1110,	101,	1101,	1010,	1011,	110,	1011
2017-01-03 00:04:38 AI_Player.update()		1110,	1010,	101,	101,	1010,	1010,	101
2017-01-03 00:04:38 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 00:04:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:04:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:04:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:38 GameBoard.setupTreasurePanel()	3 2
2017-01-03 00:04:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:39 AI_Player.update()	update
2017-01-03 00:04:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:04:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:04:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:04:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:04:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:04:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:39 GameBoard.setupTreasurePanel()	3 2
2017-01-03 00:04:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:40 AI_Player.update()	update
2017-01-03 00:04:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:04:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:04:40 AI_Player.update()	Search took225ms
2017-01-03 00:04:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:40 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 00:04:40 AI_Player.update()		1010,	1010,	1001,	1011,	110,	1101,	101
2017-01-03 00:04:40 AI_Player.update()		1110,	110,	1110,	11,	111,	110,	1011
2017-01-03 00:04:40 AI_Player.update()		101,	110,	101,	1010,	101,	1010,	101
2017-01-03 00:04:40 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-03 00:04:40 AI_Player.update()		1110,	1010,	101,	101,	1010,	110,	101
2017-01-03 00:04:40 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-03 00:04:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:04:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:04:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:40 GameBoard.setupTreasurePanel()	3 2
2017-01-03 00:04:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:41 AI_Player.update()	update
2017-01-03 00:04:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:04:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:04:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:04:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:04:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:41 GameBoard.setupTreasurePanel()	3 2
2017-01-03 00:04:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:42 AI_Player.update()	update
2017-01-03 00:04:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:04:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:04:43 AI_Player.update()	Search took196ms
2017-01-03 00:04:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:43 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 00:04:43 AI_Player.update()		1010,	1010,	1001,	1011,	110,	1101,	101
2017-01-03 00:04:43 AI_Player.update()		1110,	110,	1110,	11,	111,	110,	1011
2017-01-03 00:04:43 AI_Player.update()		110,	101,	1010,	101,	1010,	101,	101
2017-01-03 00:04:43 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-03 00:04:43 AI_Player.update()		1110,	1010,	101,	101,	1010,	110,	101
2017-01-03 00:04:43 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-03 00:04:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:04:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:04:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:43 GameBoard.setupTreasurePanel()	3 2
2017-01-03 00:04:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:44 AI_Player.update()	update
2017-01-03 00:04:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:04:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:04:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:04:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:04:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:04:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:44 GameBoard.setupTreasurePanel()	3 2
2017-01-03 00:04:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:45 AI_Player.update()	update
2017-01-03 00:04:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:04:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:04:45 AI_Player.update()	Search took251ms
2017-01-03 00:04:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:45 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 00:04:45 AI_Player.update()		1010,	1010,	1001,	1011,	110,	1101,	101
2017-01-03 00:04:45 AI_Player.update()		1110,	110,	1110,	11,	111,	110,	1011
2017-01-03 00:04:45 AI_Player.update()		110,	101,	1010,	101,	1010,	101,	101
2017-01-03 00:04:45 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-03 00:04:45 AI_Player.update()		101,	1110,	1010,	101,	101,	1010,	110
2017-01-03 00:04:45 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-03 00:04:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:04:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:04:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:45 GameBoard.setupTreasurePanel()	3 2
2017-01-03 00:04:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:46 AI_Player.update()	update
2017-01-03 00:04:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:04:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:04:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:04:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:04:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:46 GameBoard.setupTreasurePanel()	3 3
2017-01-03 00:04:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 00:04:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 00:04:46 GameBoard.setupTreasurePanel()	adding book
2017-01-03 00:04:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 00:04:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 00:04:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 00:04:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 00:04:46 GameBoard.setupTreasurePanel()	adding map
2017-01-03 00:04:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 00:04:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 00:04:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 00:04:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 00:04:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:47 AI_Player.update()	update
2017-01-03 00:04:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:04:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:04:47 AI_Player.update()	Search took187ms
2017-01-03 00:04:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:47 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 00:04:47 AI_Player.update()		1010,	110,	1001,	1011,	110,	1101,	101
2017-01-03 00:04:47 AI_Player.update()		1110,	101,	1110,	11,	111,	110,	1011
2017-01-03 00:04:47 AI_Player.update()		110,	101,	1010,	101,	1010,	101,	101
2017-01-03 00:04:47 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1100,	1011
2017-01-03 00:04:47 AI_Player.update()		101,	101,	1010,	101,	101,	1010,	110
2017-01-03 00:04:47 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-03 00:04:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:04:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:04:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:47 GameBoard.setupTreasurePanel()	3 3
2017-01-03 00:04:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:48 AI_Player.update()	update
2017-01-03 00:04:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:04:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:04:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:04:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:04:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:04:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:48 GameBoard.setupTreasurePanel()	3 3
2017-01-03 00:04:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:49 AI_Player.update()	update
2017-01-03 00:04:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:04:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:04:49 AI_Player.update()	Search took55ms
2017-01-03 00:04:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:49 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 00:04:49 AI_Player.update()		1010,	110,	1001,	1011,	110,	1101,	101
2017-01-03 00:04:49 AI_Player.update()		1110,	101,	1110,	11,	111,	110,	1011
2017-01-03 00:04:49 AI_Player.update()		110,	101,	1010,	101,	1010,	101,	101
2017-01-03 00:04:49 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1100,	1011
2017-01-03 00:04:49 AI_Player.update()		101,	1010,	101,	101,	1010,	110,	101
2017-01-03 00:04:49 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-03 00:04:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:04:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:04:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:49 GameBoard.setupTreasurePanel()	3 3
2017-01-03 00:04:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:50 AI_Player.update()	update
2017-01-03 00:04:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:04:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:04:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:04:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:04:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:50 GameBoard.setupTreasurePanel()	3 3
2017-01-03 00:04:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:51 AI_Player.update()	update
2017-01-03 00:04:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:04:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:04:51 AI_Player.update()	Search took236ms
2017-01-03 00:04:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:51 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-03 00:04:51 AI_Player.update()		1010,	101,	1001,	1011,	110,	1101,	101
2017-01-03 00:04:51 AI_Player.update()		1110,	101,	1110,	11,	111,	110,	1011
2017-01-03 00:04:51 AI_Player.update()		110,	1110,	1010,	101,	1010,	101,	101
2017-01-03 00:04:51 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-03 00:04:51 AI_Player.update()		101,	101,	101,	101,	1010,	110,	101
2017-01-03 00:04:51 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1010,	1001
2017-01-03 00:04:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:04:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:04:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:51 GameBoard.setupTreasurePanel()	3 3
2017-01-03 00:04:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:52 AI_Player.update()	update
2017-01-03 00:04:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:04:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:04:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:04:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:04:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:04:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:52 GameBoard.setupTreasurePanel()	3 3
2017-01-03 00:04:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:53 AI_Player.update()	update
2017-01-03 00:04:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:04:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:04:54 AI_Player.update()	Search took199ms
2017-01-03 00:04:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:54 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-03 00:04:54 AI_Player.update()		1010,	101,	1001,	1011,	110,	1101,	101
2017-01-03 00:04:54 AI_Player.update()		1110,	101,	1110,	11,	111,	110,	1011
2017-01-03 00:04:54 AI_Player.update()		110,	1110,	1010,	101,	1010,	101,	101
2017-01-03 00:04:54 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-03 00:04:54 AI_Player.update()		101,	101,	101,	1010,	110,	101,	101
2017-01-03 00:04:54 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1010,	1001
2017-01-03 00:04:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:04:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:04:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:54 GameBoard.setupTreasurePanel()	3 3
2017-01-03 00:04:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:55 AI_Player.update()	update
2017-01-03 00:04:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:04:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:04:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:04:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:04:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:55 GameBoard.setupTreasurePanel()	3 4
2017-01-03 00:04:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 00:04:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 00:04:55 GameBoard.setupTreasurePanel()	adding book
2017-01-03 00:04:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 00:04:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 00:04:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 00:04:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 00:04:55 GameBoard.setupTreasurePanel()	adding map
2017-01-03 00:04:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 00:04:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 00:04:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 00:04:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 00:04:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:56 AI_Player.update()	update
2017-01-03 00:04:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:04:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:04:56 AI_Player.update()	Search took95ms
2017-01-03 00:04:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:56 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 00:04:56 AI_Player.update()		1010,	101,	1001,	1011,	110,	1101,	101
2017-01-03 00:04:56 AI_Player.update()		1110,	1110,	1110,	11,	111,	110,	1011
2017-01-03 00:04:56 AI_Player.update()		110,	1010,	1010,	101,	1010,	101,	101
2017-01-03 00:04:56 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-03 00:04:56 AI_Player.update()		101,	1010,	101,	1010,	110,	101,	101
2017-01-03 00:04:56 AI_Player.update()		1100,	110,	1101,	110,	1101,	1010,	1001
2017-01-03 00:04:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:04:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:04:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:56 GameBoard.setupTreasurePanel()	3 4
2017-01-03 00:04:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:57 AI_Player.update()	update
2017-01-03 00:04:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:04:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:04:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:04:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:04:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:04:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:57 GameBoard.setupTreasurePanel()	3 4
2017-01-03 00:04:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:58 AI_Player.update()	update
2017-01-03 00:04:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:04:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:04:58 AI_Player.update()	Search took131ms
2017-01-03 00:04:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:04:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:58 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 00:04:58 AI_Player.update()		1010,	1110,	1001,	1011,	110,	1101,	101
2017-01-03 00:04:58 AI_Player.update()		1110,	1010,	1110,	11,	111,	110,	1011
2017-01-03 00:04:58 AI_Player.update()		110,	101,	1010,	101,	1010,	101,	101
2017-01-03 00:04:58 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-03 00:04:58 AI_Player.update()		101,	110,	101,	1010,	110,	101,	101
2017-01-03 00:04:58 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-03 00:04:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:04:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:04:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:04:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:58 GameBoard.setupTreasurePanel()	3 4
2017-01-03 00:04:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:04:59 AI_Player.update()	update
2017-01-03 00:04:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:04:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:04:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:04:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:04:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:04:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:04:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:04:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:04:59 GameBoard.setupTreasurePanel()	3 5
2017-01-03 00:04:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 00:04:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 00:04:59 GameBoard.setupTreasurePanel()	adding book
2017-01-03 00:04:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 00:04:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 00:04:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 00:04:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 00:04:59 GameBoard.setupTreasurePanel()	adding map
2017-01-03 00:04:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 00:04:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 00:04:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 00:04:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 00:05:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:00 AI_Player.update()	update
2017-01-03 00:05:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:05:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:05:00 AI_Player.update()	Search took149ms
2017-01-03 00:05:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:05:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:00 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-03 00:05:00 AI_Player.update()		1010,	1010,	1001,	1011,	110,	1101,	101
2017-01-03 00:05:00 AI_Player.update()		1110,	101,	1110,	11,	111,	110,	1011
2017-01-03 00:05:00 AI_Player.update()		110,	1010,	1010,	101,	1010,	101,	101
2017-01-03 00:05:00 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1100,	1011
2017-01-03 00:05:00 AI_Player.update()		101,	101,	101,	1010,	110,	101,	101
2017-01-03 00:05:00 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-03 00:05:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:05:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:05:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:00 GameBoard.setupTreasurePanel()	3 5
2017-01-03 00:05:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:01 AI_Player.update()	update
2017-01-03 00:05:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:05:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:05:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:05:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:05:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:05:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:01 GameBoard.setupTreasurePanel()	3 5
2017-01-03 00:05:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:02 AI_Player.update()	update
2017-01-03 00:05:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:05:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:05:02 AI_Player.update()	Search took117ms
2017-01-03 00:05:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:05:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:02 AI_Player.update()		110,	1110,	111,	110,	111,	101,	11
2017-01-03 00:05:02 AI_Player.update()		1010,	1010,	1001,	1010,	110,	1101,	101
2017-01-03 00:05:02 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 00:05:02 AI_Player.update()		110,	1010,	1010,	11,	1010,	101,	101
2017-01-03 00:05:02 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-03 00:05:02 AI_Player.update()		101,	101,	101,	1010,	110,	101,	101
2017-01-03 00:05:02 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-03 00:05:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:05:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:05:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:02 GameBoard.setupTreasurePanel()	3 5
2017-01-03 00:05:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:03 AI_Player.update()	update
2017-01-03 00:05:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:05:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:05:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:05:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:05:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:03 GameBoard.setupTreasurePanel()	3 5
2017-01-03 00:05:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:04 AI_Player.update()	update
2017-01-03 00:05:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:05:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:05:04 AI_Player.update()	Search took77ms
2017-01-03 00:05:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:05:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:04 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-03 00:05:04 AI_Player.update()		1010,	1010,	1001,	110,	110,	1101,	101
2017-01-03 00:05:04 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-03 00:05:04 AI_Player.update()		110,	1010,	1010,	1011,	1010,	101,	101
2017-01-03 00:05:04 AI_Player.update()		1110,	110,	1101,	11,	1011,	1100,	1011
2017-01-03 00:05:04 AI_Player.update()		101,	101,	101,	101,	110,	101,	101
2017-01-03 00:05:04 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-03 00:05:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:05:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:05:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:04 GameBoard.setupTreasurePanel()	3 5
2017-01-03 00:05:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:05 AI_Player.update()	update
2017-01-03 00:05:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:05:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:05:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:05:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:05:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:05:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:05 GameBoard.setupTreasurePanel()	4 5
2017-01-03 00:05:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 00:05:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 00:05:05 GameBoard.setupTreasurePanel()	adding book
2017-01-03 00:05:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 00:05:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 00:05:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 00:05:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 00:05:05 GameBoard.setupTreasurePanel()	adding map
2017-01-03 00:05:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 00:05:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 00:05:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 00:05:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 00:05:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:06 AI_Player.update()	update
2017-01-03 00:05:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:05:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:05:06 AI_Player.update()	Search took113ms
2017-01-03 00:05:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:05:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:06 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-03 00:05:06 AI_Player.update()		1010,	1010,	1001,	1010,	110,	1101,	101
2017-01-03 00:05:06 AI_Player.update()		1110,	101,	1110,	110,	111,	110,	1011
2017-01-03 00:05:06 AI_Player.update()		110,	1010,	1010,	1010,	1010,	101,	101
2017-01-03 00:05:06 AI_Player.update()		1110,	110,	1101,	1011,	1011,	1100,	1011
2017-01-03 00:05:06 AI_Player.update()		101,	101,	101,	11,	110,	101,	101
2017-01-03 00:05:06 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-03 00:05:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:05:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:05:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:06 GameBoard.setupTreasurePanel()	4 5
2017-01-03 00:05:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:07 AI_Player.update()	update
2017-01-03 00:05:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:05:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:05:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:05:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:05:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:07 GameBoard.setupTreasurePanel()	4 5
2017-01-03 00:05:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:08 AI_Player.update()	update
2017-01-03 00:05:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:05:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:05:09 AI_Player.update()	Search took319ms
2017-01-03 00:05:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:05:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:09 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 00:05:09 AI_Player.update()		1010,	101,	1001,	1010,	110,	1101,	101
2017-01-03 00:05:09 AI_Player.update()		1110,	1010,	1110,	110,	111,	110,	1011
2017-01-03 00:05:09 AI_Player.update()		110,	110,	1010,	1010,	1010,	101,	101
2017-01-03 00:05:09 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1100,	1011
2017-01-03 00:05:09 AI_Player.update()		101,	101,	101,	11,	110,	101,	101
2017-01-03 00:05:09 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1010,	1001
2017-01-03 00:05:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:05:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:05:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:09 GameBoard.setupTreasurePanel()	4 5
2017-01-03 00:05:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:10 AI_Player.update()	update
2017-01-03 00:05:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:05:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:05:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:05:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:05:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:05:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:10 GameBoard.setupTreasurePanel()	4 5
2017-01-03 00:05:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:11 AI_Player.update()	update
2017-01-03 00:05:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:05:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:05:11 AI_Player.update()	Search took73ms
2017-01-03 00:05:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:05:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:11 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-03 00:05:11 AI_Player.update()		1010,	101,	1001,	1010,	110,	1101,	101
2017-01-03 00:05:11 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-03 00:05:11 AI_Player.update()		110,	110,	1010,	110,	1010,	101,	101
2017-01-03 00:05:11 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-03 00:05:11 AI_Player.update()		101,	101,	101,	1011,	110,	101,	101
2017-01-03 00:05:11 AI_Player.update()		1100,	1110,	1101,	11,	1101,	1010,	1001
2017-01-03 00:05:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:05:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:05:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:11 GameBoard.setupTreasurePanel()	4 5
2017-01-03 00:05:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:12 AI_Player.update()	update
2017-01-03 00:05:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:05:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:05:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:05:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:05:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:12 GameBoard.setupTreasurePanel()	4 5
2017-01-03 00:05:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:13 AI_Player.update()	update
2017-01-03 00:05:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:05:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:05:13 AI_Player.update()	Search took120ms
2017-01-03 00:05:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:05:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:13 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 00:05:13 AI_Player.update()		1010,	101,	1001,	1010,	110,	1101,	101
2017-01-03 00:05:13 AI_Player.update()		1110,	1010,	1110,	110,	111,	110,	1011
2017-01-03 00:05:13 AI_Player.update()		110,	110,	1010,	1010,	1010,	101,	101
2017-01-03 00:05:13 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1100,	1011
2017-01-03 00:05:13 AI_Player.update()		101,	101,	101,	11,	110,	101,	101
2017-01-03 00:05:13 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1010,	1001
2017-01-03 00:05:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:05:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:05:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:13 GameBoard.setupTreasurePanel()	4 5
2017-01-03 00:05:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:14 AI_Player.update()	update
2017-01-03 00:05:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:05:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:05:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:05:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:05:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:05:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:14 GameBoard.setupTreasurePanel()	4 5
2017-01-03 00:05:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:15 AI_Player.update()	update
2017-01-03 00:05:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:05:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:05:15 AI_Player.update()	Search took51ms
2017-01-03 00:05:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:05:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:15 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 00:05:15 AI_Player.update()		1010,	101,	1001,	110,	110,	1101,	101
2017-01-03 00:05:15 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-03 00:05:15 AI_Player.update()		110,	110,	1010,	1011,	1010,	101,	101
2017-01-03 00:05:15 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-03 00:05:15 AI_Player.update()		101,	101,	101,	101,	110,	101,	101
2017-01-03 00:05:15 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1010,	1001
2017-01-03 00:05:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:05:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:05:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:15 GameBoard.setupTreasurePanel()	4 5
2017-01-03 00:05:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:16 AI_Player.update()	update
2017-01-03 00:05:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:05:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:05:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:05:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:05:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:16 GameBoard.setupTreasurePanel()	4 6
2017-01-03 00:05:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 00:05:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 00:05:16 GameBoard.setupTreasurePanel()	adding book
2017-01-03 00:05:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 00:05:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 00:05:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 00:05:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 00:05:16 GameBoard.setupTreasurePanel()	adding map
2017-01-03 00:05:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 00:05:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 00:05:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 00:05:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 00:05:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:17 AI_Player.update()	update
2017-01-03 00:05:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:05:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:05:17 AI_Player.update()	Search took188ms
2017-01-03 00:05:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:05:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:17 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-03 00:05:17 AI_Player.update()		1010,	1010,	1001,	110,	110,	1101,	101
2017-01-03 00:05:17 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-03 00:05:17 AI_Player.update()		110,	1010,	1010,	1011,	1010,	101,	101
2017-01-03 00:05:17 AI_Player.update()		1110,	110,	1101,	11,	1011,	1100,	1011
2017-01-03 00:05:17 AI_Player.update()		101,	101,	101,	101,	110,	101,	101
2017-01-03 00:05:17 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-03 00:05:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:05:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:05:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:17 GameBoard.setupTreasurePanel()	4 6
2017-01-03 00:05:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:18 AI_Player.update()	update
2017-01-03 00:05:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:05:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:05:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:05:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:05:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:05:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:18 GameBoard.setupTreasurePanel()	5 6
2017-01-03 00:05:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 00:05:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 00:05:18 GameBoard.setupTreasurePanel()	adding book
2017-01-03 00:05:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 00:05:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 00:05:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 00:05:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 00:05:18 GameBoard.setupTreasurePanel()	adding map
2017-01-03 00:05:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 00:05:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 00:05:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 00:05:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 00:05:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:19 AI_Player.update()	update
2017-01-03 00:05:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:05:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:05:19 AI_Player.update()	Search took73ms
2017-01-03 00:05:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:05:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:19 AI_Player.update()		110,	1110,	111,	110,	111,	101,	11
2017-01-03 00:05:19 AI_Player.update()		1010,	1010,	1001,	1010,	110,	1101,	101
2017-01-03 00:05:19 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 00:05:19 AI_Player.update()		110,	1010,	1010,	11,	1010,	101,	101
2017-01-03 00:05:19 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-03 00:05:19 AI_Player.update()		101,	101,	101,	1010,	110,	101,	101
2017-01-03 00:05:19 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-03 00:05:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:05:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:05:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:19 GameBoard.setupTreasurePanel()	5 6
2017-01-03 00:05:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:20 AI_Player.update()	update
2017-01-03 00:05:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:05:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:05:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:05:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:05:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:20 GameBoard.setupTreasurePanel()	5 6
2017-01-03 00:05:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:21 AI_Player.update()	update
2017-01-03 00:05:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:05:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:05:21 AI_Player.update()	Search took81ms
2017-01-03 00:05:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:05:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:21 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-03 00:05:21 AI_Player.update()		1010,	101,	1001,	1010,	110,	1101,	101
2017-01-03 00:05:21 AI_Player.update()		1110,	1010,	1110,	1011,	111,	110,	1011
2017-01-03 00:05:21 AI_Player.update()		110,	110,	1010,	11,	1010,	101,	101
2017-01-03 00:05:21 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-03 00:05:21 AI_Player.update()		101,	101,	101,	1010,	110,	101,	101
2017-01-03 00:05:21 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1010,	1001
2017-01-03 00:05:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:05:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:05:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:21 GameBoard.setupTreasurePanel()	5 6
2017-01-03 00:05:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:22 AI_Player.update()	update
2017-01-03 00:05:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:05:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:05:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:05:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:05:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:05:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:22 GameBoard.setupTreasurePanel()	5 6
2017-01-03 00:05:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:23 AI_Player.update()	update
2017-01-03 00:05:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:05:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:05:23 AI_Player.update()	Search took31ms
2017-01-03 00:05:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:05:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:23 AI_Player.update()		110,	1110,	111,	110,	111,	101,	11
2017-01-03 00:05:23 AI_Player.update()		1010,	1010,	1001,	1010,	110,	1101,	101
2017-01-03 00:05:23 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 00:05:23 AI_Player.update()		110,	1010,	1010,	11,	1010,	101,	101
2017-01-03 00:05:23 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-03 00:05:23 AI_Player.update()		101,	101,	101,	1010,	110,	101,	101
2017-01-03 00:05:23 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-03 00:05:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:05:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:05:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:23 GameBoard.setupTreasurePanel()	5 6
2017-01-03 00:05:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:24 AI_Player.update()	update
2017-01-03 00:05:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:05:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:05:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:05:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:05:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:24 GameBoard.setupTreasurePanel()	5 6
2017-01-03 00:05:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:25 AI_Player.update()	update
2017-01-03 00:05:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:05:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:05:26 AI_Player.update()	Search took415ms
2017-01-03 00:05:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:05:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:26 AI_Player.update()		110,	1110,	111,	110,	111,	101,	11
2017-01-03 00:05:26 AI_Player.update()		1010,	1010,	1001,	1010,	110,	1101,	101
2017-01-03 00:05:26 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 00:05:26 AI_Player.update()		101,	110,	1010,	1010,	11,	1010,	101
2017-01-03 00:05:26 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-03 00:05:26 AI_Player.update()		101,	101,	101,	1010,	110,	101,	101
2017-01-03 00:05:26 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-03 00:05:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:05:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:05:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:26 GameBoard.setupTreasurePanel()	5 6
2017-01-03 00:05:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:27 AI_Player.update()	update
2017-01-03 00:05:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:05:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:05:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:05:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:05:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:05:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:27 GameBoard.setupTreasurePanel()	5 6
2017-01-03 00:05:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:28 AI_Player.update()	update
2017-01-03 00:05:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:05:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:05:28 AI_Player.update()	Search took194ms
2017-01-03 00:05:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:05:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:28 AI_Player.update()		110,	1110,	111,	110,	111,	101,	11
2017-01-03 00:05:28 AI_Player.update()		101,	1010,	1010,	1001,	1010,	110,	1101
2017-01-03 00:05:28 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 00:05:28 AI_Player.update()		101,	110,	1010,	1010,	11,	1010,	101
2017-01-03 00:05:28 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-03 00:05:28 AI_Player.update()		101,	101,	101,	1010,	110,	101,	101
2017-01-03 00:05:28 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-03 00:05:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:05:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:05:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:28 GameBoard.setupTreasurePanel()	5 6
2017-01-03 00:05:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:29 AI_Player.update()	update
2017-01-03 00:05:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:05:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:05:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:05:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:05:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:29 GameBoard.setupTreasurePanel()	5 6
2017-01-03 00:05:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:30 AI_Player.update()	update
2017-01-03 00:05:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:05:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:05:30 AI_Player.update()	Search took348ms
2017-01-03 00:05:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:05:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:30 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-03 00:05:30 AI_Player.update()		101,	101,	1010,	1001,	1010,	110,	1101
2017-01-03 00:05:30 AI_Player.update()		1110,	110,	1110,	1011,	111,	110,	1011
2017-01-03 00:05:30 AI_Player.update()		101,	110,	1010,	1010,	11,	1010,	101
2017-01-03 00:05:30 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-03 00:05:30 AI_Player.update()		101,	101,	101,	1010,	110,	101,	101
2017-01-03 00:05:30 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1010,	1001
2017-01-03 00:05:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:05:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:05:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:30 GameBoard.setupTreasurePanel()	5 6
2017-01-03 00:05:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:31 AI_Player.update()	update
2017-01-03 00:05:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:05:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:05:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:05:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:05:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:05:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:31 GameBoard.setupTreasurePanel()	5 6
2017-01-03 00:05:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:32 AI_Player.update()	update
2017-01-03 00:05:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:05:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:05:33 AI_Player.update()	Search took138ms
2017-01-03 00:05:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:05:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:33 AI_Player.update()		110,	1010,	111,	1001,	111,	101,	11
2017-01-03 00:05:33 AI_Player.update()		101,	101,	1010,	1011,	1010,	110,	1101
2017-01-03 00:05:33 AI_Player.update()		1110,	110,	1110,	1010,	111,	110,	1011
2017-01-03 00:05:33 AI_Player.update()		101,	110,	1010,	101,	11,	1010,	101
2017-01-03 00:05:33 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-03 00:05:33 AI_Player.update()		101,	101,	101,	1010,	110,	101,	101
2017-01-03 00:05:33 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1010,	1001
2017-01-03 00:05:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:05:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:05:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:33 GameBoard.setupTreasurePanel()	5 6
2017-01-03 00:05:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:34 AI_Player.update()	update
2017-01-03 00:05:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:05:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:05:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:05:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:05:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:34 GameBoard.setupTreasurePanel()	5 6
2017-01-03 00:05:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:35 AI_Player.update()	update
2017-01-03 00:05:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:05:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:05:35 AI_Player.update()	Search took87ms
2017-01-03 00:05:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:05:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:35 AI_Player.update()		110,	1010,	111,	1011,	111,	101,	11
2017-01-03 00:05:35 AI_Player.update()		101,	101,	1010,	1010,	1010,	110,	1101
2017-01-03 00:05:35 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-03 00:05:35 AI_Player.update()		101,	110,	1010,	1010,	11,	1010,	101
2017-01-03 00:05:35 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-03 00:05:35 AI_Player.update()		101,	101,	101,	110,	110,	101,	101
2017-01-03 00:05:35 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1010,	1001
2017-01-03 00:05:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:05:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:05:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:35 GameBoard.setupTreasurePanel()	5 6
2017-01-03 00:05:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:36 AI_Player.update()	update
2017-01-03 00:05:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:05:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:05:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:05:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:05:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:05:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:36 GameBoard.setupTreasurePanel()	5 6
2017-01-03 00:05:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:37 AI_Player.update()	update
2017-01-03 00:05:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:05:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:05:37 AI_Player.update()	Search took101ms
2017-01-03 00:05:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:05:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:37 AI_Player.update()		110,	101,	111,	1011,	111,	101,	11
2017-01-03 00:05:37 AI_Player.update()		101,	110,	1010,	1010,	1010,	110,	1101
2017-01-03 00:05:37 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-03 00:05:37 AI_Player.update()		101,	101,	1010,	1010,	11,	1010,	101
2017-01-03 00:05:37 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-03 00:05:37 AI_Player.update()		101,	1110,	101,	110,	110,	101,	101
2017-01-03 00:05:37 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1010,	1001
2017-01-03 00:05:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:05:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:05:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:37 GameBoard.setupTreasurePanel()	5 6
2017-01-03 00:05:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:38 AI_Player.update()	update
2017-01-03 00:05:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:05:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:05:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:05:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:05:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:38 GameBoard.setupTreasurePanel()	5 6
2017-01-03 00:05:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:39 AI_Player.update()	update
2017-01-03 00:05:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:05:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:05:39 AI_Player.update()	Search took298ms
2017-01-03 00:05:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:05:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:39 AI_Player.update()		110,	101,	111,	1011,	111,	101,	11
2017-01-03 00:05:39 AI_Player.update()		101,	110,	1010,	1010,	1010,	110,	1101
2017-01-03 00:05:39 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-03 00:05:39 AI_Player.update()		101,	101,	101,	1010,	1010,	11,	1010
2017-01-03 00:05:39 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-03 00:05:39 AI_Player.update()		101,	1110,	101,	110,	110,	101,	101
2017-01-03 00:05:39 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1010,	1001
2017-01-03 00:05:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:05:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:05:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:39 GameBoard.setupTreasurePanel()	5 6
2017-01-03 00:05:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:40 AI_Player.update()	update
2017-01-03 00:05:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:05:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:05:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:05:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:05:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:05:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:40 GameBoard.setupTreasurePanel()	6 6
2017-01-03 00:05:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 00:05:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 00:05:40 GameBoard.setupTreasurePanel()	adding book
2017-01-03 00:05:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 00:05:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 00:05:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 00:05:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 00:05:40 GameBoard.setupTreasurePanel()	adding map
2017-01-03 00:05:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 00:05:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 00:05:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 00:05:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 00:05:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:41 AI_Player.update()	update
2017-01-03 00:05:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 00:05:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 00:05:41 AI_Player.update()	Search took97ms
2017-01-03 00:05:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:05:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:41 AI_Player.update()		110,	101,	111,	1011,	111,	110,	11
2017-01-03 00:05:41 AI_Player.update()		101,	110,	1010,	1010,	1010,	110,	1101
2017-01-03 00:05:41 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-03 00:05:41 AI_Player.update()		101,	101,	101,	1010,	1010,	1100,	1010
2017-01-03 00:05:41 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-03 00:05:41 AI_Player.update()		101,	1110,	101,	110,	110,	1010,	101
2017-01-03 00:05:41 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-03 00:05:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:05:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:05:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:41 GameBoard.setupTreasurePanel()	6 6
2017-01-03 00:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:42 AI_Player.update()	update
2017-01-03 00:05:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 00:05:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 00:05:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 00:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 00:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:42 GameBoard.setupTreasurePanel()	6 6
2017-01-03 00:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:43 AI_Player.update()	update
2017-01-03 00:05:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:05:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:05:43 AI_Player.update()	Search took99ms
2017-01-03 00:05:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:43 AI_Player.update()		110,	101,	111,	1011,	111,	110,	11
2017-01-03 00:05:43 AI_Player.update()		101,	110,	1010,	1010,	1010,	110,	1101
2017-01-03 00:05:43 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-03 00:05:43 AI_Player.update()		101,	101,	1010,	1010,	1100,	1010,	101
2017-01-03 00:05:43 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-03 00:05:43 AI_Player.update()		101,	1110,	101,	110,	110,	1010,	101
2017-01-03 00:05:43 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-03 00:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:43 GameBoard.setupTreasurePanel()	6 6
2017-01-03 00:05:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:44 AI_Player.update()	update
2017-01-03 00:05:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 00:05:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 00:05:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-03 00:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 00:05:44 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-03 00:05:44 AI_Player.update()	Player a has won!
2017-01-03 00:05:52 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 00:05:52 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 00:05:52 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 00:05:52 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-03 00:05:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:05:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:05:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:52 GameBoard.setupTreasurePanel()	1 1
2017-01-03 00:05:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 00:05:52 GameBoard.setupTreasurePanel()	adding book
2017-01-03 00:05:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 00:05:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 00:05:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 00:05:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 00:05:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 00:05:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 00:05:52 GameBoard.setupTreasurePanel()	adding map
2017-01-03 00:05:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 00:05:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 00:05:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 00:05:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 00:05:53 AI_Player.update()	update
2017-01-03 00:05:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 00:05:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-03 00:05:54 AI_Player.update()	Search took89ms
2017-01-03 00:05:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 00:05:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:54 AI_Player.update()		110,	1101,	111,	1001,	111,	101,	11
2017-01-03 00:05:54 AI_Player.update()		101,	1001,	1110,	101,	110,	1101,	111
2017-01-03 00:05:54 AI_Player.update()		1110,	1001,	1110,	11,	111,	1100,	1011
2017-01-03 00:05:54 AI_Player.update()		1010,	1001,	1110,	1100,	1100,	1010,	1101
2017-01-03 00:05:54 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-03 00:05:54 AI_Player.update()		101,	1100,	1100,	110,	1001,	1100,	1100
2017-01-03 00:05:54 AI_Player.update()		1100,	11,	1101,	11,	1101,	1001,	1001
2017-01-03 00:05:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 00:05:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 00:05:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 00:05:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 00:05:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 00:05:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 00:05:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 00:05:54 GameBoard.setupTreasurePanel()	1 1
