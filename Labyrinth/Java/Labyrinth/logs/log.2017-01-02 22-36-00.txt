2017-01-02 22:36:00 GameBoard.<init>()	Hello World!
2017-01-02 22:36:00 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-02 22:36:00 QueryProlog.initialise()	setup(h3/h3). suceeded
2017-01-02 22:36:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:00 GameBoard.setupBoardFromString()	Board created
2017-01-02 22:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:36:00 GameBoard.initialise()	[candle, book, keys, fairy, gem]
2017-01-02 22:36:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:36:00 GameBoard.initialise()	[map, crown, chest, helmet, sword]
2017-01-02 22:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:00 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-02 22:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:00 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:36:00 GameBoard.setupTreasurePanel()	null
2017-01-02 22:36:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:36:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:36:00 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:36:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:36:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:36:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:36:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:36:00 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:36:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:36:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:36:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:36:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:36:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:00 AI_Player.update()	update
2017-01-02 22:36:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:36:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:36:00 AI_Player.update()	Search took41ms
2017-01-02 22:36:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:00 AI_Player.update()		110,	11,	111,	1010,	111,	1100,	11
2017-01-02 22:36:00 AI_Player.update()		1010,	101,	11,	111,	101,	1010,	1010
2017-01-02 22:36:00 AI_Player.update()		1110,	1001,	1110,	101,	111,	1110,	1011
2017-01-02 22:36:00 AI_Player.update()		1110,	1011,	101,	111,	1001,	1100,	11
2017-01-02 22:36:00 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1001,	1011
2017-01-02 22:36:00 AI_Player.update()		101,	1100,	1100,	1010,	1100,	101,	101
2017-01-02 22:36:00 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-02 22:36:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:00 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:36:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:36:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:36:00 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:36:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:36:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:36:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:36:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:36:00 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:36:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:36:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:36:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:36:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:01 AI_Player.update()	update
2017-01-02 22:36:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:36:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:36:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:36:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:01 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:36:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:01 AI_Player.update()	update
2017-01-02 22:36:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:36:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:36:01 AI_Player.update()	Search took236ms
2017-01-02 22:36:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:01 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-02 22:36:01 AI_Player.update()		1010,	1001,	11,	111,	101,	1010,	1010
2017-01-02 22:36:01 AI_Player.update()		1110,	1011,	1110,	101,	111,	1110,	1011
2017-01-02 22:36:01 AI_Player.update()		1110,	101,	101,	111,	1001,	1100,	11
2017-01-02 22:36:01 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-02 22:36:01 AI_Player.update()		101,	101,	1100,	1010,	1100,	101,	101
2017-01-02 22:36:01 AI_Player.update()		1100,	11,	1101,	1010,	1101,	110,	1001
2017-01-02 22:36:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:01 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:02 AI_Player.update()	update
2017-01-02 22:36:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:36:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:36:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:36:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:02 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:36:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:02 AI_Player.update()	update
2017-01-02 22:36:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:36:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:36:03 AI_Player.update()	Search took456ms
2017-01-02 22:36:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:03 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-02 22:36:03 AI_Player.update()		1001,	11,	111,	101,	1010,	1010,	1010
2017-01-02 22:36:03 AI_Player.update()		1110,	1011,	1110,	101,	111,	1110,	1011
2017-01-02 22:36:03 AI_Player.update()		1110,	101,	101,	111,	1001,	1100,	11
2017-01-02 22:36:03 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-02 22:36:03 AI_Player.update()		101,	101,	1100,	1010,	1100,	101,	101
2017-01-02 22:36:03 AI_Player.update()		1100,	11,	1101,	1010,	1101,	110,	1001
2017-01-02 22:36:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:03 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:36:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:03 AI_Player.update()	update
2017-01-02 22:36:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:36:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:36:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:36:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:36:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:03 GameBoard.setupTreasurePanel()	2 1
2017-01-02 22:36:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:36:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:36:03 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:36:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:36:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:36:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:36:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:36:03 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:36:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:36:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:36:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:36:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:36:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:04 AI_Player.update()	update
2017-01-02 22:36:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:36:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:36:04 AI_Player.update()	Search took234ms
2017-01-02 22:36:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:04 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-02 22:36:04 AI_Player.update()		1001,	11,	111,	101,	1010,	1010,	1010
2017-01-02 22:36:04 AI_Player.update()		1110,	1011,	1110,	101,	111,	1110,	1011
2017-01-02 22:36:04 AI_Player.update()		11,	1110,	101,	101,	111,	1001,	1100
2017-01-02 22:36:04 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-02 22:36:04 AI_Player.update()		101,	101,	1100,	1010,	1100,	101,	101
2017-01-02 22:36:04 AI_Player.update()		1100,	11,	1101,	1010,	1101,	110,	1001
2017-01-02 22:36:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:04 GameBoard.setupTreasurePanel()	2 1
2017-01-02 22:36:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:05 AI_Player.update()	update
2017-01-02 22:36:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:36:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:36:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:36:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:05 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:36:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:36:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:36:05 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:36:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:36:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:36:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:36:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:36:05 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:36:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:36:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:36:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:36:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:36:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:05 AI_Player.update()	update
2017-01-02 22:36:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:36:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:36:05 AI_Player.update()	Search took42ms
2017-01-02 22:36:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:05 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-02 22:36:05 AI_Player.update()		1001,	11,	111,	101,	1010,	1110,	1010
2017-01-02 22:36:05 AI_Player.update()		1110,	1011,	1110,	101,	111,	1001,	1011
2017-01-02 22:36:05 AI_Player.update()		11,	1110,	101,	101,	111,	1001,	1100
2017-01-02 22:36:05 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	101,	1011
2017-01-02 22:36:05 AI_Player.update()		101,	101,	1100,	1010,	1100,	110,	101
2017-01-02 22:36:05 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1100,	1001
2017-01-02 22:36:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:05 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:36:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:06 AI_Player.update()	update
2017-01-02 22:36:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:36:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:36:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:36:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:36:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:06 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:36:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:06 AI_Player.update()	update
2017-01-02 22:36:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:36:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:36:07 AI_Player.update()	Search took446ms
2017-01-02 22:36:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:07 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-02 22:36:07 AI_Player.update()		1001,	11,	111,	101,	1010,	1110,	1010
2017-01-02 22:36:07 AI_Player.update()		1110,	1011,	1110,	101,	111,	1001,	1011
2017-01-02 22:36:07 AI_Player.update()		11,	1110,	101,	101,	111,	1001,	1100
2017-01-02 22:36:07 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	101,	1011
2017-01-02 22:36:07 AI_Player.update()		101,	101,	101,	1100,	1010,	1100,	110
2017-01-02 22:36:07 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1100,	1001
2017-01-02 22:36:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:07 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:36:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:07 AI_Player.update()	update
2017-01-02 22:36:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:36:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:36:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:36:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:07 GameBoard.setupTreasurePanel()	2 3
2017-01-02 22:36:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:36:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:36:07 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:36:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:36:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:36:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:36:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:36:07 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:36:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:36:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:36:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:36:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:36:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:08 AI_Player.update()	update
2017-01-02 22:36:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:36:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:36:08 AI_Player.update()	Search took71ms
2017-01-02 22:36:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:08 AI_Player.update()		110,	101,	111,	1010,	111,	1110,	11
2017-01-02 22:36:08 AI_Player.update()		1001,	11,	111,	101,	1010,	1001,	1010
2017-01-02 22:36:08 AI_Player.update()		1110,	1011,	1110,	101,	111,	1001,	1011
2017-01-02 22:36:08 AI_Player.update()		11,	1110,	101,	101,	111,	101,	1100
2017-01-02 22:36:08 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1100,	1011
2017-01-02 22:36:08 AI_Player.update()		101,	101,	101,	1100,	1010,	1100,	110
2017-01-02 22:36:08 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1010,	1001
2017-01-02 22:36:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:08 GameBoard.setupTreasurePanel()	2 3
2017-01-02 22:36:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:08 AI_Player.update()	update
2017-01-02 22:36:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:36:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:36:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:36:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:36:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:08 GameBoard.setupTreasurePanel()	2 3
2017-01-02 22:36:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:09 AI_Player.update()	update
2017-01-02 22:36:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:36:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:36:09 AI_Player.update()	Search took292ms
2017-01-02 22:36:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:09 AI_Player.update()		110,	101,	111,	1010,	111,	1110,	11
2017-01-02 22:36:09 AI_Player.update()		1001,	11,	111,	101,	1010,	1001,	1010
2017-01-02 22:36:09 AI_Player.update()		1110,	1011,	1110,	101,	111,	1001,	1011
2017-01-02 22:36:09 AI_Player.update()		1110,	101,	101,	111,	101,	1100,	11
2017-01-02 22:36:09 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1100,	1011
2017-01-02 22:36:09 AI_Player.update()		101,	101,	101,	1100,	1010,	1100,	110
2017-01-02 22:36:09 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1010,	1001
2017-01-02 22:36:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:09 GameBoard.setupTreasurePanel()	2 3
2017-01-02 22:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:10 AI_Player.update()	update
2017-01-02 22:36:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:36:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:36:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:10 GameBoard.setupTreasurePanel()	2 4
2017-01-02 22:36:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:36:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:36:10 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:36:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:36:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:36:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:36:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:36:10 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:36:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:36:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:36:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:36:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:36:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:10 AI_Player.update()	update
2017-01-02 22:36:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:36:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:36:10 AI_Player.update()	Search took107ms
2017-01-02 22:36:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:10 AI_Player.update()		110,	101,	111,	1010,	111,	1110,	11
2017-01-02 22:36:10 AI_Player.update()		1001,	11,	111,	1010,	1010,	1001,	1010
2017-01-02 22:36:10 AI_Player.update()		1110,	1011,	1110,	101,	111,	1001,	1011
2017-01-02 22:36:10 AI_Player.update()		1110,	101,	101,	101,	101,	1100,	11
2017-01-02 22:36:10 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1100,	1011
2017-01-02 22:36:10 AI_Player.update()		101,	101,	101,	1100,	1010,	1100,	110
2017-01-02 22:36:10 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1010,	1001
2017-01-02 22:36:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:10 GameBoard.setupTreasurePanel()	2 4
2017-01-02 22:36:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:11 AI_Player.update()	update
2017-01-02 22:36:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:36:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:36:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:36:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:36:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:11 GameBoard.setupTreasurePanel()	2 4
2017-01-02 22:36:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:11 AI_Player.update()	update
2017-01-02 22:36:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:36:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:36:11 AI_Player.update()	Search took258ms
2017-01-02 22:36:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:11 AI_Player.update()		110,	101,	111,	1010,	111,	1110,	11
2017-01-02 22:36:11 AI_Player.update()		1001,	11,	111,	101,	1010,	1001,	1010
2017-01-02 22:36:11 AI_Player.update()		1110,	1011,	1110,	101,	111,	1001,	1011
2017-01-02 22:36:11 AI_Player.update()		1110,	101,	101,	111,	101,	1100,	11
2017-01-02 22:36:11 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1100,	1011
2017-01-02 22:36:11 AI_Player.update()		101,	101,	101,	1100,	1010,	1100,	110
2017-01-02 22:36:11 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1010,	1001
2017-01-02 22:36:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:11 GameBoard.setupTreasurePanel()	2 4
2017-01-02 22:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:12 AI_Player.update()	update
2017-01-02 22:36:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:36:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:36:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:12 GameBoard.setupTreasurePanel()	2 4
2017-01-02 22:36:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:12 AI_Player.update()	update
2017-01-02 22:36:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:36:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:36:12 AI_Player.update()	Search took65ms
2017-01-02 22:36:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:12 AI_Player.update()		110,	101,	111,	101,	111,	1110,	11
2017-01-02 22:36:12 AI_Player.update()		1001,	11,	111,	101,	1010,	1001,	1010
2017-01-02 22:36:12 AI_Player.update()		1110,	1011,	1110,	111,	111,	1001,	1011
2017-01-02 22:36:12 AI_Player.update()		1110,	101,	101,	1100,	101,	1100,	11
2017-01-02 22:36:12 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1100,	1011
2017-01-02 22:36:12 AI_Player.update()		101,	101,	101,	1010,	1010,	1100,	110
2017-01-02 22:36:12 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1010,	1001
2017-01-02 22:36:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:12 GameBoard.setupTreasurePanel()	2 4
2017-01-02 22:36:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:13 AI_Player.update()	update
2017-01-02 22:36:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:36:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:36:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:36:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:36:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:13 GameBoard.setupTreasurePanel()	2 4
2017-01-02 22:36:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:13 AI_Player.update()	update
2017-01-02 22:36:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:36:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:36:14 AI_Player.update()	Search took225ms
2017-01-02 22:36:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:14 AI_Player.update()		110,	11,	111,	101,	111,	1110,	11
2017-01-02 22:36:14 AI_Player.update()		1001,	1011,	111,	101,	1010,	1001,	1010
2017-01-02 22:36:14 AI_Player.update()		1110,	101,	1110,	111,	111,	1001,	1011
2017-01-02 22:36:14 AI_Player.update()		1110,	1100,	101,	1100,	101,	1100,	11
2017-01-02 22:36:14 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-02 22:36:14 AI_Player.update()		101,	11,	101,	1010,	1010,	1100,	110
2017-01-02 22:36:14 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-02 22:36:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:14 GameBoard.setupTreasurePanel()	2 4
2017-01-02 22:36:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:14 AI_Player.update()	update
2017-01-02 22:36:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:36:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:36:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:36:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:14 GameBoard.setupTreasurePanel()	2 5
2017-01-02 22:36:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:36:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:36:14 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:36:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:36:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:36:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:36:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:36:14 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:36:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:36:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:36:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:36:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:36:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:15 AI_Player.update()	update
2017-01-02 22:36:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:36:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:36:15 AI_Player.update()	Search took84ms
2017-01-02 22:36:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:15 AI_Player.update()		110,	11,	111,	101,	111,	1110,	11
2017-01-02 22:36:15 AI_Player.update()		1001,	1011,	111,	111,	1010,	1001,	1010
2017-01-02 22:36:15 AI_Player.update()		1110,	101,	1110,	1100,	111,	1001,	1011
2017-01-02 22:36:15 AI_Player.update()		1110,	1100,	101,	1100,	101,	1100,	11
2017-01-02 22:36:15 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-02 22:36:15 AI_Player.update()		101,	11,	101,	1010,	1010,	1100,	110
2017-01-02 22:36:15 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-02 22:36:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:15 GameBoard.setupTreasurePanel()	2 5
2017-01-02 22:36:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:15 AI_Player.update()	update
2017-01-02 22:36:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:36:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:36:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:36:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:36:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:15 GameBoard.setupTreasurePanel()	3 5
2017-01-02 22:36:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:36:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:36:15 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:36:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:36:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:36:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:36:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:36:15 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:36:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:36:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:36:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:36:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:36:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:16 AI_Player.update()	update
2017-01-02 22:36:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:36:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:36:16 AI_Player.update()	Search took176ms
2017-01-02 22:36:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:16 AI_Player.update()		110,	1011,	111,	101,	111,	1110,	11
2017-01-02 22:36:16 AI_Player.update()		1001,	101,	111,	111,	1010,	1001,	1010
2017-01-02 22:36:16 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1001,	1011
2017-01-02 22:36:16 AI_Player.update()		1110,	101,	101,	1100,	101,	1100,	11
2017-01-02 22:36:16 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-02 22:36:16 AI_Player.update()		101,	101,	101,	1010,	1010,	1100,	110
2017-01-02 22:36:16 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-02 22:36:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:16 GameBoard.setupTreasurePanel()	3 5
2017-01-02 22:36:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:17 AI_Player.update()	update
2017-01-02 22:36:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:36:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:36:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:36:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:17 GameBoard.setupTreasurePanel()	3 5
2017-01-02 22:36:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:17 AI_Player.update()	update
2017-01-02 22:36:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:36:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:36:17 AI_Player.update()	Search took73ms
2017-01-02 22:36:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:17 AI_Player.update()		110,	1011,	111,	101,	111,	1110,	11
2017-01-02 22:36:17 AI_Player.update()		101,	111,	111,	1010,	1001,	1010,	1001
2017-01-02 22:36:17 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1001,	1011
2017-01-02 22:36:17 AI_Player.update()		1110,	101,	101,	1100,	101,	1100,	11
2017-01-02 22:36:17 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-02 22:36:17 AI_Player.update()		101,	101,	101,	1010,	1010,	1100,	110
2017-01-02 22:36:17 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-02 22:36:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:17 GameBoard.setupTreasurePanel()	3 5
2017-01-02 22:36:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:18 AI_Player.update()	update
2017-01-02 22:36:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:36:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:36:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:36:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:36:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:18 GameBoard.setupTreasurePanel()	3 5
2017-01-02 22:36:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:18 AI_Player.update()	update
2017-01-02 22:36:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:36:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:36:18 AI_Player.update()	Search took76ms
2017-01-02 22:36:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:18 AI_Player.update()		110,	1011,	111,	101,	111,	1110,	11
2017-01-02 22:36:18 AI_Player.update()		101,	111,	111,	101,	1001,	1010,	1001
2017-01-02 22:36:18 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-02 22:36:18 AI_Player.update()		1110,	101,	101,	1100,	101,	1100,	11
2017-01-02 22:36:18 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1100,	1011
2017-01-02 22:36:18 AI_Player.update()		101,	101,	101,	1010,	1010,	1100,	110
2017-01-02 22:36:18 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1010,	1001
2017-01-02 22:36:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:18 GameBoard.setupTreasurePanel()	3 5
2017-01-02 22:36:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:19 AI_Player.update()	update
2017-01-02 22:36:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:36:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:36:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:36:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:19 GameBoard.setupTreasurePanel()	3 6
2017-01-02 22:36:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:36:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:36:19 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:36:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:36:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:36:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:36:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:36:19 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:36:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:36:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:36:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:36:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:36:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:19 AI_Player.update()	update
2017-01-02 22:36:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:36:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:36:19 AI_Player.update()	Search took178ms
2017-01-02 22:36:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:19 AI_Player.update()		110,	111,	111,	101,	111,	1110,	11
2017-01-02 22:36:19 AI_Player.update()		101,	1100,	111,	101,	1001,	1010,	1001
2017-01-02 22:36:19 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-02 22:36:19 AI_Player.update()		1110,	11,	101,	1100,	101,	1100,	11
2017-01-02 22:36:19 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-02 22:36:19 AI_Player.update()		101,	11,	101,	1010,	1010,	1100,	110
2017-01-02 22:36:19 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1010,	1001
2017-01-02 22:36:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:19 GameBoard.setupTreasurePanel()	3 6
2017-01-02 22:36:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:20 AI_Player.update()	update
2017-01-02 22:36:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:36:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:36:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:36:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:36:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:20 GameBoard.setupTreasurePanel()	4 6
2017-01-02 22:36:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:36:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:36:20 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:36:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-02 22:36:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:36:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:36:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:36:20 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:36:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:36:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-02 22:36:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:36:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:36:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:20 AI_Player.update()	update
2017-01-02 22:36:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:36:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:36:21 AI_Player.update()	Search took248ms
2017-01-02 22:36:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:21 AI_Player.update()		110,	111,	111,	1010,	111,	1110,	11
2017-01-02 22:36:21 AI_Player.update()		101,	1100,	111,	101,	1001,	1010,	1001
2017-01-02 22:36:21 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-02 22:36:21 AI_Player.update()		1110,	11,	101,	1010,	101,	1100,	11
2017-01-02 22:36:21 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-02 22:36:21 AI_Player.update()		101,	11,	101,	1100,	1010,	1100,	110
2017-01-02 22:36:21 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1010,	1001
2017-01-02 22:36:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:21 GameBoard.setupTreasurePanel()	4 6
2017-01-02 22:36:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:21 AI_Player.update()	update
2017-01-02 22:36:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:36:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:36:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:36:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:21 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-02 22:36:21 AI_Player.update()	Player b has won!
2017-01-02 22:36:24 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-02 22:36:24 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-02 22:36:24 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-02 22:36:24 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-02 22:36:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:24 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:36:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:36:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:36:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:36:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:36:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:36:24 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:36:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:36:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:36:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:36:24 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:36:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:36:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:36:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:24 AI_Player.update()	update
2017-01-02 22:36:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:36:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:36:24 AI_Player.update()	Search took194ms
2017-01-02 22:36:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:24 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-02 22:36:24 AI_Player.update()		1010,	1100,	101,	1011,	111,	101,	1100
2017-01-02 22:36:24 AI_Player.update()		1110,	1001,	1110,	1110,	111,	1010,	1011
2017-01-02 22:36:24 AI_Player.update()		1001,	1101,	1010,	11,	1011,	110,	110
2017-01-02 22:36:24 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	101,	1011
2017-01-02 22:36:24 AI_Player.update()		1011,	111,	101,	1101,	1110,	111,	11
2017-01-02 22:36:24 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-02 22:36:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:24 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:36:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:25 AI_Player.update()	update
2017-01-02 22:36:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:36:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:36:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:36:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:36:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:25 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:36:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:25 AI_Player.update()	update
2017-01-02 22:36:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:36:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:36:26 AI_Player.update()	Search took52ms
2017-01-02 22:36:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:26 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-02 22:36:26 AI_Player.update()		1100,	101,	1011,	111,	101,	1100,	1010
2017-01-02 22:36:26 AI_Player.update()		1110,	1001,	1110,	1110,	111,	1010,	1011
2017-01-02 22:36:26 AI_Player.update()		1001,	1101,	1010,	11,	1011,	110,	110
2017-01-02 22:36:26 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	101,	1011
2017-01-02 22:36:26 AI_Player.update()		1011,	111,	101,	1101,	1110,	111,	11
2017-01-02 22:36:26 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-02 22:36:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:26 GameBoard.setupTreasurePanel()	1 1
2017-01-02 22:36:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:26 AI_Player.update()	update
2017-01-02 22:36:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:36:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:36:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:36:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:26 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:36:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:36:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:36:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:36:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:36:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:36:26 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:36:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:36:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:36:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:36:26 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:36:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:36:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:36:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:27 AI_Player.update()	update
2017-01-02 22:36:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:36:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:36:27 AI_Player.update()	Search took517ms
2017-01-02 22:36:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:27 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-02 22:36:27 AI_Player.update()		101,	1011,	111,	101,	1100,	1010,	1100
2017-01-02 22:36:27 AI_Player.update()		1110,	1001,	1110,	1110,	111,	1010,	1011
2017-01-02 22:36:27 AI_Player.update()		1001,	1101,	1010,	11,	1011,	110,	110
2017-01-02 22:36:27 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	101,	1011
2017-01-02 22:36:27 AI_Player.update()		1011,	111,	101,	1101,	1110,	111,	11
2017-01-02 22:36:27 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-02 22:36:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:27 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:36:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:28 AI_Player.update()	update
2017-01-02 22:36:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:36:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:36:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:36:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:36:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:28 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:36:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:28 AI_Player.update()	update
2017-01-02 22:36:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:36:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:36:28 AI_Player.update()	Search took26ms
2017-01-02 22:36:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:28 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-02 22:36:28 AI_Player.update()		101,	1011,	111,	101,	1100,	1010,	1100
2017-01-02 22:36:28 AI_Player.update()		1110,	1001,	1110,	1110,	111,	1010,	1011
2017-01-02 22:36:28 AI_Player.update()		1101,	1010,	11,	1011,	110,	110,	1001
2017-01-02 22:36:28 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	101,	1011
2017-01-02 22:36:28 AI_Player.update()		1011,	111,	101,	1101,	1110,	111,	11
2017-01-02 22:36:28 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-02 22:36:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:28 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:36:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:29 AI_Player.update()	update
2017-01-02 22:36:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:36:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:36:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:36:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:29 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:36:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:29 AI_Player.update()	update
2017-01-02 22:36:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:36:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:36:29 AI_Player.update()	Search took47ms
2017-01-02 22:36:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:29 AI_Player.update()		110,	1001,	111,	101,	111,	1010,	11
2017-01-02 22:36:29 AI_Player.update()		101,	1100,	111,	101,	1100,	1010,	1100
2017-01-02 22:36:29 AI_Player.update()		1110,	1011,	1110,	1110,	111,	1010,	1011
2017-01-02 22:36:29 AI_Player.update()		1101,	1001,	11,	1011,	110,	110,	1001
2017-01-02 22:36:29 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-02 22:36:29 AI_Player.update()		1011,	1100,	101,	1101,	1110,	111,	11
2017-01-02 22:36:29 AI_Player.update()		1100,	111,	1101,	1010,	1101,	101,	1001
2017-01-02 22:36:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:29 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:36:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:30 AI_Player.update()	update
2017-01-02 22:36:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:36:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:36:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:36:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:36:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:30 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:36:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:30 AI_Player.update()	update
2017-01-02 22:36:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:36:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:36:30 AI_Player.update()	Search took117ms
2017-01-02 22:36:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:30 AI_Player.update()		110,	1001,	111,	101,	111,	1010,	11
2017-01-02 22:36:30 AI_Player.update()		101,	1100,	111,	101,	1100,	1010,	1100
2017-01-02 22:36:30 AI_Player.update()		1110,	1011,	1110,	1110,	111,	1010,	1011
2017-01-02 22:36:30 AI_Player.update()		1001,	1101,	1001,	11,	1011,	110,	110
2017-01-02 22:36:30 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-02 22:36:30 AI_Player.update()		1011,	1100,	101,	1101,	1110,	111,	11
2017-01-02 22:36:30 AI_Player.update()		1100,	111,	1101,	1010,	1101,	101,	1001
2017-01-02 22:36:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:30 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:36:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:31 AI_Player.update()	update
2017-01-02 22:36:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:36:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:36:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:36:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:31 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:36:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:31 AI_Player.update()	update
2017-01-02 22:36:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:36:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:36:31 AI_Player.update()	Search took65ms
2017-01-02 22:36:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:31 AI_Player.update()		110,	1001,	111,	101,	111,	1010,	11
2017-01-02 22:36:31 AI_Player.update()		101,	1100,	111,	1110,	1100,	1010,	1100
2017-01-02 22:36:31 AI_Player.update()		1110,	1011,	1110,	11,	111,	1010,	1011
2017-01-02 22:36:31 AI_Player.update()		1001,	1101,	1001,	1001,	1011,	110,	110
2017-01-02 22:36:31 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	101,	1011
2017-01-02 22:36:31 AI_Player.update()		1011,	1100,	101,	1010,	1110,	111,	11
2017-01-02 22:36:31 AI_Player.update()		1100,	111,	1101,	101,	1101,	101,	1001
2017-01-02 22:36:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:31 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:36:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:32 AI_Player.update()	update
2017-01-02 22:36:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:36:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:36:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:36:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:36:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:32 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:36:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:32 AI_Player.update()	update
2017-01-02 22:36:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:36:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:36:33 AI_Player.update()	Search took247ms
2017-01-02 22:36:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:33 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-02 22:36:33 AI_Player.update()		101,	1011,	111,	1110,	1100,	1010,	1100
2017-01-02 22:36:33 AI_Player.update()		1110,	1101,	1110,	11,	111,	1010,	1011
2017-01-02 22:36:33 AI_Player.update()		1001,	1010,	1001,	1001,	1011,	110,	110
2017-01-02 22:36:33 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	101,	1011
2017-01-02 22:36:33 AI_Player.update()		1011,	111,	101,	1010,	1110,	111,	11
2017-01-02 22:36:33 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-02 22:36:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:33 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:36:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:33 AI_Player.update()	update
2017-01-02 22:36:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:36:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:36:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:36:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:33 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:36:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:34 AI_Player.update()	update
2017-01-02 22:36:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:36:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:36:34 AI_Player.update()	Search took69ms
2017-01-02 22:36:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:34 AI_Player.update()		110,	1001,	111,	101,	111,	1010,	11
2017-01-02 22:36:34 AI_Player.update()		101,	1100,	111,	1110,	1100,	1010,	1100
2017-01-02 22:36:34 AI_Player.update()		1110,	1011,	1110,	11,	111,	1010,	1011
2017-01-02 22:36:34 AI_Player.update()		1001,	1101,	1001,	1001,	1011,	110,	110
2017-01-02 22:36:34 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	101,	1011
2017-01-02 22:36:34 AI_Player.update()		1011,	1100,	101,	1010,	1110,	111,	11
2017-01-02 22:36:34 AI_Player.update()		1100,	111,	1101,	101,	1101,	101,	1001
2017-01-02 22:36:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:34 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:36:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:34 AI_Player.update()	update
2017-01-02 22:36:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:36:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:36:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:36:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:36:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:34 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:36:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:35 AI_Player.update()	update
2017-01-02 22:36:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:36:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:36:35 AI_Player.update()	Search took38ms
2017-01-02 22:36:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:35 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-02 22:36:35 AI_Player.update()		101,	1011,	111,	1110,	1100,	1010,	1100
2017-01-02 22:36:35 AI_Player.update()		1110,	1101,	1110,	11,	111,	1010,	1011
2017-01-02 22:36:35 AI_Player.update()		1001,	1010,	1001,	1001,	1011,	110,	110
2017-01-02 22:36:35 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	101,	1011
2017-01-02 22:36:35 AI_Player.update()		1011,	111,	101,	1010,	1110,	111,	11
2017-01-02 22:36:35 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-02 22:36:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:35 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:36:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:35 AI_Player.update()	update
2017-01-02 22:36:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:36:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:36:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:36:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:35 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:36:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:36 AI_Player.update()	update
2017-01-02 22:36:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:36:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:36:36 AI_Player.update()	Search took189ms
2017-01-02 22:36:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:36 AI_Player.update()		110,	1001,	111,	101,	111,	1010,	11
2017-01-02 22:36:36 AI_Player.update()		101,	1100,	111,	1110,	1100,	1010,	1100
2017-01-02 22:36:36 AI_Player.update()		1110,	1011,	1110,	11,	111,	1010,	1011
2017-01-02 22:36:36 AI_Player.update()		1001,	1101,	1001,	1001,	1011,	110,	110
2017-01-02 22:36:36 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	101,	1011
2017-01-02 22:36:36 AI_Player.update()		1011,	1100,	101,	1010,	1110,	111,	11
2017-01-02 22:36:36 AI_Player.update()		1100,	111,	1101,	101,	1101,	101,	1001
2017-01-02 22:36:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:36 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:36:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:36 AI_Player.update()	update
2017-01-02 22:36:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:36:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:36:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:36:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:36:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:36 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:36:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:37 AI_Player.update()	update
2017-01-02 22:36:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:36:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:36:37 AI_Player.update()	Search took229ms
2017-01-02 22:36:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:37 AI_Player.update()		110,	111,	111,	101,	111,	1010,	11
2017-01-02 22:36:37 AI_Player.update()		101,	1001,	111,	1110,	1100,	1010,	1100
2017-01-02 22:36:37 AI_Player.update()		1110,	1100,	1110,	11,	111,	1010,	1011
2017-01-02 22:36:37 AI_Player.update()		1001,	1011,	1001,	1001,	1011,	110,	110
2017-01-02 22:36:37 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	101,	1011
2017-01-02 22:36:37 AI_Player.update()		1011,	1010,	101,	1010,	1110,	111,	11
2017-01-02 22:36:37 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-02 22:36:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:37 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:36:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:38 AI_Player.update()	update
2017-01-02 22:36:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:36:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:36:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:36:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:38 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:36:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:38 AI_Player.update()	update
2017-01-02 22:36:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:36:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:36:38 AI_Player.update()	Search took140ms
2017-01-02 22:36:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:38 AI_Player.update()		110,	111,	111,	1110,	111,	1010,	11
2017-01-02 22:36:38 AI_Player.update()		101,	1001,	111,	11,	1100,	1010,	1100
2017-01-02 22:36:38 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1010,	1011
2017-01-02 22:36:38 AI_Player.update()		1001,	1011,	1001,	1101,	1011,	110,	110
2017-01-02 22:36:38 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	101,	1011
2017-01-02 22:36:38 AI_Player.update()		1011,	1010,	101,	101,	1110,	111,	11
2017-01-02 22:36:38 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-02 22:36:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:38 GameBoard.setupTreasurePanel()	1 2
2017-01-02 22:36:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:39 AI_Player.update()	update
2017-01-02 22:36:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:36:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:36:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:36:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:36:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:39 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:36:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:36:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:36:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:36:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:36:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:36:39 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:36:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:36:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:36:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:36:39 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:36:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:36:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:36:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:39 AI_Player.update()	update
2017-01-02 22:36:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:36:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:36:39 AI_Player.update()	Search took83ms
2017-01-02 22:36:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:39 AI_Player.update()		110,	1100,	111,	1110,	111,	1010,	11
2017-01-02 22:36:39 AI_Player.update()		101,	111,	111,	11,	1100,	1010,	1100
2017-01-02 22:36:39 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1010,	1011
2017-01-02 22:36:39 AI_Player.update()		1001,	1100,	1001,	1101,	1011,	110,	110
2017-01-02 22:36:39 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	101,	1011
2017-01-02 22:36:39 AI_Player.update()		1011,	1101,	101,	101,	1110,	111,	11
2017-01-02 22:36:39 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-02 22:36:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:39 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:36:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:40 AI_Player.update()	update
2017-01-02 22:36:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:36:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:36:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:36:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:40 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:36:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:40 AI_Player.update()	update
2017-01-02 22:36:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-02 22:36:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-02 22:36:41 AI_Player.update()	Search took127ms
2017-01-02 22:36:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:41 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-02 22:36:41 AI_Player.update()		101,	111,	111,	1001,	1100,	1010,	1100
2017-01-02 22:36:41 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1010,	1011
2017-01-02 22:36:41 AI_Player.update()		1001,	1100,	1001,	1010,	1011,	110,	110
2017-01-02 22:36:41 AI_Player.update()		1110,	1011,	1101,	101,	1011,	101,	1011
2017-01-02 22:36:41 AI_Player.update()		1011,	1101,	101,	101,	1110,	111,	11
2017-01-02 22:36:41 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	101,	1001
2017-01-02 22:36:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:41 GameBoard.setupTreasurePanel()	2 2
2017-01-02 22:36:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:41 AI_Player.update()	update
2017-01-02 22:36:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-02 22:36:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-02 22:36:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-02 22:36:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-02 22:36:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-02 22:36:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:41 GameBoard.setupTreasurePanel()	3 2
2017-01-02 22:36:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-02 22:36:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-02 22:36:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-02 22:36:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-02 22:36:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-02 22:36:41 GameBoard.setupTreasurePanel()	adding map
2017-01-02 22:36:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-02 22:36:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-02 22:36:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-02 22:36:41 GameBoard.setupTreasurePanel()	adding book
2017-01-02 22:36:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-02 22:36:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-02 22:36:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:42 AI_Player.update()	update
2017-01-02 22:36:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-02 22:36:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-02 22:36:42 AI_Player.update()	Search took374ms
2017-01-02 22:36:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-02 22:36:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:42 AI_Player.update()		110,	1100,	111,	1001,	111,	1010,	11
2017-01-02 22:36:42 AI_Player.update()		101,	111,	111,	1101,	1100,	1010,	1100
2017-01-02 22:36:42 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-02 22:36:42 AI_Player.update()		1001,	1100,	1001,	101,	1011,	110,	110
2017-01-02 22:36:42 AI_Player.update()		1110,	1011,	1101,	101,	1011,	101,	1011
2017-01-02 22:36:42 AI_Player.update()		1011,	1101,	101,	1110,	1110,	111,	11
2017-01-02 22:36:42 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-02 22:36:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-02 22:36:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-02 22:36:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:42 GameBoard.setupTreasurePanel()	3 2
2017-01-02 22:36:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-02 22:36:42 AI_Player.update()	update
2017-01-02 22:36:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-02 22:36:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-02 22:36:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-02 22:36:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-02 22:36:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-02 22:36:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-02 22:36:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-02 22:36:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-02 22:36:42 GameBoard.setupTreasurePanel()	3 2
