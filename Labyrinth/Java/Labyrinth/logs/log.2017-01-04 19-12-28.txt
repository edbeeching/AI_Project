2017-01-04 19:12:28 GameBoard.<init>()	Hello World!
2017-01-04 19:12:28 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-04 19:12:28 QueryProlog.initialise()	setup(h3/h1). suceeded
2017-01-04 19:12:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:28 GameBoard.setupBoardFromString()	Board created
2017-01-04 19:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 19:12:28 GameBoard.initialise()	[sword, gem, ring, keys, gold]
2017-01-04 19:12:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 19:12:28 GameBoard.initialise()	[map, helmet, fairy, candle, chest]
2017-01-04 19:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:28 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-04 19:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	null
2017-01-04 19:12:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 19:12:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 19:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:28 AI_Player.update()	update
2017-01-04 19:12:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 19:12:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 19:12:28 AI_Player.update()	Search took12ms
2017-01-04 19:12:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:28 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-04 19:12:28 AI_Player.update()		101,	1010,	1101,	111,	111,	11,	110
2017-01-04 19:12:28 AI_Player.update()		1110,	101,	1110,	111,	111,	101,	1011
2017-01-04 19:12:28 AI_Player.update()		1110,	11,	11,	101,	101,	1001,	1001
2017-01-04 19:12:28 AI_Player.update()		1110,	101,	1101,	110,	1011,	1101,	1011
2017-01-04 19:12:28 AI_Player.update()		1110,	1110,	101,	1010,	1010,	1101,	1100
2017-01-04 19:12:28 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	110,	1001
2017-01-04 19:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 19:12:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 19:12:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 19:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:28 AI_Player.update()	update
2017-01-04 19:12:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 19:12:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 19:12:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 19:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 19:12:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 19:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:28 AI_Player.update()	update
2017-01-04 19:12:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 19:12:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-04 19:12:28 AI_Player.update()	Search took3ms
2017-01-04 19:12:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:28 AI_Player.update()		110,	11,	111,	111,	111,	101,	11
2017-01-04 19:12:28 AI_Player.update()		101,	1010,	1101,	111,	111,	11,	110
2017-01-04 19:12:28 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 19:12:28 AI_Player.update()		1110,	11,	11,	110,	101,	1001,	1001
2017-01-04 19:12:28 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1101,	1011
2017-01-04 19:12:28 AI_Player.update()		1110,	1110,	101,	1110,	1010,	1101,	1100
2017-01-04 19:12:28 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	110,	1001
2017-01-04 19:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 19:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:28 AI_Player.update()	update
2017-01-04 19:12:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 19:12:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 19:12:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-04 19:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 19:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:28 AI_Player.update()	update
2017-01-04 19:12:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 19:12:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 19:12:29 AI_Player.update()	Search took173ms
2017-01-04 19:12:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:29 AI_Player.update()		110,	11,	111,	111,	111,	101,	11
2017-01-04 19:12:29 AI_Player.update()		110,	101,	1010,	1101,	111,	111,	11
2017-01-04 19:12:29 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 19:12:29 AI_Player.update()		1110,	11,	11,	110,	101,	1001,	1001
2017-01-04 19:12:29 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1101,	1011
2017-01-04 19:12:29 AI_Player.update()		1110,	1110,	101,	1110,	1010,	1101,	1100
2017-01-04 19:12:29 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	110,	1001
2017-01-04 19:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 19:12:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:29 AI_Player.update()	update
2017-01-04 19:12:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 19:12:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 19:12:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 19:12:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 19:12:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:29 GameBoard.setupTreasurePanel()	2 1
2017-01-04 19:12:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 19:12:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 19:12:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 19:12:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 19:12:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 19:12:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 19:12:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 19:12:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 19:12:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 19:12:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 19:12:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 19:12:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 19:12:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:29 AI_Player.update()	update
2017-01-04 19:12:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 19:12:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-04 19:12:29 AI_Player.update()	Search took12ms
2017-01-04 19:12:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:29 AI_Player.update()		110,	11,	111,	111,	111,	101,	11
2017-01-04 19:12:29 AI_Player.update()		110,	101,	1010,	1101,	111,	111,	11
2017-01-04 19:12:29 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 19:12:29 AI_Player.update()		11,	11,	110,	101,	1001,	1001,	1110
2017-01-04 19:12:29 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1101,	1011
2017-01-04 19:12:29 AI_Player.update()		1110,	1110,	101,	1110,	1010,	1101,	1100
2017-01-04 19:12:29 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	110,	1001
2017-01-04 19:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:29 GameBoard.setupTreasurePanel()	2 1
2017-01-04 19:12:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:29 AI_Player.update()	update
2017-01-04 19:12:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 19:12:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 19:12:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-04 19:12:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:29 GameBoard.setupTreasurePanel()	2 1
2017-01-04 19:12:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:29 AI_Player.update()	update
2017-01-04 19:12:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 19:12:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 19:12:30 AI_Player.update()	Search took1089ms
2017-01-04 19:12:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:30 AI_Player.update()		110,	11,	111,	111,	111,	101,	11
2017-01-04 19:12:30 AI_Player.update()		11,	110,	101,	1010,	1101,	111,	111
2017-01-04 19:12:30 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 19:12:30 AI_Player.update()		11,	11,	110,	101,	1001,	1001,	1110
2017-01-04 19:12:30 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1101,	1011
2017-01-04 19:12:30 AI_Player.update()		1110,	1110,	101,	1110,	1010,	1101,	1100
2017-01-04 19:12:30 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	110,	1001
2017-01-04 19:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:30 GameBoard.setupTreasurePanel()	2 1
2017-01-04 19:12:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:30 AI_Player.update()	update
2017-01-04 19:12:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 19:12:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 19:12:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 19:12:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 19:12:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:30 GameBoard.setupTreasurePanel()	3 1
2017-01-04 19:12:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 19:12:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 19:12:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 19:12:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 19:12:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 19:12:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 19:12:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 19:12:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 19:12:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 19:12:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 19:12:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 19:12:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 19:12:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:30 AI_Player.update()	update
2017-01-04 19:12:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 19:12:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-04 19:12:30 AI_Player.update()	Search took12ms
2017-01-04 19:12:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:30 AI_Player.update()		110,	11,	111,	111,	111,	101,	11
2017-01-04 19:12:30 AI_Player.update()		11,	110,	101,	1010,	1101,	111,	111
2017-01-04 19:12:30 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 19:12:30 AI_Player.update()		1110,	11,	11,	110,	101,	1001,	1001
2017-01-04 19:12:30 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1101,	1011
2017-01-04 19:12:30 AI_Player.update()		1110,	1110,	101,	1110,	1010,	1101,	1100
2017-01-04 19:12:30 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	110,	1001
2017-01-04 19:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:30 GameBoard.setupTreasurePanel()	3 1
2017-01-04 19:12:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:30 AI_Player.update()	update
2017-01-04 19:12:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 19:12:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 19:12:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-04 19:12:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:30 GameBoard.setupTreasurePanel()	3 2
2017-01-04 19:12:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 19:12:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 19:12:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 19:12:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 19:12:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 19:12:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 19:12:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 19:12:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 19:12:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 19:12:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 19:12:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 19:12:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 19:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:31 AI_Player.update()	update
2017-01-04 19:12:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 19:12:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 19:12:31 AI_Player.update()	Search took396ms
2017-01-04 19:12:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:31 AI_Player.update()		110,	11,	111,	111,	111,	101,	11
2017-01-04 19:12:31 AI_Player.update()		11,	110,	101,	1010,	1101,	111,	111
2017-01-04 19:12:31 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 19:12:31 AI_Player.update()		11,	11,	110,	101,	1001,	1001,	1110
2017-01-04 19:12:31 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1101,	1011
2017-01-04 19:12:31 AI_Player.update()		1110,	1110,	101,	1110,	1010,	1101,	1100
2017-01-04 19:12:31 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	110,	1001
2017-01-04 19:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:31 GameBoard.setupTreasurePanel()	3 2
2017-01-04 19:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:31 AI_Player.update()	update
2017-01-04 19:12:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 19:12:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 19:12:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 19:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 19:12:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:31 GameBoard.setupTreasurePanel()	4 2
2017-01-04 19:12:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 19:12:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 19:12:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 19:12:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 19:12:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 19:12:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 19:12:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 19:12:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 19:12:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 19:12:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 19:12:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 19:12:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 19:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:31 AI_Player.update()	update
2017-01-04 19:12:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 19:12:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-04 19:12:31 AI_Player.update()	Search took3ms
2017-01-04 19:12:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:31 AI_Player.update()		110,	110,	111,	111,	111,	101,	11
2017-01-04 19:12:31 AI_Player.update()		11,	101,	101,	1010,	1101,	111,	111
2017-01-04 19:12:31 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 19:12:31 AI_Player.update()		11,	101,	110,	101,	1001,	1001,	1110
2017-01-04 19:12:31 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1101,	1011
2017-01-04 19:12:31 AI_Player.update()		1110,	1010,	101,	1110,	1010,	1101,	1100
2017-01-04 19:12:31 AI_Player.update()		1100,	11,	1101,	1010,	1101,	110,	1001
2017-01-04 19:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:31 GameBoard.setupTreasurePanel()	4 2
2017-01-04 19:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:31 AI_Player.update()	update
2017-01-04 19:12:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 19:12:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 19:12:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-04 19:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:31 GameBoard.setupTreasurePanel()	4 2
2017-01-04 19:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:31 AI_Player.update()	update
2017-01-04 19:12:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 19:12:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 19:12:32 AI_Player.update()	Search took887ms
2017-01-04 19:12:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:32 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 19:12:32 AI_Player.update()		11,	101,	101,	101,	1101,	111,	111
2017-01-04 19:12:32 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 19:12:32 AI_Player.update()		11,	101,	110,	1010,	1001,	1001,	1110
2017-01-04 19:12:32 AI_Player.update()		1110,	1110,	1101,	1110,	1011,	1101,	1011
2017-01-04 19:12:32 AI_Player.update()		1110,	1010,	101,	1010,	1010,	1101,	1100
2017-01-04 19:12:32 AI_Player.update()		1100,	11,	1101,	111,	1101,	110,	1001
2017-01-04 19:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:32 GameBoard.setupTreasurePanel()	4 2
2017-01-04 19:12:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:32 AI_Player.update()	update
2017-01-04 19:12:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 19:12:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 19:12:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 19:12:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 19:12:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:32 GameBoard.setupTreasurePanel()	5 2
2017-01-04 19:12:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 19:12:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 19:12:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 19:12:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 19:12:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 19:12:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 19:12:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 19:12:32 GameBoard.setupTreasurePanel()	adding map
2017-01-04 19:12:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 19:12:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 19:12:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 19:12:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 19:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:33 AI_Player.update()	update
2017-01-04 19:12:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 19:12:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-04 19:12:33 AI_Player.update()	Search took2ms
2017-01-04 19:12:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:33 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 19:12:33 AI_Player.update()		11,	101,	101,	101,	1101,	111,	111
2017-01-04 19:12:33 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-04 19:12:33 AI_Player.update()		11,	101,	110,	1110,	1001,	1001,	1110
2017-01-04 19:12:33 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1101,	1011
2017-01-04 19:12:33 AI_Player.update()		1110,	1010,	101,	111,	1010,	1101,	1100
2017-01-04 19:12:33 AI_Player.update()		1100,	11,	1101,	1010,	1101,	110,	1001
2017-01-04 19:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:33 GameBoard.setupTreasurePanel()	5 2
2017-01-04 19:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:33 AI_Player.update()	update
2017-01-04 19:12:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 19:12:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 19:12:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-04 19:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:33 GameBoard.setupTreasurePanel()	5 2
2017-01-04 19:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:33 AI_Player.update()	update
2017-01-04 19:12:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 19:12:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 19:12:33 AI_Player.update()	Search took96ms
2017-01-04 19:12:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:33 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 19:12:33 AI_Player.update()		11,	101,	101,	101,	1101,	111,	111
2017-01-04 19:12:33 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 19:12:33 AI_Player.update()		11,	101,	110,	1010,	1001,	1001,	1110
2017-01-04 19:12:33 AI_Player.update()		1110,	1110,	1101,	1110,	1011,	1101,	1011
2017-01-04 19:12:33 AI_Player.update()		1110,	1010,	101,	1010,	1010,	1101,	1100
2017-01-04 19:12:33 AI_Player.update()		1100,	11,	1101,	111,	1101,	110,	1001
2017-01-04 19:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:33 GameBoard.setupTreasurePanel()	5 2
2017-01-04 19:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:33 AI_Player.update()	update
2017-01-04 19:12:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 19:12:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 19:12:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 19:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 19:12:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:33 GameBoard.setupTreasurePanel()	6 2
2017-01-04 19:12:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 19:12:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 19:12:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 19:12:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 19:12:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 19:12:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 19:12:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 19:12:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 19:12:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 19:12:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 19:12:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 19:12:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 19:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:33 AI_Player.update()	update
2017-01-04 19:12:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 19:12:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-04 19:12:33 AI_Player.update()	Search took1ms
2017-01-04 19:12:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:33 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 19:12:33 AI_Player.update()		11,	101,	101,	101,	1101,	111,	111
2017-01-04 19:12:33 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-04 19:12:33 AI_Player.update()		11,	101,	110,	1110,	1001,	1001,	1110
2017-01-04 19:12:33 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1101,	1011
2017-01-04 19:12:33 AI_Player.update()		1110,	1010,	101,	111,	1010,	1101,	1100
2017-01-04 19:12:33 AI_Player.update()		1100,	11,	1101,	1010,	1101,	110,	1001
2017-01-04 19:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:33 GameBoard.setupTreasurePanel()	6 2
2017-01-04 19:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:33 AI_Player.update()	update
2017-01-04 19:12:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 19:12:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 19:12:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-04 19:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:33 GameBoard.setupTreasurePanel()	6 2
2017-01-04 19:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:33 AI_Player.update()	update
2017-01-04 19:12:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 19:12:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 19:12:34 AI_Player.update()	Search took768ms
2017-01-04 19:12:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:34 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 19:12:34 AI_Player.update()		11,	11,	101,	101,	1101,	111,	111
2017-01-04 19:12:34 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-04 19:12:34 AI_Player.update()		11,	1110,	110,	1110,	1001,	1001,	1110
2017-01-04 19:12:34 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1101,	1011
2017-01-04 19:12:34 AI_Player.update()		1110,	11,	101,	111,	1010,	1101,	1100
2017-01-04 19:12:34 AI_Player.update()		1100,	110,	1101,	1010,	1101,	110,	1001
2017-01-04 19:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:34 GameBoard.setupTreasurePanel()	6 2
2017-01-04 19:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:34 AI_Player.update()	update
2017-01-04 19:12:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 19:12:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 19:12:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 19:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 19:12:34 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 19:12:34 AI_Player.update()	Player a has won!
2017-01-04 19:12:34 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 19:12:34 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 19:12:34 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 19:12:34 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-04 19:12:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:34 GameBoard.setupTreasurePanel()	1 1
2017-01-04 19:12:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 19:12:34 GameBoard.setupTreasurePanel()	adding book
2017-01-04 19:12:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 19:12:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 19:12:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 19:12:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 19:12:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 19:12:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 19:12:34 GameBoard.setupTreasurePanel()	adding map
2017-01-04 19:12:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 19:12:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 19:12:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 19:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:34 AI_Player.update()	update
2017-01-04 19:12:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 19:12:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 19:12:35 AI_Player.update()	Search took389ms
2017-01-04 19:12:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:35 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-04 19:12:35 AI_Player.update()		1011,	1010,	1010,	101,	111,	101,	1011
2017-01-04 19:12:35 AI_Player.update()		1110,	1010,	1110,	101,	111,	1110,	1011
2017-01-04 19:12:35 AI_Player.update()		1100,	101,	1011,	1011,	1110,	1011,	1100
2017-01-04 19:12:35 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1010,	1011
2017-01-04 19:12:35 AI_Player.update()		110,	1011,	11,	11,	1010,	1010,	1011
2017-01-04 19:12:35 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 19:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:35 GameBoard.setupTreasurePanel()	1 1
2017-01-04 19:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:35 AI_Player.update()	update
2017-01-04 19:12:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 19:12:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 19:12:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 19:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 19:12:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:35 GameBoard.setupTreasurePanel()	1 1
2017-01-04 19:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:35 AI_Player.update()	update
2017-01-04 19:12:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 19:12:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-04 19:12:35 AI_Player.update()	Search took19ms
2017-01-04 19:12:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:35 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-04 19:12:35 AI_Player.update()		1011,	1010,	1010,	101,	111,	101,	1011
2017-01-04 19:12:35 AI_Player.update()		1110,	101,	1110,	101,	111,	1110,	1011
2017-01-04 19:12:35 AI_Player.update()		1100,	1100,	1011,	1011,	1110,	1011,	1100
2017-01-04 19:12:35 AI_Player.update()		1110,	1011,	1101,	1110,	1011,	1010,	1011
2017-01-04 19:12:35 AI_Player.update()		110,	110,	11,	11,	1010,	1010,	1011
2017-01-04 19:12:35 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 19:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:35 GameBoard.setupTreasurePanel()	1 1
2017-01-04 19:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:35 AI_Player.update()	update
2017-01-04 19:12:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 19:12:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 19:12:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-04 19:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:35 GameBoard.setupTreasurePanel()	1 2
2017-01-04 19:12:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 19:12:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 19:12:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 19:12:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 19:12:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 19:12:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 19:12:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 19:12:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 19:12:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 19:12:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 19:12:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 19:12:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 19:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:35 AI_Player.update()	update
2017-01-04 19:12:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 19:12:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 19:12:36 AI_Player.update()	Search took462ms
2017-01-04 19:12:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:36 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-04 19:12:36 AI_Player.update()		1011,	101,	1010,	101,	111,	101,	1011
2017-01-04 19:12:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	1110,	1011
2017-01-04 19:12:36 AI_Player.update()		1100,	1011,	1011,	1011,	1110,	1011,	1100
2017-01-04 19:12:36 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1010,	1011
2017-01-04 19:12:36 AI_Player.update()		110,	101,	11,	11,	1010,	1010,	1011
2017-01-04 19:12:36 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-04 19:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	1 2
2017-01-04 19:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:36 AI_Player.update()	update
2017-01-04 19:12:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 19:12:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 19:12:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 19:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 19:12:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	2 2
2017-01-04 19:12:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	adding book
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 19:12:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	adding map
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 19:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:36 AI_Player.update()	update
2017-01-04 19:12:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 19:12:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-04 19:12:36 AI_Player.update()	Search took7ms
2017-01-04 19:12:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:36 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-04 19:12:36 AI_Player.update()		1011,	1100,	1010,	101,	111,	101,	1011
2017-01-04 19:12:36 AI_Player.update()		1110,	1011,	1110,	101,	111,	1110,	1011
2017-01-04 19:12:36 AI_Player.update()		1100,	110,	1011,	1011,	1110,	1011,	1100
2017-01-04 19:12:36 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1010,	1011
2017-01-04 19:12:36 AI_Player.update()		110,	1010,	11,	11,	1010,	1010,	1011
2017-01-04 19:12:36 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-04 19:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	2 2
2017-01-04 19:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:36 AI_Player.update()	update
2017-01-04 19:12:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 19:12:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 19:12:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-04 19:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	2 3
2017-01-04 19:12:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	adding book
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 19:12:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	adding map
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 19:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:36 AI_Player.update()	update
2017-01-04 19:12:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 19:12:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 19:12:36 AI_Player.update()	Search took169ms
2017-01-04 19:12:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:36 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-04 19:12:36 AI_Player.update()		1011,	1011,	1010,	101,	111,	101,	1011
2017-01-04 19:12:36 AI_Player.update()		1110,	110,	1110,	101,	111,	1110,	1011
2017-01-04 19:12:36 AI_Player.update()		1100,	101,	1011,	1011,	1110,	1011,	1100
2017-01-04 19:12:36 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1010,	1011
2017-01-04 19:12:36 AI_Player.update()		110,	1010,	11,	11,	1010,	1010,	1011
2017-01-04 19:12:36 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 19:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	2 3
2017-01-04 19:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:36 AI_Player.update()	update
2017-01-04 19:12:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 19:12:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 19:12:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 19:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 19:12:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	2 3
2017-01-04 19:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:36 AI_Player.update()	update
2017-01-04 19:12:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 19:12:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-04 19:12:36 AI_Player.update()	Search took18ms
2017-01-04 19:12:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:36 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-04 19:12:36 AI_Player.update()		1011,	1100,	1010,	101,	111,	101,	1011
2017-01-04 19:12:36 AI_Player.update()		1110,	1011,	1110,	101,	111,	1110,	1011
2017-01-04 19:12:36 AI_Player.update()		1100,	110,	1011,	1011,	1110,	1011,	1100
2017-01-04 19:12:36 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1010,	1011
2017-01-04 19:12:36 AI_Player.update()		110,	1010,	11,	11,	1010,	1010,	1011
2017-01-04 19:12:36 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-04 19:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:36 GameBoard.setupTreasurePanel()	2 3
2017-01-04 19:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:37 AI_Player.update()	update
2017-01-04 19:12:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 19:12:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 19:12:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-04 19:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:37 GameBoard.setupTreasurePanel()	2 4
2017-01-04 19:12:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 19:12:37 GameBoard.setupTreasurePanel()	adding book
2017-01-04 19:12:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 19:12:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 19:12:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 19:12:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 19:12:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 19:12:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 19:12:37 GameBoard.setupTreasurePanel()	adding map
2017-01-04 19:12:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 19:12:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 19:12:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 19:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:37 AI_Player.update()	update
2017-01-04 19:12:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 19:12:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 19:12:38 AI_Player.update()	Search took1705ms
2017-01-04 19:12:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:38 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-04 19:12:38 AI_Player.update()		1011,	1100,	1010,	101,	111,	101,	1011
2017-01-04 19:12:38 AI_Player.update()		1110,	1011,	1110,	101,	111,	1110,	1011
2017-01-04 19:12:38 AI_Player.update()		1100,	110,	1011,	101,	1110,	1011,	1100
2017-01-04 19:12:38 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1010,	1011
2017-01-04 19:12:38 AI_Player.update()		110,	1010,	11,	1110,	1010,	1010,	1011
2017-01-04 19:12:38 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 19:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:38 GameBoard.setupTreasurePanel()	2 4
2017-01-04 19:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:38 AI_Player.update()	update
2017-01-04 19:12:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 19:12:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 19:12:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 19:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 19:12:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:38 GameBoard.setupTreasurePanel()	3 4
2017-01-04 19:12:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 19:12:38 GameBoard.setupTreasurePanel()	adding book
2017-01-04 19:12:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 19:12:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 19:12:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 19:12:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 19:12:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 19:12:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 19:12:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 19:12:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 19:12:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 19:12:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 19:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:39 AI_Player.update()	update
2017-01-04 19:12:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 19:12:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-04 19:12:39 AI_Player.update()	Search took20ms
2017-01-04 19:12:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:39 AI_Player.update()		110,	1100,	111,	1010,	111,	11,	11
2017-01-04 19:12:39 AI_Player.update()		1011,	1011,	1010,	101,	111,	101,	1011
2017-01-04 19:12:39 AI_Player.update()		1110,	110,	1110,	101,	111,	1110,	1011
2017-01-04 19:12:39 AI_Player.update()		1100,	101,	1011,	101,	1110,	1011,	1100
2017-01-04 19:12:39 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1010,	1011
2017-01-04 19:12:39 AI_Player.update()		110,	1010,	11,	1110,	1010,	1010,	1011
2017-01-04 19:12:39 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-04 19:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:39 GameBoard.setupTreasurePanel()	3 4
2017-01-04 19:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:39 AI_Player.update()	update
2017-01-04 19:12:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 19:12:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 19:12:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-04 19:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:39 GameBoard.setupTreasurePanel()	3 5
2017-01-04 19:12:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 19:12:39 GameBoard.setupTreasurePanel()	adding book
2017-01-04 19:12:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 19:12:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 19:12:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 19:12:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 19:12:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 19:12:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 19:12:39 GameBoard.setupTreasurePanel()	adding map
2017-01-04 19:12:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 19:12:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 19:12:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 19:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:39 AI_Player.update()	update
2017-01-04 19:12:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 19:12:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 19:12:40 AI_Player.update()	Search took1561ms
2017-01-04 19:12:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:40 AI_Player.update()		110,	1100,	111,	11,	111,	11,	11
2017-01-04 19:12:40 AI_Player.update()		1011,	1011,	1010,	1010,	111,	101,	1011
2017-01-04 19:12:40 AI_Player.update()		1110,	110,	1110,	101,	111,	1110,	1011
2017-01-04 19:12:40 AI_Player.update()		1100,	101,	1011,	101,	1110,	1011,	1100
2017-01-04 19:12:40 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-04 19:12:40 AI_Player.update()		110,	1010,	11,	1011,	1010,	1010,	1011
2017-01-04 19:12:40 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-04 19:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:40 GameBoard.setupTreasurePanel()	3 5
2017-01-04 19:12:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:40 AI_Player.update()	update
2017-01-04 19:12:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 19:12:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 19:12:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 19:12:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 19:12:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:40 GameBoard.setupTreasurePanel()	4 5
2017-01-04 19:12:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 19:12:40 GameBoard.setupTreasurePanel()	adding book
2017-01-04 19:12:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 19:12:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 19:12:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 19:12:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 19:12:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 19:12:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 19:12:40 GameBoard.setupTreasurePanel()	adding map
2017-01-04 19:12:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 19:12:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 19:12:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 19:12:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:41 AI_Player.update()	update
2017-01-04 19:12:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 19:12:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-04 19:12:41 AI_Player.update()	Search took22ms
2017-01-04 19:12:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:41 AI_Player.update()		110,	1011,	111,	11,	111,	11,	11
2017-01-04 19:12:41 AI_Player.update()		1011,	110,	1010,	1010,	111,	101,	1011
2017-01-04 19:12:41 AI_Player.update()		1110,	101,	1110,	101,	111,	1110,	1011
2017-01-04 19:12:41 AI_Player.update()		1100,	1010,	1011,	101,	1110,	1011,	1100
2017-01-04 19:12:41 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-04 19:12:41 AI_Player.update()		110,	101,	11,	1011,	1010,	1010,	1011
2017-01-04 19:12:41 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	101,	1001
2017-01-04 19:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:41 GameBoard.setupTreasurePanel()	4 5
2017-01-04 19:12:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:41 AI_Player.update()	update
2017-01-04 19:12:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 19:12:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 19:12:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-04 19:12:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:41 GameBoard.setupTreasurePanel()	4 6
2017-01-04 19:12:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 19:12:41 GameBoard.setupTreasurePanel()	adding book
2017-01-04 19:12:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 19:12:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 19:12:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 19:12:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 19:12:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 19:12:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 19:12:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 19:12:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 19:12:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 19:12:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 19:12:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:41 AI_Player.update()	update
2017-01-04 19:12:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 19:12:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 19:12:42 AI_Player.update()	Search took1657ms
2017-01-04 19:12:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:42 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-04 19:12:42 AI_Player.update()		1011,	101,	1010,	1010,	111,	101,	1011
2017-01-04 19:12:42 AI_Player.update()		1110,	1010,	1110,	101,	111,	1110,	1011
2017-01-04 19:12:42 AI_Player.update()		1100,	1010,	1011,	101,	1110,	1011,	1100
2017-01-04 19:12:42 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 19:12:42 AI_Player.update()		110,	1100,	11,	1011,	1010,	1010,	1011
2017-01-04 19:12:42 AI_Player.update()		1100,	1011,	1101,	1110,	1101,	101,	1001
2017-01-04 19:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:42 GameBoard.setupTreasurePanel()	4 6
2017-01-04 19:12:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:43 AI_Player.update()	update
2017-01-04 19:12:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 19:12:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 19:12:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 19:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 19:12:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	5 6
2017-01-04 19:12:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	adding book
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 19:12:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	adding map
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 19:12:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:43 AI_Player.update()	update
2017-01-04 19:12:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 19:12:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-04 19:12:43 AI_Player.update()	Search took20ms
2017-01-04 19:12:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:43 AI_Player.update()		110,	101,	111,	11,	111,	11,	11
2017-01-04 19:12:43 AI_Player.update()		1011,	1010,	1010,	1010,	111,	101,	1011
2017-01-04 19:12:43 AI_Player.update()		1110,	1010,	1110,	101,	111,	1110,	1011
2017-01-04 19:12:43 AI_Player.update()		1100,	101,	1011,	101,	1110,	1011,	1100
2017-01-04 19:12:43 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-04 19:12:43 AI_Player.update()		110,	1011,	11,	1011,	1010,	1010,	1011
2017-01-04 19:12:43 AI_Player.update()		1100,	110,	1101,	1110,	1101,	101,	1001
2017-01-04 19:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	5 6
2017-01-04 19:12:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:43 AI_Player.update()	update
2017-01-04 19:12:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 19:12:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 19:12:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-04 19:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:43 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 19:12:43 AI_Player.update()	Player b has won!
2017-01-04 19:12:43 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 19:12:43 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 19:12:43 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 19:12:43 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-04 19:12:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	1 1
2017-01-04 19:12:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	adding book
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 19:12:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	adding map
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 19:12:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:43 AI_Player.update()	update
2017-01-04 19:12:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 19:12:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 19:12:43 AI_Player.update()	Search took47ms
2017-01-04 19:12:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:43 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-04 19:12:43 AI_Player.update()		1010,	1001,	110,	1010,	1011,	1100,	1001
2017-01-04 19:12:43 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-04 19:12:43 AI_Player.update()		101,	110,	101,	1100,	1001,	11,	11
2017-01-04 19:12:43 AI_Player.update()		1110,	101,	1101,	1011,	1011,	101,	1011
2017-01-04 19:12:43 AI_Player.update()		1100,	1001,	1001,	1101,	101,	101,	1001
2017-01-04 19:12:43 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	11,	1001
2017-01-04 19:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	1 1
2017-01-04 19:12:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:43 AI_Player.update()	update
2017-01-04 19:12:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 19:12:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 19:12:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 19:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 19:12:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	1 1
2017-01-04 19:12:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:43 AI_Player.update()	update
2017-01-04 19:12:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 19:12:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-04 19:12:43 AI_Player.update()	Search took4ms
2017-01-04 19:12:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:43 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-04 19:12:43 AI_Player.update()		1010,	1001,	110,	1010,	1011,	110,	1001
2017-01-04 19:12:43 AI_Player.update()		1110,	101,	1110,	1010,	111,	1100,	1011
2017-01-04 19:12:43 AI_Player.update()		101,	110,	101,	1100,	1001,	110,	11
2017-01-04 19:12:43 AI_Player.update()		1110,	101,	1101,	1011,	1011,	11,	1011
2017-01-04 19:12:43 AI_Player.update()		1100,	1001,	1001,	1101,	101,	101,	1001
2017-01-04 19:12:43 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	101,	1001
2017-01-04 19:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	1 1
2017-01-04 19:12:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:43 AI_Player.update()	update
2017-01-04 19:12:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 19:12:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 19:12:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-04 19:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	1 1
2017-01-04 19:12:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:43 AI_Player.update()	update
2017-01-04 19:12:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 19:12:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 19:12:43 AI_Player.update()	Search took74ms
2017-01-04 19:12:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:43 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-04 19:12:43 AI_Player.update()		1010,	1001,	110,	1010,	1011,	1100,	1001
2017-01-04 19:12:43 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-04 19:12:43 AI_Player.update()		101,	110,	101,	1100,	1001,	11,	11
2017-01-04 19:12:43 AI_Player.update()		1110,	101,	1101,	1011,	1011,	101,	1011
2017-01-04 19:12:43 AI_Player.update()		1100,	1001,	1001,	1101,	101,	101,	1001
2017-01-04 19:12:43 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	11,	1001
2017-01-04 19:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:43 GameBoard.setupTreasurePanel()	1 1
2017-01-04 19:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:44 AI_Player.update()	update
2017-01-04 19:12:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 19:12:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 19:12:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 19:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 19:12:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 19:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:44 AI_Player.update()	update
2017-01-04 19:12:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 19:12:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-04 19:12:44 AI_Player.update()	Search took4ms
2017-01-04 19:12:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:44 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-04 19:12:44 AI_Player.update()		1010,	1001,	110,	1010,	1011,	110,	1001
2017-01-04 19:12:44 AI_Player.update()		1110,	101,	1110,	1010,	111,	1100,	1011
2017-01-04 19:12:44 AI_Player.update()		101,	110,	101,	1100,	1001,	110,	11
2017-01-04 19:12:44 AI_Player.update()		1110,	101,	1101,	1011,	1011,	11,	1011
2017-01-04 19:12:44 AI_Player.update()		1100,	1001,	1001,	1101,	101,	101,	1001
2017-01-04 19:12:44 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	101,	1001
2017-01-04 19:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 19:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:44 AI_Player.update()	update
2017-01-04 19:12:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 19:12:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 19:12:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-04 19:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 19:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:44 AI_Player.update()	update
2017-01-04 19:12:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 19:12:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 19:12:44 AI_Player.update()	Search took52ms
2017-01-04 19:12:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:44 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 19:12:44 AI_Player.update()		1010,	1001,	110,	1010,	1011,	11,	1001
2017-01-04 19:12:44 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-04 19:12:44 AI_Player.update()		101,	110,	101,	1100,	1001,	1100,	11
2017-01-04 19:12:44 AI_Player.update()		1110,	101,	1101,	1011,	1011,	110,	1011
2017-01-04 19:12:44 AI_Player.update()		1100,	1001,	1001,	1101,	101,	11,	1001
2017-01-04 19:12:44 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	101,	1001
2017-01-04 19:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 19:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:44 AI_Player.update()	update
2017-01-04 19:12:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 19:12:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 19:12:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 19:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 19:12:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 19:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:44 AI_Player.update()	update
2017-01-04 19:12:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 19:12:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-04 19:12:44 AI_Player.update()	Search took7ms
2017-01-04 19:12:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:44 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 19:12:44 AI_Player.update()		1010,	1001,	110,	1010,	1011,	11,	1001
2017-01-04 19:12:44 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-04 19:12:44 AI_Player.update()		110,	101,	1100,	1001,	1100,	11,	101
2017-01-04 19:12:44 AI_Player.update()		1110,	101,	1101,	1011,	1011,	110,	1011
2017-01-04 19:12:44 AI_Player.update()		1100,	1001,	1001,	1101,	101,	11,	1001
2017-01-04 19:12:44 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	101,	1001
2017-01-04 19:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 19:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:44 AI_Player.update()	update
2017-01-04 19:12:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 19:12:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 19:12:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-04 19:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 19:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:44 AI_Player.update()	update
2017-01-04 19:12:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 19:12:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 19:12:44 AI_Player.update()	Search took59ms
2017-01-04 19:12:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:44 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 19:12:44 AI_Player.update()		1001,	110,	1010,	1011,	11,	1001,	1010
2017-01-04 19:12:44 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-04 19:12:44 AI_Player.update()		110,	101,	1100,	1001,	1100,	11,	101
2017-01-04 19:12:44 AI_Player.update()		1110,	101,	1101,	1011,	1011,	110,	1011
2017-01-04 19:12:44 AI_Player.update()		1100,	1001,	1001,	1101,	101,	11,	1001
2017-01-04 19:12:44 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	101,	1001
2017-01-04 19:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 19:12:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:45 AI_Player.update()	update
2017-01-04 19:12:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 19:12:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 19:12:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 19:12:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 19:12:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:45 GameBoard.setupTreasurePanel()	2 1
2017-01-04 19:12:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 19:12:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 19:12:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 19:12:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 19:12:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 19:12:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 19:12:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 19:12:45 GameBoard.setupTreasurePanel()	adding map
2017-01-04 19:12:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 19:12:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 19:12:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 19:12:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 19:12:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:45 AI_Player.update()	update
2017-01-04 19:12:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 19:12:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-04 19:12:45 AI_Player.update()	Search took4ms
2017-01-04 19:12:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:45 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 19:12:45 AI_Player.update()		1001,	110,	1010,	1011,	11,	1001,	1010
2017-01-04 19:12:45 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-04 19:12:45 AI_Player.update()		101,	110,	101,	1100,	1001,	1100,	11
2017-01-04 19:12:45 AI_Player.update()		1110,	101,	1101,	1011,	1011,	110,	1011
2017-01-04 19:12:45 AI_Player.update()		1100,	1001,	1001,	1101,	101,	11,	1001
2017-01-04 19:12:45 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	101,	1001
2017-01-04 19:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:45 GameBoard.setupTreasurePanel()	2 1
2017-01-04 19:12:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:45 AI_Player.update()	update
2017-01-04 19:12:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 19:12:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 19:12:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-04 19:12:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:45 GameBoard.setupTreasurePanel()	2 1
2017-01-04 19:12:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:45 AI_Player.update()	update
2017-01-04 19:12:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 19:12:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 19:12:45 AI_Player.update()	Search took221ms
2017-01-04 19:12:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:45 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 19:12:45 AI_Player.update()		1001,	101,	1010,	1011,	11,	1001,	1010
2017-01-04 19:12:45 AI_Player.update()		1110,	110,	1110,	1010,	111,	110,	1011
2017-01-04 19:12:45 AI_Player.update()		101,	101,	101,	1100,	1001,	1100,	11
2017-01-04 19:12:45 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	110,	1011
2017-01-04 19:12:45 AI_Player.update()		1100,	1010,	1001,	1101,	101,	11,	1001
2017-01-04 19:12:45 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	101,	1001
2017-01-04 19:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:45 GameBoard.setupTreasurePanel()	2 1
2017-01-04 19:12:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:45 AI_Player.update()	update
2017-01-04 19:12:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 19:12:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 19:12:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 19:12:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 19:12:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:45 GameBoard.setupTreasurePanel()	2 1
2017-01-04 19:12:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:45 AI_Player.update()	update
2017-01-04 19:12:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 19:12:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-04 19:12:45 AI_Player.update()	Search took3ms
2017-01-04 19:12:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:45 AI_Player.update()		110,	110,	111,	1011,	111,	101,	11
2017-01-04 19:12:45 AI_Player.update()		1001,	101,	1010,	1010,	11,	1001,	1010
2017-01-04 19:12:45 AI_Player.update()		1110,	110,	1110,	1100,	111,	110,	1011
2017-01-04 19:12:45 AI_Player.update()		101,	101,	101,	1011,	1001,	1100,	11
2017-01-04 19:12:45 AI_Player.update()		1110,	1001,	1101,	1101,	1011,	110,	1011
2017-01-04 19:12:45 AI_Player.update()		1100,	1010,	1001,	1110,	101,	11,	1001
2017-01-04 19:12:45 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-04 19:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:45 GameBoard.setupTreasurePanel()	2 1
2017-01-04 19:12:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:45 AI_Player.update()	update
2017-01-04 19:12:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 19:12:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 19:12:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-04 19:12:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:45 GameBoard.setupTreasurePanel()	2 1
2017-01-04 19:12:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:46 AI_Player.update()	update
2017-01-04 19:12:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 19:12:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 19:12:46 AI_Player.update()	Search took158ms
2017-01-04 19:12:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:46 AI_Player.update()		110,	110,	111,	1011,	111,	1001,	11
2017-01-04 19:12:46 AI_Player.update()		1001,	101,	1010,	1010,	11,	110,	1010
2017-01-04 19:12:46 AI_Player.update()		1110,	110,	1110,	1100,	111,	1100,	1011
2017-01-04 19:12:46 AI_Player.update()		101,	101,	101,	1011,	1001,	110,	11
2017-01-04 19:12:46 AI_Player.update()		1110,	1001,	1101,	1101,	1011,	11,	1011
2017-01-04 19:12:46 AI_Player.update()		1100,	1010,	1001,	1110,	101,	101,	1001
2017-01-04 19:12:46 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-04 19:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 19:12:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:46 AI_Player.update()	update
2017-01-04 19:12:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 19:12:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 19:12:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 19:12:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 19:12:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:46 GameBoard.setupTreasurePanel()	3 1
2017-01-04 19:12:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 19:12:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 19:12:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 19:12:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 19:12:46 GameBoard.setupTreasurePanel()	adding book
2017-01-04 19:12:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 19:12:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 19:12:46 GameBoard.setupTreasurePanel()	adding map
2017-01-04 19:12:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 19:12:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 19:12:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 19:12:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 19:12:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:46 AI_Player.update()	update
2017-01-04 19:12:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 19:12:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-04 19:12:46 AI_Player.update()	Search took5ms
2017-01-04 19:12:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:46 AI_Player.update()		110,	101,	111,	1011,	111,	1001,	11
2017-01-04 19:12:46 AI_Player.update()		1001,	110,	1010,	1010,	11,	110,	1010
2017-01-04 19:12:46 AI_Player.update()		1110,	101,	1110,	1100,	111,	1100,	1011
2017-01-04 19:12:46 AI_Player.update()		101,	1001,	101,	1011,	1001,	110,	11
2017-01-04 19:12:46 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-04 19:12:46 AI_Player.update()		1100,	1010,	1001,	1110,	101,	101,	1001
2017-01-04 19:12:46 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 19:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:46 GameBoard.setupTreasurePanel()	3 1
2017-01-04 19:12:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:46 AI_Player.update()	update
2017-01-04 19:12:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 19:12:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 19:12:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-04 19:12:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:46 GameBoard.setupTreasurePanel()	3 1
2017-01-04 19:12:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:46 AI_Player.update()	update
2017-01-04 19:12:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 19:12:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 19:12:46 AI_Player.update()	Search took80ms
2017-01-04 19:12:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:46 AI_Player.update()		110,	101,	111,	1011,	111,	1001,	11
2017-01-04 19:12:46 AI_Player.update()		1001,	110,	1010,	1010,	11,	110,	1010
2017-01-04 19:12:46 AI_Player.update()		1110,	101,	1110,	1100,	111,	1100,	1011
2017-01-04 19:12:46 AI_Player.update()		101,	1001,	101,	1011,	1001,	110,	11
2017-01-04 19:12:46 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-04 19:12:46 AI_Player.update()		1001,	1100,	1010,	1001,	1110,	101,	101
2017-01-04 19:12:46 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 19:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:46 GameBoard.setupTreasurePanel()	3 1
2017-01-04 19:12:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:46 AI_Player.update()	update
2017-01-04 19:12:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 19:12:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 19:12:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 19:12:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 19:12:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:46 GameBoard.setupTreasurePanel()	3 1
2017-01-04 19:12:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:46 AI_Player.update()	update
2017-01-04 19:12:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 19:12:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-04 19:12:46 AI_Player.update()	Search took6ms
2017-01-04 19:12:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:46 AI_Player.update()		110,	110,	111,	1011,	111,	1001,	11
2017-01-04 19:12:46 AI_Player.update()		1001,	101,	1010,	1010,	11,	110,	1010
2017-01-04 19:12:46 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1100,	1011
2017-01-04 19:12:46 AI_Player.update()		101,	1010,	101,	1011,	1001,	110,	11
2017-01-04 19:12:46 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	11,	1011
2017-01-04 19:12:46 AI_Player.update()		1001,	110,	1010,	1001,	1110,	101,	101
2017-01-04 19:12:46 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 19:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:46 GameBoard.setupTreasurePanel()	3 1
2017-01-04 19:12:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:46 AI_Player.update()	update
2017-01-04 19:12:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 19:12:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 19:12:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-04 19:12:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:46 GameBoard.setupTreasurePanel()	3 1
2017-01-04 19:12:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:47 AI_Player.update()	update
2017-01-04 19:12:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 19:12:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 19:12:47 AI_Player.update()	Search took371ms
2017-01-04 19:12:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:47 AI_Player.update()		110,	110,	111,	1011,	111,	1001,	11
2017-01-04 19:12:47 AI_Player.update()		1001,	101,	1010,	1010,	11,	110,	1010
2017-01-04 19:12:47 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1100,	1011
2017-01-04 19:12:47 AI_Player.update()		11,	101,	1010,	101,	1011,	1001,	110
2017-01-04 19:12:47 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	11,	1011
2017-01-04 19:12:47 AI_Player.update()		1001,	110,	1010,	1001,	1110,	101,	101
2017-01-04 19:12:47 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 19:12:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:47 GameBoard.setupTreasurePanel()	3 1
2017-01-04 19:12:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:47 AI_Player.update()	update
2017-01-04 19:12:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 19:12:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 19:12:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 19:12:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 19:12:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:47 GameBoard.setupTreasurePanel()	4 1
2017-01-04 19:12:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 19:12:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 19:12:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 19:12:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 19:12:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 19:12:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 19:12:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 19:12:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 19:12:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 19:12:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 19:12:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 19:12:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 19:12:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:47 AI_Player.update()	update
2017-01-04 19:12:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 19:12:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-04 19:12:47 AI_Player.update()	Search took6ms
2017-01-04 19:12:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:47 AI_Player.update()		110,	101,	111,	1011,	111,	1001,	11
2017-01-04 19:12:47 AI_Player.update()		1001,	1001,	1010,	1010,	11,	110,	1010
2017-01-04 19:12:47 AI_Player.update()		1110,	101,	1110,	1100,	111,	1100,	1011
2017-01-04 19:12:47 AI_Player.update()		11,	1100,	1010,	101,	1011,	1001,	110
2017-01-04 19:12:47 AI_Player.update()		1110,	110,	1101,	1101,	1011,	11,	1011
2017-01-04 19:12:47 AI_Player.update()		1001,	101,	1010,	1001,	1110,	101,	101
2017-01-04 19:12:47 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 19:12:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:47 GameBoard.setupTreasurePanel()	4 1
2017-01-04 19:12:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:47 AI_Player.update()	update
2017-01-04 19:12:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 19:12:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 19:12:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-04 19:12:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:47 GameBoard.setupTreasurePanel()	4 1
2017-01-04 19:12:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:47 AI_Player.update()	update
2017-01-04 19:12:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 19:12:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 19:12:48 AI_Player.update()	Search took751ms
2017-01-04 19:12:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:48 AI_Player.update()		110,	1001,	111,	1011,	111,	1001,	11
2017-01-04 19:12:48 AI_Player.update()		1001,	101,	1010,	1010,	11,	110,	1010
2017-01-04 19:12:48 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1100,	1011
2017-01-04 19:12:48 AI_Player.update()		11,	110,	1010,	101,	1011,	1001,	110
2017-01-04 19:12:48 AI_Player.update()		1110,	101,	1101,	1101,	1011,	11,	1011
2017-01-04 19:12:48 AI_Player.update()		1001,	110,	1010,	1001,	1110,	101,	101
2017-01-04 19:12:48 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 19:12:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:48 GameBoard.setupTreasurePanel()	4 1
2017-01-04 19:12:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:48 AI_Player.update()	update
2017-01-04 19:12:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 19:12:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 19:12:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 19:12:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 19:12:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:48 GameBoard.setupTreasurePanel()	4 1
2017-01-04 19:12:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:48 AI_Player.update()	update
2017-01-04 19:12:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 19:12:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-04 19:12:48 AI_Player.update()	Search took4ms
2017-01-04 19:12:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:48 AI_Player.update()		110,	101,	111,	1011,	111,	1001,	11
2017-01-04 19:12:48 AI_Player.update()		1001,	1100,	1010,	1010,	11,	110,	1010
2017-01-04 19:12:48 AI_Player.update()		1110,	110,	1110,	1100,	111,	1100,	1011
2017-01-04 19:12:48 AI_Player.update()		11,	101,	1010,	101,	1011,	1001,	110
2017-01-04 19:12:48 AI_Player.update()		1110,	110,	1101,	1101,	1011,	11,	1011
2017-01-04 19:12:48 AI_Player.update()		1001,	101,	1010,	1001,	1110,	101,	101
2017-01-04 19:12:48 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-04 19:12:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:48 GameBoard.setupTreasurePanel()	4 1
2017-01-04 19:12:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:48 AI_Player.update()	update
2017-01-04 19:12:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 19:12:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 19:12:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-04 19:12:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:48 GameBoard.setupTreasurePanel()	4 1
2017-01-04 19:12:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:49 AI_Player.update()	update
2017-01-04 19:12:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 19:12:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-04 19:12:49 AI_Player.update()	Search took723ms
2017-01-04 19:12:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:49 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-04 19:12:49 AI_Player.update()		1001,	1100,	1010,	1100,	11,	110,	1010
2017-01-04 19:12:49 AI_Player.update()		1110,	110,	1110,	101,	111,	1100,	1011
2017-01-04 19:12:49 AI_Player.update()		11,	101,	1010,	1101,	1011,	1001,	110
2017-01-04 19:12:49 AI_Player.update()		1110,	110,	1101,	1001,	1011,	11,	1011
2017-01-04 19:12:49 AI_Player.update()		1001,	101,	1010,	1010,	1110,	101,	101
2017-01-04 19:12:49 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	101,	1001
2017-01-04 19:12:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:49 GameBoard.setupTreasurePanel()	4 1
2017-01-04 19:12:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:49 AI_Player.update()	update
2017-01-04 19:12:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 19:12:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 19:12:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-04 19:12:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 19:12:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 19:12:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:49 GameBoard.setupTreasurePanel()	5 1
2017-01-04 19:12:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 19:12:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 19:12:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 19:12:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 19:12:49 GameBoard.setupTreasurePanel()	adding book
2017-01-04 19:12:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 19:12:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 19:12:49 GameBoard.setupTreasurePanel()	adding map
2017-01-04 19:12:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 19:12:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 19:12:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 19:12:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 19:12:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:50 AI_Player.update()	update
2017-01-04 19:12:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 19:12:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-04 19:12:50 AI_Player.update()	Search took2ms
2017-01-04 19:12:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 19:12:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:50 AI_Player.update()		110,	1100,	111,	1010,	111,	1001,	11
2017-01-04 19:12:50 AI_Player.update()		1001,	110,	1010,	1100,	11,	110,	1010
2017-01-04 19:12:50 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-04 19:12:50 AI_Player.update()		11,	110,	1010,	1101,	1011,	1001,	110
2017-01-04 19:12:50 AI_Player.update()		1110,	101,	1101,	1001,	1011,	11,	1011
2017-01-04 19:12:50 AI_Player.update()		1001,	1001,	1010,	1010,	1110,	101,	101
2017-01-04 19:12:50 AI_Player.update()		1100,	101,	1101,	1011,	1101,	101,	1001
2017-01-04 19:12:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 19:12:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 19:12:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:50 GameBoard.setupTreasurePanel()	5 1
2017-01-04 19:12:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:50 AI_Player.update()	update
2017-01-04 19:12:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 19:12:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 19:12:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-04 19:12:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 19:12:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 19:12:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 19:12:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 19:12:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 19:12:50 GameBoard.setupTreasurePanel()	5 1
2017-01-04 19:12:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 19:12:50 AI_Player.update()	update
2017-01-04 19:12:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
