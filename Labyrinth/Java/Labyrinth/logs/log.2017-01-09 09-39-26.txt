2017-01-09 09:39:26 GameBoard.<init>()	Hello World!
2017-01-09 09:39:26 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-09 09:39:26 QueryProlog.initialise()	setup(h2/h3). suceeded
2017-01-09 09:39:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:26 GameBoard.setupBoardFromString()	Board created
2017-01-09 09:39:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 09:39:26 GameBoard.initialise()	[sword, gold, map, crown, candle]
2017-01-09 09:39:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 09:39:26 GameBoard.initialise()	[chest, keys, helmet, gem, ring]
2017-01-09 09:39:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:26 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-09 09:39:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:26 GameBoard.setupTreasurePanel()	1 1
2017-01-09 09:39:26 GameBoard.setupTreasurePanel()	null
2017-01-09 09:39:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 09:39:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 09:39:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 09:39:26 GameBoard.setupTreasurePanel()	adding map
2017-01-09 09:39:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 09:39:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 09:39:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 09:39:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 09:39:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 09:39:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 09:39:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 09:39:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 09:39:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:26 AI_Player.update()	update
2017-01-09 09:39:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 09:39:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 09:39:26 AI_Player.update()	Search took52ms
2017-01-09 09:39:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:26 AI_Player.update()		110,	1010,	111,	111,	111,	11,	11
2017-01-09 09:39:26 AI_Player.update()		1101,	101,	110,	111,	110,	101,	110
2017-01-09 09:39:26 AI_Player.update()		1110,	101,	1110,	1100,	111,	1100,	1011
2017-01-09 09:39:26 AI_Player.update()		1010,	1100,	1010,	1110,	1010,	110,	101
2017-01-09 09:39:26 AI_Player.update()		1110,	1001,	1101,	111,	1011,	101,	1011
2017-01-09 09:39:26 AI_Player.update()		110,	11,	11,	101,	11,	110,	110
2017-01-09 09:39:26 AI_Player.update()		1100,	110,	1101,	11,	1101,	111,	1001
2017-01-09 09:39:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:26 GameBoard.setupTreasurePanel()	1 1
2017-01-09 09:39:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 09:39:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 09:39:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 09:39:26 GameBoard.setupTreasurePanel()	adding map
2017-01-09 09:39:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 09:39:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 09:39:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 09:39:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 09:39:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 09:39:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 09:39:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 09:39:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 09:39:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:27 AI_Player.update()	update
2017-01-09 09:39:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 09:39:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 09:39:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 09:39:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 09:39:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:27 GameBoard.setupTreasurePanel()	1 1
2017-01-09 09:39:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:27 AI_Player.update()	update
2017-01-09 09:39:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 09:39:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 09:39:27 AI_Player.update()	Search took72ms
2017-01-09 09:39:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:27 AI_Player.update()		110,	1010,	111,	111,	111,	101,	11
2017-01-09 09:39:27 AI_Player.update()		1101,	101,	110,	111,	110,	1100,	110
2017-01-09 09:39:27 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-09 09:39:27 AI_Player.update()		1010,	1100,	1010,	1110,	1010,	101,	101
2017-01-09 09:39:27 AI_Player.update()		1110,	1001,	1101,	111,	1011,	110,	1011
2017-01-09 09:39:27 AI_Player.update()		110,	11,	11,	101,	11,	111,	110
2017-01-09 09:39:27 AI_Player.update()		1100,	110,	1101,	11,	1101,	11,	1001
2017-01-09 09:39:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:27 GameBoard.setupTreasurePanel()	1 1
2017-01-09 09:39:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:27 AI_Player.update()	update
2017-01-09 09:39:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 09:39:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 09:39:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 09:39:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:27 GameBoard.setupTreasurePanel()	1 1
2017-01-09 09:39:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:27 AI_Player.update()	update
2017-01-09 09:39:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 09:39:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 09:39:27 AI_Player.update()	Search took111ms
2017-01-09 09:39:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:27 AI_Player.update()		110,	1010,	111,	111,	111,	101,	11
2017-01-09 09:39:27 AI_Player.update()		1101,	101,	110,	1100,	110,	1100,	110
2017-01-09 09:39:27 AI_Player.update()		1110,	101,	1110,	1110,	111,	110,	1011
2017-01-09 09:39:27 AI_Player.update()		1010,	1100,	1010,	111,	1010,	101,	101
2017-01-09 09:39:27 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-09 09:39:27 AI_Player.update()		110,	11,	11,	11,	11,	111,	110
2017-01-09 09:39:27 AI_Player.update()		1100,	110,	1101,	111,	1101,	11,	1001
2017-01-09 09:39:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:27 GameBoard.setupTreasurePanel()	1 1
2017-01-09 09:39:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:27 AI_Player.update()	update
2017-01-09 09:39:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 09:39:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 09:39:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 09:39:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 09:39:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:27 GameBoard.setupTreasurePanel()	1 1
2017-01-09 09:39:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:27 AI_Player.update()	update
2017-01-09 09:39:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 09:39:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 09:39:27 AI_Player.update()	Search took166ms
2017-01-09 09:39:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:27 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-09 09:39:27 AI_Player.update()		1101,	101,	110,	1110,	110,	1100,	110
2017-01-09 09:39:27 AI_Player.update()		1110,	101,	1110,	111,	111,	110,	1011
2017-01-09 09:39:27 AI_Player.update()		1010,	1100,	1010,	101,	1010,	101,	101
2017-01-09 09:39:27 AI_Player.update()		1110,	1001,	1101,	11,	1011,	110,	1011
2017-01-09 09:39:27 AI_Player.update()		110,	11,	11,	111,	11,	111,	110
2017-01-09 09:39:28 AI_Player.update()		1100,	110,	1101,	111,	1101,	11,	1001
2017-01-09 09:39:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	1 1
2017-01-09 09:39:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:28 AI_Player.update()	update
2017-01-09 09:39:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 09:39:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 09:39:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 09:39:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	1 1
2017-01-09 09:39:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:28 AI_Player.update()	update
2017-01-09 09:39:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 09:39:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 09:39:28 AI_Player.update()	Search took68ms
2017-01-09 09:39:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:28 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-09 09:39:28 AI_Player.update()		1101,	101,	110,	1110,	110,	1100,	110
2017-01-09 09:39:28 AI_Player.update()		1110,	1100,	1110,	111,	111,	110,	1011
2017-01-09 09:39:28 AI_Player.update()		1010,	1001,	1010,	101,	1010,	101,	101
2017-01-09 09:39:28 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-09 09:39:28 AI_Player.update()		110,	110,	11,	111,	11,	111,	110
2017-01-09 09:39:28 AI_Player.update()		1100,	1010,	1101,	111,	1101,	11,	1001
2017-01-09 09:39:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	1 1
2017-01-09 09:39:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:28 AI_Player.update()	update
2017-01-09 09:39:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 09:39:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 09:39:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 09:39:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 09:39:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	2 1
2017-01-09 09:39:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	adding map
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 09:39:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 09:39:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:28 AI_Player.update()	update
2017-01-09 09:39:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 09:39:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 09:39:28 AI_Player.update()	Search took230ms
2017-01-09 09:39:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:28 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-09 09:39:28 AI_Player.update()		1101,	101,	110,	111,	110,	1100,	110
2017-01-09 09:39:28 AI_Player.update()		1110,	1100,	1110,	101,	111,	110,	1011
2017-01-09 09:39:28 AI_Player.update()		1010,	1001,	1010,	11,	1010,	101,	101
2017-01-09 09:39:28 AI_Player.update()		1110,	11,	1101,	111,	1011,	110,	1011
2017-01-09 09:39:28 AI_Player.update()		110,	110,	11,	111,	11,	111,	110
2017-01-09 09:39:28 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-09 09:39:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	2 1
2017-01-09 09:39:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:28 AI_Player.update()	update
2017-01-09 09:39:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 09:39:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 09:39:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 09:39:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	2 2
2017-01-09 09:39:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	adding map
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 09:39:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 09:39:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 09:39:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:28 AI_Player.update()	update
2017-01-09 09:39:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 09:39:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 09:39:29 AI_Player.update()	Search took73ms
2017-01-09 09:39:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:29 AI_Player.update()		110,	101,	111,	1110,	111,	11,	11
2017-01-09 09:39:29 AI_Player.update()		1101,	101,	110,	111,	110,	101,	110
2017-01-09 09:39:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-09 09:39:29 AI_Player.update()		1010,	1001,	1010,	11,	1010,	110,	101
2017-01-09 09:39:29 AI_Player.update()		1110,	11,	1101,	111,	1011,	101,	1011
2017-01-09 09:39:29 AI_Player.update()		110,	110,	11,	111,	11,	110,	110
2017-01-09 09:39:29 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	111,	1001
2017-01-09 09:39:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:29 GameBoard.setupTreasurePanel()	2 2
2017-01-09 09:39:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:29 AI_Player.update()	update
2017-01-09 09:39:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 09:39:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 09:39:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 09:39:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 09:39:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:29 GameBoard.setupTreasurePanel()	2 2
2017-01-09 09:39:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:29 AI_Player.update()	update
2017-01-09 09:39:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 09:39:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 09:39:29 AI_Player.update()	Search took251ms
2017-01-09 09:39:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:29 AI_Player.update()		110,	101,	111,	1110,	111,	11,	11
2017-01-09 09:39:29 AI_Player.update()		110,	1101,	101,	110,	111,	110,	101
2017-01-09 09:39:29 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-09 09:39:29 AI_Player.update()		1010,	1001,	1010,	11,	1010,	110,	101
2017-01-09 09:39:29 AI_Player.update()		1110,	11,	1101,	111,	1011,	101,	1011
2017-01-09 09:39:29 AI_Player.update()		110,	110,	11,	111,	11,	110,	110
2017-01-09 09:39:29 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	111,	1001
2017-01-09 09:39:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:29 GameBoard.setupTreasurePanel()	2 2
2017-01-09 09:39:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:29 AI_Player.update()	update
2017-01-09 09:39:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 09:39:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 09:39:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 09:39:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:29 GameBoard.setupTreasurePanel()	2 3
2017-01-09 09:39:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 09:39:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 09:39:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 09:39:29 GameBoard.setupTreasurePanel()	adding map
2017-01-09 09:39:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 09:39:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 09:39:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 09:39:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 09:39:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 09:39:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 09:39:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 09:39:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 09:39:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:29 AI_Player.update()	update
2017-01-09 09:39:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 09:39:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 09:39:29 AI_Player.update()	Search took120ms
2017-01-09 09:39:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:29 AI_Player.update()		110,	1010,	111,	1110,	111,	11,	11
2017-01-09 09:39:29 AI_Player.update()		110,	101,	101,	110,	111,	110,	101
2017-01-09 09:39:29 AI_Player.update()		1110,	1101,	1110,	101,	111,	1100,	1011
2017-01-09 09:39:29 AI_Player.update()		1010,	1100,	1010,	11,	1010,	110,	101
2017-01-09 09:39:29 AI_Player.update()		1110,	1001,	1101,	111,	1011,	101,	1011
2017-01-09 09:39:29 AI_Player.update()		110,	11,	11,	111,	11,	110,	110
2017-01-09 09:39:29 AI_Player.update()		1100,	110,	1101,	1100,	1101,	111,	1001
2017-01-09 09:39:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:29 GameBoard.setupTreasurePanel()	2 3
2017-01-09 09:39:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:29 AI_Player.update()	update
2017-01-09 09:39:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 09:39:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 09:39:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 09:39:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 09:39:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:29 GameBoard.setupTreasurePanel()	2 3
2017-01-09 09:39:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:30 AI_Player.update()	update
2017-01-09 09:39:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 09:39:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 09:39:30 AI_Player.update()	Search took188ms
2017-01-09 09:39:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:30 AI_Player.update()		110,	1010,	111,	1110,	111,	11,	11
2017-01-09 09:39:30 AI_Player.update()		110,	101,	101,	110,	111,	110,	101
2017-01-09 09:39:30 AI_Player.update()		1110,	1101,	1110,	101,	111,	1100,	1011
2017-01-09 09:39:30 AI_Player.update()		1100,	1010,	11,	1010,	110,	101,	1010
2017-01-09 09:39:30 AI_Player.update()		1110,	1001,	1101,	111,	1011,	101,	1011
2017-01-09 09:39:30 AI_Player.update()		110,	11,	11,	111,	11,	110,	110
2017-01-09 09:39:30 AI_Player.update()		1100,	110,	1101,	1100,	1101,	111,	1001
2017-01-09 09:39:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:30 GameBoard.setupTreasurePanel()	2 3
2017-01-09 09:39:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:30 AI_Player.update()	update
2017-01-09 09:39:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 09:39:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 09:39:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 09:39:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:30 GameBoard.setupTreasurePanel()	2 4
2017-01-09 09:39:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 09:39:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 09:39:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 09:39:30 GameBoard.setupTreasurePanel()	adding map
2017-01-09 09:39:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 09:39:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 09:39:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 09:39:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 09:39:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 09:39:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 09:39:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 09:39:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 09:39:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:30 AI_Player.update()	update
2017-01-09 09:39:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 09:39:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 09:39:30 AI_Player.update()	Search took145ms
2017-01-09 09:39:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:30 AI_Player.update()		110,	1010,	111,	110,	111,	11,	11
2017-01-09 09:39:30 AI_Player.update()		110,	101,	101,	101,	111,	110,	101
2017-01-09 09:39:30 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1100,	1011
2017-01-09 09:39:30 AI_Player.update()		1100,	1010,	11,	111,	110,	101,	1010
2017-01-09 09:39:30 AI_Player.update()		1110,	1001,	1101,	111,	1011,	101,	1011
2017-01-09 09:39:30 AI_Player.update()		110,	11,	11,	1100,	11,	110,	110
2017-01-09 09:39:30 AI_Player.update()		1100,	110,	1101,	1110,	1101,	111,	1001
2017-01-09 09:39:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:30 GameBoard.setupTreasurePanel()	2 4
2017-01-09 09:39:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:30 AI_Player.update()	update
2017-01-09 09:39:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 09:39:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 09:39:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 09:39:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 09:39:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:30 GameBoard.setupTreasurePanel()	2 4
2017-01-09 09:39:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:30 AI_Player.update()	update
2017-01-09 09:39:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 09:39:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 09:39:30 AI_Player.update()	Search took44ms
2017-01-09 09:39:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:30 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-09 09:39:30 AI_Player.update()		110,	101,	101,	1010,	111,	110,	101
2017-01-09 09:39:30 AI_Player.update()		1110,	1101,	1110,	111,	111,	1100,	1011
2017-01-09 09:39:30 AI_Player.update()		1100,	1010,	11,	111,	110,	101,	1010
2017-01-09 09:39:30 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	101,	1011
2017-01-09 09:39:30 AI_Player.update()		110,	11,	11,	1110,	11,	110,	110
2017-01-09 09:39:30 AI_Player.update()		1100,	110,	1101,	110,	1101,	111,	1001
2017-01-09 09:39:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:30 GameBoard.setupTreasurePanel()	2 4
2017-01-09 09:39:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:30 AI_Player.update()	update
2017-01-09 09:39:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 09:39:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 09:39:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 09:39:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:30 GameBoard.setupTreasurePanel()	2 4
2017-01-09 09:39:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:31 AI_Player.update()	update
2017-01-09 09:39:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 09:39:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 09:39:31 AI_Player.update()	Search took142ms
2017-01-09 09:39:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:31 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-09 09:39:31 AI_Player.update()		110,	1101,	101,	1010,	111,	110,	101
2017-01-09 09:39:31 AI_Player.update()		1110,	1010,	1110,	111,	111,	1100,	1011
2017-01-09 09:39:31 AI_Player.update()		1100,	1001,	11,	111,	110,	101,	1010
2017-01-09 09:39:31 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-09 09:39:31 AI_Player.update()		110,	110,	11,	1110,	11,	110,	110
2017-01-09 09:39:31 AI_Player.update()		1100,	1010,	1101,	110,	1101,	111,	1001
2017-01-09 09:39:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:31 GameBoard.setupTreasurePanel()	2 4
2017-01-09 09:39:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:31 AI_Player.update()	update
2017-01-09 09:39:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 09:39:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 09:39:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 09:39:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 09:39:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:31 GameBoard.setupTreasurePanel()	2 4
2017-01-09 09:39:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:31 AI_Player.update()	update
2017-01-09 09:39:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 09:39:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 09:39:31 AI_Player.update()	Search took93ms
2017-01-09 09:39:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:31 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-09 09:39:31 AI_Player.update()		110,	1101,	101,	1010,	111,	110,	101
2017-01-09 09:39:31 AI_Player.update()		1110,	1010,	1110,	111,	111,	1100,	1011
2017-01-09 09:39:31 AI_Player.update()		1001,	11,	111,	110,	101,	1010,	1100
2017-01-09 09:39:31 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-09 09:39:31 AI_Player.update()		110,	110,	11,	1110,	11,	110,	110
2017-01-09 09:39:31 AI_Player.update()		1100,	1010,	1101,	110,	1101,	111,	1001
2017-01-09 09:39:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:31 GameBoard.setupTreasurePanel()	2 4
2017-01-09 09:39:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:31 AI_Player.update()	update
2017-01-09 09:39:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 09:39:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 09:39:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 09:39:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:31 GameBoard.setupTreasurePanel()	2 4
2017-01-09 09:39:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:31 AI_Player.update()	update
2017-01-09 09:39:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 09:39:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 09:39:31 AI_Player.update()	Search took126ms
2017-01-09 09:39:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:31 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-09 09:39:31 AI_Player.update()		1101,	101,	1010,	111,	110,	101,	110
2017-01-09 09:39:31 AI_Player.update()		1110,	1010,	1110,	111,	111,	1100,	1011
2017-01-09 09:39:31 AI_Player.update()		1001,	11,	111,	110,	101,	1010,	1100
2017-01-09 09:39:31 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-09 09:39:31 AI_Player.update()		110,	110,	11,	1110,	11,	110,	110
2017-01-09 09:39:31 AI_Player.update()		1100,	1010,	1101,	110,	1101,	111,	1001
2017-01-09 09:39:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:31 GameBoard.setupTreasurePanel()	2 4
2017-01-09 09:39:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:31 AI_Player.update()	update
2017-01-09 09:39:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 09:39:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 09:39:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 09:39:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 09:39:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:31 GameBoard.setupTreasurePanel()	3 4
2017-01-09 09:39:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 09:39:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 09:39:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 09:39:31 GameBoard.setupTreasurePanel()	adding map
2017-01-09 09:39:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 09:39:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 09:39:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 09:39:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 09:39:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 09:39:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 09:39:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 09:39:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 09:39:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:32 AI_Player.update()	update
2017-01-09 09:39:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 09:39:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 09:39:32 AI_Player.update()	Search took213ms
2017-01-09 09:39:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:32 AI_Player.update()		110,	101,	111,	110,	111,	11,	11
2017-01-09 09:39:32 AI_Player.update()		1101,	101,	1010,	101,	110,	101,	110
2017-01-09 09:39:32 AI_Player.update()		1110,	1010,	1110,	111,	111,	1100,	1011
2017-01-09 09:39:32 AI_Player.update()		1001,	11,	111,	111,	101,	1010,	1100
2017-01-09 09:39:32 AI_Player.update()		1110,	11,	1101,	110,	1011,	101,	1011
2017-01-09 09:39:32 AI_Player.update()		110,	110,	11,	1100,	11,	110,	110
2017-01-09 09:39:32 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	111,	1001
2017-01-09 09:39:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:32 GameBoard.setupTreasurePanel()	3 4
2017-01-09 09:39:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:32 AI_Player.update()	update
2017-01-09 09:39:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 09:39:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 09:39:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 09:39:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:32 GameBoard.setupTreasurePanel()	3 5
2017-01-09 09:39:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 09:39:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 09:39:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 09:39:32 GameBoard.setupTreasurePanel()	adding map
2017-01-09 09:39:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 09:39:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 09:39:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 09:39:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 09:39:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 09:39:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 09:39:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 09:39:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 09:39:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:32 AI_Player.update()	update
2017-01-09 09:39:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 09:39:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 09:39:32 AI_Player.update()	Search took119ms
2017-01-09 09:39:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:32 AI_Player.update()		110,	101,	111,	110,	111,	11,	11
2017-01-09 09:39:32 AI_Player.update()		1101,	1010,	1010,	101,	110,	101,	110
2017-01-09 09:39:32 AI_Player.update()		1110,	11,	1110,	111,	111,	1100,	1011
2017-01-09 09:39:32 AI_Player.update()		1001,	11,	111,	111,	101,	1010,	1100
2017-01-09 09:39:32 AI_Player.update()		1110,	110,	1101,	110,	1011,	101,	1011
2017-01-09 09:39:32 AI_Player.update()		110,	1010,	11,	1100,	11,	110,	110
2017-01-09 09:39:32 AI_Player.update()		1100,	101,	1101,	1110,	1101,	111,	1001
2017-01-09 09:39:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:32 GameBoard.setupTreasurePanel()	3 5
2017-01-09 09:39:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:32 AI_Player.update()	update
2017-01-09 09:39:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 09:39:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 09:39:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 09:39:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 09:39:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:32 GameBoard.setupTreasurePanel()	3 5
2017-01-09 09:39:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:32 AI_Player.update()	update
2017-01-09 09:39:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 09:39:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 09:39:32 AI_Player.update()	Search took114ms
2017-01-09 09:39:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:32 AI_Player.update()		110,	1010,	111,	110,	111,	11,	11
2017-01-09 09:39:32 AI_Player.update()		1101,	11,	1010,	101,	110,	101,	110
2017-01-09 09:39:32 AI_Player.update()		1110,	11,	1110,	111,	111,	1100,	1011
2017-01-09 09:39:32 AI_Player.update()		1001,	110,	111,	111,	101,	1010,	1100
2017-01-09 09:39:32 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-09 09:39:32 AI_Player.update()		110,	101,	11,	1100,	11,	110,	110
2017-01-09 09:39:32 AI_Player.update()		1100,	101,	1101,	1110,	1101,	111,	1001
2017-01-09 09:39:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:32 GameBoard.setupTreasurePanel()	3 5
2017-01-09 09:39:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:33 AI_Player.update()	update
2017-01-09 09:39:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 09:39:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 09:39:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 09:39:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:33 GameBoard.setupTreasurePanel()	3 5
2017-01-09 09:39:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:33 AI_Player.update()	update
2017-01-09 09:39:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 09:39:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 09:39:33 AI_Player.update()	Search took125ms
2017-01-09 09:39:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:33 AI_Player.update()		110,	1010,	111,	110,	111,	11,	11
2017-01-09 09:39:33 AI_Player.update()		110,	1101,	11,	1010,	101,	110,	101
2017-01-09 09:39:33 AI_Player.update()		1110,	11,	1110,	111,	111,	1100,	1011
2017-01-09 09:39:33 AI_Player.update()		1001,	110,	111,	111,	101,	1010,	1100
2017-01-09 09:39:33 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-09 09:39:33 AI_Player.update()		110,	101,	11,	1100,	11,	110,	110
2017-01-09 09:39:33 AI_Player.update()		1100,	101,	1101,	1110,	1101,	111,	1001
2017-01-09 09:39:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:33 GameBoard.setupTreasurePanel()	3 5
2017-01-09 09:39:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:33 AI_Player.update()	update
2017-01-09 09:39:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 09:39:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 09:39:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 09:39:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 09:39:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:33 GameBoard.setupTreasurePanel()	4 5
2017-01-09 09:39:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 09:39:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 09:39:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 09:39:33 GameBoard.setupTreasurePanel()	adding map
2017-01-09 09:39:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 09:39:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 09:39:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 09:39:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 09:39:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 09:39:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 09:39:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 09:39:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 09:39:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:33 AI_Player.update()	update
2017-01-09 09:39:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 09:39:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 09:39:33 AI_Player.update()	Search took157ms
2017-01-09 09:39:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:33 AI_Player.update()		110,	1010,	111,	110,	111,	11,	11
2017-01-09 09:39:33 AI_Player.update()		110,	1101,	11,	1010,	101,	110,	101
2017-01-09 09:39:33 AI_Player.update()		1110,	11,	1110,	111,	111,	1100,	1011
2017-01-09 09:39:33 AI_Player.update()		1100,	1001,	110,	111,	111,	101,	1010
2017-01-09 09:39:33 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-09 09:39:33 AI_Player.update()		110,	101,	11,	1100,	11,	110,	110
2017-01-09 09:39:33 AI_Player.update()		1100,	101,	1101,	1110,	1101,	111,	1001
2017-01-09 09:39:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:33 GameBoard.setupTreasurePanel()	4 5
2017-01-09 09:39:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:33 AI_Player.update()	update
2017-01-09 09:39:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 09:39:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 09:39:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 09:39:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:33 GameBoard.setupTreasurePanel()	4 5
2017-01-09 09:39:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:33 AI_Player.update()	update
2017-01-09 09:39:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 09:39:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 09:39:34 AI_Player.update()	Search took211ms
2017-01-09 09:39:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:34 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-09 09:39:34 AI_Player.update()		110,	1101,	11,	111,	101,	110,	101
2017-01-09 09:39:34 AI_Player.update()		1110,	11,	1110,	111,	111,	1100,	1011
2017-01-09 09:39:34 AI_Player.update()		1100,	1001,	110,	110,	111,	101,	1010
2017-01-09 09:39:34 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-09 09:39:34 AI_Player.update()		110,	101,	11,	1110,	11,	110,	110
2017-01-09 09:39:34 AI_Player.update()		1100,	101,	1101,	110,	1101,	111,	1001
2017-01-09 09:39:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:34 GameBoard.setupTreasurePanel()	4 5
2017-01-09 09:39:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:34 AI_Player.update()	update
2017-01-09 09:39:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 09:39:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 09:39:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 09:39:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 09:39:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:34 GameBoard.setupTreasurePanel()	4 5
2017-01-09 09:39:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:34 AI_Player.update()	update
2017-01-09 09:39:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 09:39:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 09:39:34 AI_Player.update()	Search took192ms
2017-01-09 09:39:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:34 AI_Player.update()		110,	1101,	111,	1010,	111,	11,	11
2017-01-09 09:39:34 AI_Player.update()		110,	11,	11,	111,	101,	110,	101
2017-01-09 09:39:34 AI_Player.update()		1110,	1001,	1110,	111,	111,	1100,	1011
2017-01-09 09:39:34 AI_Player.update()		1100,	1010,	110,	110,	111,	101,	1010
2017-01-09 09:39:34 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-09 09:39:34 AI_Player.update()		110,	101,	11,	1110,	11,	110,	110
2017-01-09 09:39:34 AI_Player.update()		1100,	1010,	1101,	110,	1101,	111,	1001
2017-01-09 09:39:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:34 GameBoard.setupTreasurePanel()	4 5
2017-01-09 09:39:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:34 AI_Player.update()	update
2017-01-09 09:39:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 09:39:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 09:39:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 09:39:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:34 GameBoard.setupTreasurePanel()	4 5
2017-01-09 09:39:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:34 AI_Player.update()	update
2017-01-09 09:39:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 09:39:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 09:39:34 AI_Player.update()	Search took180ms
2017-01-09 09:39:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:34 AI_Player.update()		110,	1101,	111,	110,	111,	11,	11
2017-01-09 09:39:34 AI_Player.update()		110,	11,	11,	1010,	101,	110,	101
2017-01-09 09:39:34 AI_Player.update()		1110,	1001,	1110,	111,	111,	1100,	1011
2017-01-09 09:39:34 AI_Player.update()		1100,	1010,	110,	111,	111,	101,	1010
2017-01-09 09:39:34 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-09 09:39:34 AI_Player.update()		110,	101,	11,	1100,	11,	110,	110
2017-01-09 09:39:34 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	111,	1001
2017-01-09 09:39:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:34 GameBoard.setupTreasurePanel()	4 5
2017-01-09 09:39:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:34 AI_Player.update()	update
2017-01-09 09:39:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 09:39:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 09:39:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 09:39:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 09:39:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:34 GameBoard.setupTreasurePanel()	5 5
2017-01-09 09:39:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 09:39:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 09:39:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 09:39:34 GameBoard.setupTreasurePanel()	adding map
2017-01-09 09:39:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 09:39:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 09:39:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 09:39:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 09:39:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 09:39:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 09:39:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 09:39:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 09:39:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:35 AI_Player.update()	update
2017-01-09 09:39:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 09:39:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 09:39:35 AI_Player.update()	Search took74ms
2017-01-09 09:39:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:35 AI_Player.update()		110,	1101,	111,	110,	111,	110,	11
2017-01-09 09:39:35 AI_Player.update()		110,	11,	11,	1010,	101,	1100,	101
2017-01-09 09:39:35 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-09 09:39:35 AI_Player.update()		1100,	1010,	110,	111,	111,	101,	1010
2017-01-09 09:39:35 AI_Player.update()		1110,	101,	1101,	110,	1011,	110,	1011
2017-01-09 09:39:35 AI_Player.update()		110,	101,	11,	1100,	11,	111,	110
2017-01-09 09:39:35 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	11,	1001
2017-01-09 09:39:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:35 GameBoard.setupTreasurePanel()	5 5
2017-01-09 09:39:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:35 AI_Player.update()	update
2017-01-09 09:39:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 09:39:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 09:39:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 09:39:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:35 GameBoard.setupTreasurePanel()	5 6
2017-01-09 09:39:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 09:39:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 09:39:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 09:39:35 GameBoard.setupTreasurePanel()	adding map
2017-01-09 09:39:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 09:39:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 09:39:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 09:39:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 09:39:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 09:39:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 09:39:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 09:39:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 09:39:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:35 AI_Player.update()	update
2017-01-09 09:39:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 09:39:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 09:39:35 AI_Player.update()	Search took267ms
2017-01-09 09:39:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:35 AI_Player.update()		110,	1101,	111,	110,	111,	110,	11
2017-01-09 09:39:35 AI_Player.update()		110,	11,	11,	1010,	101,	1100,	101
2017-01-09 09:39:35 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-09 09:39:35 AI_Player.update()		1010,	110,	111,	111,	101,	1010,	1100
2017-01-09 09:39:35 AI_Player.update()		1110,	101,	1101,	110,	1011,	110,	1011
2017-01-09 09:39:35 AI_Player.update()		110,	101,	11,	1100,	11,	111,	110
2017-01-09 09:39:35 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	11,	1001
2017-01-09 09:39:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:35 GameBoard.setupTreasurePanel()	5 6
2017-01-09 09:39:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:35 AI_Player.update()	update
2017-01-09 09:39:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 09:39:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 09:39:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 09:39:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 09:39:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:35 GameBoard.setupTreasurePanel()	5 6
2017-01-09 09:39:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:35 AI_Player.update()	update
2017-01-09 09:39:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 09:39:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 09:39:35 AI_Player.update()	Search took54ms
2017-01-09 09:39:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:35 AI_Player.update()		110,	1101,	111,	110,	111,	110,	11
2017-01-09 09:39:35 AI_Player.update()		11,	11,	1010,	101,	1100,	101,	110
2017-01-09 09:39:35 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-09 09:39:35 AI_Player.update()		1010,	110,	111,	111,	101,	1010,	1100
2017-01-09 09:39:35 AI_Player.update()		1110,	101,	1101,	110,	1011,	110,	1011
2017-01-09 09:39:35 AI_Player.update()		110,	101,	11,	1100,	11,	111,	110
2017-01-09 09:39:35 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	11,	1001
2017-01-09 09:39:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:35 GameBoard.setupTreasurePanel()	5 6
2017-01-09 09:39:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:35 AI_Player.update()	update
2017-01-09 09:39:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 09:39:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 09:39:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 09:39:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:35 GameBoard.setupTreasurePanel()	5 6
2017-01-09 09:39:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:36 AI_Player.update()	update
2017-01-09 09:39:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 09:39:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 09:39:36 AI_Player.update()	Search took247ms
2017-01-09 09:39:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:36 AI_Player.update()		110,	1101,	111,	110,	111,	110,	11
2017-01-09 09:39:36 AI_Player.update()		11,	11,	1010,	101,	1100,	101,	110
2017-01-09 09:39:36 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-09 09:39:36 AI_Player.update()		110,	111,	111,	101,	1010,	1100,	1010
2017-01-09 09:39:36 AI_Player.update()		1110,	101,	1101,	110,	1011,	110,	1011
2017-01-09 09:39:36 AI_Player.update()		110,	101,	11,	1100,	11,	111,	110
2017-01-09 09:39:36 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	11,	1001
2017-01-09 09:39:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:36 GameBoard.setupTreasurePanel()	5 6
2017-01-09 09:39:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:36 AI_Player.update()	update
2017-01-09 09:39:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 09:39:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 09:39:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 09:39:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 09:39:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:39:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:36 GameBoard.setupTreasurePanel()	6 6
2017-01-09 09:39:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 09:39:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-09 09:39:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 09:39:36 GameBoard.setupTreasurePanel()	adding map
2017-01-09 09:39:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 09:39:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 09:39:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 09:39:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 09:39:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 09:39:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 09:39:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 09:39:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 09:39:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:36 AI_Player.update()	update
2017-01-09 09:39:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 09:39:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 09:39:36 AI_Player.update()	Search took197ms
2017-01-09 09:39:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:39:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:36 AI_Player.update()		110,	1101,	111,	110,	111,	110,	11
2017-01-09 09:39:36 AI_Player.update()		110,	11,	11,	1010,	101,	1100,	101
2017-01-09 09:39:36 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-09 09:39:36 AI_Player.update()		110,	111,	111,	101,	1010,	1100,	1010
2017-01-09 09:39:36 AI_Player.update()		1110,	101,	1101,	110,	1011,	110,	1011
2017-01-09 09:39:36 AI_Player.update()		110,	101,	11,	1100,	11,	111,	110
2017-01-09 09:39:36 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	11,	1001
2017-01-09 09:39:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:39:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:39:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-09 09:39:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:39:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:39:36 GameBoard.setupTreasurePanel()	6 6
2017-01-09 09:39:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:39:36 AI_Player.update()	update
2017-01-09 09:39:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-09 09:39:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-09 09:39:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-09 09:39:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:39:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:39:36 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-09 09:39:36 AI_Player.update()	Player b has won!
2017-01-09 09:39:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 09:40:13 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-09 09:40:13 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-09 09:40:13 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-09 09:40:13 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-09 09:40:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:40:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:40:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:40:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:40:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:40:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:40:13 GameBoard.setupTreasurePanel()	1 1
2017-01-09 09:40:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 09:40:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 09:40:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 09:40:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 09:40:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 09:40:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 09:40:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 09:40:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 09:40:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 09:40:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 09:40:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 09:40:13 GameBoard.setupTreasurePanel()	adding map
2017-01-09 09:40:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:40:13 AI_Player.update()	update
2017-01-09 09:40:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-09 09:40:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-09 09:40:13 AI_Player.update()	Search took587ms
2017-01-09 09:40:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:40:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:40:13 AI_Player.update()		110,	101,	111,	11,	111,	1001,	11
2017-01-09 09:40:13 AI_Player.update()		110,	1011,	1010,	1011,	111,	111,	1001
2017-01-09 09:40:13 AI_Player.update()		1110,	11,	1110,	1101,	111,	1010,	1011
2017-01-09 09:40:13 AI_Player.update()		101,	1011,	1001,	1010,	1011,	1100,	1001
2017-01-09 09:40:13 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-09 09:40:13 AI_Player.update()		1001,	101,	11,	1100,	110,	1010,	1110
2017-01-09 09:40:13 AI_Player.update()		1100,	110,	1101,	1101,	1101,	110,	1001
2017-01-09 09:40:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:40:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-09 09:40:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:40:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:40:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:40:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:40:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:40:13 GameBoard.setupTreasurePanel()	1 1
2017-01-09 09:40:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:40:13 AI_Player.update()	update
2017-01-09 09:40:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-09 09:40:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-09 09:40:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-09 09:40:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-09 09:40:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-09 09:40:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-09 09:40:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-09 09:40:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-09 09:40:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-09 09:40:13 GameBoard.setupTreasurePanel()	2 1
2017-01-09 09:40:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-09 09:40:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-09 09:40:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-09 09:40:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-09 09:40:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-09 09:40:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-09 09:40:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-09 09:40:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-09 09:40:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-09 09:40:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-09 09:40:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-09 09:40:13 GameBoard.setupTreasurePanel()	adding map
2017-01-09 09:40:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-09 09:40:13 AI_Player.update()	update
2017-01-09 09:40:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-09 09:40:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-09 09:40:14 AI_Player.update()	Search took246ms
2017-01-09 09:40:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-09 09:40:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-09 09:40:14 AI_Player.update()		110,	1011,	111,	11,	111,	1001,	11
2017-01-09 09:40:14 AI_Player.update()		110,	11,	1010,	1011,	111,	111,	1001
2017-01-09 09:40:14 AI_Player.update()		1110,	1011,	1110,	1101,	111,	1010,	1011
2017-01-09 09:40:14 AI_Player.update()		101,	110,	1001,	1010,	1011,	1100,	1001
2017-01-09 09:40:14 AI_Player.update()		1110,	101,	1101,	1001,	1011,	110,	1011
2017-01-09 09:40:14 AI_Player.update()		1001,	110,	11,	1100,	110,	1010,	1110
2017-01-09 09:40:14 AI_Player.update()		1100,	101,	1101,	1101,	1101,	110,	1001
2017-01-09 09:40:14 AI_Player.update()	----------------------------------------------------------------------
