2017-01-07 13:38:15 GameBoard.<init>()	Hello World!
2017-01-07 13:38:15 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-07 13:38:15 QueryProlog.initialise()	setup(h2/h3). suceeded
2017-01-07 13:38:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:15 GameBoard.setupBoardFromString()	Board created
2017-01-07 13:38:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:15 GameBoard.initialise()	[fairy, ring, gem, candle, helmet]
2017-01-07 13:38:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:15 GameBoard.initialise()	[sword, keys, map, crown, book]
2017-01-07 13:38:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:15 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-07 13:38:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	1 1
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	null
2017-01-07 13:38:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:15 AI_Player.update()	update
2017-01-07 13:38:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:15 AI_Player.update()	Search took52ms
2017-01-07 13:38:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:15 AI_Player.update()		110,	1101,	111,	110,	111,	101,	11
2017-01-07 13:38:15 AI_Player.update()		111,	110,	101,	110,	1010,	1010,	101
2017-01-07 13:38:15 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-07 13:38:15 AI_Player.update()		111,	1110,	11,	1010,	1001,	1100,	1101
2017-01-07 13:38:15 AI_Player.update()		1110,	1011,	1101,	110,	1011,	1010,	1011
2017-01-07 13:38:15 AI_Player.update()		1010,	1110,	101,	1101,	1100,	1001,	101
2017-01-07 13:38:15 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-07 13:38:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	1 1
2017-01-07 13:38:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:15 AI_Player.update()	update
2017-01-07 13:38:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	1 1
2017-01-07 13:38:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:15 AI_Player.update()	update
2017-01-07 13:38:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:15 AI_Player.update()	Search took99ms
2017-01-07 13:38:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:15 AI_Player.update()		110,	1101,	111,	110,	111,	101,	11
2017-01-07 13:38:15 AI_Player.update()		110,	101,	110,	1010,	1010,	101,	111
2017-01-07 13:38:15 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-07 13:38:15 AI_Player.update()		111,	1110,	11,	1010,	1001,	1100,	1101
2017-01-07 13:38:15 AI_Player.update()		1110,	1011,	1101,	110,	1011,	1010,	1011
2017-01-07 13:38:15 AI_Player.update()		1010,	1110,	101,	1101,	1100,	1001,	101
2017-01-07 13:38:15 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-07 13:38:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	1 1
2017-01-07 13:38:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:15 AI_Player.update()	update
2017-01-07 13:38:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	1 1
2017-01-07 13:38:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:15 AI_Player.update()	update
2017-01-07 13:38:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:15 AI_Player.update()	Search took137ms
2017-01-07 13:38:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:15 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-07 13:38:15 AI_Player.update()		110,	110,	110,	1010,	1010,	101,	111
2017-01-07 13:38:15 AI_Player.update()		1110,	1110,	1110,	101,	111,	110,	1011
2017-01-07 13:38:15 AI_Player.update()		111,	1011,	11,	1010,	1001,	1100,	1101
2017-01-07 13:38:15 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1010,	1011
2017-01-07 13:38:15 AI_Player.update()		1010,	1001,	101,	1101,	1100,	1001,	101
2017-01-07 13:38:15 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	101,	1001
2017-01-07 13:38:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	1 1
2017-01-07 13:38:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:15 AI_Player.update()	update
2017-01-07 13:38:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:15 AI_Player.update()	update
2017-01-07 13:38:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:15 AI_Player.update()	Search took76ms
2017-01-07 13:38:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:15 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-07 13:38:15 AI_Player.update()		110,	110,	1010,	1010,	101,	111,	110
2017-01-07 13:38:15 AI_Player.update()		1110,	1110,	1110,	101,	111,	110,	1011
2017-01-07 13:38:15 AI_Player.update()		111,	1011,	11,	1010,	1001,	1100,	1101
2017-01-07 13:38:15 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1010,	1011
2017-01-07 13:38:15 AI_Player.update()		1010,	1001,	101,	1101,	1100,	1001,	101
2017-01-07 13:38:15 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	101,	1001
2017-01-07 13:38:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:15 AI_Player.update()	update
2017-01-07 13:38:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	2 2
2017-01-07 13:38:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:15 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:15 AI_Player.update()	update
2017-01-07 13:38:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:16 AI_Player.update()	Search took543ms
2017-01-07 13:38:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:16 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-07 13:38:16 AI_Player.update()		110,	110,	1010,	110,	101,	111,	110
2017-01-07 13:38:16 AI_Player.update()		1110,	1110,	1110,	1010,	111,	110,	1011
2017-01-07 13:38:16 AI_Player.update()		111,	1011,	11,	101,	1001,	1100,	1101
2017-01-07 13:38:16 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-07 13:38:16 AI_Player.update()		1010,	1001,	101,	110,	1100,	1001,	101
2017-01-07 13:38:16 AI_Player.update()		1100,	1101,	1101,	1101,	1101,	101,	1001
2017-01-07 13:38:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:16 GameBoard.setupTreasurePanel()	2 2
2017-01-07 13:38:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:16 AI_Player.update()	update
2017-01-07 13:38:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:16 GameBoard.setupTreasurePanel()	2 2
2017-01-07 13:38:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:16 AI_Player.update()	update
2017-01-07 13:38:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:16 AI_Player.update()	Search took197ms
2017-01-07 13:38:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:16 AI_Player.update()		110,	101,	111,	1010,	111,	111,	11
2017-01-07 13:38:16 AI_Player.update()		110,	110,	1010,	110,	101,	110,	110
2017-01-07 13:38:16 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1100,	1011
2017-01-07 13:38:16 AI_Player.update()		111,	1011,	11,	101,	1001,	1010,	1101
2017-01-07 13:38:16 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1001,	1011
2017-01-07 13:38:16 AI_Player.update()		1010,	1001,	101,	110,	1100,	101,	101
2017-01-07 13:38:16 AI_Player.update()		1100,	1101,	1101,	1101,	1101,	101,	1001
2017-01-07 13:38:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:16 GameBoard.setupTreasurePanel()	2 2
2017-01-07 13:38:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:16 AI_Player.update()	update
2017-01-07 13:38:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:16 GameBoard.setupTreasurePanel()	2 3
2017-01-07 13:38:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:16 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:16 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:16 AI_Player.update()	update
2017-01-07 13:38:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:17 AI_Player.update()	Search took561ms
2017-01-07 13:38:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:17 AI_Player.update()		110,	1101,	111,	1010,	111,	111,	11
2017-01-07 13:38:17 AI_Player.update()		110,	101,	1010,	110,	101,	110,	110
2017-01-07 13:38:17 AI_Player.update()		1110,	110,	1110,	1010,	111,	1100,	1011
2017-01-07 13:38:17 AI_Player.update()		111,	1110,	11,	101,	1001,	1010,	1101
2017-01-07 13:38:17 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1001,	1011
2017-01-07 13:38:17 AI_Player.update()		1010,	1110,	101,	110,	1100,	101,	101
2017-01-07 13:38:17 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	101,	1001
2017-01-07 13:38:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:17 GameBoard.setupTreasurePanel()	2 3
2017-01-07 13:38:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:17 AI_Player.update()	update
2017-01-07 13:38:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:17 GameBoard.setupTreasurePanel()	2 3
2017-01-07 13:38:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:17 AI_Player.update()	update
2017-01-07 13:38:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:17 AI_Player.update()	Search took85ms
2017-01-07 13:38:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:17 AI_Player.update()		110,	1101,	111,	1010,	111,	111,	11
2017-01-07 13:38:17 AI_Player.update()		110,	101,	1010,	110,	101,	110,	110
2017-01-07 13:38:17 AI_Player.update()		1110,	110,	1110,	1010,	111,	1100,	1011
2017-01-07 13:38:17 AI_Player.update()		1101,	111,	1110,	11,	101,	1001,	1010
2017-01-07 13:38:17 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1001,	1011
2017-01-07 13:38:17 AI_Player.update()		1010,	1110,	101,	110,	1100,	101,	101
2017-01-07 13:38:17 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	101,	1001
2017-01-07 13:38:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:17 GameBoard.setupTreasurePanel()	2 3
2017-01-07 13:38:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:17 AI_Player.update()	update
2017-01-07 13:38:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:17 GameBoard.setupTreasurePanel()	2 3
2017-01-07 13:38:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:17 AI_Player.update()	update
2017-01-07 13:38:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:17 AI_Player.update()	Search took279ms
2017-01-07 13:38:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:17 AI_Player.update()		110,	1001,	111,	1010,	111,	111,	11
2017-01-07 13:38:17 AI_Player.update()		110,	1101,	1010,	110,	101,	110,	110
2017-01-07 13:38:17 AI_Player.update()		1110,	101,	1110,	1010,	111,	1100,	1011
2017-01-07 13:38:17 AI_Player.update()		1101,	110,	1110,	11,	101,	1001,	1010
2017-01-07 13:38:17 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1001,	1011
2017-01-07 13:38:17 AI_Player.update()		1010,	1011,	101,	110,	1100,	101,	101
2017-01-07 13:38:17 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	101,	1001
2017-01-07 13:38:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:17 GameBoard.setupTreasurePanel()	2 3
2017-01-07 13:38:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:17 AI_Player.update()	update
2017-01-07 13:38:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:17 GameBoard.setupTreasurePanel()	2 3
2017-01-07 13:38:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:17 AI_Player.update()	update
2017-01-07 13:38:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:17 AI_Player.update()	Search took31ms
2017-01-07 13:38:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:17 AI_Player.update()		110,	1110,	111,	1010,	111,	111,	11
2017-01-07 13:38:17 AI_Player.update()		110,	1001,	1010,	110,	101,	110,	110
2017-01-07 13:38:17 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1100,	1011
2017-01-07 13:38:17 AI_Player.update()		1101,	101,	1110,	11,	101,	1001,	1010
2017-01-07 13:38:17 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1001,	1011
2017-01-07 13:38:17 AI_Player.update()		1010,	111,	101,	110,	1100,	101,	101
2017-01-07 13:38:17 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	101,	1001
2017-01-07 13:38:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:17 GameBoard.setupTreasurePanel()	2 3
2017-01-07 13:38:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:17 AI_Player.update()	update
2017-01-07 13:38:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:17 GameBoard.setupTreasurePanel()	2 3
2017-01-07 13:38:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:17 AI_Player.update()	update
2017-01-07 13:38:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:18 AI_Player.update()	Search took385ms
2017-01-07 13:38:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:18 AI_Player.update()		110,	1001,	111,	1010,	111,	111,	11
2017-01-07 13:38:18 AI_Player.update()		110,	1101,	1010,	110,	101,	110,	110
2017-01-07 13:38:18 AI_Player.update()		1110,	101,	1110,	1010,	111,	1100,	1011
2017-01-07 13:38:18 AI_Player.update()		1101,	110,	1110,	11,	101,	1001,	1010
2017-01-07 13:38:18 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1001,	1011
2017-01-07 13:38:18 AI_Player.update()		1010,	1011,	101,	110,	1100,	101,	101
2017-01-07 13:38:18 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	101,	1001
2017-01-07 13:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:18 GameBoard.setupTreasurePanel()	2 3
2017-01-07 13:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:18 AI_Player.update()	update
2017-01-07 13:38:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:18 GameBoard.setupTreasurePanel()	2 3
2017-01-07 13:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:18 AI_Player.update()	update
2017-01-07 13:38:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:18 AI_Player.update()	Search took34ms
2017-01-07 13:38:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:18 AI_Player.update()		110,	1110,	111,	1010,	111,	111,	11
2017-01-07 13:38:18 AI_Player.update()		110,	1001,	1010,	110,	101,	110,	110
2017-01-07 13:38:18 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1100,	1011
2017-01-07 13:38:18 AI_Player.update()		1101,	101,	1110,	11,	101,	1001,	1010
2017-01-07 13:38:18 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1001,	1011
2017-01-07 13:38:18 AI_Player.update()		1010,	111,	101,	110,	1100,	101,	101
2017-01-07 13:38:18 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	101,	1001
2017-01-07 13:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:18 GameBoard.setupTreasurePanel()	2 3
2017-01-07 13:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:18 AI_Player.update()	update
2017-01-07 13:38:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:18 GameBoard.setupTreasurePanel()	2 3
2017-01-07 13:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:18 AI_Player.update()	update
2017-01-07 13:38:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:18 AI_Player.update()	Search took254ms
2017-01-07 13:38:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:18 AI_Player.update()		110,	1110,	111,	1010,	111,	111,	11
2017-01-07 13:38:18 AI_Player.update()		110,	110,	1001,	1010,	110,	101,	110
2017-01-07 13:38:18 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1100,	1011
2017-01-07 13:38:18 AI_Player.update()		1101,	101,	1110,	11,	101,	1001,	1010
2017-01-07 13:38:18 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1001,	1011
2017-01-07 13:38:18 AI_Player.update()		1010,	111,	101,	110,	1100,	101,	101
2017-01-07 13:38:18 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	101,	1001
2017-01-07 13:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:18 GameBoard.setupTreasurePanel()	2 3
2017-01-07 13:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:18 AI_Player.update()	update
2017-01-07 13:38:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:18 GameBoard.setupTreasurePanel()	2 3
2017-01-07 13:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:18 AI_Player.update()	update
2017-01-07 13:38:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:18 AI_Player.update()	Search took21ms
2017-01-07 13:38:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:18 AI_Player.update()		110,	110,	111,	1010,	111,	111,	11
2017-01-07 13:38:18 AI_Player.update()		110,	1101,	1001,	1010,	110,	101,	110
2017-01-07 13:38:18 AI_Player.update()		1110,	101,	1110,	1010,	111,	1100,	1011
2017-01-07 13:38:18 AI_Player.update()		1101,	110,	1110,	11,	101,	1001,	1010
2017-01-07 13:38:18 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1001,	1011
2017-01-07 13:38:18 AI_Player.update()		1010,	1011,	101,	110,	1100,	101,	101
2017-01-07 13:38:18 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	101,	1001
2017-01-07 13:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:18 GameBoard.setupTreasurePanel()	2 3
2017-01-07 13:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:18 AI_Player.update()	update
2017-01-07 13:38:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:18 GameBoard.setupTreasurePanel()	2 3
2017-01-07 13:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:18 AI_Player.update()	update
2017-01-07 13:38:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:18 AI_Player.update()	Search took445ms
2017-01-07 13:38:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:18 AI_Player.update()		110,	110,	111,	1010,	111,	111,	11
2017-01-07 13:38:18 AI_Player.update()		110,	110,	1101,	1001,	1010,	110,	101
2017-01-07 13:38:18 AI_Player.update()		1110,	101,	1110,	1010,	111,	1100,	1011
2017-01-07 13:38:18 AI_Player.update()		1101,	110,	1110,	11,	101,	1001,	1010
2017-01-07 13:38:18 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1001,	1011
2017-01-07 13:38:18 AI_Player.update()		1010,	1011,	101,	110,	1100,	101,	101
2017-01-07 13:38:18 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	101,	1001
2017-01-07 13:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:18 GameBoard.setupTreasurePanel()	2 3
2017-01-07 13:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:18 AI_Player.update()	update
2017-01-07 13:38:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:18 GameBoard.setupTreasurePanel()	2 3
2017-01-07 13:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:18 AI_Player.update()	update
2017-01-07 13:38:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:18 AI_Player.update()	Search took9ms
2017-01-07 13:38:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:18 AI_Player.update()		110,	110,	111,	1010,	111,	111,	11
2017-01-07 13:38:18 AI_Player.update()		110,	101,	1101,	1001,	1010,	110,	101
2017-01-07 13:38:18 AI_Player.update()		1110,	110,	1110,	1010,	111,	1100,	1011
2017-01-07 13:38:18 AI_Player.update()		1101,	111,	1110,	11,	101,	1001,	1010
2017-01-07 13:38:18 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1001,	1011
2017-01-07 13:38:18 AI_Player.update()		1010,	1110,	101,	110,	1100,	101,	101
2017-01-07 13:38:18 AI_Player.update()		1100,	110,	1101,	1101,	1101,	101,	1001
2017-01-07 13:38:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:18 GameBoard.setupTreasurePanel()	2 3
2017-01-07 13:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:18 AI_Player.update()	update
2017-01-07 13:38:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:18 GameBoard.setupTreasurePanel()	2 3
2017-01-07 13:38:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:18 AI_Player.update()	update
2017-01-07 13:38:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:19 AI_Player.update()	Search took245ms
2017-01-07 13:38:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:19 AI_Player.update()		110,	110,	111,	1101,	111,	111,	11
2017-01-07 13:38:19 AI_Player.update()		110,	101,	1101,	1010,	1010,	110,	101
2017-01-07 13:38:19 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-07 13:38:19 AI_Player.update()		1101,	111,	1110,	1010,	101,	1001,	1010
2017-01-07 13:38:19 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1001,	1011
2017-01-07 13:38:19 AI_Player.update()		1010,	1110,	101,	1010,	1100,	101,	101
2017-01-07 13:38:19 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-07 13:38:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	2 3
2017-01-07 13:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:19 AI_Player.update()	update
2017-01-07 13:38:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	3 3
2017-01-07 13:38:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:19 AI_Player.update()	update
2017-01-07 13:38:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:19 AI_Player.update()	Search took44ms
2017-01-07 13:38:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:19 AI_Player.update()		110,	110,	111,	1101,	111,	111,	11
2017-01-07 13:38:19 AI_Player.update()		101,	1101,	1010,	1010,	110,	101,	110
2017-01-07 13:38:19 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-07 13:38:19 AI_Player.update()		1101,	111,	1110,	1010,	101,	1001,	1010
2017-01-07 13:38:19 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1001,	1011
2017-01-07 13:38:19 AI_Player.update()		1010,	1110,	101,	1010,	1100,	101,	101
2017-01-07 13:38:19 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-07 13:38:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	3 3
2017-01-07 13:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:19 AI_Player.update()	update
2017-01-07 13:38:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	3 3
2017-01-07 13:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:19 AI_Player.update()	update
2017-01-07 13:38:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:19 AI_Player.update()	Search took413ms
2017-01-07 13:38:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:19 AI_Player.update()		110,	110,	111,	1101,	111,	111,	11
2017-01-07 13:38:19 AI_Player.update()		101,	1101,	1010,	1010,	110,	101,	110
2017-01-07 13:38:19 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-07 13:38:19 AI_Player.update()		1101,	111,	1110,	1010,	101,	1001,	1010
2017-01-07 13:38:19 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1001,	1011
2017-01-07 13:38:19 AI_Player.update()		101,	1010,	1110,	101,	1010,	1100,	101
2017-01-07 13:38:19 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-07 13:38:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	3 3
2017-01-07 13:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:19 AI_Player.update()	update
2017-01-07 13:38:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	4 3
2017-01-07 13:38:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:19 AI_Player.update()	update
2017-01-07 13:38:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:19 AI_Player.update()	Search took50ms
2017-01-07 13:38:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:19 AI_Player.update()		110,	110,	111,	1101,	111,	111,	11
2017-01-07 13:38:19 AI_Player.update()		1101,	1010,	1010,	110,	101,	110,	101
2017-01-07 13:38:19 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-07 13:38:19 AI_Player.update()		1101,	111,	1110,	1010,	101,	1001,	1010
2017-01-07 13:38:19 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1001,	1011
2017-01-07 13:38:19 AI_Player.update()		101,	1010,	1110,	101,	1010,	1100,	101
2017-01-07 13:38:19 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-07 13:38:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	4 3
2017-01-07 13:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:19 AI_Player.update()	update
2017-01-07 13:38:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:19 GameBoard.setupTreasurePanel()	4 3
2017-01-07 13:38:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:19 AI_Player.update()	update
2017-01-07 13:38:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:20 AI_Player.update()	Search took382ms
2017-01-07 13:38:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()		110,	110,	111,	1101,	111,	111,	11
2017-01-07 13:38:20 AI_Player.update()		101,	1101,	1010,	1010,	110,	101,	110
2017-01-07 13:38:20 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-07 13:38:20 AI_Player.update()		1101,	111,	1110,	1010,	101,	1001,	1010
2017-01-07 13:38:20 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1001,	1011
2017-01-07 13:38:20 AI_Player.update()		101,	1010,	1110,	101,	1010,	1100,	101
2017-01-07 13:38:20 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-07 13:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	4 3
2017-01-07 13:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()	update
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	4 3
2017-01-07 13:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()	update
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:20 AI_Player.update()	Search took40ms
2017-01-07 13:38:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()		110,	110,	111,	1101,	111,	111,	11
2017-01-07 13:38:20 AI_Player.update()		1101,	1010,	1010,	110,	101,	110,	101
2017-01-07 13:38:20 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-07 13:38:20 AI_Player.update()		1101,	111,	1110,	1010,	101,	1001,	1010
2017-01-07 13:38:20 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1001,	1011
2017-01-07 13:38:20 AI_Player.update()		101,	1010,	1110,	101,	1010,	1100,	101
2017-01-07 13:38:20 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-07 13:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	4 3
2017-01-07 13:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()	update
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	4 3
2017-01-07 13:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()	update
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:20 AI_Player.update()	Search took180ms
2017-01-07 13:38:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()		110,	110,	111,	1101,	111,	111,	11
2017-01-07 13:38:20 AI_Player.update()		1101,	110,	1010,	110,	101,	110,	101
2017-01-07 13:38:20 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1100,	1011
2017-01-07 13:38:20 AI_Player.update()		1101,	110,	1110,	1010,	101,	1001,	1010
2017-01-07 13:38:20 AI_Player.update()		1110,	111,	1101,	11,	1011,	1001,	1011
2017-01-07 13:38:20 AI_Player.update()		101,	1011,	1110,	101,	1010,	1100,	101
2017-01-07 13:38:20 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-07 13:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	4 3
2017-01-07 13:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()	update
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()	update
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:20 AI_Player.update()	Search took16ms
2017-01-07 13:38:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()		110,	110,	111,	1101,	111,	111,	11
2017-01-07 13:38:20 AI_Player.update()		1101,	1010,	1010,	110,	101,	110,	101
2017-01-07 13:38:20 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-07 13:38:20 AI_Player.update()		1101,	111,	1110,	1010,	101,	1001,	1010
2017-01-07 13:38:20 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1001,	1011
2017-01-07 13:38:20 AI_Player.update()		101,	1010,	1110,	101,	1010,	1100,	101
2017-01-07 13:38:20 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-07 13:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()	update
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()	update
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:20 AI_Player.update()	Search took87ms
2017-01-07 13:38:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()		110,	110,	111,	1101,	111,	111,	11
2017-01-07 13:38:20 AI_Player.update()		101,	1101,	1010,	1010,	110,	101,	110
2017-01-07 13:38:20 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-07 13:38:20 AI_Player.update()		1101,	111,	1110,	1010,	101,	1001,	1010
2017-01-07 13:38:20 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1001,	1011
2017-01-07 13:38:20 AI_Player.update()		101,	1010,	1110,	101,	1010,	1100,	101
2017-01-07 13:38:20 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-07 13:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()	update
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()	update
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:20 AI_Player.update()	Search took40ms
2017-01-07 13:38:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()		110,	110,	111,	1101,	111,	111,	11
2017-01-07 13:38:20 AI_Player.update()		1101,	1010,	1010,	110,	101,	110,	101
2017-01-07 13:38:20 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-07 13:38:20 AI_Player.update()		1101,	111,	1110,	1010,	101,	1001,	1010
2017-01-07 13:38:20 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1001,	1011
2017-01-07 13:38:20 AI_Player.update()		101,	1010,	1110,	101,	1010,	1100,	101
2017-01-07 13:38:20 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-07 13:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()	update
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()	update
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:20 AI_Player.update()	Search took117ms
2017-01-07 13:38:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()		110,	110,	111,	1101,	111,	111,	11
2017-01-07 13:38:20 AI_Player.update()		101,	1101,	1010,	1010,	110,	101,	110
2017-01-07 13:38:20 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-07 13:38:20 AI_Player.update()		1101,	111,	1110,	1010,	101,	1001,	1010
2017-01-07 13:38:20 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1001,	1011
2017-01-07 13:38:20 AI_Player.update()		101,	1010,	1110,	101,	1010,	1100,	101
2017-01-07 13:38:20 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-07 13:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()	update
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()	update
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:20 AI_Player.update()	Search took40ms
2017-01-07 13:38:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()		110,	110,	111,	1101,	111,	111,	11
2017-01-07 13:38:20 AI_Player.update()		101,	1101,	1010,	1010,	110,	101,	110
2017-01-07 13:38:20 AI_Player.update()		1110,	110,	1110,	1001,	111,	1100,	1011
2017-01-07 13:38:20 AI_Player.update()		1101,	111,	1110,	1010,	101,	1001,	1010
2017-01-07 13:38:20 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1001,	1011
2017-01-07 13:38:20 AI_Player.update()		1010,	1110,	101,	1010,	1100,	101,	101
2017-01-07 13:38:20 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-07 13:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()	update
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()	update
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:20 AI_Player.update()	Search took94ms
2017-01-07 13:38:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()		110,	110,	111,	1101,	111,	101,	11
2017-01-07 13:38:20 AI_Player.update()		101,	1101,	1010,	1010,	110,	111,	110
2017-01-07 13:38:20 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-07 13:38:20 AI_Player.update()		1101,	111,	1110,	1010,	101,	1100,	1010
2017-01-07 13:38:20 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1001,	1011
2017-01-07 13:38:20 AI_Player.update()		1010,	1110,	101,	1010,	1100,	1001,	101
2017-01-07 13:38:20 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-07 13:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()	update
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	6 3
2017-01-07 13:38:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()	update
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:20 AI_Player.update()	Search took71ms
2017-01-07 13:38:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()		110,	1101,	111,	1101,	111,	101,	11
2017-01-07 13:38:20 AI_Player.update()		101,	110,	1010,	1010,	110,	111,	110
2017-01-07 13:38:20 AI_Player.update()		1110,	111,	1110,	1001,	111,	101,	1011
2017-01-07 13:38:20 AI_Player.update()		1101,	1011,	1110,	1010,	101,	1100,	1010
2017-01-07 13:38:20 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1001,	1011
2017-01-07 13:38:20 AI_Player.update()		1010,	110,	101,	1010,	1100,	1001,	101
2017-01-07 13:38:20 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-07 13:38:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	6 3
2017-01-07 13:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()	update
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	6 4
2017-01-07 13:38:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:20 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:20 AI_Player.update()	update
2017-01-07 13:38:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:21 AI_Player.update()	Search took172ms
2017-01-07 13:38:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:21 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-07 13:38:21 AI_Player.update()		101,	110,	1010,	1001,	110,	111,	110
2017-01-07 13:38:21 AI_Player.update()		1110,	111,	1110,	1010,	111,	101,	1011
2017-01-07 13:38:21 AI_Player.update()		1101,	1011,	1110,	11,	101,	1100,	1010
2017-01-07 13:38:21 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1001,	1011
2017-01-07 13:38:21 AI_Player.update()		1010,	110,	101,	110,	1100,	1001,	101
2017-01-07 13:38:21 AI_Player.update()		1100,	110,	1101,	1101,	1101,	101,	1001
2017-01-07 13:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	6 4
2017-01-07 13:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:21 AI_Player.update()	update
2017-01-07 13:38:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	6 4
2017-01-07 13:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:21 AI_Player.update()	update
2017-01-07 13:38:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:21 AI_Player.update()	Search took342ms
2017-01-07 13:38:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:21 AI_Player.update()		110,	1101,	111,	1101,	111,	101,	11
2017-01-07 13:38:21 AI_Player.update()		101,	110,	1010,	1010,	110,	111,	110
2017-01-07 13:38:21 AI_Player.update()		1110,	111,	1110,	1001,	111,	101,	1011
2017-01-07 13:38:21 AI_Player.update()		1101,	1011,	1110,	1010,	101,	1100,	1010
2017-01-07 13:38:21 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1001,	1011
2017-01-07 13:38:21 AI_Player.update()		1010,	110,	101,	1010,	1100,	1001,	101
2017-01-07 13:38:21 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-07 13:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	6 4
2017-01-07 13:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:21 AI_Player.update()	update
2017-01-07 13:38:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	6 4
2017-01-07 13:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:21 AI_Player.update()	update
2017-01-07 13:38:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:21 AI_Player.update()	Search took215ms
2017-01-07 13:38:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:21 AI_Player.update()		110,	1101,	111,	1101,	111,	101,	11
2017-01-07 13:38:21 AI_Player.update()		101,	110,	1010,	1010,	110,	111,	110
2017-01-07 13:38:21 AI_Player.update()		1110,	111,	1110,	1001,	111,	101,	1011
2017-01-07 13:38:21 AI_Player.update()		1010,	1101,	1011,	1110,	1010,	101,	1100
2017-01-07 13:38:21 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1001,	1011
2017-01-07 13:38:21 AI_Player.update()		1010,	110,	101,	1010,	1100,	1001,	101
2017-01-07 13:38:21 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-07 13:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	6 4
2017-01-07 13:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:21 AI_Player.update()	update
2017-01-07 13:38:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:21 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-07 13:38:21 AI_Player.update()	Player a has won!
2017-01-07 13:38:21 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-07 13:38:21 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-07 13:38:21 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-07 13:38:21 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-07 13:38:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	1 1
2017-01-07 13:38:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:21 AI_Player.update()	update
2017-01-07 13:38:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:21 AI_Player.update()	Search took44ms
2017-01-07 13:38:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:21 AI_Player.update()		110,	101,	111,	1001,	111,	1010,	11
2017-01-07 13:38:21 AI_Player.update()		101,	11,	1010,	11,	1010,	110,	1100
2017-01-07 13:38:21 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-07 13:38:21 AI_Player.update()		1110,	110,	110,	101,	11,	1001,	11
2017-01-07 13:38:21 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-07 13:38:21 AI_Player.update()		1001,	11,	1001,	1010,	1010,	1101,	1010
2017-01-07 13:38:21 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-07 13:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	1 1
2017-01-07 13:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:21 AI_Player.update()	update
2017-01-07 13:38:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:21 AI_Player.update()	update
2017-01-07 13:38:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:21 AI_Player.update()	Search took33ms
2017-01-07 13:38:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:21 AI_Player.update()		110,	101,	111,	1001,	111,	110,	11
2017-01-07 13:38:21 AI_Player.update()		101,	11,	1010,	11,	1010,	1010,	1100
2017-01-07 13:38:21 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1001,	1011
2017-01-07 13:38:21 AI_Player.update()		1110,	110,	110,	101,	11,	1101,	11
2017-01-07 13:38:21 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-07 13:38:21 AI_Player.update()		1001,	11,	1001,	1010,	1010,	111,	1010
2017-01-07 13:38:21 AI_Player.update()		1100,	11,	1101,	110,	1101,	1010,	1001
2017-01-07 13:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:21 AI_Player.update()	update
2017-01-07 13:38:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:21 AI_Player.update()	update
2017-01-07 13:38:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:21 AI_Player.update()	Search took127ms
2017-01-07 13:38:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:21 AI_Player.update()		110,	101,	111,	1001,	111,	1010,	11
2017-01-07 13:38:21 AI_Player.update()		101,	11,	1010,	11,	1010,	110,	1100
2017-01-07 13:38:21 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-07 13:38:21 AI_Player.update()		1110,	110,	110,	101,	11,	1001,	11
2017-01-07 13:38:21 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-07 13:38:21 AI_Player.update()		1001,	11,	1001,	1010,	1010,	1101,	1010
2017-01-07 13:38:21 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-07 13:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:21 AI_Player.update()	update
2017-01-07 13:38:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:21 AI_Player.update()	update
2017-01-07 13:38:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:21 AI_Player.update()	Search took34ms
2017-01-07 13:38:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:21 AI_Player.update()		110,	101,	111,	1001,	111,	110,	11
2017-01-07 13:38:21 AI_Player.update()		101,	11,	1010,	11,	1010,	1010,	1100
2017-01-07 13:38:21 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1001,	1011
2017-01-07 13:38:21 AI_Player.update()		1110,	110,	110,	101,	11,	1101,	11
2017-01-07 13:38:21 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-07 13:38:21 AI_Player.update()		1001,	11,	1001,	1010,	1010,	111,	1010
2017-01-07 13:38:21 AI_Player.update()		1100,	11,	1101,	110,	1101,	1010,	1001
2017-01-07 13:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:21 AI_Player.update()	update
2017-01-07 13:38:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:21 AI_Player.update()	update
2017-01-07 13:38:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:21 AI_Player.update()	Search took76ms
2017-01-07 13:38:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:21 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-07 13:38:21 AI_Player.update()		101,	11,	1010,	1010,	1010,	1010,	1100
2017-01-07 13:38:21 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-07 13:38:21 AI_Player.update()		1110,	110,	110,	1100,	11,	1101,	11
2017-01-07 13:38:21 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1101,	1011
2017-01-07 13:38:21 AI_Player.update()		1001,	11,	1001,	110,	1010,	111,	1010
2017-01-07 13:38:21 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-07 13:38:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:21 AI_Player.update()	update
2017-01-07 13:38:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:21 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:21 AI_Player.update()	update
2017-01-07 13:38:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:22 AI_Player.update()	Search took343ms
2017-01-07 13:38:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:22 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-07 13:38:22 AI_Player.update()		1100,	101,	11,	1010,	1010,	1010,	1010
2017-01-07 13:38:22 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-07 13:38:22 AI_Player.update()		1110,	110,	110,	1100,	11,	1101,	11
2017-01-07 13:38:22 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1101,	1011
2017-01-07 13:38:22 AI_Player.update()		1001,	11,	1001,	110,	1010,	111,	1010
2017-01-07 13:38:22 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-07 13:38:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:22 AI_Player.update()	update
2017-01-07 13:38:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	2 2
2017-01-07 13:38:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:22 AI_Player.update()	update
2017-01-07 13:38:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:22 AI_Player.update()	Search took92ms
2017-01-07 13:38:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:22 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-07 13:38:22 AI_Player.update()		1100,	101,	11,	101,	1010,	1010,	1010
2017-01-07 13:38:22 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-07 13:38:22 AI_Player.update()		1110,	110,	110,	1010,	11,	1101,	11
2017-01-07 13:38:22 AI_Player.update()		1110,	110,	1101,	110,	1011,	1101,	1011
2017-01-07 13:38:22 AI_Player.update()		1001,	11,	1001,	1001,	1010,	111,	1010
2017-01-07 13:38:22 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-07 13:38:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	2 2
2017-01-07 13:38:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:22 AI_Player.update()	update
2017-01-07 13:38:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	3 2
2017-01-07 13:38:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:22 AI_Player.update()	update
2017-01-07 13:38:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:22 AI_Player.update()	Search took259ms
2017-01-07 13:38:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:22 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-07 13:38:22 AI_Player.update()		1100,	101,	11,	101,	1010,	1010,	1010
2017-01-07 13:38:22 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-07 13:38:22 AI_Player.update()		110,	110,	1010,	11,	1101,	11,	1110
2017-01-07 13:38:22 AI_Player.update()		1110,	110,	1101,	110,	1011,	1101,	1011
2017-01-07 13:38:22 AI_Player.update()		1001,	11,	1001,	1001,	1010,	111,	1010
2017-01-07 13:38:22 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-07 13:38:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	3 2
2017-01-07 13:38:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:22 AI_Player.update()	update
2017-01-07 13:38:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	3 2
2017-01-07 13:38:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:22 AI_Player.update()	update
2017-01-07 13:38:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:22 AI_Player.update()	Search took130ms
2017-01-07 13:38:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:22 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-07 13:38:22 AI_Player.update()		1100,	101,	11,	101,	1010,	110,	1010
2017-01-07 13:38:22 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-07 13:38:22 AI_Player.update()		110,	110,	1010,	11,	1101,	1001,	1110
2017-01-07 13:38:22 AI_Player.update()		1110,	110,	1101,	110,	1011,	11,	1011
2017-01-07 13:38:22 AI_Player.update()		1001,	11,	1001,	1001,	1010,	1101,	1010
2017-01-07 13:38:22 AI_Player.update()		1100,	11,	1101,	11,	1101,	111,	1001
2017-01-07 13:38:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	3 2
2017-01-07 13:38:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:22 AI_Player.update()	update
2017-01-07 13:38:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	4 2
2017-01-07 13:38:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:22 AI_Player.update()	update
2017-01-07 13:38:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:23 AI_Player.update()	Search took311ms
2017-01-07 13:38:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:23 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-07 13:38:23 AI_Player.update()		1100,	101,	11,	101,	1010,	110,	1010
2017-01-07 13:38:23 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-07 13:38:23 AI_Player.update()		1110,	110,	110,	1010,	11,	1101,	1001
2017-01-07 13:38:23 AI_Player.update()		1110,	110,	1101,	110,	1011,	11,	1011
2017-01-07 13:38:23 AI_Player.update()		1001,	11,	1001,	1001,	1010,	1101,	1010
2017-01-07 13:38:23 AI_Player.update()		1100,	11,	1101,	11,	1101,	111,	1001
2017-01-07 13:38:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	4 2
2017-01-07 13:38:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:23 AI_Player.update()	update
2017-01-07 13:38:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	4 3
2017-01-07 13:38:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:23 AI_Player.update()	update
2017-01-07 13:38:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:23 AI_Player.update()	Search took299ms
2017-01-07 13:38:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:23 AI_Player.update()		110,	101,	111,	1010,	111,	111,	11
2017-01-07 13:38:23 AI_Player.update()		1100,	101,	11,	101,	1010,	1010,	1010
2017-01-07 13:38:23 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-07 13:38:23 AI_Player.update()		1110,	110,	110,	1010,	11,	1010,	1001
2017-01-07 13:38:23 AI_Player.update()		1110,	110,	1101,	110,	1011,	1101,	1011
2017-01-07 13:38:23 AI_Player.update()		1001,	11,	1001,	1001,	1010,	11,	1010
2017-01-07 13:38:23 AI_Player.update()		1100,	11,	1101,	11,	1101,	1101,	1001
2017-01-07 13:38:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	4 3
2017-01-07 13:38:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:23 AI_Player.update()	update
2017-01-07 13:38:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:23 AI_Player.update()	update
2017-01-07 13:38:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:23 AI_Player.update()	Search took56ms
2017-01-07 13:38:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:23 AI_Player.update()		110,	101,	111,	1010,	111,	111,	11
2017-01-07 13:38:23 AI_Player.update()		1010,	1100,	101,	11,	101,	1010,	1010
2017-01-07 13:38:23 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-07 13:38:23 AI_Player.update()		1110,	110,	110,	1010,	11,	1010,	1001
2017-01-07 13:38:23 AI_Player.update()		1110,	110,	1101,	110,	1011,	1101,	1011
2017-01-07 13:38:23 AI_Player.update()		1001,	11,	1001,	1001,	1010,	11,	1010
2017-01-07 13:38:23 AI_Player.update()		1100,	11,	1101,	11,	1101,	1101,	1001
2017-01-07 13:38:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:23 AI_Player.update()	update
2017-01-07 13:38:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:23 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:23 AI_Player.update()	update
2017-01-07 13:38:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:24 AI_Player.update()	Search took718ms
2017-01-07 13:38:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:24 AI_Player.update()		110,	11,	111,	1010,	111,	111,	11
2017-01-07 13:38:24 AI_Player.update()		1010,	101,	101,	11,	101,	1010,	1010
2017-01-07 13:38:24 AI_Player.update()		1110,	1100,	1110,	1100,	111,	110,	1011
2017-01-07 13:38:24 AI_Player.update()		1110,	1010,	110,	1010,	11,	1010,	1001
2017-01-07 13:38:24 AI_Player.update()		1110,	110,	1101,	110,	1011,	1101,	1011
2017-01-07 13:38:24 AI_Player.update()		1001,	110,	1001,	1001,	1010,	11,	1010
2017-01-07 13:38:24 AI_Player.update()		1100,	11,	1101,	11,	1101,	1101,	1001
2017-01-07 13:38:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:24 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:24 AI_Player.update()	update
2017-01-07 13:38:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:24 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:24 AI_Player.update()	update
2017-01-07 13:38:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:24 AI_Player.update()	Search took240ms
2017-01-07 13:38:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:24 AI_Player.update()		110,	101,	111,	1010,	111,	111,	11
2017-01-07 13:38:24 AI_Player.update()		1010,	1100,	101,	11,	101,	1010,	1010
2017-01-07 13:38:24 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-07 13:38:24 AI_Player.update()		1110,	110,	110,	1010,	11,	1010,	1001
2017-01-07 13:38:24 AI_Player.update()		1110,	110,	1101,	110,	1011,	1101,	1011
2017-01-07 13:38:24 AI_Player.update()		1001,	11,	1001,	1001,	1010,	11,	1010
2017-01-07 13:38:24 AI_Player.update()		1100,	11,	1101,	11,	1101,	1101,	1001
2017-01-07 13:38:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:24 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:24 AI_Player.update()	update
2017-01-07 13:38:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:24 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:24 AI_Player.update()	update
2017-01-07 13:38:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:25 AI_Player.update()	Search took693ms
2017-01-07 13:38:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:25 AI_Player.update()		110,	11,	111,	1010,	111,	111,	11
2017-01-07 13:38:25 AI_Player.update()		1010,	101,	101,	11,	101,	1010,	1010
2017-01-07 13:38:25 AI_Player.update()		1110,	1100,	1110,	1100,	111,	110,	1011
2017-01-07 13:38:25 AI_Player.update()		1110,	1010,	110,	1010,	11,	1010,	1001
2017-01-07 13:38:25 AI_Player.update()		1110,	110,	1101,	110,	1011,	1101,	1011
2017-01-07 13:38:25 AI_Player.update()		1001,	110,	1001,	1001,	1010,	11,	1010
2017-01-07 13:38:25 AI_Player.update()		1100,	11,	1101,	11,	1101,	1101,	1001
2017-01-07 13:38:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:25 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:25 AI_Player.update()	update
2017-01-07 13:38:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:25 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:25 AI_Player.update()	update
2017-01-07 13:38:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:25 AI_Player.update()	Search took230ms
2017-01-07 13:38:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:25 AI_Player.update()		110,	11,	111,	1010,	111,	111,	11
2017-01-07 13:38:25 AI_Player.update()		1010,	101,	101,	11,	101,	1010,	1010
2017-01-07 13:38:25 AI_Player.update()		1110,	1100,	1110,	1100,	111,	110,	1011
2017-01-07 13:38:25 AI_Player.update()		1010,	110,	1010,	11,	1010,	1001,	1110
2017-01-07 13:38:25 AI_Player.update()		1110,	110,	1101,	110,	1011,	1101,	1011
2017-01-07 13:38:25 AI_Player.update()		1001,	110,	1001,	1001,	1010,	11,	1010
2017-01-07 13:38:25 AI_Player.update()		1100,	11,	1101,	11,	1101,	1101,	1001
2017-01-07 13:38:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:25 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:25 AI_Player.update()	update
2017-01-07 13:38:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:25 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:25 AI_Player.update()	update
2017-01-07 13:38:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:26 AI_Player.update()	Search took723ms
2017-01-07 13:38:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:26 AI_Player.update()		110,	11,	111,	11,	111,	111,	11
2017-01-07 13:38:26 AI_Player.update()		1010,	101,	101,	1100,	101,	1010,	1010
2017-01-07 13:38:26 AI_Player.update()		1110,	1100,	1110,	11,	111,	110,	1011
2017-01-07 13:38:26 AI_Player.update()		1010,	110,	1010,	110,	1010,	1001,	1110
2017-01-07 13:38:26 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1101,	1011
2017-01-07 13:38:26 AI_Player.update()		1001,	110,	1001,	11,	1010,	11,	1010
2017-01-07 13:38:26 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1101,	1001
2017-01-07 13:38:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:26 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:26 AI_Player.update()	update
2017-01-07 13:38:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:26 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:26 AI_Player.update()	update
2017-01-07 13:38:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:26 AI_Player.update()	Search took282ms
2017-01-07 13:38:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:26 AI_Player.update()		110,	11,	111,	11,	111,	111,	11
2017-01-07 13:38:26 AI_Player.update()		1010,	101,	101,	1100,	101,	1010,	1010
2017-01-07 13:38:26 AI_Player.update()		1110,	1100,	1110,	11,	111,	110,	1011
2017-01-07 13:38:26 AI_Player.update()		1010,	110,	1010,	110,	1010,	1001,	1110
2017-01-07 13:38:26 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1101,	1011
2017-01-07 13:38:26 AI_Player.update()		110,	1001,	11,	1010,	11,	1010,	1001
2017-01-07 13:38:26 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1101,	1001
2017-01-07 13:38:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:26 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:26 AI_Player.update()	update
2017-01-07 13:38:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:26 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:26 AI_Player.update()	update
2017-01-07 13:38:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:26 AI_Player.update()	Search took360ms
2017-01-07 13:38:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:26 AI_Player.update()		110,	11,	111,	11,	111,	111,	11
2017-01-07 13:38:26 AI_Player.update()		1010,	1010,	101,	101,	1100,	101,	1010
2017-01-07 13:38:26 AI_Player.update()		1110,	1100,	1110,	11,	111,	110,	1011
2017-01-07 13:38:26 AI_Player.update()		1010,	110,	1010,	110,	1010,	1001,	1110
2017-01-07 13:38:26 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1101,	1011
2017-01-07 13:38:26 AI_Player.update()		110,	1001,	11,	1010,	11,	1010,	1001
2017-01-07 13:38:26 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1101,	1001
2017-01-07 13:38:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:26 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:26 AI_Player.update()	update
2017-01-07 13:38:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:26 GameBoard.setupTreasurePanel()	6 3
2017-01-07 13:38:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:26 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:26 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:26 AI_Player.update()	update
2017-01-07 13:38:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:27 AI_Player.update()	Search took186ms
2017-01-07 13:38:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:27 AI_Player.update()		110,	11,	111,	11,	111,	111,	11
2017-01-07 13:38:27 AI_Player.update()		1010,	11,	101,	101,	1100,	101,	1010
2017-01-07 13:38:27 AI_Player.update()		1110,	1010,	1110,	11,	111,	110,	1011
2017-01-07 13:38:27 AI_Player.update()		1010,	1100,	1010,	110,	1010,	1001,	1110
2017-01-07 13:38:27 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1101,	1011
2017-01-07 13:38:27 AI_Player.update()		110,	110,	11,	1010,	11,	1010,	1001
2017-01-07 13:38:27 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1101,	1001
2017-01-07 13:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	6 3
2017-01-07 13:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:27 AI_Player.update()	update
2017-01-07 13:38:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	6 4
2017-01-07 13:38:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:27 AI_Player.update()	update
2017-01-07 13:38:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:27 AI_Player.update()	Search took123ms
2017-01-07 13:38:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:27 AI_Player.update()		110,	11,	111,	11,	111,	111,	11
2017-01-07 13:38:27 AI_Player.update()		1010,	11,	101,	101,	1100,	101,	1010
2017-01-07 13:38:27 AI_Player.update()		1110,	1010,	1110,	11,	111,	110,	1011
2017-01-07 13:38:27 AI_Player.update()		1100,	1010,	110,	1010,	1001,	1110,	1010
2017-01-07 13:38:27 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1101,	1011
2017-01-07 13:38:27 AI_Player.update()		110,	110,	11,	1010,	11,	1010,	1001
2017-01-07 13:38:27 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1101,	1001
2017-01-07 13:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	6 4
2017-01-07 13:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:27 AI_Player.update()	update
2017-01-07 13:38:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:27 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-07 13:38:27 AI_Player.update()	Player a has won!
2017-01-07 13:38:27 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-07 13:38:27 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-07 13:38:27 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-07 13:38:27 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-07 13:38:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	1 1
2017-01-07 13:38:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:27 AI_Player.update()	update
2017-01-07 13:38:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:27 AI_Player.update()	Search took44ms
2017-01-07 13:38:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:27 AI_Player.update()		110,	1011,	111,	11,	111,	1100,	11
2017-01-07 13:38:27 AI_Player.update()		11,	110,	1110,	1001,	1001,	1011,	1010
2017-01-07 13:38:27 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-07 13:38:27 AI_Player.update()		101,	11,	1010,	1110,	1010,	1100,	101
2017-01-07 13:38:27 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1011,	1011
2017-01-07 13:38:27 AI_Player.update()		1010,	1100,	110,	1101,	1010,	111,	101
2017-01-07 13:38:27 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1001,	1001
2017-01-07 13:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	1 1
2017-01-07 13:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:27 AI_Player.update()	update
2017-01-07 13:38:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	1 1
2017-01-07 13:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:27 AI_Player.update()	update
2017-01-07 13:38:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:27 AI_Player.update()	Search took101ms
2017-01-07 13:38:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:27 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-07 13:38:27 AI_Player.update()		11,	1001,	1110,	1001,	1001,	1011,	1010
2017-01-07 13:38:27 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-07 13:38:27 AI_Player.update()		101,	1010,	1010,	1110,	1010,	1100,	101
2017-01-07 13:38:27 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1011,	1011
2017-01-07 13:38:27 AI_Player.update()		1010,	1010,	110,	1101,	1010,	111,	101
2017-01-07 13:38:27 AI_Player.update()		1100,	1011,	1101,	111,	1101,	1001,	1001
2017-01-07 13:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	1 1
2017-01-07 13:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:27 AI_Player.update()	update
2017-01-07 13:38:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	1 1
2017-01-07 13:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:27 AI_Player.update()	update
2017-01-07 13:38:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:27 AI_Player.update()	Search took160ms
2017-01-07 13:38:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:27 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-07 13:38:27 AI_Player.update()		11,	1001,	1110,	1001,	1001,	1011,	1010
2017-01-07 13:38:27 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-07 13:38:27 AI_Player.update()		1010,	1010,	1110,	1010,	1100,	101,	101
2017-01-07 13:38:27 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1011,	1011
2017-01-07 13:38:27 AI_Player.update()		1010,	1010,	110,	1101,	1010,	111,	101
2017-01-07 13:38:27 AI_Player.update()		1100,	1011,	1101,	111,	1101,	1001,	1001
2017-01-07 13:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	1 1
2017-01-07 13:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:27 AI_Player.update()	update
2017-01-07 13:38:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:27 AI_Player.update()	update
2017-01-07 13:38:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:27 AI_Player.update()	Search took116ms
2017-01-07 13:38:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:27 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-07 13:38:27 AI_Player.update()		1010,	11,	1001,	1110,	1001,	1001,	1011
2017-01-07 13:38:27 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-07 13:38:27 AI_Player.update()		1010,	1010,	1110,	1010,	1100,	101,	101
2017-01-07 13:38:27 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1011,	1011
2017-01-07 13:38:27 AI_Player.update()		1010,	1010,	110,	1101,	1010,	111,	101
2017-01-07 13:38:27 AI_Player.update()		1100,	1011,	1101,	111,	1101,	1001,	1001
2017-01-07 13:38:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:27 AI_Player.update()	update
2017-01-07 13:38:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	2 2
2017-01-07 13:38:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:27 AI_Player.update()	update
2017-01-07 13:38:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:28 AI_Player.update()	Search took476ms
2017-01-07 13:38:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:28 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-07 13:38:28 AI_Player.update()		11,	1001,	1110,	1001,	1001,	1011,	1010
2017-01-07 13:38:28 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-07 13:38:28 AI_Player.update()		1010,	1010,	1110,	1010,	1100,	101,	101
2017-01-07 13:38:28 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1011,	1011
2017-01-07 13:38:28 AI_Player.update()		1010,	1010,	110,	1101,	1010,	111,	101
2017-01-07 13:38:28 AI_Player.update()		1100,	1011,	1101,	111,	1101,	1001,	1001
2017-01-07 13:38:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:28 GameBoard.setupTreasurePanel()	2 2
2017-01-07 13:38:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:28 AI_Player.update()	update
2017-01-07 13:38:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:28 GameBoard.setupTreasurePanel()	3 2
2017-01-07 13:38:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:28 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:28 AI_Player.update()	update
2017-01-07 13:38:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:28 AI_Player.update()	Search took499ms
2017-01-07 13:38:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:28 AI_Player.update()		110,	110,	111,	11,	111,	1001,	11
2017-01-07 13:38:28 AI_Player.update()		11,	1001,	1110,	1001,	1001,	1100,	1010
2017-01-07 13:38:28 AI_Player.update()		1110,	11,	1110,	1010,	111,	1011,	1011
2017-01-07 13:38:28 AI_Player.update()		1010,	1010,	1110,	1010,	1100,	110,	101
2017-01-07 13:38:28 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	101,	1011
2017-01-07 13:38:28 AI_Player.update()		1010,	1010,	110,	1101,	1010,	1011,	101
2017-01-07 13:38:28 AI_Player.update()		1100,	1011,	1101,	111,	1101,	111,	1001
2017-01-07 13:38:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:28 GameBoard.setupTreasurePanel()	3 2
2017-01-07 13:38:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:28 AI_Player.update()	update
2017-01-07 13:38:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:28 GameBoard.setupTreasurePanel()	3 2
2017-01-07 13:38:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:28 AI_Player.update()	update
2017-01-07 13:38:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:29 AI_Player.update()	Search took548ms
2017-01-07 13:38:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:29 AI_Player.update()		110,	110,	111,	111,	111,	1001,	11
2017-01-07 13:38:29 AI_Player.update()		11,	1001,	1110,	11,	1001,	1100,	1010
2017-01-07 13:38:29 AI_Player.update()		1110,	11,	1110,	1001,	111,	1011,	1011
2017-01-07 13:38:29 AI_Player.update()		1010,	1010,	1110,	1010,	1100,	110,	101
2017-01-07 13:38:29 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-07 13:38:29 AI_Player.update()		1010,	1010,	110,	1100,	1010,	1011,	101
2017-01-07 13:38:29 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	111,	1001
2017-01-07 13:38:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:29 GameBoard.setupTreasurePanel()	3 2
2017-01-07 13:38:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:29 AI_Player.update()	update
2017-01-07 13:38:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:29 GameBoard.setupTreasurePanel()	4 2
2017-01-07 13:38:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:29 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:29 AI_Player.update()	update
2017-01-07 13:38:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:29 AI_Player.update()	Search took682ms
2017-01-07 13:38:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:29 AI_Player.update()		110,	110,	111,	111,	111,	111,	11
2017-01-07 13:38:29 AI_Player.update()		11,	1001,	1110,	11,	1001,	1001,	1010
2017-01-07 13:38:29 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-07 13:38:29 AI_Player.update()		1010,	1010,	1110,	1010,	1100,	1011,	101
2017-01-07 13:38:29 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	110,	1011
2017-01-07 13:38:29 AI_Player.update()		1010,	1010,	110,	1100,	1010,	101,	101
2017-01-07 13:38:29 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	1011,	1001
2017-01-07 13:38:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:29 GameBoard.setupTreasurePanel()	4 2
2017-01-07 13:38:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:29 AI_Player.update()	update
2017-01-07 13:38:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:29 GameBoard.setupTreasurePanel()	4 2
2017-01-07 13:38:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:29 AI_Player.update()	update
2017-01-07 13:38:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:30 AI_Player.update()	Search took1003ms
2017-01-07 13:38:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:30 AI_Player.update()		110,	110,	111,	111,	111,	1001,	11
2017-01-07 13:38:30 AI_Player.update()		11,	1001,	1110,	11,	1001,	1100,	1010
2017-01-07 13:38:30 AI_Player.update()		1110,	11,	1110,	1001,	111,	1011,	1011
2017-01-07 13:38:30 AI_Player.update()		1010,	1010,	1110,	1010,	1100,	110,	101
2017-01-07 13:38:30 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-07 13:38:30 AI_Player.update()		1010,	1010,	110,	1100,	1010,	1011,	101
2017-01-07 13:38:30 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	111,	1001
2017-01-07 13:38:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:30 GameBoard.setupTreasurePanel()	4 2
2017-01-07 13:38:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:30 AI_Player.update()	update
2017-01-07 13:38:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:30 GameBoard.setupTreasurePanel()	5 2
2017-01-07 13:38:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:30 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:30 AI_Player.update()	update
2017-01-07 13:38:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:31 AI_Player.update()	Search took640ms
2017-01-07 13:38:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:31 AI_Player.update()		110,	110,	111,	111,	111,	111,	11
2017-01-07 13:38:31 AI_Player.update()		11,	1001,	1110,	11,	1001,	1001,	1010
2017-01-07 13:38:31 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-07 13:38:31 AI_Player.update()		1010,	1010,	1110,	1010,	1100,	1011,	101
2017-01-07 13:38:31 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	110,	1011
2017-01-07 13:38:31 AI_Player.update()		1010,	1010,	110,	1100,	1010,	101,	101
2017-01-07 13:38:31 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	1011,	1001
2017-01-07 13:38:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:31 GameBoard.setupTreasurePanel()	5 2
2017-01-07 13:38:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:31 AI_Player.update()	update
2017-01-07 13:38:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:31 GameBoard.setupTreasurePanel()	5 2
2017-01-07 13:38:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:31 AI_Player.update()	update
2017-01-07 13:38:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:32 AI_Player.update()	Search took1029ms
2017-01-07 13:38:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:32 AI_Player.update()		110,	110,	111,	111,	111,	111,	11
2017-01-07 13:38:32 AI_Player.update()		1001,	1110,	11,	1001,	1001,	1010,	11
2017-01-07 13:38:32 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-07 13:38:32 AI_Player.update()		1010,	1010,	1110,	1010,	1100,	1011,	101
2017-01-07 13:38:32 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	110,	1011
2017-01-07 13:38:32 AI_Player.update()		1010,	1010,	110,	1100,	1010,	101,	101
2017-01-07 13:38:32 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	1011,	1001
2017-01-07 13:38:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:32 GameBoard.setupTreasurePanel()	5 2
2017-01-07 13:38:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:32 AI_Player.update()	update
2017-01-07 13:38:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:32 GameBoard.setupTreasurePanel()	6 2
2017-01-07 13:38:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:32 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:32 AI_Player.update()	update
2017-01-07 13:38:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:33 AI_Player.update()	Search took686ms
2017-01-07 13:38:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:33 AI_Player.update()		110,	110,	111,	111,	111,	1011,	11
2017-01-07 13:38:33 AI_Player.update()		1001,	1110,	11,	1001,	1001,	111,	11
2017-01-07 13:38:33 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-07 13:38:33 AI_Player.update()		1010,	1010,	1110,	1010,	1100,	1100,	101
2017-01-07 13:38:33 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1011,	1011
2017-01-07 13:38:33 AI_Player.update()		1010,	1010,	110,	1100,	1010,	110,	101
2017-01-07 13:38:33 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	101,	1001
2017-01-07 13:38:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:33 GameBoard.setupTreasurePanel()	6 2
2017-01-07 13:38:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:33 AI_Player.update()	update
2017-01-07 13:38:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:33 GameBoard.setupTreasurePanel()	6 2
2017-01-07 13:38:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:33 AI_Player.update()	update
2017-01-07 13:38:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:33 AI_Player.update()	Search took208ms
2017-01-07 13:38:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:33 AI_Player.update()		110,	110,	111,	111,	111,	111,	11
2017-01-07 13:38:33 AI_Player.update()		1001,	1110,	11,	1001,	1001,	1010,	11
2017-01-07 13:38:33 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-07 13:38:33 AI_Player.update()		1010,	1010,	1110,	1010,	1100,	1011,	101
2017-01-07 13:38:33 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	110,	1011
2017-01-07 13:38:33 AI_Player.update()		1010,	1010,	110,	1100,	1010,	101,	101
2017-01-07 13:38:33 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	1011,	1001
2017-01-07 13:38:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:33 GameBoard.setupTreasurePanel()	6 2
2017-01-07 13:38:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:33 AI_Player.update()	update
2017-01-07 13:38:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:33 GameBoard.setupTreasurePanel()	6 2
2017-01-07 13:38:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:33 AI_Player.update()	update
2017-01-07 13:38:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:34 AI_Player.update()	Search took660ms
2017-01-07 13:38:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:34 AI_Player.update()		110,	110,	111,	111,	111,	1010,	11
2017-01-07 13:38:34 AI_Player.update()		1001,	1110,	11,	1001,	1001,	1100,	11
2017-01-07 13:38:34 AI_Player.update()		1110,	11,	1110,	1001,	111,	1011,	1011
2017-01-07 13:38:34 AI_Player.update()		1010,	1010,	1110,	1010,	1100,	110,	101
2017-01-07 13:38:34 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-07 13:38:34 AI_Player.update()		1010,	1010,	110,	1100,	1010,	1011,	101
2017-01-07 13:38:34 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	111,	1001
2017-01-07 13:38:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	6 2
2017-01-07 13:38:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:34 AI_Player.update()	update
2017-01-07 13:38:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	6 2
2017-01-07 13:38:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:34 AI_Player.update()	update
2017-01-07 13:38:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:34 AI_Player.update()	Search took531ms
2017-01-07 13:38:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:34 AI_Player.update()		110,	1011,	111,	111,	111,	1010,	11
2017-01-07 13:38:34 AI_Player.update()		1001,	110,	11,	1001,	1001,	1100,	11
2017-01-07 13:38:34 AI_Player.update()		1110,	1110,	1110,	1001,	111,	1011,	1011
2017-01-07 13:38:34 AI_Player.update()		1010,	11,	1110,	1010,	1100,	110,	101
2017-01-07 13:38:34 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-07 13:38:34 AI_Player.update()		1010,	1100,	110,	1100,	1010,	1011,	101
2017-01-07 13:38:34 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	111,	1001
2017-01-07 13:38:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	6 2
2017-01-07 13:38:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:34 AI_Player.update()	update
2017-01-07 13:38:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:34 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-07 13:38:34 AI_Player.update()	Player a has won!
2017-01-07 13:38:34 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-07 13:38:34 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-07 13:38:34 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-07 13:38:34 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-07 13:38:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	1 1
2017-01-07 13:38:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:34 AI_Player.update()	update
2017-01-07 13:38:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:34 AI_Player.update()	Search took58ms
2017-01-07 13:38:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:34 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-07 13:38:34 AI_Player.update()		11,	1001,	101,	11,	1010,	1001,	101
2017-01-07 13:38:34 AI_Player.update()		1110,	1101,	1110,	110,	111,	1010,	1011
2017-01-07 13:38:34 AI_Player.update()		110,	1001,	1100,	1001,	101,	110,	101
2017-01-07 13:38:34 AI_Player.update()		1110,	1011,	1101,	1101,	1011,	101,	1011
2017-01-07 13:38:34 AI_Player.update()		1100,	1010,	1100,	101,	1010,	101,	1010
2017-01-07 13:38:34 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1110,	1001
2017-01-07 13:38:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	1 1
2017-01-07 13:38:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:34 AI_Player.update()	update
2017-01-07 13:38:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:34 AI_Player.update()	update
2017-01-07 13:38:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:34 AI_Player.update()	Search took63ms
2017-01-07 13:38:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:34 AI_Player.update()		110,	1001,	111,	1100,	111,	101,	11
2017-01-07 13:38:34 AI_Player.update()		11,	1101,	101,	11,	1010,	1001,	101
2017-01-07 13:38:34 AI_Player.update()		1110,	1001,	1110,	110,	111,	1010,	1011
2017-01-07 13:38:34 AI_Player.update()		110,	1011,	1100,	1001,	101,	110,	101
2017-01-07 13:38:34 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	101,	1011
2017-01-07 13:38:34 AI_Player.update()		1100,	1100,	1100,	101,	1010,	101,	1010
2017-01-07 13:38:34 AI_Player.update()		1100,	101,	1101,	101,	1101,	1110,	1001
2017-01-07 13:38:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:34 AI_Player.update()	update
2017-01-07 13:38:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:34 AI_Player.update()	update
2017-01-07 13:38:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:34 AI_Player.update()	Search took35ms
2017-01-07 13:38:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:34 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-07 13:38:34 AI_Player.update()		11,	1101,	101,	1100,	1010,	1001,	101
2017-01-07 13:38:34 AI_Player.update()		1110,	1001,	1110,	11,	111,	1010,	1011
2017-01-07 13:38:34 AI_Player.update()		110,	1011,	1100,	110,	101,	110,	101
2017-01-07 13:38:34 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-07 13:38:34 AI_Player.update()		1100,	1100,	1100,	1101,	1010,	101,	1010
2017-01-07 13:38:34 AI_Player.update()		1100,	101,	1101,	101,	1101,	1110,	1001
2017-01-07 13:38:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:34 AI_Player.update()	update
2017-01-07 13:38:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:34 AI_Player.update()	update
2017-01-07 13:38:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:34 AI_Player.update()	Search took35ms
2017-01-07 13:38:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:34 AI_Player.update()		110,	1001,	111,	1100,	111,	101,	11
2017-01-07 13:38:34 AI_Player.update()		11,	1101,	101,	11,	1010,	1001,	101
2017-01-07 13:38:34 AI_Player.update()		1110,	1001,	1110,	110,	111,	1010,	1011
2017-01-07 13:38:34 AI_Player.update()		110,	1011,	1100,	1001,	101,	110,	101
2017-01-07 13:38:34 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	101,	1011
2017-01-07 13:38:34 AI_Player.update()		1100,	1100,	1100,	101,	1010,	101,	1010
2017-01-07 13:38:34 AI_Player.update()		1100,	101,	1101,	101,	1101,	1110,	1001
2017-01-07 13:38:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:34 AI_Player.update()	update
2017-01-07 13:38:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:34 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:34 AI_Player.update()	update
2017-01-07 13:38:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:35 AI_Player.update()	Search took104ms
2017-01-07 13:38:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:35 AI_Player.update()		110,	1001,	111,	1100,	111,	1110,	11
2017-01-07 13:38:35 AI_Player.update()		11,	1101,	101,	11,	1010,	101,	101
2017-01-07 13:38:35 AI_Player.update()		1110,	1001,	1110,	110,	111,	1001,	1011
2017-01-07 13:38:35 AI_Player.update()		110,	1011,	1100,	1001,	101,	1010,	101
2017-01-07 13:38:35 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	110,	1011
2017-01-07 13:38:35 AI_Player.update()		1100,	1100,	1100,	101,	1010,	101,	1010
2017-01-07 13:38:35 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-07 13:38:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:35 AI_Player.update()	update
2017-01-07 13:38:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:35 AI_Player.update()	update
2017-01-07 13:38:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:35 AI_Player.update()	Search took52ms
2017-01-07 13:38:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:35 AI_Player.update()		110,	1001,	111,	11,	111,	1110,	11
2017-01-07 13:38:35 AI_Player.update()		11,	1101,	101,	110,	1010,	101,	101
2017-01-07 13:38:35 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-07 13:38:35 AI_Player.update()		110,	1011,	1100,	1101,	101,	1010,	101
2017-01-07 13:38:35 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-07 13:38:35 AI_Player.update()		1100,	1100,	1100,	101,	1010,	101,	1010
2017-01-07 13:38:35 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-07 13:38:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:35 AI_Player.update()	update
2017-01-07 13:38:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	2 2
2017-01-07 13:38:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:35 AI_Player.update()	update
2017-01-07 13:38:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:35 AI_Player.update()	Search took71ms
2017-01-07 13:38:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:35 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-07 13:38:35 AI_Player.update()		11,	1101,	101,	110,	1010,	1110,	101
2017-01-07 13:38:35 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-07 13:38:35 AI_Player.update()		110,	1011,	1100,	1101,	101,	1001,	101
2017-01-07 13:38:35 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-07 13:38:35 AI_Player.update()		1100,	1100,	1100,	101,	1010,	110,	1010
2017-01-07 13:38:35 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-07 13:38:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	2 2
2017-01-07 13:38:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:35 AI_Player.update()	update
2017-01-07 13:38:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	3 2
2017-01-07 13:38:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:35 AI_Player.update()	update
2017-01-07 13:38:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:35 AI_Player.update()	Search took265ms
2017-01-07 13:38:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:35 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-07 13:38:35 AI_Player.update()		11,	1101,	101,	110,	1010,	1110,	101
2017-01-07 13:38:35 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-07 13:38:35 AI_Player.update()		101,	110,	1011,	1100,	1101,	101,	1001
2017-01-07 13:38:35 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-07 13:38:35 AI_Player.update()		1100,	1100,	1100,	101,	1010,	110,	1010
2017-01-07 13:38:35 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-07 13:38:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	3 2
2017-01-07 13:38:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:35 AI_Player.update()	update
2017-01-07 13:38:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	3 3
2017-01-07 13:38:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:35 AI_Player.update()	update
2017-01-07 13:38:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:35 AI_Player.update()	Search took191ms
2017-01-07 13:38:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:35 AI_Player.update()		110,	1101,	111,	11,	111,	101,	11
2017-01-07 13:38:35 AI_Player.update()		11,	1001,	101,	110,	1010,	1110,	101
2017-01-07 13:38:35 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-07 13:38:35 AI_Player.update()		101,	1010,	1011,	1100,	1101,	101,	1001
2017-01-07 13:38:35 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-07 13:38:35 AI_Player.update()		1100,	101,	1100,	101,	1010,	110,	1010
2017-01-07 13:38:35 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-07 13:38:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	3 3
2017-01-07 13:38:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:35 AI_Player.update()	update
2017-01-07 13:38:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:35 GameBoard.setupTreasurePanel()	3 3
2017-01-07 13:38:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:35 AI_Player.update()	update
2017-01-07 13:38:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:36 AI_Player.update()	Search took442ms
2017-01-07 13:38:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:36 AI_Player.update()		110,	1101,	111,	11,	111,	101,	11
2017-01-07 13:38:36 AI_Player.update()		11,	1001,	101,	110,	1010,	1110,	101
2017-01-07 13:38:36 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-07 13:38:36 AI_Player.update()		1010,	1011,	1100,	1101,	101,	1001,	101
2017-01-07 13:38:36 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-07 13:38:36 AI_Player.update()		1100,	101,	1100,	101,	1010,	110,	1010
2017-01-07 13:38:36 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-07 13:38:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	3 3
2017-01-07 13:38:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:36 AI_Player.update()	update
2017-01-07 13:38:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	3 3
2017-01-07 13:38:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:36 AI_Player.update()	update
2017-01-07 13:38:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:36 AI_Player.update()	Search took236ms
2017-01-07 13:38:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:36 AI_Player.update()		110,	1101,	111,	11,	111,	101,	11
2017-01-07 13:38:36 AI_Player.update()		11,	1001,	101,	110,	1010,	1110,	101
2017-01-07 13:38:36 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-07 13:38:36 AI_Player.update()		101,	1010,	1011,	1100,	1101,	101,	1001
2017-01-07 13:38:36 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-07 13:38:36 AI_Player.update()		1100,	101,	1100,	101,	1010,	110,	1010
2017-01-07 13:38:36 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-07 13:38:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	3 3
2017-01-07 13:38:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:36 AI_Player.update()	update
2017-01-07 13:38:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	3 3
2017-01-07 13:38:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:36 AI_Player.update()	update
2017-01-07 13:38:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:36 AI_Player.update()	Search took165ms
2017-01-07 13:38:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:36 AI_Player.update()		110,	1101,	111,	110,	111,	101,	11
2017-01-07 13:38:36 AI_Player.update()		11,	1001,	101,	1001,	1010,	1110,	101
2017-01-07 13:38:36 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-07 13:38:36 AI_Player.update()		101,	1010,	1011,	101,	1101,	101,	1001
2017-01-07 13:38:36 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-07 13:38:36 AI_Player.update()		1100,	101,	1100,	1100,	1010,	110,	1010
2017-01-07 13:38:36 AI_Player.update()		1100,	1001,	1101,	11,	1101,	101,	1001
2017-01-07 13:38:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	3 3
2017-01-07 13:38:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:36 AI_Player.update()	update
2017-01-07 13:38:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	3 4
2017-01-07 13:38:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:36 AI_Player.update()	update
2017-01-07 13:38:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:36 AI_Player.update()	Search took249ms
2017-01-07 13:38:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:36 AI_Player.update()		110,	1101,	111,	110,	111,	101,	11
2017-01-07 13:38:36 AI_Player.update()		11,	1001,	101,	1001,	1010,	1110,	101
2017-01-07 13:38:36 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-07 13:38:36 AI_Player.update()		1001,	101,	1010,	1011,	101,	1101,	101
2017-01-07 13:38:36 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-07 13:38:36 AI_Player.update()		1100,	101,	1100,	1100,	1010,	110,	1010
2017-01-07 13:38:36 AI_Player.update()		1100,	1001,	1101,	11,	1101,	101,	1001
2017-01-07 13:38:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	3 4
2017-01-07 13:38:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:36 AI_Player.update()	update
2017-01-07 13:38:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	4 4
2017-01-07 13:38:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:36 AI_Player.update()	update
2017-01-07 13:38:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:36 AI_Player.update()	Search took155ms
2017-01-07 13:38:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:36 AI_Player.update()		110,	1101,	111,	110,	111,	101,	11
2017-01-07 13:38:36 AI_Player.update()		11,	1001,	101,	1001,	1010,	1110,	101
2017-01-07 13:38:36 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-07 13:38:36 AI_Player.update()		101,	1001,	101,	1010,	1011,	101,	1101
2017-01-07 13:38:36 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-07 13:38:36 AI_Player.update()		1100,	101,	1100,	1100,	1010,	110,	1010
2017-01-07 13:38:36 AI_Player.update()		1100,	1001,	1101,	11,	1101,	101,	1001
2017-01-07 13:38:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	4 4
2017-01-07 13:38:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:36 AI_Player.update()	update
2017-01-07 13:38:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	4 5
2017-01-07 13:38:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:36 AI_Player.update()	update
2017-01-07 13:38:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:36 AI_Player.update()	Search took74ms
2017-01-07 13:38:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:36 AI_Player.update()		110,	1101,	111,	1001,	111,	101,	11
2017-01-07 13:38:36 AI_Player.update()		11,	1001,	101,	1100,	1010,	1110,	101
2017-01-07 13:38:36 AI_Player.update()		1110,	110,	1110,	1010,	111,	101,	1011
2017-01-07 13:38:36 AI_Player.update()		101,	1001,	101,	101,	1011,	101,	1101
2017-01-07 13:38:36 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-07 13:38:36 AI_Player.update()		1100,	101,	1100,	11,	1010,	110,	1010
2017-01-07 13:38:36 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-07 13:38:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	4 5
2017-01-07 13:38:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:36 AI_Player.update()	update
2017-01-07 13:38:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:36 GameBoard.setupTreasurePanel()	4 5
2017-01-07 13:38:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:36 AI_Player.update()	update
2017-01-07 13:38:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:37 AI_Player.update()	Search took81ms
2017-01-07 13:38:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:37 AI_Player.update()		110,	1101,	111,	110,	111,	101,	11
2017-01-07 13:38:37 AI_Player.update()		11,	1001,	101,	1001,	1010,	1110,	101
2017-01-07 13:38:37 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-07 13:38:37 AI_Player.update()		101,	1001,	101,	1010,	1011,	101,	1101
2017-01-07 13:38:37 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-07 13:38:37 AI_Player.update()		1100,	101,	1100,	1100,	1010,	110,	1010
2017-01-07 13:38:37 AI_Player.update()		1100,	1001,	1101,	11,	1101,	101,	1001
2017-01-07 13:38:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	4 5
2017-01-07 13:38:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:37 AI_Player.update()	update
2017-01-07 13:38:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	4 5
2017-01-07 13:38:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:37 AI_Player.update()	update
2017-01-07 13:38:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:37 AI_Player.update()	Search took168ms
2017-01-07 13:38:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:37 AI_Player.update()		110,	1101,	111,	110,	111,	101,	11
2017-01-07 13:38:37 AI_Player.update()		1001,	101,	1001,	1010,	1110,	101,	11
2017-01-07 13:38:37 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-07 13:38:37 AI_Player.update()		101,	1001,	101,	1010,	1011,	101,	1101
2017-01-07 13:38:37 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-07 13:38:37 AI_Player.update()		1100,	101,	1100,	1100,	1010,	110,	1010
2017-01-07 13:38:37 AI_Player.update()		1100,	1001,	1101,	11,	1101,	101,	1001
2017-01-07 13:38:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	4 5
2017-01-07 13:38:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:37 AI_Player.update()	update
2017-01-07 13:38:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	5 5
2017-01-07 13:38:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:37 AI_Player.update()	update
2017-01-07 13:38:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:37 AI_Player.update()	Search took698ms
2017-01-07 13:38:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:37 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-07 13:38:37 AI_Player.update()		1001,	110,	1001,	1010,	1110,	101,	11
2017-01-07 13:38:37 AI_Player.update()		1110,	1001,	1110,	1100,	111,	101,	1011
2017-01-07 13:38:37 AI_Player.update()		101,	1100,	101,	1010,	1011,	101,	1101
2017-01-07 13:38:37 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-07 13:38:37 AI_Player.update()		1100,	1001,	1100,	1100,	1010,	110,	1010
2017-01-07 13:38:37 AI_Player.update()		1100,	1101,	1101,	11,	1101,	101,	1001
2017-01-07 13:38:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	5 5
2017-01-07 13:38:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:37 AI_Player.update()	update
2017-01-07 13:38:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	5 6
2017-01-07 13:38:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:37 AI_Player.update()	update
2017-01-07 13:38:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:38 AI_Player.update()	Search took935ms
2017-01-07 13:38:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:38 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-07 13:38:38 AI_Player.update()		11,	1001,	110,	1001,	1010,	1110,	101
2017-01-07 13:38:38 AI_Player.update()		1110,	1001,	1110,	1100,	111,	101,	1011
2017-01-07 13:38:38 AI_Player.update()		101,	1100,	101,	1010,	1011,	101,	1101
2017-01-07 13:38:38 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-07 13:38:38 AI_Player.update()		1100,	1001,	1100,	1100,	1010,	110,	1010
2017-01-07 13:38:38 AI_Player.update()		1100,	1101,	1101,	11,	1101,	101,	1001
2017-01-07 13:38:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:38 GameBoard.setupTreasurePanel()	5 6
2017-01-07 13:38:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:38 AI_Player.update()	update
2017-01-07 13:38:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:38 GameBoard.setupTreasurePanel()	6 6
2017-01-07 13:38:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:38 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-07 13:38:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:38 AI_Player.update()	update
2017-01-07 13:38:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:39 AI_Player.update()	Search took403ms
2017-01-07 13:38:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:39 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-07 13:38:39 AI_Player.update()		11,	1001,	110,	1100,	1010,	1110,	101
2017-01-07 13:38:39 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-07 13:38:39 AI_Player.update()		101,	1100,	101,	101,	1011,	101,	1101
2017-01-07 13:38:39 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-07 13:38:39 AI_Player.update()		1100,	1001,	1100,	11,	1010,	110,	1010
2017-01-07 13:38:39 AI_Player.update()		1100,	1101,	1101,	110,	1101,	101,	1001
2017-01-07 13:38:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	6 6
2017-01-07 13:38:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:39 AI_Player.update()	update
2017-01-07 13:38:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:39 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-07 13:38:39 AI_Player.update()	Player b has won!
2017-01-07 13:38:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:39 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-07 13:38:39 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-07 13:38:39 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-07 13:38:39 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-07 13:38:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	1 1
2017-01-07 13:38:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:39 AI_Player.update()	update
2017-01-07 13:38:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:39 AI_Player.update()	Search took215ms
2017-01-07 13:38:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:39 AI_Player.update()		110,	110,	111,	110,	111,	110,	11
2017-01-07 13:38:39 AI_Player.update()		1010,	101,	11,	11,	1010,	101,	1010
2017-01-07 13:38:39 AI_Player.update()		1110,	101,	1110,	1001,	111,	1001,	1011
2017-01-07 13:38:39 AI_Player.update()		1011,	1100,	1010,	1001,	11,	11,	1010
2017-01-07 13:38:39 AI_Player.update()		1110,	1101,	1101,	11,	1011,	1101,	1011
2017-01-07 13:38:39 AI_Player.update()		110,	110,	1001,	1100,	11,	11,	110
2017-01-07 13:38:39 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-07 13:38:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	1 1
2017-01-07 13:38:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:39 AI_Player.update()	update
2017-01-07 13:38:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:39 AI_Player.update()	update
2017-01-07 13:38:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:39 AI_Player.update()	Search took147ms
2017-01-07 13:38:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:39 AI_Player.update()		110,	110,	111,	110,	111,	110,	11
2017-01-07 13:38:39 AI_Player.update()		1010,	101,	11,	11,	1010,	101,	1010
2017-01-07 13:38:39 AI_Player.update()		1110,	101,	1110,	1001,	111,	1001,	1011
2017-01-07 13:38:39 AI_Player.update()		1100,	1010,	1001,	11,	11,	1010,	1011
2017-01-07 13:38:39 AI_Player.update()		1110,	1101,	1101,	11,	1011,	1101,	1011
2017-01-07 13:38:39 AI_Player.update()		110,	110,	1001,	1100,	11,	11,	110
2017-01-07 13:38:39 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-07 13:38:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:39 AI_Player.update()	update
2017-01-07 13:38:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:39 AI_Player.update()	update
2017-01-07 13:38:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:39 AI_Player.update()	Search took184ms
2017-01-07 13:38:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:39 AI_Player.update()		110,	110,	111,	110,	111,	110,	11
2017-01-07 13:38:39 AI_Player.update()		1010,	101,	11,	11,	1010,	101,	1010
2017-01-07 13:38:39 AI_Player.update()		1110,	101,	1110,	1001,	111,	1001,	1011
2017-01-07 13:38:39 AI_Player.update()		1011,	1100,	1010,	1001,	11,	11,	1010
2017-01-07 13:38:39 AI_Player.update()		1110,	1101,	1101,	11,	1011,	1101,	1011
2017-01-07 13:38:39 AI_Player.update()		110,	110,	1001,	1100,	11,	11,	110
2017-01-07 13:38:39 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-07 13:38:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:39 AI_Player.update()	update
2017-01-07 13:38:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:39 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:39 AI_Player.update()	update
2017-01-07 13:38:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:40 AI_Player.update()	Search took395ms
2017-01-07 13:38:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:40 AI_Player.update()		110,	110,	111,	110,	111,	110,	11
2017-01-07 13:38:40 AI_Player.update()		101,	11,	11,	1010,	101,	1010,	1010
2017-01-07 13:38:40 AI_Player.update()		1110,	101,	1110,	1001,	111,	1001,	1011
2017-01-07 13:38:40 AI_Player.update()		1011,	1100,	1010,	1001,	11,	11,	1010
2017-01-07 13:38:40 AI_Player.update()		1110,	1101,	1101,	11,	1011,	1101,	1011
2017-01-07 13:38:40 AI_Player.update()		110,	110,	1001,	1100,	11,	11,	110
2017-01-07 13:38:40 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-07 13:38:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:40 AI_Player.update()	update
2017-01-07 13:38:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	2 2
2017-01-07 13:38:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:40 AI_Player.update()	update
2017-01-07 13:38:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:40 AI_Player.update()	Search took375ms
2017-01-07 13:38:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:40 AI_Player.update()		110,	110,	111,	1010,	111,	110,	11
2017-01-07 13:38:40 AI_Player.update()		101,	11,	11,	1001,	101,	1010,	1010
2017-01-07 13:38:40 AI_Player.update()		1110,	101,	1110,	1001,	111,	1001,	1011
2017-01-07 13:38:40 AI_Player.update()		1011,	1100,	1010,	11,	11,	11,	1010
2017-01-07 13:38:40 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1101,	1011
2017-01-07 13:38:40 AI_Player.update()		110,	110,	1001,	101,	11,	11,	110
2017-01-07 13:38:40 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1100,	1001
2017-01-07 13:38:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	2 2
2017-01-07 13:38:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:40 AI_Player.update()	update
2017-01-07 13:38:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	3 2
2017-01-07 13:38:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:40 AI_Player.update()	update
2017-01-07 13:38:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:40 AI_Player.update()	Search took211ms
2017-01-07 13:38:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:40 AI_Player.update()		110,	11,	111,	1010,	111,	110,	11
2017-01-07 13:38:40 AI_Player.update()		101,	101,	11,	1001,	101,	1010,	1010
2017-01-07 13:38:40 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1001,	1011
2017-01-07 13:38:40 AI_Player.update()		1011,	1101,	1010,	11,	11,	11,	1010
2017-01-07 13:38:40 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-07 13:38:40 AI_Player.update()		110,	1001,	1001,	101,	11,	11,	110
2017-01-07 13:38:40 AI_Player.update()		1100,	110,	1101,	110,	1101,	1100,	1001
2017-01-07 13:38:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	3 2
2017-01-07 13:38:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:40 AI_Player.update()	update
2017-01-07 13:38:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	3 2
2017-01-07 13:38:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:40 AI_Player.update()	update
2017-01-07 13:38:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:40 AI_Player.update()	Search took95ms
2017-01-07 13:38:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:40 AI_Player.update()		110,	11,	111,	1010,	111,	110,	11
2017-01-07 13:38:40 AI_Player.update()		101,	101,	11,	1001,	101,	1010,	1010
2017-01-07 13:38:40 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1001,	1011
2017-01-07 13:38:40 AI_Player.update()		1010,	1011,	1101,	1010,	11,	11,	11
2017-01-07 13:38:40 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1101,	1011
2017-01-07 13:38:40 AI_Player.update()		110,	1001,	1001,	101,	11,	11,	110
2017-01-07 13:38:40 AI_Player.update()		1100,	110,	1101,	110,	1101,	1100,	1001
2017-01-07 13:38:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	3 2
2017-01-07 13:38:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:40 AI_Player.update()	update
2017-01-07 13:38:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:40 GameBoard.setupTreasurePanel()	3 2
2017-01-07 13:38:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:40 AI_Player.update()	update
2017-01-07 13:38:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:41 AI_Player.update()	Search took54ms
2017-01-07 13:38:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:41 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-07 13:38:41 AI_Player.update()		101,	1100,	11,	1001,	101,	1010,	1010
2017-01-07 13:38:41 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1001,	1011
2017-01-07 13:38:41 AI_Player.update()		1010,	110,	1101,	1010,	11,	11,	11
2017-01-07 13:38:41 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1101,	1011
2017-01-07 13:38:41 AI_Player.update()		110,	110,	1001,	101,	11,	11,	110
2017-01-07 13:38:41 AI_Player.update()		1100,	11,	1101,	110,	1101,	1100,	1001
2017-01-07 13:38:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	3 2
2017-01-07 13:38:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:41 AI_Player.update()	update
2017-01-07 13:38:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	3 2
2017-01-07 13:38:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:41 AI_Player.update()	update
2017-01-07 13:38:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:41 AI_Player.update()	Search took161ms
2017-01-07 13:38:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:41 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-07 13:38:41 AI_Player.update()		101,	1100,	11,	1001,	101,	1010,	1010
2017-01-07 13:38:41 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1001,	1011
2017-01-07 13:38:41 AI_Player.update()		11,	1010,	110,	1101,	1010,	11,	11
2017-01-07 13:38:41 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1101,	1011
2017-01-07 13:38:41 AI_Player.update()		110,	110,	1001,	101,	11,	11,	110
2017-01-07 13:38:41 AI_Player.update()		1100,	11,	1101,	110,	1101,	1100,	1001
2017-01-07 13:38:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	3 2
2017-01-07 13:38:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:41 AI_Player.update()	update
2017-01-07 13:38:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	4 2
2017-01-07 13:38:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:41 AI_Player.update()	update
2017-01-07 13:38:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:41 AI_Player.update()	Search took121ms
2017-01-07 13:38:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:41 AI_Player.update()		110,	101,	111,	1001,	111,	110,	11
2017-01-07 13:38:41 AI_Player.update()		101,	1100,	11,	1001,	101,	1010,	1010
2017-01-07 13:38:41 AI_Player.update()		1110,	1011,	1110,	1101,	111,	1001,	1011
2017-01-07 13:38:41 AI_Player.update()		11,	1010,	110,	1100,	1010,	11,	11
2017-01-07 13:38:41 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1101,	1011
2017-01-07 13:38:41 AI_Player.update()		110,	110,	1001,	110,	11,	11,	110
2017-01-07 13:38:41 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1100,	1001
2017-01-07 13:38:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	4 2
2017-01-07 13:38:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:41 AI_Player.update()	update
2017-01-07 13:38:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	4 2
2017-01-07 13:38:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:41 AI_Player.update()	update
2017-01-07 13:38:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:41 AI_Player.update()	Search took400ms
2017-01-07 13:38:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:41 AI_Player.update()		110,	101,	111,	1001,	111,	110,	11
2017-01-07 13:38:41 AI_Player.update()		101,	1100,	11,	1001,	101,	1010,	1010
2017-01-07 13:38:41 AI_Player.update()		1110,	1011,	1110,	1101,	111,	1001,	1011
2017-01-07 13:38:41 AI_Player.update()		11,	11,	1010,	110,	1100,	1010,	11
2017-01-07 13:38:41 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1101,	1011
2017-01-07 13:38:41 AI_Player.update()		110,	110,	1001,	110,	11,	11,	110
2017-01-07 13:38:41 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1100,	1001
2017-01-07 13:38:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	4 2
2017-01-07 13:38:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:41 AI_Player.update()	update
2017-01-07 13:38:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	4 2
2017-01-07 13:38:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:41 AI_Player.update()	update
2017-01-07 13:38:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:41 AI_Player.update()	Search took52ms
2017-01-07 13:38:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:41 AI_Player.update()		110,	11,	111,	1001,	111,	110,	11
2017-01-07 13:38:41 AI_Player.update()		101,	101,	11,	1001,	101,	1010,	1010
2017-01-07 13:38:41 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1001,	1011
2017-01-07 13:38:41 AI_Player.update()		11,	1011,	1010,	110,	1100,	1010,	11
2017-01-07 13:38:41 AI_Player.update()		1110,	11,	1101,	101,	1011,	1101,	1011
2017-01-07 13:38:41 AI_Player.update()		110,	1001,	1001,	110,	11,	11,	110
2017-01-07 13:38:41 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1100,	1001
2017-01-07 13:38:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	4 2
2017-01-07 13:38:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:41 AI_Player.update()	update
2017-01-07 13:38:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	4 2
2017-01-07 13:38:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:41 AI_Player.update()	update
2017-01-07 13:38:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:41 AI_Player.update()	Search took56ms
2017-01-07 13:38:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:41 AI_Player.update()		110,	101,	111,	1001,	111,	110,	11
2017-01-07 13:38:41 AI_Player.update()		101,	1100,	11,	1001,	101,	1010,	1010
2017-01-07 13:38:41 AI_Player.update()		1110,	1011,	1110,	1101,	111,	1001,	1011
2017-01-07 13:38:41 AI_Player.update()		11,	11,	1010,	110,	1100,	1010,	11
2017-01-07 13:38:41 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1101,	1011
2017-01-07 13:38:41 AI_Player.update()		110,	110,	1001,	110,	11,	11,	110
2017-01-07 13:38:41 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1100,	1001
2017-01-07 13:38:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	4 2
2017-01-07 13:38:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:41 AI_Player.update()	update
2017-01-07 13:38:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	4 2
2017-01-07 13:38:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:41 AI_Player.update()	update
2017-01-07 13:38:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:41 AI_Player.update()	Search took60ms
2017-01-07 13:38:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:41 AI_Player.update()		110,	101,	111,	1001,	111,	110,	11
2017-01-07 13:38:41 AI_Player.update()		101,	1100,	11,	1001,	101,	1010,	1010
2017-01-07 13:38:41 AI_Player.update()		1110,	1011,	1110,	1101,	111,	1001,	1011
2017-01-07 13:38:41 AI_Player.update()		11,	1010,	110,	1100,	1010,	11,	11
2017-01-07 13:38:41 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1101,	1011
2017-01-07 13:38:41 AI_Player.update()		110,	110,	1001,	110,	11,	11,	110
2017-01-07 13:38:41 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1100,	1001
2017-01-07 13:38:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	4 2
2017-01-07 13:38:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:41 AI_Player.update()	update
2017-01-07 13:38:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	4 3
2017-01-07 13:38:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:41 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:41 AI_Player.update()	update
2017-01-07 13:38:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:42 AI_Player.update()	Search took284ms
2017-01-07 13:38:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:42 AI_Player.update()		110,	1100,	111,	1001,	111,	110,	11
2017-01-07 13:38:42 AI_Player.update()		101,	1011,	11,	1001,	101,	1010,	1010
2017-01-07 13:38:42 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-07 13:38:42 AI_Player.update()		11,	1001,	110,	1100,	1010,	11,	11
2017-01-07 13:38:42 AI_Player.update()		1110,	110,	1101,	101,	1011,	1101,	1011
2017-01-07 13:38:42 AI_Player.update()		110,	11,	1001,	110,	11,	11,	110
2017-01-07 13:38:42 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-07 13:38:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:42 GameBoard.setupTreasurePanel()	4 3
2017-01-07 13:38:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:42 AI_Player.update()	update
2017-01-07 13:38:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:42 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:42 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:42 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:42 AI_Player.update()	update
2017-01-07 13:38:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:42 AI_Player.update()	Search took82ms
2017-01-07 13:38:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:42 AI_Player.update()		110,	1100,	111,	1001,	111,	1010,	11
2017-01-07 13:38:42 AI_Player.update()		101,	1011,	11,	1001,	101,	1001,	1010
2017-01-07 13:38:42 AI_Player.update()		1110,	1010,	1110,	1101,	111,	11,	1011
2017-01-07 13:38:42 AI_Player.update()		11,	1001,	110,	1100,	1010,	1101,	11
2017-01-07 13:38:42 AI_Player.update()		1110,	110,	1101,	101,	1011,	11,	1011
2017-01-07 13:38:42 AI_Player.update()		110,	11,	1001,	110,	11,	1100,	110
2017-01-07 13:38:42 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-07 13:38:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:42 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:42 AI_Player.update()	update
2017-01-07 13:38:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:42 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:42 AI_Player.update()	update
2017-01-07 13:38:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:42 AI_Player.update()	Search took109ms
2017-01-07 13:38:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:42 AI_Player.update()		110,	1100,	111,	1001,	111,	1010,	11
2017-01-07 13:38:42 AI_Player.update()		101,	1011,	11,	1001,	101,	1001,	1010
2017-01-07 13:38:42 AI_Player.update()		1110,	1010,	1110,	1101,	111,	11,	1011
2017-01-07 13:38:42 AI_Player.update()		11,	1001,	110,	1100,	1010,	1101,	11
2017-01-07 13:38:42 AI_Player.update()		1110,	110,	1101,	101,	1011,	11,	1011
2017-01-07 13:38:42 AI_Player.update()		11,	1001,	110,	11,	1100,	110,	110
2017-01-07 13:38:42 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-07 13:38:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:42 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:42 AI_Player.update()	update
2017-01-07 13:38:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:42 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:42 AI_Player.update()	update
2017-01-07 13:38:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:42 AI_Player.update()	Search took359ms
2017-01-07 13:38:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:42 AI_Player.update()		110,	1100,	111,	1001,	111,	1001,	11
2017-01-07 13:38:42 AI_Player.update()		101,	1011,	11,	1001,	101,	11,	1010
2017-01-07 13:38:42 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1101,	1011
2017-01-07 13:38:42 AI_Player.update()		11,	1001,	110,	1100,	1010,	11,	11
2017-01-07 13:38:42 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-07 13:38:42 AI_Player.update()		11,	1001,	110,	11,	1100,	110,	110
2017-01-07 13:38:42 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-07 13:38:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:42 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:42 AI_Player.update()	update
2017-01-07 13:38:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:42 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:42 AI_Player.update()	update
2017-01-07 13:38:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:42 AI_Player.update()	Search took125ms
2017-01-07 13:38:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:42 AI_Player.update()		110,	1100,	111,	1010,	111,	1001,	11
2017-01-07 13:38:42 AI_Player.update()		101,	1011,	11,	1001,	101,	11,	1010
2017-01-07 13:38:42 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1101,	1011
2017-01-07 13:38:42 AI_Player.update()		11,	1001,	110,	1101,	1010,	11,	11
2017-01-07 13:38:42 AI_Player.update()		1110,	110,	1101,	1100,	1011,	110,	1011
2017-01-07 13:38:42 AI_Player.update()		11,	1001,	110,	101,	1100,	110,	110
2017-01-07 13:38:42 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-07 13:38:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:42 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:42 AI_Player.update()	update
2017-01-07 13:38:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:42 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:42 AI_Player.update()	update
2017-01-07 13:38:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:43 AI_Player.update()	Search took120ms
2017-01-07 13:38:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:43 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-07 13:38:43 AI_Player.update()		101,	1100,	11,	1001,	101,	11,	1010
2017-01-07 13:38:43 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1101,	1011
2017-01-07 13:38:43 AI_Player.update()		11,	1010,	110,	1101,	1010,	11,	11
2017-01-07 13:38:43 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-07 13:38:43 AI_Player.update()		11,	110,	110,	101,	1100,	110,	110
2017-01-07 13:38:43 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1010,	1001
2017-01-07 13:38:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:43 AI_Player.update()	update
2017-01-07 13:38:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:43 AI_Player.update()	update
2017-01-07 13:38:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:43 AI_Player.update()	Search took62ms
2017-01-07 13:38:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:43 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-07 13:38:43 AI_Player.update()		1010,	101,	1100,	11,	1001,	101,	11
2017-01-07 13:38:43 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1101,	1011
2017-01-07 13:38:43 AI_Player.update()		11,	1010,	110,	1101,	1010,	11,	11
2017-01-07 13:38:43 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-07 13:38:43 AI_Player.update()		11,	110,	110,	101,	1100,	110,	110
2017-01-07 13:38:43 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1010,	1001
2017-01-07 13:38:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	5 3
2017-01-07 13:38:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:43 AI_Player.update()	update
2017-01-07 13:38:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	6 3
2017-01-07 13:38:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:43 AI_Player.update()	update
2017-01-07 13:38:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:43 AI_Player.update()	Search took55ms
2017-01-07 13:38:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:43 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-07 13:38:43 AI_Player.update()		1010,	1011,	1100,	11,	1001,	101,	11
2017-01-07 13:38:43 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1101,	1011
2017-01-07 13:38:43 AI_Player.update()		11,	1001,	110,	1101,	1010,	11,	11
2017-01-07 13:38:43 AI_Player.update()		1110,	110,	1101,	1100,	1011,	110,	1011
2017-01-07 13:38:43 AI_Player.update()		11,	1001,	110,	101,	1100,	110,	110
2017-01-07 13:38:43 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-07 13:38:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	6 3
2017-01-07 13:38:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:43 AI_Player.update()	update
2017-01-07 13:38:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	6 4
2017-01-07 13:38:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:43 AI_Player.update()	update
2017-01-07 13:38:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:43 AI_Player.update()	Search took43ms
2017-01-07 13:38:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:43 AI_Player.update()		110,	101,	111,	11,	111,	1001,	11
2017-01-07 13:38:43 AI_Player.update()		1010,	1011,	1100,	1001,	1001,	101,	11
2017-01-07 13:38:43 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1101,	1011
2017-01-07 13:38:43 AI_Player.update()		11,	1001,	110,	1100,	1010,	11,	11
2017-01-07 13:38:43 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-07 13:38:43 AI_Player.update()		11,	1001,	110,	11,	1100,	110,	110
2017-01-07 13:38:43 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-07 13:38:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	6 4
2017-01-07 13:38:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:43 AI_Player.update()	update
2017-01-07 13:38:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	6 4
2017-01-07 13:38:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:43 AI_Player.update()	update
2017-01-07 13:38:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:43 AI_Player.update()	Search took102ms
2017-01-07 13:38:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:43 AI_Player.update()		110,	101,	111,	11,	111,	1001,	11
2017-01-07 13:38:43 AI_Player.update()		11,	1010,	1011,	1100,	1001,	1001,	101
2017-01-07 13:38:43 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1101,	1011
2017-01-07 13:38:43 AI_Player.update()		11,	1001,	110,	1100,	1010,	11,	11
2017-01-07 13:38:43 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-07 13:38:43 AI_Player.update()		11,	1001,	110,	11,	1100,	110,	110
2017-01-07 13:38:43 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-07 13:38:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	6 4
2017-01-07 13:38:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:43 AI_Player.update()	update
2017-01-07 13:38:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	6 4
2017-01-07 13:38:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:43 AI_Player.update()	update
2017-01-07 13:38:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:43 AI_Player.update()	Search took306ms
2017-01-07 13:38:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:43 AI_Player.update()		110,	101,	111,	1100,	111,	1001,	11
2017-01-07 13:38:43 AI_Player.update()		11,	1010,	1011,	1101,	1001,	1001,	101
2017-01-07 13:38:43 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1101,	1011
2017-01-07 13:38:43 AI_Player.update()		11,	1001,	110,	101,	1010,	11,	11
2017-01-07 13:38:43 AI_Player.update()		1110,	110,	1101,	11,	1011,	110,	1011
2017-01-07 13:38:43 AI_Player.update()		11,	1001,	110,	1010,	1100,	110,	110
2017-01-07 13:38:43 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-07 13:38:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	6 4
2017-01-07 13:38:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:43 AI_Player.update()	update
2017-01-07 13:38:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	6 4
2017-01-07 13:38:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:43 AI_Player.update()	update
2017-01-07 13:38:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:43 AI_Player.update()	Search took94ms
2017-01-07 13:38:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:43 AI_Player.update()		110,	101,	111,	1100,	111,	1001,	11
2017-01-07 13:38:43 AI_Player.update()		11,	101,	1011,	1101,	1001,	1001,	101
2017-01-07 13:38:43 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1101,	1011
2017-01-07 13:38:43 AI_Player.update()		11,	1010,	110,	101,	1010,	11,	11
2017-01-07 13:38:43 AI_Player.update()		1110,	1001,	1101,	11,	1011,	110,	1011
2017-01-07 13:38:43 AI_Player.update()		11,	110,	110,	1010,	1100,	110,	110
2017-01-07 13:38:43 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1010,	1001
2017-01-07 13:38:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	6 4
2017-01-07 13:38:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:43 AI_Player.update()	update
2017-01-07 13:38:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	6 4
2017-01-07 13:38:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:43 AI_Player.update()	update
2017-01-07 13:38:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:43 AI_Player.update()	Search took165ms
2017-01-07 13:38:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:43 AI_Player.update()		110,	101,	111,	1100,	111,	1001,	11
2017-01-07 13:38:43 AI_Player.update()		101,	1011,	1101,	1001,	1001,	101,	11
2017-01-07 13:38:43 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1101,	1011
2017-01-07 13:38:43 AI_Player.update()		11,	1010,	110,	101,	1010,	11,	11
2017-01-07 13:38:43 AI_Player.update()		1110,	1001,	1101,	11,	1011,	110,	1011
2017-01-07 13:38:43 AI_Player.update()		11,	110,	110,	1010,	1100,	110,	110
2017-01-07 13:38:43 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1010,	1001
2017-01-07 13:38:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:43 GameBoard.setupTreasurePanel()	6 4
2017-01-07 13:38:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:43 AI_Player.update()	update
2017-01-07 13:38:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:43 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-07 13:38:43 AI_Player.update()	Player a has won!
2017-01-07 13:38:49 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-07 13:38:49 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-07 13:38:49 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-07 13:38:49 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-07 13:38:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:49 GameBoard.setupTreasurePanel()	1 1
2017-01-07 13:38:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:49 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:49 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:49 AI_Player.update()	update
2017-01-07 13:38:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:49 AI_Player.update()	Search took124ms
2017-01-07 13:38:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:49 AI_Player.update()		110,	101,	111,	1001,	111,	1010,	11
2017-01-07 13:38:49 AI_Player.update()		101,	1001,	101,	1010,	11,	101,	11
2017-01-07 13:38:49 AI_Player.update()		1110,	110,	1110,	11,	111,	1001,	1011
2017-01-07 13:38:49 AI_Player.update()		1100,	11,	1011,	110,	1010,	11,	1001
2017-01-07 13:38:49 AI_Player.update()		1110,	11,	1101,	110,	1011,	101,	1011
2017-01-07 13:38:49 AI_Player.update()		1010,	1010,	101,	101,	1010,	11,	1011
2017-01-07 13:38:49 AI_Player.update()		1100,	1101,	1101,	111,	1101,	101,	1001
2017-01-07 13:38:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:49 GameBoard.setupTreasurePanel()	1 1
2017-01-07 13:38:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:49 AI_Player.update()	update
2017-01-07 13:38:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:49 GameBoard.setupTreasurePanel()	1 1
2017-01-07 13:38:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:49 AI_Player.update()	update
2017-01-07 13:38:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:49 AI_Player.update()	Search took23ms
2017-01-07 13:38:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:49 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-07 13:38:49 AI_Player.update()		101,	1001,	101,	1010,	11,	1001,	11
2017-01-07 13:38:49 AI_Player.update()		1110,	110,	1110,	11,	111,	11,	1011
2017-01-07 13:38:49 AI_Player.update()		1100,	11,	1011,	110,	1010,	101,	1001
2017-01-07 13:38:49 AI_Player.update()		1110,	11,	1101,	110,	1011,	11,	1011
2017-01-07 13:38:49 AI_Player.update()		1010,	1010,	101,	101,	1010,	101,	1011
2017-01-07 13:38:49 AI_Player.update()		1100,	1101,	1101,	111,	1101,	1010,	1001
2017-01-07 13:38:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:49 GameBoard.setupTreasurePanel()	1 1
2017-01-07 13:38:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:49 AI_Player.update()	update
2017-01-07 13:38:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:49 GameBoard.setupTreasurePanel()	1 1
2017-01-07 13:38:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:49 AI_Player.update()	update
2017-01-07 13:38:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:50 AI_Player.update()	Search took140ms
2017-01-07 13:38:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:50 AI_Player.update()		110,	1001,	111,	1001,	111,	101,	11
2017-01-07 13:38:50 AI_Player.update()		101,	110,	101,	1010,	11,	1001,	11
2017-01-07 13:38:50 AI_Player.update()		1110,	11,	1110,	11,	111,	11,	1011
2017-01-07 13:38:50 AI_Player.update()		1100,	11,	1011,	110,	1010,	101,	1001
2017-01-07 13:38:50 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-07 13:38:50 AI_Player.update()		1010,	1101,	101,	101,	1010,	101,	1011
2017-01-07 13:38:50 AI_Player.update()		1100,	101,	1101,	111,	1101,	1010,	1001
2017-01-07 13:38:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:50 GameBoard.setupTreasurePanel()	1 1
2017-01-07 13:38:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:50 AI_Player.update()	update
2017-01-07 13:38:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:50 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-07 13:38:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-07 13:38:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-07 13:38:50 GameBoard.setupTreasurePanel()	adding map
2017-01-07 13:38:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-07 13:38:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-07 13:38:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-07 13:38:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-07 13:38:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-07 13:38:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-07 13:38:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-07 13:38:50 GameBoard.setupTreasurePanel()	adding book
2017-01-07 13:38:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:50 AI_Player.update()	update
2017-01-07 13:38:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:50 AI_Player.update()	Search took54ms
2017-01-07 13:38:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:50 AI_Player.update()		110,	1001,	111,	111,	111,	101,	11
2017-01-07 13:38:50 AI_Player.update()		101,	110,	101,	1001,	11,	1001,	11
2017-01-07 13:38:50 AI_Player.update()		1110,	11,	1110,	1010,	111,	11,	1011
2017-01-07 13:38:50 AI_Player.update()		1100,	11,	1011,	11,	1010,	101,	1001
2017-01-07 13:38:50 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-07 13:38:50 AI_Player.update()		1010,	1101,	101,	110,	1010,	101,	1011
2017-01-07 13:38:50 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-07 13:38:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:50 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:50 AI_Player.update()	update
2017-01-07 13:38:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:50 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:50 AI_Player.update()	update
2017-01-07 13:38:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-07 13:38:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-07 13:38:50 AI_Player.update()	Search took363ms
2017-01-07 13:38:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:50 AI_Player.update()		110,	110,	111,	111,	111,	101,	11
2017-01-07 13:38:50 AI_Player.update()		101,	11,	101,	1001,	11,	1001,	11
2017-01-07 13:38:50 AI_Player.update()		1110,	11,	1110,	1010,	111,	11,	1011
2017-01-07 13:38:50 AI_Player.update()		1100,	1010,	1011,	11,	1010,	101,	1001
2017-01-07 13:38:50 AI_Player.update()		1110,	1101,	1101,	110,	1011,	11,	1011
2017-01-07 13:38:50 AI_Player.update()		1010,	101,	101,	110,	1010,	101,	1011
2017-01-07 13:38:50 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-07 13:38:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:50 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:50 AI_Player.update()	update
2017-01-07 13:38:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-07 13:38:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-07 13:38:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-07 13:38:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-07 13:38:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-07 13:38:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:50 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:50 AI_Player.update()	update
2017-01-07 13:38:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-07 13:38:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-07 13:38:50 AI_Player.update()	Search took122ms
2017-01-07 13:38:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-07 13:38:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:50 AI_Player.update()		110,	110,	111,	111,	111,	1001,	11
2017-01-07 13:38:50 AI_Player.update()		101,	11,	101,	1001,	11,	11,	11
2017-01-07 13:38:50 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-07 13:38:50 AI_Player.update()		1100,	1010,	1011,	11,	1010,	11,	1001
2017-01-07 13:38:50 AI_Player.update()		1110,	1101,	1101,	110,	1011,	101,	1011
2017-01-07 13:38:50 AI_Player.update()		1010,	101,	101,	110,	1010,	1010,	1011
2017-01-07 13:38:50 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-07 13:38:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-07 13:38:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-07 13:38:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:50 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:50 AI_Player.update()	update
2017-01-07 13:38:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-07 13:38:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-07 13:38:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-07 13:38:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-07 13:38:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-07 13:38:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-07 13:38:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-07 13:38:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-07 13:38:50 GameBoard.setupTreasurePanel()	2 1
2017-01-07 13:38:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-07 13:38:50 AI_Player.update()	update
2017-01-07 13:38:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
